{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\option\\\\idiom\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Switch } from 'antd';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { idiomsApi } from '~/apiBase/options/idioms';\nimport IdiomsForm from '~/components/Global/Option/IdiomsForm';\nimport LayoutBase from '~/components/LayoutBase';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\n\nvar Idioms = function Idioms() {\n  _s();\n\n  var onSearch = function onSearch(data) {\n    setCurrentPage(1);\n    setParams(_objectSpread(_objectSpread({}, listParamsDefault), {}, {\n      search: data\n    }));\n  };\n\n  var handleReset = function handleReset() {\n    setCurrentPage(1);\n    setParams(listParamsDefault);\n  };\n\n  var columns = [{\n    title: 'Người tạo',\n    dataIndex: 'CreatedBy',\n    render: function render(CreatedBy) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '120px'\n        },\n        children: CreatedBy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 27\n      }, _this);\n    }\n  }, _objectSpread(_objectSpread({\n    title: 'Câu thành ngữ',\n    dataIndex: 'Idioms'\n  }, FilterColumn('Idioms', onSearch, handleReset, 'text')), {}, {\n    render: function render(text) {\n      return ReactHtmlParser(text);\n    }\n  }), {\n    title: 'Trạng thái',\n    render: function render(data) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          checkedChildren: \"Hi\\u1EC7n\",\n          unCheckedChildren: \"\\u1EA8n\",\n          checked: data.Enable,\n          size: \"default\",\n          onChange: /*#__PURE__*/function () {\n            var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(check) {\n              var res;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      setIsLoading({\n                        type: 'GET_ALL',\n                        status: true\n                      });\n                      _context.prev = 1;\n                      _context.next = 4;\n                      return idiomsApi.update(_objectSpread(_objectSpread({}, data), {}, {\n                        Enable: check\n                      }));\n\n                    case 4:\n                      res = _context.sent;\n                      res.status == 200 && setParams(_objectSpread(_objectSpread({}, params), {}, {\n                        pageIndex: currentPage\n                      })), showNoti('success', res.data.message);\n                      _context.next = 11;\n                      break;\n\n                    case 8:\n                      _context.prev = 8;\n                      _context.t0 = _context[\"catch\"](1);\n                      showNoti('danger', _context.t0.Message);\n\n                    case 11:\n                      _context.prev = 11;\n                      setIsLoading({\n                        type: 'GET_ALL',\n                        status: false\n                      });\n                      return _context.finish(11);\n\n                    case 14:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, null, [[1, 8, 11, 14]]);\n            }));\n\n            return function (_x) {\n              return _ref.apply(this, arguments);\n            };\n          }()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, _this);\n    }\n  }, {\n    render: function render(data) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(IdiomsForm, {\n          idiomsDetail: data,\n          idiomsId: data.ID,\n          reloadData: function reloadData(firstPage) {\n            getDataIdioms(firstPage);\n          },\n          currentPage: currentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false);\n    }\n  }];\n\n  var _useState = useState(1),\n      currentPage = _useState[0],\n      setCurrentPage = _useState[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      pageSize = _useWrap.pageSize;\n\n  var _useState2 = useState(null),\n      totalPage = _useState2[0],\n      setTotalPage = _useState2[1];\n\n  var _useState3 = useState([]),\n      idioms = _useState3[0],\n      setIdioms = _useState3[1];\n\n  var _useState4 = useState({\n    type: 'GET_ALL',\n    status: false\n  }),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var listParamsDefault = {\n    pageSize: pageSize,\n    pageIndex: currentPage,\n    search: null\n  };\n\n  var _useState5 = useState(listParamsDefault),\n      params = _useState5[0],\n      setParams = _useState5[1];\n\n  var _getPagination = function getPagination(pageNumber) {\n    setCurrentPage(pageNumber);\n    setParams(_objectSpread(_objectSpread({}, params), {}, {\n      pageIndex: currentPage\n    }));\n  };\n\n  var getDataIdioms = function getDataIdioms(page) {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return idiomsApi.getPaged(_objectSpread(_objectSpread({}, params), {}, {\n                pageIndex: page\n              }));\n\n            case 3:\n              res = _context2.sent;\n              res.status == 200 && setIdioms(res.data.data);\n\n              if (res.status == 204) {\n                showNoti('danger', 'Không tìm thấy dữ liệu!');\n                setCurrentPage(1);\n                setParams(listParamsDefault);\n                setIdioms([]);\n              } else setTotalPage(res.data.totalRow);\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              showNoti('danger', _context2.t0.message);\n\n            case 11:\n              _context2.prev = 11;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context2.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8, 11, 14]]);\n    }))();\n  };\n\n  useEffect(function () {\n    getDataIdioms(currentPage);\n  }, [params]);\n  return /*#__PURE__*/_jsxDEV(PowerTable, {\n    currentPage: currentPage,\n    loading: isLoading,\n    totalPage: totalPage && totalPage,\n    getPagination: function getPagination(pageNumber) {\n      return _getPagination(pageNumber);\n    },\n    addClass: \"basic-header\",\n    TitlePage: \"Th\\xE0nh ng\\u1EEF\",\n    TitleCard: /*#__PURE__*/_jsxDEV(IdiomsForm, {\n      reloadData: function reloadData(firstPage) {\n        setCurrentPage(1);\n        getDataIdioms(firstPage);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }, _this),\n    dataSource: idioms,\n    columns: columns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(Idioms, \"Y+OREUp0fP5c9B59B44B4yVdGDU=\", false, function () {\n  return [useWrap];\n});\n\n_c = Idioms;\nIdioms.layout = LayoutBase;\nexport default Idioms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Idioms\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/option/idiom/index.tsx"],"names":["Switch","React","Fragment","useEffect","useState","ReactHtmlParser","idiomsApi","IdiomsForm","LayoutBase","PowerTable","FilterColumn","useWrap","Idioms","onSearch","data","setCurrentPage","setParams","listParamsDefault","search","handleReset","columns","title","dataIndex","render","CreatedBy","width","text","Enable","check","setIsLoading","type","status","update","res","params","pageIndex","currentPage","showNoti","message","Message","ID","firstPage","getDataIdioms","pageSize","totalPage","setTotalPage","idioms","setIdioms","isLoading","getPagination","pageNumber","page","getPaged","totalRow","layout"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AACpB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AAC1BC,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAC,IAAAA,SAAS,iCACLC,iBADK;AAERC,MAAAA,MAAM,EAAEJ;AAFA,OAAT;AAIA,GAND;;AAQA,MAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AACzBJ,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAC,IAAAA,SAAS,CAACC,iBAAD,CAAT;AACA,GAHD;;AAIA,MAAMG,OAAO,GAAG,CACf;AACCC,IAAAA,KAAK,EAAE,WADR;AAECC,IAAAA,SAAS,EAAE,WAFZ;AAGCC,IAAAA,MAAM,EAAE,gBAACC,SAAD;AAAA,0BAAe;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA,kBAAiCD;AAAjC;AAAA;AAAA;AAAA;AAAA,eAAf;AAAA;AAHT,GADe;AAOdH,IAAAA,KAAK,EAAE,eAPO;AAQdC,IAAAA,SAAS,EAAE;AARG,KASXZ,YAAY,CAAC,QAAD,EAAWG,QAAX,EAAqBM,WAArB,EAAkC,MAAlC,CATD;AAUdI,IAAAA,MAAM,EAAE,gBAACG,IAAD;AAAA,aAAUrB,eAAe,CAACqB,IAAD,CAAzB;AAAA;AAVM,MAYf;AACCL,IAAAA,KAAK,EAAE,YADR;AAECE,IAAAA,MAAM,EAAE,gBAACT,IAAD;AAAA,0BACP,QAAC,QAAD;AAAA,+BACC,QAAC,MAAD;AACC,UAAA,eAAe,EAAC,WADjB;AAEC,UAAA,iBAAiB,EAAC,SAFnB;AAGC,UAAA,OAAO,EAAEA,IAAI,CAACa,MAHf;AAIC,UAAA,IAAI,EAAC,SAJN;AAKC,UAAA,QAAQ;AAAA,gFAAE,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,sBAAAA,YAAY,CAAC;AACZC,wBAAAA,IAAI,EAAE,SADM;AAEZC,wBAAAA,MAAM,EAAE;AAFI,uBAAD,CAAZ;AADS;AAAA;AAAA,6BAMQzB,SAAS,CAAC0B,MAAV,iCAAsBlB,IAAtB;AAA4Ba,wBAAAA,MAAM,EAAEC;AAApC,yBANR;;AAAA;AAMJK,sBAAAA,GANI;AAORA,sBAAAA,GAAG,CAACF,MAAJ,IAAc,GAAd,IAAqBf,SAAS,iCAAMkB,MAAN;AAAcC,wBAAAA,SAAS,EAAEC;AAAzB,yBAA9B,EAAuEC,QAAQ,CAAC,SAAD,EAAYJ,GAAG,CAACnB,IAAJ,CAASwB,OAArB,CAA/E;AAPQ;AAAA;;AAAA;AAAA;AAAA;AASRD,sBAAAA,QAAQ,CAAC,QAAD,EAAW,YAAME,OAAjB,CAAR;;AATQ;AAAA;AAWRV,sBAAAA,YAAY,CAAC;AACZC,wBAAAA,IAAI,EAAE,SADM;AAEZC,wBAAAA,MAAM,EAAE;AAFI,uBAAD,CAAZ;AAXQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAF;;AAAA;AAAA;AAAA;AAAA;AALT;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,eADO;AAAA;AAFT,GAZe,EA0Cf;AACCR,IAAAA,MAAM,EAAE,gBAACT,IAAD;AAAA,0BACP;AAAA,+BACC,QAAC,UAAD;AACC,UAAA,YAAY,EAAEA,IADf;AAEC,UAAA,QAAQ,EAAEA,IAAI,CAAC0B,EAFhB;AAGC,UAAA,UAAU,EAAE,oBAACC,SAAD,EAAe;AAC1BC,YAAAA,aAAa,CAACD,SAAD,CAAb;AACA,WALF;AAMC,UAAA,WAAW,EAAEL;AANd;AAAA;AAAA;AAAA;AAAA;AADD,uBADO;AAAA;AADT,GA1Ce,CAAhB;;AAboB,kBAsEkBhC,QAAQ,CAAC,CAAD,CAtE1B;AAAA,MAsEbgC,WAtEa;AAAA,MAsEArB,cAtEA;;AAAA,iBAwEWJ,OAAO,EAxElB;AAAA,MAwEZ0B,QAxEY,YAwEZA,QAxEY;AAAA,MAwEFM,QAxEE,YAwEFA,QAxEE;;AAAA,mBAyEcvC,QAAQ,CAAC,IAAD,CAzEtB;AAAA,MAyEbwC,SAzEa;AAAA,MAyEFC,YAzEE;;AAAA,mBA0EQzC,QAAQ,CAAY,EAAZ,CA1EhB;AAAA,MA0Eb0C,MA1Ea;AAAA,MA0ELC,SA1EK;;AAAA,mBA2Ec3C,QAAQ,CAAC;AAC1C0B,IAAAA,IAAI,EAAE,SADoC;AAE1CC,IAAAA,MAAM,EAAE;AAFkC,GAAD,CA3EtB;AAAA,MA2EbiB,SA3Ea;AAAA,MA2EFnB,YA3EE;;AA+EpB,MAAMZ,iBAAiB,GAAG;AACzB0B,IAAAA,QAAQ,EAAEA,QADe;AAEzBR,IAAAA,SAAS,EAAEC,WAFc;AAGzBlB,IAAAA,MAAM,EAAE;AAHiB,GAA1B;;AA/EoB,mBAoFQd,QAAQ,CAACa,iBAAD,CApFhB;AAAA,MAoFbiB,MApFa;AAAA,MAoFLlB,SApFK;;AAsFpB,MAAMiC,cAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAwB;AAC7CnC,IAAAA,cAAc,CAACmC,UAAD,CAAd;AACAlC,IAAAA,SAAS,iCACLkB,MADK;AAERC,MAAAA,SAAS,EAAEC;AAFH,OAAT;AAIA,GAND;;AAQA,MAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAACS,IAAD,EAAe;AACpCtB,IAAAA,YAAY,CAAC;AACZC,MAAAA,IAAI,EAAE,SADM;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAD,CAAZ;;AAIC,6DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEgBzB,SAAS,CAAC8C,QAAV,iCAAwBlB,MAAxB;AAAgCC,gBAAAA,SAAS,EAAEgB;AAA3C,iBAFhB;;AAAA;AAEIlB,cAAAA,GAFJ;AAIAA,cAAAA,GAAG,CAACF,MAAJ,IAAc,GAAd,IAAqBgB,SAAS,CAACd,GAAG,CAACnB,IAAJ,CAASA,IAAV,CAA9B;;AACA,kBAAImB,GAAG,CAACF,MAAJ,IAAc,GAAlB,EAAuB;AACtBM,gBAAAA,QAAQ,CAAC,QAAD,EAAW,yBAAX,CAAR;AACAtB,gBAAAA,cAAc,CAAC,CAAD,CAAd;AACAC,gBAAAA,SAAS,CAACC,iBAAD,CAAT;AACA8B,gBAAAA,SAAS,CAAC,EAAD,CAAT;AACA,eALD,MAKOF,YAAY,CAACZ,GAAG,CAACnB,IAAJ,CAASuC,QAAV,CAAZ;;AAVP;AAAA;;AAAA;AAAA;AAAA;AAYAhB,cAAAA,QAAQ,CAAC,QAAD,EAAW,aAAMC,OAAjB,CAAR;;AAZA;AAAA;AAcAT,cAAAA,YAAY,CAAC;AACZC,gBAAAA,IAAI,EAAE,SADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AAdA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAoBD,GAzBD;;AA2BA5B,EAAAA,SAAS,CAAC,YAAM;AACfuC,IAAAA,aAAa,CAACN,WAAD,CAAb;AACA,GAFQ,EAEN,CAACF,MAAD,CAFM,CAAT;AAIA,sBACC,QAAC,UAAD;AACC,IAAA,WAAW,EAAEE,WADd;AAEC,IAAA,OAAO,EAAEY,SAFV;AAGC,IAAA,SAAS,EAAEJ,SAAS,IAAIA,SAHzB;AAIC,IAAA,aAAa,EAAE,uBAACM,UAAD;AAAA,aAAwBD,cAAa,CAACC,UAAD,CAArC;AAAA,KAJhB;AAKC,IAAA,QAAQ,EAAC,cALV;AAMC,IAAA,SAAS,EAAC,mBANX;AAOC,IAAA,SAAS,eACR,QAAC,UAAD;AACC,MAAA,UAAU,EAAE,oBAACT,SAAD,EAAe;AAC1B1B,QAAAA,cAAc,CAAC,CAAD,CAAd;AACA2B,QAAAA,aAAa,CAACD,SAAD,CAAb;AACA;AAJF;AAAA;AAAA;AAAA;AAAA,aARF;AAeC,IAAA,UAAU,EAAEK,MAfb;AAgBC,IAAA,OAAO,EAAE1B;AAhBV;AAAA;AAAA;AAAA;AAAA,WADD;AAoBA,CAjJD;;GAAMR,M;UAwE0BD,O;;;KAxE1BC,M;AAkJNA,MAAM,CAAC0C,MAAP,GAAgB9C,UAAhB;AACA,eAAeI,MAAf","sourcesContent":["import { Switch } from 'antd'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { idiomsApi } from '~/apiBase/options/idioms'\r\nimport IdiomsForm from '~/components/Global/Option/IdiomsForm'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst Idioms = () => {\r\n\tconst onSearch = (data) => {\r\n\t\tsetCurrentPage(1)\r\n\t\tsetParams({\r\n\t\t\t...listParamsDefault,\r\n\t\t\tsearch: data\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetCurrentPage(1)\r\n\t\tsetParams(listParamsDefault)\r\n\t}\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Người tạo',\r\n\t\t\tdataIndex: 'CreatedBy',\r\n\t\t\trender: (CreatedBy) => <div style={{ width: '120px' }}>{CreatedBy}</div>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Câu thành ngữ',\r\n\t\t\tdataIndex: 'Idioms',\r\n\t\t\t...FilterColumn('Idioms', onSearch, handleReset, 'text'),\r\n\t\t\trender: (text) => ReactHtmlParser(text)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\trender: (data) => (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<Switch\r\n\t\t\t\t\t\tcheckedChildren=\"Hiện\"\r\n\t\t\t\t\t\tunCheckedChildren=\"Ẩn\"\r\n\t\t\t\t\t\tchecked={data.Enable}\r\n\t\t\t\t\t\tsize=\"default\"\r\n\t\t\t\t\t\tonChange={async (check: boolean) => {\r\n\t\t\t\t\t\t\tsetIsLoading({\r\n\t\t\t\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\t\t\t\tstatus: true\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tlet res = await idiomsApi.update({ ...data, Enable: check })\r\n\t\t\t\t\t\t\t\tres.status == 200 && setParams({ ...params, pageIndex: currentPage }), showNoti('success', res.data.message)\r\n\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\tshowNoti('danger', error.Message)\r\n\t\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\t\tsetIsLoading({\r\n\t\t\t\t\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\t\t\t\t\tstatus: false\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\trender: (data) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<IdiomsForm\r\n\t\t\t\t\t\tidiomsDetail={data}\r\n\t\t\t\t\t\tidiomsId={data.ID}\r\n\t\t\t\t\t\treloadData={(firstPage) => {\r\n\t\t\t\t\t\t\tgetDataIdioms(firstPage)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\r\n\tconst { showNoti, pageSize } = useWrap()\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [idioms, setIdioms] = useState<IIdioms[]>([])\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: 'GET_ALL',\r\n\t\tstatus: false\r\n\t})\r\n\tconst listParamsDefault = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: currentPage,\r\n\t\tsearch: null\r\n\t}\r\n\tconst [params, setParams] = useState(listParamsDefault)\r\n\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetParams({\r\n\t\t\t...params,\r\n\t\t\tpageIndex: currentPage\r\n\t\t})\r\n\t}\r\n\r\n\tconst getDataIdioms = (page: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\t;(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await idiomsApi.getPaged({ ...params, pageIndex: page })\r\n\r\n\t\t\t\tres.status == 200 && setIdioms(res.data.data)\r\n\t\t\t\tif (res.status == 204) {\r\n\t\t\t\t\tshowNoti('danger', 'Không tìm thấy dữ liệu!')\r\n\t\t\t\t\tsetCurrentPage(1)\r\n\t\t\t\t\tsetParams(listParamsDefault)\r\n\t\t\t\t\tsetIdioms([])\r\n\t\t\t\t} else setTotalPage(res.data.totalRow)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})()\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataIdioms(currentPage)\r\n\t}, [params])\r\n\r\n\treturn (\r\n\t\t<PowerTable\r\n\t\t\tcurrentPage={currentPage}\r\n\t\t\tloading={isLoading}\r\n\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\taddClass=\"basic-header\"\r\n\t\t\tTitlePage=\"Thành ngữ\"\r\n\t\t\tTitleCard={\r\n\t\t\t\t<IdiomsForm\r\n\t\t\t\t\treloadData={(firstPage) => {\r\n\t\t\t\t\t\tsetCurrentPage(1)\r\n\t\t\t\t\t\tgetDataIdioms(firstPage)\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t\tdataSource={idioms}\r\n\t\t\tcolumns={columns}\r\n\t\t/>\r\n\t)\r\n}\r\nIdioms.layout = LayoutBase\r\nexport default Idioms\r\n"]},"metadata":{},"sourceType":"module"}
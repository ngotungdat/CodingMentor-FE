{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\ScheduleStudyTeacher\\\\ScheduleStudyTeacher.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Card } from 'antd';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { scheduleZoomApi, zoomRoomApi } from '~/apiBase';\nimport TitlePage from '~/components/TitlePage';\nimport { useDebounce } from '~/context/useDebounce';\nimport { useWrap } from '~/context/wrap';\nimport CDCalendar from '../CourseList/CourseListDetail/CourseDetailCalendar/Calendar';\n\nconst ScheduleStudyTeacher = () => {\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: scheduleTeacherList,\n    1: setScheduleTeacherList\n  } = useState([]);\n  const {\n    0: filters,\n    1: setFilters\n  } = useState({\n    StartTime: moment().startOf('month').format('YYYY/MM/DD'),\n    EndTime: moment().endOf('month').format('YYYY/MM/DD')\n  });\n\n  const fetchScheduleStudyTeacher = async () => {\n    try {\n      setIsLoading({\n        type: 'FETCH_SCHEDULE_TEACHER',\n        status: true\n      });\n      const res = await scheduleZoomApi.getAll(filters);\n\n      if (res.status === 200) {\n        setScheduleTeacherList(res.data.data);\n      }\n\n      if (res.status === 204) {\n        showNoti('danger', 'Lịch dạy trống');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'FETCH_SCHEDULE_TEACHER',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchScheduleStudyTeacher();\n  }, [filters]);\n\n  const fetchNewScheduleList = date => {\n    let fmDate;\n\n    if (date !== null && date !== void 0 && date.start && date !== null && date !== void 0 && date.end) {\n      fmDate = {\n        StartTime: moment(date.start).format('YYYY/MM/DD'),\n        EndTime: moment(date.end).format('YYYY/MM/DD')\n      };\n    }\n\n    if (Array.isArray(date) && date.length >= 1) {\n      fmDate = {\n        StartTime: moment(date[0]).format('YYYY/MM/DD'),\n        EndTime: moment(date[date.length - 1]).format('YYYY/MM/DD')\n      };\n    }\n\n    setFilters(fmDate || _objectSpread({}, filters));\n  };\n\n  const debounceFetchScheduleList = useDebounce(fetchNewScheduleList, 200, []);\n\n  const onHandleZoom = async data => {\n    try {\n      //0 - ,1-Bắt đầu , 2-Vào lớp học, 3-Kết thúc\n      const {\n        idx,\n        btnID,\n        btnName,\n        scheduleID\n      } = data;\n\n      if (btnID === 1) {\n        setIsLoading({\n          type: 'FETCH_SCHEDULE_TEACHER',\n          status: true\n        });\n        const res = await zoomRoomApi.createRoom(scheduleID);\n\n        if (res.status === 200) {\n          const newScheduleTeacherList = [...scheduleTeacherList];\n\n          const newScheduleTeacher = _objectSpread(_objectSpread({}, newScheduleTeacherList[idx]), {}, {\n            ButtonName: 'Vào lớp học',\n            ButtonID: 2\n          });\n\n          newScheduleTeacherList.splice(idx, 1, newScheduleTeacher);\n          setScheduleTeacherList(newScheduleTeacherList);\n          setIsLoading({\n            type: 'FETCH_SCHEDULE_TEACHER',\n            status: false\n          });\n\n          if (scheduleID) {\n            window.open(`/course/zoom-view/${scheduleID}`);\n          }\n        }\n      }\n\n      if (btnID === 2 && scheduleID) {\n        window.open(`/course/zoom-view/${scheduleID}`);\n      }\n\n      if (btnID === 3 && scheduleID) {\n        setIsLoading({\n          type: 'FETCH_SCHEDULE_TEACHER',\n          status: true\n        });\n        const res = await zoomRoomApi.closeRoom(scheduleID);\n\n        if (res.status === 200) {\n          const newScheduleTeacherList = [...scheduleTeacherList];\n\n          const newScheduleTeacher = _objectSpread(_objectSpread({}, newScheduleTeacherList[idx]), {}, {\n            ButtonName: 'Kết thúc',\n            ButtonID: 3\n          });\n\n          newScheduleTeacherList.splice(idx, 1, newScheduleTeacher);\n          setScheduleTeacherList(newScheduleTeacherList);\n          setIsLoading({\n            type: 'FETCH_SCHEDULE_TEACHER',\n            status: false\n          });\n        }\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n      console.log('fetchConfigAccount', error.message);\n    } finally {\n      setIsLoading({\n        type: 'FETCH_SCHEDULE_TEACHER',\n        status: false\n      });\n    }\n  }; // CALENDAR FORMAT\n\n\n  const calendarFm = calendarArr => {\n    const rs = calendarArr.map((c, idx) => {\n      const {\n        ID,\n        Title,\n        CourseID,\n        BranchName,\n        RoomName,\n        SubjectName,\n        StartTime,\n        EndTime,\n        //\n        ButtonID,\n        ButtonName,\n        IsExam,\n        TeacherAttendanceID\n      } = c;\n      const studyTimeStart = moment(StartTime).format('HH:mm');\n      const studyTimeEnd = moment(EndTime).format('HH:mm');\n      const studyTime = `${studyTimeStart} - ${studyTimeEnd}`;\n      return {\n        id: +ID,\n        title: '',\n        start: moment(StartTime).toDate(),\n        end: moment(EndTime).toDate(),\n        resource: {\n          ID,\n          CourseID,\n          CourseName: Title,\n          RoomName,\n          BranchName,\n          SubjectName,\n          //\n          StudyTimeName: studyTime,\n          //\n          ButtonID,\n          ButtonName,\n          idx,\n          IsExam,\n          TeacherAttendanceID\n        }\n      };\n    });\n    return rs;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(TitlePage, {\n      title: \"L\\u1ECBch d\\u1EA1y gi\\xE1o vi\\xEAn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 hide-rbc-event\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CDCalendar, {\n          isLoaded: isLoading.type === 'FETCH_SCHEDULE_TEACHER' && isLoading.status ? false : true,\n          eventList: calendarFm(scheduleTeacherList),\n          isStudyZoom: true,\n          fetchStudyZoom: debounceFetchScheduleList,\n          handleStudyZoom: onHandleZoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 3\n  }, this);\n};\n\nexport default ScheduleStudyTeacher;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/ScheduleStudyTeacher/ScheduleStudyTeacher.tsx"],"names":["Card","moment","React","useEffect","useState","scheduleZoomApi","zoomRoomApi","TitlePage","useDebounce","useWrap","CDCalendar","ScheduleStudyTeacher","showNoti","isLoading","setIsLoading","type","status","scheduleTeacherList","setScheduleTeacherList","filters","setFilters","StartTime","startOf","format","EndTime","endOf","fetchScheduleStudyTeacher","res","getAll","data","error","message","fetchNewScheduleList","date","fmDate","start","end","Array","isArray","length","debounceFetchScheduleList","onHandleZoom","idx","btnID","btnName","scheduleID","createRoom","newScheduleTeacherList","newScheduleTeacher","ButtonName","ButtonID","splice","window","open","closeRoom","console","log","calendarFm","calendarArr","rs","map","c","ID","Title","CourseID","BranchName","RoomName","SubjectName","IsExam","TeacherAttendanceID","studyTimeStart","studyTimeEnd","studyTime","id","title","toDate","resource","CourseName","StudyTimeName"],"mappings":"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","sourcesContent":["import { Card } from 'antd';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { scheduleZoomApi, zoomRoomApi } from '~/apiBase';\r\nimport TitlePage from '~/components/TitlePage';\r\nimport { useDebounce } from '~/context/useDebounce';\r\nimport { useWrap } from '~/context/wrap';\r\nimport CDCalendar from '../CourseList/CourseListDetail/CourseDetailCalendar/Calendar';\r\n\r\nconst ScheduleStudyTeacher = () => {\r\n\tconst { showNoti } = useWrap();\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t});\r\n\tconst [scheduleTeacherList, setScheduleTeacherList] = useState<IScheduleZoom[]>([]);\r\n\tconst [filters, setFilters] = useState({\r\n\t\tStartTime: moment().startOf('month').format('YYYY/MM/DD'),\r\n\t\tEndTime: moment().endOf('month').format('YYYY/MM/DD')\r\n\t});\r\n\r\n\tconst fetchScheduleStudyTeacher = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_SCHEDULE_TEACHER',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\tconst res = await scheduleZoomApi.getAll(filters);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetScheduleTeacherList(res.data.data);\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', 'Lịch dạy trống');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_SCHEDULE_TEACHER',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchScheduleStudyTeacher();\r\n\t}, [filters]);\r\n\r\n\tconst fetchNewScheduleList = (date) => {\r\n\t\tlet fmDate;\r\n\t\tif (date?.start && date?.end) {\r\n\t\t\tfmDate = {\r\n\t\t\t\tStartTime: moment(date.start).format('YYYY/MM/DD'),\r\n\t\t\t\tEndTime: moment(date.end).format('YYYY/MM/DD')\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (Array.isArray(date) && date.length >= 1) {\r\n\t\t\tfmDate = {\r\n\t\t\t\tStartTime: moment(date[0]).format('YYYY/MM/DD'),\r\n\t\t\t\tEndTime: moment(date[date.length - 1]).format('YYYY/MM/DD')\r\n\t\t\t};\r\n\t\t}\r\n\t\tsetFilters(fmDate || { ...filters });\r\n\t};\r\n\tconst debounceFetchScheduleList = useDebounce(fetchNewScheduleList, 200, []);\r\n\r\n\tconst onHandleZoom = async (data: { idx: number; btnID: number; btnName?: string; scheduleID: number }) => {\r\n\t\ttry {\r\n\t\t\t//0 - ,1-Bắt đầu , 2-Vào lớp học, 3-Kết thúc\r\n\t\t\tconst { idx, btnID, btnName, scheduleID } = data;\r\n\t\t\tif (btnID === 1) {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'FETCH_SCHEDULE_TEACHER',\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t\tconst res = await zoomRoomApi.createRoom(scheduleID);\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tconst newScheduleTeacherList = [...scheduleTeacherList];\r\n\t\t\t\t\tconst newScheduleTeacher: IScheduleZoom = {\r\n\t\t\t\t\t\t...newScheduleTeacherList[idx],\r\n\t\t\t\t\t\tButtonName: 'Vào lớp học',\r\n\t\t\t\t\t\tButtonID: 2\r\n\t\t\t\t\t};\r\n\t\t\t\t\tnewScheduleTeacherList.splice(idx, 1, newScheduleTeacher);\r\n\t\t\t\t\tsetScheduleTeacherList(newScheduleTeacherList);\r\n\t\t\t\t\tsetIsLoading({\r\n\t\t\t\t\t\ttype: 'FETCH_SCHEDULE_TEACHER',\r\n\t\t\t\t\t\tstatus: false\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (scheduleID) {\r\n\t\t\t\t\t\twindow.open(`/course/zoom-view/${scheduleID}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (btnID === 2 && scheduleID) {\r\n\t\t\t\twindow.open(`/course/zoom-view/${scheduleID}`);\r\n\t\t\t}\r\n\t\t\tif (btnID === 3 && scheduleID) {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'FETCH_SCHEDULE_TEACHER',\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t\tconst res = await zoomRoomApi.closeRoom(scheduleID);\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tconst newScheduleTeacherList = [...scheduleTeacherList];\r\n\t\t\t\t\tconst newScheduleTeacher: IScheduleZoom = {\r\n\t\t\t\t\t\t...newScheduleTeacherList[idx],\r\n\t\t\t\t\t\tButtonName: 'Kết thúc',\r\n\t\t\t\t\t\tButtonID: 3\r\n\t\t\t\t\t};\r\n\t\t\t\t\tnewScheduleTeacherList.splice(idx, 1, newScheduleTeacher);\r\n\t\t\t\t\tsetScheduleTeacherList(newScheduleTeacherList);\r\n\t\t\t\t\tsetIsLoading({\r\n\t\t\t\t\t\ttype: 'FETCH_SCHEDULE_TEACHER',\r\n\t\t\t\t\t\tstatus: false\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t\tconsole.log('fetchConfigAccount', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_SCHEDULE_TEACHER',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// CALENDAR FORMAT\r\n\tconst calendarFm = (calendarArr: IScheduleZoom[]) => {\r\n\t\tconst rs = calendarArr.map((c, idx) => {\r\n\t\t\tconst {\r\n\t\t\t\tID,\r\n\t\t\t\tTitle,\r\n\t\t\t\tCourseID,\r\n\t\t\t\tBranchName,\r\n\t\t\t\tRoomName,\r\n\t\t\t\tSubjectName,\r\n\t\t\t\tStartTime,\r\n\t\t\t\tEndTime,\r\n\t\t\t\t//\r\n\t\t\t\tButtonID,\r\n\t\t\t\tButtonName,\r\n\t\t\t\tIsExam,\r\n\t\t\t\tTeacherAttendanceID\r\n\t\t\t} = c;\r\n\t\t\tconst studyTimeStart = moment(StartTime).format('HH:mm');\r\n\t\t\tconst studyTimeEnd = moment(EndTime).format('HH:mm');\r\n\t\t\tconst studyTime = `${studyTimeStart} - ${studyTimeEnd}`;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tid: +ID,\r\n\t\t\t\ttitle: '',\r\n\t\t\t\tstart: moment(StartTime).toDate(),\r\n\t\t\t\tend: moment(EndTime).toDate(),\r\n\t\t\t\tresource: {\r\n\t\t\t\t\tID,\r\n\t\t\t\t\tCourseID,\r\n\t\t\t\t\tCourseName: Title,\r\n\t\t\t\t\tRoomName,\r\n\t\t\t\t\tBranchName,\r\n\t\t\t\t\tSubjectName,\r\n\t\t\t\t\t//\r\n\t\t\t\t\tStudyTimeName: studyTime,\r\n\t\t\t\t\t//\r\n\t\t\t\t\tButtonID,\r\n\t\t\t\t\tButtonName,\r\n\t\t\t\t\tidx,\r\n\t\t\t\t\tIsExam,\r\n\t\t\t\t\tTeacherAttendanceID\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn rs;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<TitlePage title=\"Lịch dạy giáo viên\" />\r\n\t\t\t<div className=\"col-12 hide-rbc-event\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CDCalendar\r\n\t\t\t\t\t\tisLoaded={isLoading.type === 'FETCH_SCHEDULE_TEACHER' && isLoading.status ? false : true}\r\n\t\t\t\t\t\teventList={calendarFm(scheduleTeacherList)}\r\n\t\t\t\t\t\tisStudyZoom={true}\r\n\t\t\t\t\t\tfetchStudyZoom={debounceFetchScheduleList}\r\n\t\t\t\t\t\thandleStudyZoom={onHandleZoom}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default ScheduleStudyTeacher;\r\n"]},"metadata":{},"sourceType":"module"}
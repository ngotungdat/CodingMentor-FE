{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Teacher\\\\TeacherProfile.tsx\";\nimport { Card, Checkbox, Spin, Table } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { teacherApi } from '~/apiBase';\nimport PowerTable from '~/components/PowerTable';\nimport { useWrap } from '~/context/wrap';\nimport ConfirmAssignModal from './Teacher/ConfirmAssignModal';\n\nconst TeacherProfile = props => {\n  const {\n    isLoading,\n    userID,\n    dataSubject,\n    updateTeacherForSubject,\n    onFetchData\n  } = props;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    setValue\n  } = useForm();\n  const {\n    showNoti\n  } = useWrap();\n  const columns = [{\n    title: 'Tên chương trình học',\n    width: 200,\n    dataIndex: 'ProgramName',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 30\n    }, this)\n  }, {\n    title: 'Trạng thái',\n    align: 'center',\n    dataIndex: 'IsSelected',\n    render: (text, data) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: data.IsSelected ? 'tag green' : 'tag red',\n      children: data.IsSelected ? 'Dạy tất cả' : 'Không được dạy tất cả'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  }, {\n    title: 'Thao tác',\n    width: 100,\n    align: 'center',\n    render: (text, data) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ConfirmAssignModal, {\n          data: data,\n          _onSubmit: info => handleSubmitAssignment(info),\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this)\n      }, void 0, false);\n    }\n  }];\n\n  const handleSubmitAssignment = async info => {\n    setLoading({\n      type: 'ASSIGN_TEACHER',\n      status: true\n    });\n\n    try {\n      let res = await teacherApi.updateTeacherForAllSubject({\n        teacherId: userID,\n        programId: info.key,\n        IsSelected: info.IsSelected ? false : true\n      });\n\n      if (res.status === 200) {\n        showNoti('success', 'Thay đổi thành công!');\n        onFetchData && onFetchData();\n        return true;\n      }\n\n      if (res.status === 204) {\n        showNoti('danger', 'Chưa có môn học trong chương trình này!');\n        onFetchData && onFetchData();\n        return true;\n      }\n    } catch (error) {} finally {\n      setLoading({\n        type: 'ASSIGN_TEACHER',\n        status: false\n      });\n    }\n  };\n\n  const expandedRowRender = record => {\n    const columns = [];\n    const data = [{\n      Subject: 'Subject'\n    }];\n\n    for (let i = 0; i < Object.keys(record.Subject).length; i++) {\n      columns.push({\n        key: record.Subject[i].SubjectID,\n        title: record.Subject[i].SubjectName,\n        dataIndex: 'Subject',\n        render: () => /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: record.Subject[i].SubjectID,\n          checked: record.Subject[i].IsSelected ? true : false,\n          onChange: onChangeCheckBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this)\n      });\n    }\n\n    const onChangeCheckBox = e => {\n      const data = {\n        UserInformationID: userID,\n        SubjectID: e.target.value\n      };\n      let res = updateTeacherForSubject(data);\n      res.then(function (rs) {\n        rs && rs.status == 200;\n      });\n    };\n\n    if (Object.keys(record.Subject).length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mini-table\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          dataSource: data,\n          pagination: false,\n          className: \"tb-expand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ch\\u01B0a c\\xF3 m\\xF4n h\\u1ECDc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this);\n    }\n  };\n\n  useEffect(() => {\n    setValue('UserInformationID', userID);\n  }, []);\n\n  if (isLoading.status == true) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"space-top-card text-center\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"space-top-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-table table-expand\",\n            children: /*#__PURE__*/_jsxDEV(PowerTable, {\n              className: \"teacher-detail-table\",\n              dataSource: dataSubject,\n              columns: columns,\n              size: \"middle\",\n              scroll: {\n                x: 600\n              },\n              expandable: {\n                expandedRowRender: record => expandedRowRender(record)\n              },\n              pagination: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  }\n};\n\nexport default TeacherProfile;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Teacher/TeacherProfile.tsx"],"names":["Card","Checkbox","Spin","Table","React","useEffect","useState","useForm","teacherApi","PowerTable","useWrap","ConfirmAssignModal","TeacherProfile","props","isLoading","userID","dataSubject","updateTeacherForSubject","onFetchData","loading","setLoading","type","status","setValue","showNoti","columns","title","width","dataIndex","render","text","align","data","IsSelected","info","handleSubmitAssignment","res","updateTeacherForAllSubject","teacherId","programId","key","error","expandedRowRender","record","Subject","i","Object","keys","length","push","SubjectID","SubjectName","onChangeCheckBox","e","UserInformationID","target","value","then","rs","x"],"mappings":"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","sourcesContent":["import { Card, Checkbox, Spin, Table, Tabs } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { teacherApi } from '~/apiBase'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport { useWrap } from '~/context/wrap'\r\nimport ConfirmAssignModal from './Teacher/ConfirmAssignModal'\r\n\r\nconst TeacherProfile = (props: any) => {\r\n\tconst { isLoading, userID, dataSubject, updateTeacherForSubject, onFetchData } = props\r\n\r\n\tconst [loading, setLoading] = useState({ type: '', status: false })\r\n\tconst { setValue } = useForm()\r\n\tconst { showNoti } = useWrap()\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Tên chương trình học',\r\n\t\t\twidth: 200,\r\n\t\t\tdataIndex: 'ProgramName',\r\n\t\t\trender: (text: string) => <p className=\"font-weight-primary\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\talign: 'center',\r\n\t\t\tdataIndex: 'IsSelected',\r\n\t\t\trender: (text: string, data: any) => (\r\n\t\t\t\t<p className={data.IsSelected ? 'tag green' : 'tag red'}>{data.IsSelected ? 'Dạy tất cả' : 'Không được dạy tất cả'}</p>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Thao tác',\r\n\t\t\twidth: 100,\r\n\t\t\talign: 'center',\r\n\t\t\trender: (text: string, data: any) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<ConfirmAssignModal data={data} _onSubmit={(info: any) => handleSubmitAssignment(info)} loading={loading} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n\r\n\tconst handleSubmitAssignment = async (info: any) => {\r\n\t\tsetLoading({ type: 'ASSIGN_TEACHER', status: true })\r\n\t\ttry {\r\n\t\t\tlet res = await teacherApi.updateTeacherForAllSubject({\r\n\t\t\t\tteacherId: userID,\r\n\t\t\t\tprogramId: info.key,\r\n\t\t\t\tIsSelected: info.IsSelected ? false : true\r\n\t\t\t})\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tshowNoti('success', 'Thay đổi thành công!')\r\n\t\t\t\tonFetchData && onFetchData()\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', 'Chưa có môn học trong chương trình này!')\r\n\t\t\t\tonFetchData && onFetchData()\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetLoading({ type: 'ASSIGN_TEACHER', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\tconst expandedRowRender = (record) => {\r\n\t\tconst columns = []\r\n\t\tconst data = [\r\n\t\t\t{\r\n\t\t\t\tSubject: 'Subject'\r\n\t\t\t}\r\n\t\t]\r\n\r\n\t\tfor (let i = 0; i < Object.keys(record.Subject).length; i++) {\r\n\t\t\tcolumns.push({\r\n\t\t\t\tkey: record.Subject[i].SubjectID,\r\n\t\t\t\ttitle: record.Subject[i].SubjectName,\r\n\t\t\t\tdataIndex: 'Subject',\r\n\t\t\t\trender: () => (\r\n\t\t\t\t\t<Checkbox value={record.Subject[i].SubjectID} checked={record.Subject[i].IsSelected ? true : false} onChange={onChangeCheckBox} />\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst onChangeCheckBox = (e) => {\r\n\t\t\tconst data = { UserInformationID: userID, SubjectID: e.target.value }\r\n\t\t\tlet res = updateTeacherForSubject(data)\r\n\t\t\tres.then(function (rs: any) {\r\n\t\t\t\trs && rs.status == 200\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (Object.keys(record.Subject).length) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"mini-table\">\r\n\t\t\t\t\t<Table columns={columns} dataSource={data} pagination={false} className=\"tb-expand\" />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn <p>Chưa có môn học</p>\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetValue('UserInformationID', userID)\r\n\t}, [])\r\n\r\n\tif (isLoading.status == true) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Card className=\"space-top-card text-center\">\r\n\t\t\t\t\t<Spin></Spin>\r\n\t\t\t\t</Card>\r\n\t\t\t</>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Card className=\"space-top-card\">\r\n\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t<div className=\"wrap-table table-expand\">\r\n\t\t\t\t\t\t\t<PowerTable\r\n\t\t\t\t\t\t\t\tclassName=\"teacher-detail-table\"\r\n\t\t\t\t\t\t\t\tdataSource={dataSubject}\r\n\t\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\t\tsize=\"middle\"\r\n\t\t\t\t\t\t\t\tscroll={{ x: 600 }}\r\n\t\t\t\t\t\t\t\texpandable={{\r\n\t\t\t\t\t\t\t\t\texpandedRowRender: (record: any) => expandedRowRender(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tpagination={false}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default TeacherProfile\r\n"]},"metadata":{},"sourceType":"module"}
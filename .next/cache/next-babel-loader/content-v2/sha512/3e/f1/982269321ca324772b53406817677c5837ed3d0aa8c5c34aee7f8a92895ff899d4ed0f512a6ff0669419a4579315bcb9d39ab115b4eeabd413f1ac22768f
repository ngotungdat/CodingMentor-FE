{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\Global\\\\CourseList\\\\LessonDetail.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport { courseApi, subjectApi } from '~/apiBase';\nimport TitlePage from '~/components/Elements/TitlePage';\nimport CurriculumDetail from '~/components/Global/Option/ProgramDetail/CurriculumDetail';\nimport { useWrap } from '~/context/wrap';\n\nconst LessonDetail = props => {\n  const router = useRouter();\n  const {\n    courseID: courseID,\n    slug: slug\n  } = router.query;\n  const {\n    0: dataSubject,\n    1: setDataSubject\n  } = useState(); // ------ BASE USESTATE TABLE -------\n\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState(null);\n  const {\n    showNoti,\n    pageSize,\n    isAdmin\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: 1\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi); // ---------------- GET DATA SUBJECT -------------\n\n  const getDataSubject = async ProgramID => {\n    console.log('Chạy vô đây');\n\n    try {\n      let res = await subjectApi.getAll({\n        ProgramID: ProgramID,\n        pageIndex: 1,\n        pageSize: 9999\n      });\n\n      if (res.status == 200) {\n        if (res.data.data.length > 0) {\n          setDataSubject(res.data.data);\n        } else {\n          showNoti('danger', 'Không có dữ liệu môn học');\n        }\n      }\n\n      res.status == 204 && showNoti('danger', 'Không có dữ liệu');\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {}\n  }; // GET DATA SOURCE\n\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await courseApi.getById(courseID ? courseID : slug);\n      res.status == 200 && setDataSource(res.data.data);\n      res.status == 204 && setDataSource([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  const getPagination = pageNumber => {\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      // ...listFieldSearch,\n      pageIndex: pageNumber\n    }));\n  };\n\n  const columns = [{\n    title: 'Buổi học',\n    dataIndex: 'LessonDetailNumber',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Nội dung học',\n    dataIndex: 'Content',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Video',\n    dataIndex: 'LinkVideo'\n  }, {\n    title: 'Tài liệu',\n    dataIndex: 'LinkDocument'\n  }, {\n    title: 'File Zip',\n    dataIndex: 'LinkHtml'\n  }, {\n    title: 'Làm bài tập',\n    dataIndex: 'ExamTopicID',\n    render: id => /*#__PURE__*/_jsxDEV(Link, {\n      href: {\n        pathname: '/option/program/program-detail/[slug]',\n        query: {\n          slug: id\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"\",\n        className: \"font-weight-black\",\n        children: \"L\\xE0m \\u0111\\u1EC1 thi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this)\n  }]; // ============== USE EFFECT - FETCH DATA ===================\n\n  useEffect(() => {\n    getDataSource();\n  }, [todoApi]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TitlePage, {\n      title: 'Chi tiết buổi học'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 4\n    }, this), dataSource && /*#__PURE__*/_jsxDEV(CurriculumDetail, {\n      disable: props.disable,\n      isNested: false,\n      curriculumID: dataSource === null || dataSource === void 0 ? void 0 : dataSource.CurriculumID,\n      dataSubject: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\nexport default LessonDetail;","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/Global/CourseList/LessonDetail.tsx"],"names":["Link","useRouter","React","useEffect","useState","courseApi","subjectApi","TitlePage","CurriculumDetail","useWrap","LessonDetail","props","router","courseID","slug","query","dataSubject","setDataSubject","dataSource","setDataSource","showNoti","pageSize","isAdmin","isLoading","setIsLoading","type","status","totalPage","setTotalPage","currentPage","setCurrentPage","listTodoApi","pageIndex","todoApi","setTodoApi","getDataSubject","ProgramID","console","log","res","getAll","data","length","error","message","getDataSource","getById","getPagination","pageNumber","columns","title","dataIndex","render","text","id","pathname","disable","CurriculumID"],"mappings":"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","sourcesContent":["import Link from 'next/link'\r\nimport { useRouter } from 'next/router'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { courseApi, subjectApi } from '~/apiBase'\r\nimport TitlePage from '~/components/Elements/TitlePage'\r\nimport CurriculumDetail from '~/components/Global/Option/ProgramDetail/CurriculumDetail'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst LessonDetail = (props) => {\r\n\tconst router = useRouter()\r\n\tconst { courseID: courseID, slug: slug } = router.query\r\n\tconst [dataSubject, setDataSubject] = useState<ISubject[]>()\r\n\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState(null)\r\n\tconst { showNoti, pageSize, isAdmin } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: 1\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// ---------------- GET DATA SUBJECT -------------\r\n\r\n\tconst getDataSubject = async (ProgramID) => {\r\n\t\tconsole.log('Chạy vô đây')\r\n\t\ttry {\r\n\t\t\tlet res = await subjectApi.getAll({\r\n\t\t\t\tProgramID: ProgramID,\r\n\t\t\t\tpageIndex: 1,\r\n\t\t\t\tpageSize: 9999\r\n\t\t\t})\r\n\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tif (res.data.data.length > 0) {\r\n\t\t\t\t\tsetDataSubject(res.data.data)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tshowNoti('danger', 'Không có dữ liệu môn học')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu')\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t}\r\n\t}\r\n\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await courseApi.getById(courseID ? (courseID as any) : slug)\r\n\t\t\tres.status == 200 && setDataSource(res.data.data)\r\n\r\n\t\t\tres.status == 204 && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t// ...listFieldSearch,\r\n\t\t\tpageIndex: pageNumber\r\n\t\t})\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Buổi học',\r\n\t\t\tdataIndex: 'LessonDetailNumber',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Nội dung học',\r\n\t\t\tdataIndex: 'Content',\r\n\t\t\trender: (text) => <p className=\"font-weight-primary\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Video',\r\n\t\t\tdataIndex: 'LinkVideo'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tài liệu',\r\n\t\t\tdataIndex: 'LinkDocument'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'File Zip',\r\n\t\t\tdataIndex: 'LinkHtml'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Làm bài tập',\r\n\t\t\tdataIndex: 'ExamTopicID',\r\n\t\t\trender: (id) => (\r\n\t\t\t\t<Link\r\n\t\t\t\t\thref={{\r\n\t\t\t\t\t\tpathname: '/option/program/program-detail/[slug]',\r\n\t\t\t\t\t\tquery: { slug: id }\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<a href=\"\" className=\"font-weight-black\">\r\n\t\t\t\t\t\tLàm đề thi\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</Link>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t}, [todoApi])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TitlePage title={'Chi tiết buổi học'} />\r\n\t\t\t{/* <ExpandTable\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Danh sách chương trình\"\r\n\t\t\t\tdataSource={dataSource}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t/> */}\r\n\t\t\t{dataSource && (\r\n\t\t\t\t<CurriculumDetail disable={props.disable} isNested={false} curriculumID={dataSource?.CurriculumID} dataSubject={null} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default LessonDetail\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Dashboard\\\\AcademicChart.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { Select, Card, Radio, Skeleton } from 'antd';\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total';\n\nconst AcademicChart = () => {\n  const {\n    0: statisticalStudentYear,\n    1: setStatisticalStudentYear\n  } = useState([]);\n  const {\n    0: statisticalStudentMonth,\n    1: setStatisticalStudentMonth\n  } = useState([]);\n  const {\n    0: statisticalStudentDay,\n    1: setStatisticalStudentDay\n  } = useState([]);\n  const {\n    0: typeView,\n    1: setTypeView\n  } = useState(1);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    status: '',\n    loading: false\n  });\n  const {\n    0: todoApiStudent,\n    1: setTodoApiStudent\n  } = useState({\n    branch: 0,\n    StartYear: 2017,\n    EndYear: 2022,\n    Year: new Date().getFullYear(),\n    Month: new Date().getMonth() + 1\n  });\n\n  const onChange = e => {\n    setTypeView(e.target.value);\n  };\n\n  const {\n    Option\n  } = Select;\n\n  const handleChangeYear = value => {\n    setTodoApiStudent(_objectSpread(_objectSpread({}, todoApiStudent), {}, {\n      Year: value\n    }));\n  };\n\n  const handleChangeMonth = value => {\n    setTodoApiStudent(_objectSpread(_objectSpread({}, todoApiStudent), {}, {\n      Month: value\n    }));\n  };\n\n  const formatYAxis = tickItem => {\n    return new Intl.NumberFormat('de-DE').format(tickItem);\n  };\n\n  const formatTooltip = (value, name, props) => {\n    return new Intl.NumberFormat('de-DE').format(value);\n  };\n\n  const renderView = () => {\n    if (typeView == 1) {\n      return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 280,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: statisticalStudentDay,\n          margin: {\n            top: 10,\n            right: 0,\n            left: -15,\n            bottom: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            tickFormatter: formatYAxis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: formatTooltip,\n            labelFormatter: value => `Ngày ${value}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"Amount\",\n            fill: \"#0080FF\",\n            name: \"H\\u1ECDc vi\\xEAn \\u0111\\xE3 \\u0111\\u0103ng k\\xED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this);\n    } else if (typeView == 2) {\n      return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 280,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: statisticalStudentMonth,\n          margin: {\n            top: 10,\n            right: 0,\n            left: -15,\n            bottom: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            tickFormatter: formatYAxis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: formatTooltip,\n            labelFormatter: value => `Tháng ${value}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"Amount\",\n            fill: \"#0080FF\",\n            name: \"H\\u1ECDc vi\\xEAn \\u0111\\xE3 \\u0111\\u0103ng k\\xED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this);\n    } else if (typeView == 3) {\n      return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 280,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: statisticalStudentYear,\n          margin: {\n            top: 10,\n            right: 0,\n            left: -15,\n            bottom: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            tickFormatter: formatYAxis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: formatTooltip,\n            labelFormatter: value => `Năm ${value}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"Amount\",\n            fill: \"#0080FF\",\n            name: \"H\\u1ECDc vi\\xEAn \\u0111\\xE3 \\u0111\\u0103ng k\\xED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this);\n    }\n  };\n\n  const renderExtra = () => {\n    if (typeView == 1) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          value: todoApiStudent.Year,\n          style: {\n            width: 120\n          },\n          onChange: handleChangeYear,\n          loading: isLoading.loading && isLoading.status === 'GET_STAT_STUDENT',\n          children: statisticalStudentYear.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              value: item.Year,\n              children: [\"N\\u0103m \", item.Year]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 9\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          loading: isLoading.loading && isLoading.status === 'GET_STAT_STUDENT',\n          value: todoApiStudent.Month,\n          style: {\n            width: 120\n          },\n          onChange: handleChangeMonth,\n          children: statisticalStudentMonth.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              value: item.Month,\n              children: [\"Th\\xE1ng \", item.Month]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 9\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true);\n    } else if (typeView == 2) {\n      return /*#__PURE__*/_jsxDEV(Select, {\n        loading: isLoading.loading && isLoading.status === 'GET_STAT_STUDENT',\n        value: todoApiStudent.Year,\n        style: {\n          width: 120\n        },\n        onChange: handleChangeYear,\n        children: statisticalStudentYear.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Option, {\n            value: item.Year,\n            children: [\"N\\u0103m \", item.Year]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this);\n    }\n  };\n\n  const getStatisticalStudentYear = async () => {\n    setIsLoading({\n      status: 'GET_STAT_STUDENT',\n      loading: true\n    });\n\n    try {\n      let res = await statisticalApi.getStatisticalStudentYear(todoApiStudent);\n      console.log(res.data);\n\n      if (res.status == 200) {\n        setStatisticalStudentYear(res.data.data);\n      }\n    } catch (error) {// showNoti(\"danger\", \"get data student year faile\");\n    } finally {\n      setIsLoading({\n        status: 'GET_STAT_STUDENT',\n        loading: false\n      });\n    }\n  };\n\n  const getStatisticalStudentMonth = async () => {\n    setIsLoading({\n      status: 'GET_STAT_STUDENT',\n      loading: true\n    });\n\n    try {\n      let res = await statisticalApi.getStatisticalStudentMonth(todoApiStudent);\n      console.log(res.data);\n\n      if (res.status == 200) {\n        setStatisticalStudentMonth(res.data.data);\n      }\n    } catch (error) {// showNoti(\"danger\", \"get data student Month faile\");\n    } finally {\n      setIsLoading({\n        status: 'GET_STAT_STUDENT',\n        loading: false\n      });\n    }\n  };\n\n  const getStatisticalStudentDay = async () => {\n    setIsLoading({\n      status: 'GET_STAT_STUDENT',\n      loading: true\n    });\n\n    try {\n      let res = await statisticalApi.getStatisticalStudentDay(todoApiStudent);\n      console.log(res.data);\n\n      if (res.status == 200) {\n        setStatisticalStudentDay(res.data.data);\n      }\n    } catch (error) {// showNoti(\"danger\", \"get data student Day faile\");\n    } finally {\n      setIsLoading({\n        status: 'GET_STAT_STUDENT',\n        loading: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    getStatisticalStudentYear();\n    getStatisticalStudentMonth();\n    getStatisticalStudentDay();\n  }, [todoApiStudent]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading.status === 'GET_STAT_STUDENT' && isLoading.loading == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 mb-5\",\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        active: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"H\\u1ECCC VI\\xCAN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"S\\u1ED1 l\\u01B0\\u1EE3ng h\\u1ECDc vi\\xEAn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 9\n          }, this),\n          style: {\n            borderRadius: 20\n          },\n          extra: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [renderExtra(), /*#__PURE__*/_jsxDEV(Radio.Group, {\n              onChange: onChange,\n              optionType: \"button\",\n              buttonStyle: \"solid\",\n              value: typeView,\n              children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n                value: 1,\n                children: \"Ng\\xE0y\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n                value: 2,\n                children: \"Th\\xE1ng\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n                value: 3,\n                children: \"N\\u0103m\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true),\n          children: renderView()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\nexport default AcademicChart;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Dashboard/AcademicChart.tsx"],"names":["React","useState","useEffect","Bar","BarChart","CartesianGrid","Legend","ResponsiveContainer","Tooltip","XAxis","YAxis","Select","Card","Radio","Skeleton","statisticalApi","AcademicChart","statisticalStudentYear","setStatisticalStudentYear","statisticalStudentMonth","setStatisticalStudentMonth","statisticalStudentDay","setStatisticalStudentDay","typeView","setTypeView","isLoading","setIsLoading","status","loading","todoApiStudent","setTodoApiStudent","branch","StartYear","EndYear","Year","Date","getFullYear","Month","getMonth","onChange","e","target","value","Option","handleChangeYear","handleChangeMonth","formatYAxis","tickItem","Intl","NumberFormat","format","formatTooltip","name","props","renderView","top","right","left","bottom","renderExtra","width","map","item","index","getStatisticalStudentYear","res","console","log","data","error","getStatisticalStudentMonth","getStatisticalStudentDay","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { Select, Card, Radio, Skeleton } from 'antd';\r\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total';\r\n\r\nconst AcademicChart = () => {\r\n\tconst [statisticalStudentYear, setStatisticalStudentYear] = useState<IStatStudentYear[]>([]);\r\n\tconst [statisticalStudentMonth, setStatisticalStudentMonth] = useState<IStatStudentMonth[]>([]);\r\n\tconst [statisticalStudentDay, setStatisticalStudentDay] = useState<IStatStudentDay[]>([]);\r\n\tconst [typeView, setTypeView] = useState(1);\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\tstatus: '',\r\n\t\tloading: false\r\n\t});\r\n\tconst [todoApiStudent, setTodoApiStudent] = useState({\r\n\t\tbranch: 0,\r\n\t\tStartYear: 2017,\r\n\t\tEndYear: 2022,\r\n\t\tYear: new Date().getFullYear(),\r\n\t\tMonth: new Date().getMonth() + 1\r\n\t});\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetTypeView(e.target.value);\r\n\t};\r\n\tconst { Option } = Select;\r\n\r\n\tconst handleChangeYear = (value) => {\r\n\t\tsetTodoApiStudent({ ...todoApiStudent, Year: value });\r\n\t};\r\n\tconst handleChangeMonth = (value) => {\r\n\t\tsetTodoApiStudent({ ...todoApiStudent, Month: value });\r\n\t};\r\n\r\n\tconst formatYAxis = (tickItem) => {\r\n\t\treturn new Intl.NumberFormat('de-DE').format(tickItem);\r\n\t};\r\n\r\n\tconst formatTooltip = (value, name, props) => {\r\n\t\treturn new Intl.NumberFormat('de-DE').format(value);\r\n\t};\r\n\r\n\tconst renderView = () => {\r\n\t\tif (typeView == 1) {\r\n\t\t\treturn (\r\n\t\t\t\t<ResponsiveContainer width=\"100%\" height={280}>\r\n\t\t\t\t\t<BarChart data={statisticalStudentDay} margin={{ top: 10, right: 0, left: -15, bottom: 0 }}>\r\n\t\t\t\t\t\t<XAxis dataKey=\"Day\" />\r\n\t\t\t\t\t\t<YAxis type=\"number\" tickFormatter={formatYAxis} />\r\n\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t\t<Tooltip formatter={formatTooltip} labelFormatter={(value) => `Ngày ${value}`} />\r\n\t\t\t\t\t\t<Legend />\r\n\t\t\t\t\t\t<Bar dataKey=\"Amount\" fill=\"#0080FF\" name=\"Học viên đã đăng kí\" />\r\n\t\t\t\t\t</BarChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\t\t\t);\r\n\t\t} else if (typeView == 2) {\r\n\t\t\treturn (\r\n\t\t\t\t<ResponsiveContainer width=\"100%\" height={280}>\r\n\t\t\t\t\t<BarChart data={statisticalStudentMonth} margin={{ top: 10, right: 0, left: -15, bottom: 0 }}>\r\n\t\t\t\t\t\t<XAxis dataKey=\"Month\" />\r\n\t\t\t\t\t\t<YAxis type=\"number\" tickFormatter={formatYAxis} />\r\n\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t\t<Tooltip formatter={formatTooltip} labelFormatter={(value) => `Tháng ${value}`} />\r\n\t\t\t\t\t\t<Legend />\r\n\t\t\t\t\t\t<Bar dataKey=\"Amount\" fill=\"#0080FF\" name=\"Học viên đã đăng kí\" />\r\n\t\t\t\t\t</BarChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\t\t\t);\r\n\t\t} else if (typeView == 3) {\r\n\t\t\treturn (\r\n\t\t\t\t<ResponsiveContainer width=\"100%\" height={280}>\r\n\t\t\t\t\t<BarChart data={statisticalStudentYear} margin={{ top: 10, right: 0, left: -15, bottom: 0 }}>\r\n\t\t\t\t\t\t<XAxis dataKey=\"Year\" />\r\n\t\t\t\t\t\t<YAxis type=\"number\" tickFormatter={formatYAxis} />\r\n\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t\t<Tooltip formatter={formatTooltip} labelFormatter={(value) => `Năm ${value}`} />\r\n\t\t\t\t\t\t<Legend />\r\n\t\t\t\t\t\t<Bar dataKey=\"Amount\" fill=\"#0080FF\" name=\"Học viên đã đăng kí\" />\r\n\t\t\t\t\t</BarChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderExtra = () => {\r\n\t\tif (typeView == 1) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tvalue={todoApiStudent.Year}\r\n\t\t\t\t\t\tstyle={{ width: 120 }}\r\n\t\t\t\t\t\tonChange={handleChangeYear}\r\n\t\t\t\t\t\tloading={isLoading.loading && isLoading.status === 'GET_STAT_STUDENT'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{statisticalStudentYear.map((item, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Option value={item.Year} key={index}>\r\n\t\t\t\t\t\t\t\t\tNăm {item.Year}\r\n\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tloading={isLoading.loading && isLoading.status === 'GET_STAT_STUDENT'}\r\n\t\t\t\t\t\tvalue={todoApiStudent.Month}\r\n\t\t\t\t\t\tstyle={{ width: 120 }}\r\n\t\t\t\t\t\tonChange={handleChangeMonth}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{statisticalStudentMonth.map((item, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Option value={item.Month} key={index}>\r\n\t\t\t\t\t\t\t\t\tTháng {item.Month}\r\n\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else if (typeView == 2) {\r\n\t\t\treturn (\r\n\t\t\t\t<Select\r\n\t\t\t\t\tloading={isLoading.loading && isLoading.status === 'GET_STAT_STUDENT'}\r\n\t\t\t\t\tvalue={todoApiStudent.Year}\r\n\t\t\t\t\tstyle={{ width: 120 }}\r\n\t\t\t\t\tonChange={handleChangeYear}\r\n\t\t\t\t>\r\n\t\t\t\t\t{statisticalStudentYear.map((item, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Option value={item.Year} key={index}>\r\n\t\t\t\t\t\t\t\tNăm {item.Year}\r\n\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Select>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getStatisticalStudentYear = async () => {\r\n\t\tsetIsLoading({ status: 'GET_STAT_STUDENT', loading: true });\r\n\t\ttry {\r\n\t\t\tlet res = await statisticalApi.getStatisticalStudentYear(todoApiStudent);\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetStatisticalStudentYear(res.data.data);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\t// showNoti(\"danger\", \"get data student year faile\");\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ status: 'GET_STAT_STUDENT', loading: false });\r\n\t\t}\r\n\t};\r\n\r\n\tconst getStatisticalStudentMonth = async () => {\r\n\t\tsetIsLoading({ status: 'GET_STAT_STUDENT', loading: true });\r\n\t\ttry {\r\n\t\t\tlet res = await statisticalApi.getStatisticalStudentMonth(todoApiStudent);\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetStatisticalStudentMonth(res.data.data);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\t// showNoti(\"danger\", \"get data student Month faile\");\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ status: 'GET_STAT_STUDENT', loading: false });\r\n\t\t}\r\n\t};\r\n\r\n\tconst getStatisticalStudentDay = async () => {\r\n\t\tsetIsLoading({ status: 'GET_STAT_STUDENT', loading: true });\r\n\t\ttry {\r\n\t\t\tlet res = await statisticalApi.getStatisticalStudentDay(todoApiStudent);\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetStatisticalStudentDay(res.data.data);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\t// showNoti(\"danger\", \"get data student Day faile\");\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ status: 'GET_STAT_STUDENT', loading: false });\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetStatisticalStudentYear();\r\n\t\tgetStatisticalStudentMonth();\r\n\t\tgetStatisticalStudentDay();\r\n\t}, [todoApiStudent]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading.status === 'GET_STAT_STUDENT' && isLoading.loading == true ? (\r\n\t\t\t\t<div className=\"col-12 mb-5\">\r\n\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"row pt-5\">\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<h4>HỌC VIÊN</h4>\r\n\t\t\t\t\t\t\t\t\t<div>Số lượng học viên</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tstyle={{ borderRadius: 20 }}\r\n\t\t\t\t\t\t\textra={\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{renderExtra()}\r\n\t\t\t\t\t\t\t\t\t<Radio.Group onChange={onChange} optionType=\"button\" buttonStyle=\"solid\" value={typeView}>\r\n\t\t\t\t\t\t\t\t\t\t<Radio.Button value={1}>Ngày</Radio.Button>\r\n\t\t\t\t\t\t\t\t\t\t<Radio.Button value={2}>Tháng</Radio.Button>\r\n\t\t\t\t\t\t\t\t\t\t<Radio.Button value={3}>Năm</Radio.Button>\r\n\t\t\t\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{renderView()}\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AcademicChart;\r\n"]},"metadata":{},"sourceType":"module"}
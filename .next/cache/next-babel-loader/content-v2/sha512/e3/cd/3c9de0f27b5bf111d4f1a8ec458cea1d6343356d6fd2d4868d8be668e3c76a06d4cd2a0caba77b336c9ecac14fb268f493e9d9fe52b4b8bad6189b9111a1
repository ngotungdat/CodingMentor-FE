{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Dashboard\\\\StatisticalPercentOfStudentBySource.tsx\";\nimport { Skeleton } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total';\nimport BarChartStatistical from './BarChart';\n\nconst StatisticalRate = () => {\n  const {\n    0: statisticalPercentStudentBySource,\n    1: setStatisticalPercentStudentBySource\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    status: '',\n    loading: false\n  });\n\n  const getPercentOfStudentBySource = async () => {\n    setIsLoading({\n      status: 'GET_STAT_PERCENT_STUDENT_BY_SOURCE',\n      loading: true\n    });\n\n    try {\n      let res = await statisticalApi.getPercentOfStudentBySource();\n\n      if (res.status === 200) {\n        let temp = [];\n        res.data.data.forEach(item => temp.push({\n          ID: item.SourceInformationID,\n          dataKey: item.SourceInformationName,\n          value: item.Amount,\n          title: 'TỈ LỆ HỌC VIÊN THEO NGUỒN'\n        }));\n        setStatisticalPercentStudentBySource(temp);\n      }\n\n      if (res.status === 204) {\n        setStatisticalPercentStudentBySource([]);\n      }\n    } catch (error) {} finally {\n      setIsLoading({\n        status: 'GET_STAT_PERCENT_STUDENT_BY_SOURCE',\n        loading: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    getPercentOfStudentBySource();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading.status === 'GET_STAT_PERCENT_STUDENT_BY_SOURCE' && isLoading.loading == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-5\",\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        active: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(BarChartStatistical, {\n          title: 'Thống kê phần trăm học viên theo nguồn',\n          dataStatistical: statisticalPercentStudentBySource,\n          colorTick: \"#dd4667\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\nexport default StatisticalRate;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Dashboard/StatisticalPercentOfStudentBySource.tsx"],"names":["Skeleton","React","useState","useEffect","statisticalApi","BarChartStatistical","StatisticalRate","statisticalPercentStudentBySource","setStatisticalPercentStudentBySource","isLoading","setIsLoading","status","loading","getPercentOfStudentBySource","res","temp","data","forEach","item","push","ID","SourceInformationID","dataKey","SourceInformationName","value","Amount","title","error"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,MAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,OAAOC,mBAAP,MAAgC,YAAhC;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC7B,QAAM;AAAA,OAACC,iCAAD;AAAA,OAAoCC;AAApC,MAA4EN,QAAQ,CAAsB,EAAtB,CAA1F;AACA,QAAM;AAAA,OAACO,SAAD;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,CAAC;AAAES,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAAD,CAA1C;;AAEA,QAAMC,2BAA2B,GAAG,YAAY;AAC/CH,IAAAA,YAAY,CAAC;AAAEC,MAAAA,MAAM,EAAE,oCAAV;AAAgDC,MAAAA,OAAO,EAAE;AAAzD,KAAD,CAAZ;;AACA,QAAI;AACH,UAAIE,GAAG,GAAG,MAAMV,cAAc,CAACS,2BAAf,EAAhB;;AACA,UAAIC,GAAG,CAACH,MAAJ,KAAe,GAAnB,EAAwB;AACvB,YAAII,IAAI,GAAG,EAAX;AACAD,QAAAA,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,OAAd,CAAuBC,IAAD,IACrBH,IAAI,CAACI,IAAL,CAAU;AACTC,UAAAA,EAAE,EAAEF,IAAI,CAACG,mBADA;AAETC,UAAAA,OAAO,EAAEJ,IAAI,CAACK,qBAFL;AAGTC,UAAAA,KAAK,EAAEN,IAAI,CAACO,MAHH;AAITC,UAAAA,KAAK,EAAE;AAJE,SAAV,CADD;AAQAlB,QAAAA,oCAAoC,CAACO,IAAD,CAApC;AACA;;AACD,UAAID,GAAG,CAACH,MAAJ,KAAe,GAAnB,EAAwB;AACvBH,QAAAA,oCAAoC,CAAC,EAAD,CAApC;AACA;AACD,KAjBD,CAiBE,OAAOmB,KAAP,EAAc,CACf,CAlBD,SAkBU;AACTjB,MAAAA,YAAY,CAAC;AAAEC,QAAAA,MAAM,EAAE,oCAAV;AAAgDC,QAAAA,OAAO,EAAE;AAAzD,OAAD,CAAZ;AACA;AACD,GAvBD;;AAyBAT,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,2BAA2B;AAC3B,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAA,cACEJ,SAAS,CAACE,MAAV,KAAqB,oCAArB,IAA6DF,SAAS,CAACG,OAAV,IAAqB,IAAlF,gBACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACC,QAAC,QAAD;AAAU,QAAA,MAAM;AAAhB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADA,gBAKA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACC,QAAC,mBAAD;AACC,UAAA,KAAK,EAAE,wCADR;AAEC,UAAA,eAAe,EAAEL,iCAFlB;AAGC,UAAA,SAAS,EAAC;AAHX;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AANF,mBADD;AAmBA,CApDD;;AAsDA,eAAeD,eAAf","sourcesContent":["import { Skeleton } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total'\r\nimport BarChartStatistical from './BarChart'\r\n\r\nconst StatisticalRate = () => {\r\n\tconst [statisticalPercentStudentBySource, setStatisticalPercentStudentBySource] = useState<IStatDataBarChart[]>([])\r\n\tconst [isLoading, setIsLoading] = useState({ status: '', loading: false })\r\n\r\n\tconst getPercentOfStudentBySource = async () => {\r\n\t\tsetIsLoading({ status: 'GET_STAT_PERCENT_STUDENT_BY_SOURCE', loading: true })\r\n\t\ttry {\r\n\t\t\tlet res = await statisticalApi.getPercentOfStudentBySource()\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tlet temp = []\r\n\t\t\t\tres.data.data.forEach((item) =>\r\n\t\t\t\t\ttemp.push({\r\n\t\t\t\t\t\tID: item.SourceInformationID,\r\n\t\t\t\t\t\tdataKey: item.SourceInformationName,\r\n\t\t\t\t\t\tvalue: item.Amount,\r\n\t\t\t\t\t\ttitle: 'TỈ LỆ HỌC VIÊN THEO NGUỒN'\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\tsetStatisticalPercentStudentBySource(temp)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetStatisticalPercentStudentBySource([])\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ status: 'GET_STAT_PERCENT_STUDENT_BY_SOURCE', loading: false })\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetPercentOfStudentBySource()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading.status === 'GET_STAT_PERCENT_STUDENT_BY_SOURCE' && isLoading.loading == true ? (\r\n\t\t\t\t<div className=\"row pb-5\">\r\n\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"row pb-5\">\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<BarChartStatistical\r\n\t\t\t\t\t\t\ttitle={'Thống kê phần trăm học viên theo nguồn'}\r\n\t\t\t\t\t\t\tdataStatistical={statisticalPercentStudentBySource}\r\n\t\t\t\t\t\t\tcolorTick=\"#dd4667\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default StatisticalRate\r\n"]},"metadata":{},"sourceType":"module"}
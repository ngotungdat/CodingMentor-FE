{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\option\\\\price-fix-exam\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { priceFixExamApi } from '~/apiBase';\nimport PriceFixExamForm from '~/components/Global/Option/PriceFixExam/PriceFixExamForm';\nimport PowerTable from '~/components/PowerTable';\nimport { useWrap } from '~/context/wrap';\nimport { numberWithCommas } from '~/utils/functions';\n\nconst PriceFixExam = () => {\n  // ------ BASE USESTATE TABLE -------\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: currentPage\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi); // GET DATA SOURCE\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await priceFixExamApi.getAll(todoApi);\n      res.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow));\n      res.status == 204 && showNoti('danger', 'Không có dữ liệu') && setDataSource([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  const onFetchData = () => {\n    setCurrentPage(1);\n    setTodoApi(listTodoApi);\n  };\n\n  const onUpdateData = (index, dataSubmit) => {\n    dataSource.splice(index, 1, dataSubmit);\n    setDataSource([...dataSource]);\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  const getPagination = pageNumber => {\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      pageIndex: pageNumber\n    }));\n  };\n\n  const columns = [{\n    title: 'Level',\n    dataIndex: 'SetPackageLevel',\n    render: level => {\n      // return <p className=\"font-weight-black\">{(level == 1 && 'Dễ') || (level == 2 && 'Trung bình') || (level == 3 && 'Khó')}</p>;\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: level\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    title: 'Giá',\n    dataIndex: 'Price',\n    render: text => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: numberWithCommas(text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    render: (text, data, index) => /*#__PURE__*/_jsxDEV(PriceFixExamForm, {\n      dataRow: data,\n      onUpdateData: dataSubmit => onUpdateData(index, dataSubmit)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 35\n    }, this)\n  }];\n  useEffect(() => {\n    getDataSource();\n  }, [todoApi]);\n  return /*#__PURE__*/_jsxDEV(PowerTable, {\n    currentPage: currentPage,\n    totalPage: totalPage && totalPage,\n    getPagination: pageNumber => getPagination(pageNumber),\n    loading: isLoading,\n    addClass: \"basic-header\",\n    TitlePage: \"Gi\\xE1 mua l\\u01B0\\u1EE3t ch\\u1EA5m\",\n    TitleCard: /*#__PURE__*/_jsxDEV(PriceFixExamForm, {\n      onFetchData: onFetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }, this),\n    dataSource: dataSource,\n    columns: columns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 3\n  }, this);\n};\n\nexport default PriceFixExam;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/option/price-fix-exam/index.tsx"],"names":["React","useEffect","useState","priceFixExamApi","PriceFixExamForm","PowerTable","useWrap","numberWithCommas","PriceFixExam","dataSource","setDataSource","showNoti","pageSize","isLoading","setIsLoading","type","status","totalPage","setTotalPage","currentPage","setCurrentPage","listTodoApi","pageIndex","todoApi","setTodoApi","getDataSource","res","getAll","data","totalRow","error","message","onFetchData","onUpdateData","index","dataSubmit","splice","getPagination","pageNumber","columns","title","dataIndex","render","level","text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { priceFixExamApi } from '~/apiBase'\r\nimport PriceFixExamForm from '~/components/Global/Option/PriceFixExam/PriceFixExamForm'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { numberWithCommas } from '~/utils/functions'\r\n\r\nconst PriceFixExam = () => {\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState<IPriceFixExam[]>([])\r\n\tconst { showNoti, pageSize } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: currentPage\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await priceFixExamApi.getAll(todoApi)\r\n\t\t\tres.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow))\r\n\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu') && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst onFetchData = () => {\r\n\t\tsetCurrentPage(1)\r\n\t\tsetTodoApi(listTodoApi)\r\n\t}\r\n\r\n\tconst onUpdateData = (index, dataSubmit) => {\r\n\t\tdataSource.splice(index, 1, dataSubmit)\r\n\t\tsetDataSource([...dataSource])\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\tpageIndex: pageNumber\r\n\t\t})\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Level',\r\n\t\t\tdataIndex: 'SetPackageLevel',\r\n\r\n\t\t\trender: (level) => {\r\n\t\t\t\t// return <p className=\"font-weight-black\">{(level == 1 && 'Dễ') || (level == 2 && 'Trung bình') || (level == 3 && 'Khó')}</p>;\r\n\t\t\t\treturn <p className=\"font-weight-black\">{level}</p>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Giá',\r\n\t\t\tdataIndex: 'Price',\r\n\t\t\trender: (text) => {\r\n\t\t\t\treturn <p className=\"font-weight-black\">{numberWithCommas(text)}</p>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\trender: (text, data, index) => <PriceFixExamForm dataRow={data} onUpdateData={(dataSubmit) => onUpdateData(index, dataSubmit)} />\r\n\t\t}\r\n\t]\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t}, [todoApi])\r\n\r\n\treturn (\r\n\t\t<PowerTable\r\n\t\t\tcurrentPage={currentPage}\r\n\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\tloading={isLoading}\r\n\t\t\taddClass=\"basic-header\"\r\n\t\t\tTitlePage=\"Giá mua lượt chấm\"\r\n\t\t\tTitleCard={<PriceFixExamForm onFetchData={onFetchData} />}\r\n\t\t\tdataSource={dataSource}\r\n\t\t\tcolumns={columns}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default PriceFixExam\r\n"]},"metadata":{},"sourceType":"module"}
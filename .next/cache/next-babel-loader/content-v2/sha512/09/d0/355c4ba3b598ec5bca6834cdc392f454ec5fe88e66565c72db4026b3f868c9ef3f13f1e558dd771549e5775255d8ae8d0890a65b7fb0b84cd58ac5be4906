{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Dashboard\\\\StatisticalRate.tsx\";\nimport { Skeleton } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total';\nimport { dataPie } from '~/lib/dashboard/data';\nimport RateChart from './RateChart';\n\nconst StatisticalRate = () => {\n  const {\n    0: statisticalRate,\n    1: setStatisticalRate\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    status: '',\n    loading: false\n  });\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState({\n    branch: 0,\n    StartYear: 2017,\n    EndYear: 2022,\n    Year: new Date().getFullYear(),\n    Month: new Date().getMonth() + 1\n  });\n\n  const getStatisticalRate = async () => {\n    setIsLoading({\n      status: 'STAT_GET_RATE',\n      loading: true\n    });\n\n    try {\n      let res = await statisticalApi.getStatisticalRate(todoApi);\n\n      if (res.status == 200) {\n        setStatisticalRate(res.data.data);\n      }\n\n      if (res.status == 204) {\n        setStatisticalRate([]);\n      }\n    } catch (error) {} finally {\n      setIsLoading({\n        status: 'STAT_GET_RATE',\n        loading: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    getStatisticalRate();\n  }, [todoApi]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading.status === 'GET_STAT_RATE' && isLoading.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-xl-6 col-12\",\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        active: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-xl-6 col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-comment\",\n        children: /*#__PURE__*/_jsxDEV(RateChart, {\n          statisticalRate: statisticalRate,\n          dataPie: dataPie,\n          isLoading: isLoading,\n          type: \"SELLER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\nexport default StatisticalRate;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Dashboard/StatisticalRate.tsx"],"names":["Skeleton","React","useState","useEffect","statisticalApi","dataPie","RateChart","StatisticalRate","statisticalRate","setStatisticalRate","isLoading","setIsLoading","status","loading","todoApi","setTodoApi","branch","StartYear","EndYear","Year","Date","getFullYear","Month","getMonth","getStatisticalRate","res","data","error"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,MAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC7B,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCP,QAAQ,CAAc,EAAd,CAAtD;AACA,QAAM;AAAA,OAACQ,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC;AAC1CU,IAAAA,MAAM,EAAE,EADkC;AAE1CC,IAAAA,OAAO,EAAE;AAFiC,GAAD,CAA1C;AAIA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAC;AACtCc,IAAAA,MAAM,EAAE,CAD8B;AAEtCC,IAAAA,SAAS,EAAE,IAF2B;AAGtCC,IAAAA,OAAO,EAAE,IAH6B;AAItCC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAJgC;AAKtCC,IAAAA,KAAK,EAAE,IAAIF,IAAJ,GAAWG,QAAX,KAAwB;AALO,GAAD,CAAtC;;AAQA,QAAMC,kBAAkB,GAAG,YAAY;AACtCb,IAAAA,YAAY,CAAC;AAAEC,MAAAA,MAAM,EAAE,eAAV;AAA2BC,MAAAA,OAAO,EAAE;AAApC,KAAD,CAAZ;;AACA,QAAI;AACH,UAAIY,GAAG,GAAG,MAAMrB,cAAc,CAACoB,kBAAf,CAAkCV,OAAlC,CAAhB;;AACA,UAAIW,GAAG,CAACb,MAAJ,IAAc,GAAlB,EAAuB;AACtBH,QAAAA,kBAAkB,CAACgB,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAlB;AACA;;AACD,UAAID,GAAG,CAACb,MAAJ,IAAc,GAAlB,EAAuB;AACtBH,QAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACA;AACD,KARD,CAQE,OAAOkB,KAAP,EAAc,CACf,CATD,SASU;AACThB,MAAAA,YAAY,CAAC;AAAEC,QAAAA,MAAM,EAAE,eAAV;AAA2BC,QAAAA,OAAO,EAAE;AAApC,OAAD,CAAZ;AACA;AACD,GAdD;;AAgBAV,EAAAA,SAAS,CAAC,MAAM;AACfqB,IAAAA,kBAAkB;AAClB,GAFQ,EAEN,CAACV,OAAD,CAFM,CAAT;AAIA,sBACC;AAAA,cACEJ,SAAS,CAACE,MAAV,KAAqB,eAArB,IAAwCF,SAAS,CAACG,OAAlD,gBACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACC,QAAC,QAAD;AAAU,QAAA,MAAM;AAAhB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADA,gBAKA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACC,QAAC,SAAD;AAAW,UAAA,eAAe,EAAEL,eAA5B;AAA6C,UAAA,OAAO,EAAEH,OAAtD;AAA+D,UAAA,SAAS,EAAEK,SAA1E;AAAqF,UAAA,IAAI,EAAC;AAA1F;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AANF,mBADD;AAeA,CAjDD;;AAmDA,eAAeH,eAAf","sourcesContent":["import { Skeleton } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total'\r\nimport { dataPie } from '~/lib/dashboard/data'\r\nimport RateChart from './RateChart'\r\n\r\nconst StatisticalRate = () => {\r\n\tconst [statisticalRate, setStatisticalRate] = useState<IStatRate[]>([])\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\tstatus: '',\r\n\t\tloading: false\r\n\t})\r\n\tconst [todoApi, setTodoApi] = useState({\r\n\t\tbranch: 0,\r\n\t\tStartYear: 2017,\r\n\t\tEndYear: 2022,\r\n\t\tYear: new Date().getFullYear(),\r\n\t\tMonth: new Date().getMonth() + 1\r\n\t})\r\n\r\n\tconst getStatisticalRate = async () => {\r\n\t\tsetIsLoading({ status: 'STAT_GET_RATE', loading: true })\r\n\t\ttry {\r\n\t\t\tlet res = await statisticalApi.getStatisticalRate(todoApi)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetStatisticalRate(res.data.data)\r\n\t\t\t}\r\n\t\t\tif (res.status == 204) {\r\n\t\t\t\tsetStatisticalRate([])\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ status: 'STAT_GET_RATE', loading: false })\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetStatisticalRate()\r\n\t}, [todoApi])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading.status === 'GET_STAT_RATE' && isLoading.loading ? (\r\n\t\t\t\t<div className=\"col-xl-6 col-12\">\r\n\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"col-xl-6 col-12\">\r\n\t\t\t\t\t<div className=\"chart-comment\">\r\n\t\t\t\t\t\t<RateChart statisticalRate={statisticalRate} dataPie={dataPie} isLoading={isLoading} type=\"SELLER\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default StatisticalRate\r\n"]},"metadata":{},"sourceType":"module"}
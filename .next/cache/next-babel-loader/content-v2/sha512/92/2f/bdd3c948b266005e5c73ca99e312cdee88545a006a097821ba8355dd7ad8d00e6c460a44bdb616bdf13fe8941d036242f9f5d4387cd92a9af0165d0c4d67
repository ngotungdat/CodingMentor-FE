{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\context\\\\useDoneTest.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useContext, useState } from 'react';\nconst DoneTestContext = /*#__PURE__*/createContext({\n  doneTestData: null,\n  dataMarking: null,\n  getDoneTestData: () => {},\n  getDataMarking: () => {}\n});\nexport const DoneTestProvider = ({\n  children\n}) => {\n  const {\n    0: doneTestData,\n    1: setDoneTestData\n  } = useState(null);\n  const {\n    0: dataMarking,\n    1: setDataMarking\n  } = useState(null);\n\n  const getDoneTestData = data => {\n    setDoneTestData(data);\n  };\n\n  console.log('Data Marking: ', dataMarking);\n\n  const getDataMarking = data => {\n    setDataMarking(_objectSpread({}, data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DoneTestContext.Provider, {\n      value: {\n        dataMarking: dataMarking,\n        doneTestData: doneTestData,\n        getDoneTestData,\n        getDataMarking\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\nexport const useDoneTest = () => useContext(DoneTestContext);","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/context/useDoneTest.tsx"],"names":["React","createContext","useContext","useState","DoneTestContext","doneTestData","dataMarking","getDoneTestData","getDataMarking","DoneTestProvider","children","setDoneTestData","setDataMarking","data","console","log","useDoneTest"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAAsDC,QAAtD,QAAsE,OAAtE;AAsEA,MAAMC,eAAe,gBAAGH,aAAa,CAAS;AAC7CI,EAAAA,YAAY,EAAE,IAD+B;AAE7CC,EAAAA,WAAW,EAAE,IAFgC;AAG7CC,EAAAA,eAAe,EAAE,MAAM,CAAE,CAHoB;AAI7CC,EAAAA,cAAc,EAAE,MAAM,CAAE;AAJqB,CAAT,CAArC;AAOA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjD,QAAM;AAAA,OAACL,YAAD;AAAA,OAAeM;AAAf,MAAkCR,QAAQ,CAAiB,IAAjB,CAAhD;AACA,QAAM;AAAA,OAACG,WAAD;AAAA,OAAcM;AAAd,MAAgCT,QAAQ,CAAM,IAAN,CAA9C;;AAEA,QAAMI,eAAe,GAAIM,IAAD,IAAU;AACjCF,IAAAA,eAAe,CAACE,IAAD,CAAf;AACA,GAFD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BT,WAA9B;;AAEA,QAAME,cAAc,GAAIK,IAAD,IAAU;AAChCD,IAAAA,cAAc,mBAAMC,IAAN,EAAd;AACA,GAFD;;AAIA,sBACC;AAAA,2BACC,QAAC,eAAD,CAAiB,QAAjB;AACC,MAAA,KAAK,EAAE;AACNP,QAAAA,WAAW,EAAEA,WADP;AAEND,QAAAA,YAAY,EAAEA,YAFR;AAGNE,QAAAA,eAHM;AAINC,QAAAA;AAJM,OADR;AAAA,gBAQEE;AARF;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAcA,CA5BM;AA8BP,OAAO,MAAMM,WAAW,GAAG,MAAMd,UAAU,CAACE,eAAD,CAApC","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\n\r\ntype SetPackageExerciseAnswerStudent = {\r\n\tID: number;\r\n\tExerciseAnswerID: number;\r\n\tExerciseAnswerContent: string;\r\n\tisTrue: boolean;\r\n\tAnswerID: number;\r\n\tAnswerContent: string;\r\n\tisResult: boolean;\r\n\tFileAudio: string;\r\n\tAnswerComment: Array<any>;\r\n};\r\n\r\ntype SetPackageExerciseStudent = {\r\n\tID: number;\r\n\tExerciseID: number;\r\n\tPoint: number;\r\n\tisDone: boolean;\r\n\tContent: string;\r\n\tinputID: number;\r\n\tLinkAudio: string;\r\n\tDescribeAnswer: string;\r\n\tisTrue: boolean;\r\n\tLevel: number;\r\n\tLevelName: string;\r\n\tType: number;\r\n\tTypeName: string;\r\n\tSkillID: number;\r\n\tSkillName: string;\r\n\tSetPackageExerciseAnswerStudent: Array<SetPackageExerciseAnswerStudent>;\r\n};\r\n\r\ntype dataMarking = {\r\n\tSetPackageResultID: number;\r\n\tNote: string;\r\n\tsetPackageExerciseStudentsList: Array<{\r\n\t\tID: number;\r\n\t\tPoint: number;\r\n\t}>;\r\n};\r\n\r\ntype doneTestData = {\r\n\tID: 7;\r\n\tSetPackageResultID: number;\r\n\tExamTopicDetailID: number;\r\n\tExerciseGroupID: number;\r\n\tContent: string;\r\n\tParagraph: string;\r\n\tIntroduce: string;\r\n\tLinkAudio: string;\r\n\tLevel: number;\r\n\tLevelName: string;\r\n\tType: number;\r\n\tTypeName: string;\r\n\tSkillID: number;\r\n\tSkillName: string;\r\n\tExerciseType: number;\r\n\tExerciseTypeName: string;\r\n\tIndex: number;\r\n\tSetPackageExerciseStudent: Array<SetPackageExerciseStudent>;\r\n};\r\n\r\nexport type IProps = {\r\n\tdoneTestData: Array<doneTestData>;\r\n\tgetDoneTestData: Function;\r\n\tdataMarking: any;\r\n\tgetDataMarking: Function;\r\n};\r\n\r\nconst DoneTestContext = createContext<IProps>({\r\n\tdoneTestData: null,\r\n\tdataMarking: null,\r\n\tgetDoneTestData: () => {},\r\n\tgetDataMarking: () => {}\r\n});\r\n\r\nexport const DoneTestProvider = ({ children }) => {\r\n\tconst [doneTestData, setDoneTestData] = useState<doneTestData[]>(null);\r\n\tconst [dataMarking, setDataMarking] = useState<any>(null);\r\n\r\n\tconst getDoneTestData = (data) => {\r\n\t\tsetDoneTestData(data);\r\n\t};\r\n\r\n\tconsole.log('Data Marking: ', dataMarking);\r\n\r\n\tconst getDataMarking = (data) => {\r\n\t\tsetDataMarking({ ...data });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<DoneTestContext.Provider\r\n\t\t\t\tvalue={{\r\n\t\t\t\t\tdataMarking: dataMarking,\r\n\t\t\t\t\tdoneTestData: doneTestData,\r\n\t\t\t\t\tgetDoneTestData,\r\n\t\t\t\t\tgetDataMarking\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</DoneTestContext.Provider>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport const useDoneTest = () => useContext(DoneTestContext);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Dashboard\\\\CourseChart.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { CartesianGrid, ComposedChart, Line, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { Card, Select, Button } from 'antd';\nimport { LineChartOutlined, TableOutlined } from '@ant-design/icons';\nimport PowerTable from '../PowerTable';\n\nconst CourseChart = ({\n  setTodoApi,\n  isLoading,\n  todoApi,\n  statisticalCourse\n}) => {\n  const {\n    0: typeView,\n    1: setTypeView\n  } = useState(5);\n  const {\n    0: preType,\n    1: setPreType\n  } = useState(5);\n  const {\n    Option\n  } = Select;\n  const {\n    0: rowTotal,\n    1: setRowTotal\n  } = useState({\n    Month: 'Total',\n    CompletedClass: 0,\n    OnGoingClass: 0,\n    PlannedClass: 0,\n    RepeatedCustomer: 0,\n    UniqueCustomer: 0\n  });\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState(statisticalCourse);\n\n  const formatYAxis = tickItem => {\n    return new Intl.NumberFormat('de-DE').format(tickItem);\n  };\n\n  const formatTooltip = (value, name, props) => {\n    return new Intl.NumberFormat('de-DE').format(value);\n  };\n\n  const formatLabel = value => {\n    return `Tháng ${value}`;\n  };\n\n  const onChangeSelect = value => {\n    setTypeView(value);\n    setPreType(value);\n  };\n\n  const renderTotal = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 280,\n        children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n          data: statisticalCourse,\n          margin: {\n            top: 10,\n            right: 10,\n            left: -15,\n            bottom: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            tickFormatter: formatYAxis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: formatTooltip,\n            label: \"th\\xE1ng\",\n            labelFormatter: formatLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#f5f5f5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"CompletedClass\",\n            activeDot: {\n              r: 8\n            },\n            stroke: \"#0088FE\",\n            name: \"- L\\u1EDBp h\\u1ECDc k\\u1EBFt th\\xFAc trong th\\xE1ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"OnGoingClass\",\n            activeDot: {\n              r: 8\n            },\n            stroke: \"#003366\",\n            name: \"- L\\u1EDBp h\\u1ECDc di\\u1EC5n ra trong th\\xE1ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"PlannedClass\",\n            activeDot: {\n              r: 8\n            },\n            stroke: \"#00C49F\",\n            name: \"- L\\u1EDBp h\\u1ECDc d\\u1EF1 ki\\u1EBFn m\\u1EDF trong th\\xE1ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"RepeatedCustomer\",\n            activeDot: {\n              r: 8\n            },\n            stroke: \"#FFBB28\",\n            name: \"- Kh\\xE1ch h\\xE0ng s\\u1EED d\\u1EE5ng l\\u1EA1i d\\u1ECBch v\\u1EE5 t\\u1EEB l\\u1EA7n 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"UniqueCustomer\",\n            activeDot: {\n              r: 8\n            },\n            stroke: \"#FF8042\",\n            name: \"- Kh\\xE1ch h\\xE0ng s\\u1EED d\\u1EE5ng d\\u1ECBch v\\u1EE5 l\\u1EA7n \\u0111\\u1EA7u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  };\n\n  const renderDetail = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: typeView == 6 ? renderTable() : /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 280,\n        children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n          data: statisticalCourse,\n          margin: {\n            top: 10,\n            right: 10,\n            left: -15,\n            bottom: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            tickFormatter: formatYAxis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: formatTooltip,\n            label: \"th\\xE1ng\",\n            labelFormatter: formatLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#f5f5f5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 8\n          }, this), typeView == 0 && /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"CompletedClass\",\n            activeDot: {\n              r: 8\n            },\n            stroke: \"#0088FE\",\n            name: \"- L\\u1EDBp h\\u1ECDc k\\u1EBFt th\\xFAc trong th\\xE1ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this), typeView == 1 && /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"OnGoingClass\",\n            activeDot: {\n              r: 8\n            },\n            stroke: \"#003366\",\n            name: \"- L\\u1EDBp h\\u1ECDc di\\u1EC5n ra trong th\\xE1ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }, this), typeView == 2 && /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"PlannedClass\",\n            activeDot: {\n              r: 8\n            },\n            stroke: \"#00C49F\",\n            name: \"- L\\u1EDBp h\\u1ECDc d\\u1EF1 ki\\u1EBFn m\\u1EDF trong th\\xE1ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this), typeView == 3 && /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"RepeatedCustomer\",\n            activeDot: {\n              r: 8\n            },\n            stroke: \"#FFBB28\",\n            name: \"- Kh\\xE1ch h\\xE0ng s\\u1EED d\\u1EE5ng l\\u1EA1i d\\u1ECBch v\\u1EE5 t\\u1EEB l\\u1EA7n 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }, this), typeView == 4 && /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"UniqueCustomer\",\n            activeDot: {\n              r: 8\n            },\n            stroke: \"#FF8042\",\n            name: \"- Kh\\xE1ch h\\xE0ng s\\u1EED d\\u1EE5ng d\\u1ECBch v\\u1EE5 l\\u1EA7n \\u0111\\u1EA7u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }, this)\n    }, void 0, false);\n  };\n\n  const columns = [{\n    title: 'Tháng',\n    dataIndex: 'Month',\n    key: 'Month',\n    width: 100,\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Lớp học kết thúc trong tháng',\n    dataIndex: 'CompletedClass',\n    key: 'CompletedClass',\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 22\n    }, this),\n    width: 210\n  }, {\n    title: 'Lớp học diễn ra trong tháng',\n    dataIndex: 'OnGoingClass',\n    key: 'OnGoingClass',\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 22\n    }, this),\n    width: 210\n  }, {\n    title: 'Lớp học dự kiến mở trong tháng',\n    dataIndex: 'PlannedClass',\n    key: 'PlannedClass',\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 22\n    }, this),\n    width: 250\n  }, {\n    title: 'Khách hàng sử dụng lại dịch vụ từ lần 2',\n    dataIndex: 'RepeatedCustomer',\n    key: 'RepeatedCustomer',\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 22\n    }, this),\n    width: 270\n  }, {\n    title: 'Khách hàng sử dụng dịch vụ lần đầu',\n    dataIndex: 'UniqueCustomer',\n    key: 'UniqueCustomer',\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 22\n    }, this),\n    width: 270\n  }];\n\n  const handleSetRowTotal = () => {\n    setRowTotal({\n      Month: 'Total',\n      CompletedClass: statisticalCourse === null || statisticalCourse === void 0 ? void 0 : statisticalCourse.reduce((a, b) => a + b.CompletedClass, 0),\n      OnGoingClass: statisticalCourse === null || statisticalCourse === void 0 ? void 0 : statisticalCourse.reduce((a, b) => a + b.OnGoingClass, 0),\n      PlannedClass: statisticalCourse === null || statisticalCourse === void 0 ? void 0 : statisticalCourse.reduce((a, b) => a + b.PlannedClass, 0),\n      RepeatedCustomer: statisticalCourse === null || statisticalCourse === void 0 ? void 0 : statisticalCourse.reduce((a, b) => a + b.RepeatedCustomer, 0),\n      UniqueCustomer: statisticalCourse === null || statisticalCourse === void 0 ? void 0 : statisticalCourse.reduce((a, b) => a + b.UniqueCustomer, 0)\n    });\n  };\n\n  const renderTable = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(PowerTable, {\n        columns: columns,\n        dataSource: dataSource,\n        pagination: {\n          current: 1,\n          pageSize: 20\n        },\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  };\n\n  useEffect(() => {\n    handleSetRowTotal();\n  }, [statisticalCourse]);\n  useEffect(() => {\n    setDataSource([...statisticalCourse, rowTotal]);\n  }, [rowTotal]);\n  useEffect(() => {}, [dataSource]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      title: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"BI\\u1EC2U \\u0110\\u1ED2 KH\\xD3A H\\u1ECCC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 12\n      }, this),\n      style: {\n        borderRadius: 20\n      },\n      extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: [typeView != 6 && /*#__PURE__*/_jsxDEV(Select, {\n          style: {\n            width: 280\n          },\n          onChange: onChangeSelect,\n          value: typeView,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: 0,\n            children: \"L\\u1EDBp h\\u1ECDc k\\u1EBFt th\\xFAc trong th\\xE1ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: 1,\n            children: \"L\\u1EDBp h\\u1ECDc di\\u1EC5n ra trong th\\xE1ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: 2,\n            children: \"L\\u1EDBp h\\u1ECDc d\\u1EF1 ki\\u1EBFn m\\u1EDF trong th\\xE1ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: 3,\n            children: \"Kh\\xE1ch h\\xE0ng s\\u1EED d\\u1EE5ng l\\u1EA1i d\\u1ECBch v\\u1EE5 l\\u1EA7n 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: 4,\n            children: \"Kh\\xE1ch h\\xE0ng s\\u1EED d\\u1EE5ng d\\u1ECBch v\\u1EE5 l\\u1EA7n \\u0111\\u1EA7u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: 5,\n            children: \"Xem t\\u1EA5t c\\u1EA3 th\\u1ED1ng k\\xEA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"ml-2\",\n          type: \"primary\",\n          onClick: () => {\n            typeView != 6 ? setTypeView(6) : setTypeView(preType);\n          },\n          children: typeView == 6 ? /*#__PURE__*/_jsxDEV(LineChartOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(TableOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 6\n      }, this),\n      children: typeView == 5 ? renderTotal() : renderDetail()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nexport default CourseChart;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Dashboard/CourseChart.tsx"],"names":["React","useState","useEffect","CartesianGrid","ComposedChart","Line","ResponsiveContainer","Tooltip","XAxis","YAxis","Card","Select","Button","LineChartOutlined","TableOutlined","PowerTable","CourseChart","setTodoApi","isLoading","todoApi","statisticalCourse","typeView","setTypeView","preType","setPreType","Option","rowTotal","setRowTotal","Month","CompletedClass","OnGoingClass","PlannedClass","RepeatedCustomer","UniqueCustomer","dataSource","setDataSource","formatYAxis","tickItem","Intl","NumberFormat","format","formatTooltip","value","name","props","formatLabel","onChangeSelect","renderTotal","top","right","left","bottom","r","renderDetail","renderTable","columns","title","dataIndex","key","width","render","text","handleSetRowTotal","reduce","a","b","current","pageSize","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { CartesianGrid, ComposedChart, Line, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts'\r\nimport { Card, Select, Button } from 'antd'\r\nimport { LineChartOutlined, TableOutlined } from '@ant-design/icons'\r\nimport PowerTable from '../PowerTable'\r\n\r\nconst CourseChart = ({ setTodoApi, isLoading, todoApi, statisticalCourse }) => {\r\n\tconst [typeView, setTypeView] = useState(5)\r\n\tconst [preType, setPreType] = useState(5)\r\n\tconst { Option } = Select\r\n\tconst [rowTotal, setRowTotal] = useState({\r\n\t\tMonth: 'Total',\r\n\t\tCompletedClass: 0,\r\n\t\tOnGoingClass: 0,\r\n\t\tPlannedClass: 0,\r\n\t\tRepeatedCustomer: 0,\r\n\t\tUniqueCustomer: 0\r\n\t})\r\n\tconst [dataSource, setDataSource] = useState(statisticalCourse)\r\n\tconst formatYAxis = (tickItem) => {\r\n\t\treturn new Intl.NumberFormat('de-DE').format(tickItem)\r\n\t}\r\n\r\n\tconst formatTooltip = (value, name, props) => {\r\n\t\treturn new Intl.NumberFormat('de-DE').format(value)\r\n\t}\r\n\r\n\tconst formatLabel = (value) => {\r\n\t\treturn `Tháng ${value}`\r\n\t}\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetTypeView(value)\r\n\t\tsetPreType(value)\r\n\t}\r\n\r\n\tconst renderTotal = () => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<ResponsiveContainer width=\"100%\" height={280}>\r\n\t\t\t\t\t<ComposedChart data={statisticalCourse} margin={{ top: 10, right: 10, left: -15, bottom: 0 }}>\r\n\t\t\t\t\t\t<XAxis dataKey=\"Month\" />\r\n\t\t\t\t\t\t<YAxis tickFormatter={formatYAxis} />\r\n\t\t\t\t\t\t<Tooltip formatter={formatTooltip} label=\"tháng\" labelFormatter={formatLabel} />\r\n\t\t\t\t\t\t<CartesianGrid stroke=\"#f5f5f5\" />\r\n\t\t\t\t\t\t<Line type=\"monotone\" dataKey=\"CompletedClass\" activeDot={{ r: 8 }} stroke=\"#0088FE\" name=\"- Lớp học kết thúc trong tháng\" />\r\n\t\t\t\t\t\t<Line type=\"monotone\" dataKey=\"OnGoingClass\" activeDot={{ r: 8 }} stroke=\"#003366\" name=\"- Lớp học diễn ra trong tháng\" />\r\n\t\t\t\t\t\t<Line type=\"monotone\" dataKey=\"PlannedClass\" activeDot={{ r: 8 }} stroke=\"#00C49F\" name=\"- Lớp học dự kiến mở trong tháng\" />\r\n\t\t\t\t\t\t<Line\r\n\t\t\t\t\t\t\ttype=\"monotone\"\r\n\t\t\t\t\t\t\tdataKey=\"RepeatedCustomer\"\r\n\t\t\t\t\t\t\tactiveDot={{ r: 8 }}\r\n\t\t\t\t\t\t\tstroke=\"#FFBB28\"\r\n\t\t\t\t\t\t\tname=\"- Khách hàng sử dụng lại dịch vụ từ lần 2\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Line\r\n\t\t\t\t\t\t\ttype=\"monotone\"\r\n\t\t\t\t\t\t\tdataKey=\"UniqueCustomer\"\r\n\t\t\t\t\t\t\tactiveDot={{ r: 8 }}\r\n\t\t\t\t\t\t\tstroke=\"#FF8042\"\r\n\t\t\t\t\t\t\tname=\"- Khách hàng sử dụng dịch vụ lần đầu\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ComposedChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tconst renderDetail = () => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{typeView == 6 ? (\r\n\t\t\t\t\trenderTable()\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={280}>\r\n\t\t\t\t\t\t<ComposedChart data={statisticalCourse} margin={{ top: 10, right: 10, left: -15, bottom: 0 }}>\r\n\t\t\t\t\t\t\t<XAxis dataKey=\"Month\" />\r\n\t\t\t\t\t\t\t<YAxis tickFormatter={formatYAxis} />\r\n\t\t\t\t\t\t\t<Tooltip formatter={formatTooltip} label=\"tháng\" labelFormatter={formatLabel} />\r\n\t\t\t\t\t\t\t<CartesianGrid stroke=\"#f5f5f5\" />\r\n\t\t\t\t\t\t\t{typeView == 0 && (\r\n\t\t\t\t\t\t\t\t<Line\r\n\t\t\t\t\t\t\t\t\ttype=\"monotone\"\r\n\t\t\t\t\t\t\t\t\tdataKey=\"CompletedClass\"\r\n\t\t\t\t\t\t\t\t\tactiveDot={{ r: 8 }}\r\n\t\t\t\t\t\t\t\t\tstroke=\"#0088FE\"\r\n\t\t\t\t\t\t\t\t\tname=\"- Lớp học kết thúc trong tháng\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{typeView == 1 && (\r\n\t\t\t\t\t\t\t\t<Line type=\"monotone\" dataKey=\"OnGoingClass\" activeDot={{ r: 8 }} stroke=\"#003366\" name=\"- Lớp học diễn ra trong tháng\" />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{typeView == 2 && (\r\n\t\t\t\t\t\t\t\t<Line\r\n\t\t\t\t\t\t\t\t\ttype=\"monotone\"\r\n\t\t\t\t\t\t\t\t\tdataKey=\"PlannedClass\"\r\n\t\t\t\t\t\t\t\t\tactiveDot={{ r: 8 }}\r\n\t\t\t\t\t\t\t\t\tstroke=\"#00C49F\"\r\n\t\t\t\t\t\t\t\t\tname=\"- Lớp học dự kiến mở trong tháng\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{typeView == 3 && (\r\n\t\t\t\t\t\t\t\t<Line\r\n\t\t\t\t\t\t\t\t\ttype=\"monotone\"\r\n\t\t\t\t\t\t\t\t\tdataKey=\"RepeatedCustomer\"\r\n\t\t\t\t\t\t\t\t\tactiveDot={{ r: 8 }}\r\n\t\t\t\t\t\t\t\t\tstroke=\"#FFBB28\"\r\n\t\t\t\t\t\t\t\t\tname=\"- Khách hàng sử dụng lại dịch vụ từ lần 2\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{typeView == 4 && (\r\n\t\t\t\t\t\t\t\t<Line\r\n\t\t\t\t\t\t\t\t\ttype=\"monotone\"\r\n\t\t\t\t\t\t\t\t\tdataKey=\"UniqueCustomer\"\r\n\t\t\t\t\t\t\t\t\tactiveDot={{ r: 8 }}\r\n\t\t\t\t\t\t\t\t\tstroke=\"#FF8042\"\r\n\t\t\t\t\t\t\t\t\tname=\"- Khách hàng sử dụng dịch vụ lần đầu\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ComposedChart>\r\n\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Tháng',\r\n\t\t\tdataIndex: 'Month',\r\n\t\t\tkey: 'Month',\r\n\t\t\twidth: 100,\r\n\t\t\trender: (text) => <a>{text}</a>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Lớp học kết thúc trong tháng',\r\n\t\t\tdataIndex: 'CompletedClass',\r\n\t\t\tkey: 'CompletedClass',\r\n\t\t\trender: (text) => <a>{text}</a>,\r\n\t\t\twidth: 210\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Lớp học diễn ra trong tháng',\r\n\t\t\tdataIndex: 'OnGoingClass',\r\n\t\t\tkey: 'OnGoingClass',\r\n\t\t\trender: (text) => <a>{text}</a>,\r\n\t\t\twidth: 210\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Lớp học dự kiến mở trong tháng',\r\n\t\t\tdataIndex: 'PlannedClass',\r\n\t\t\tkey: 'PlannedClass',\r\n\t\t\trender: (text) => <a>{text}</a>,\r\n\t\t\twidth: 250\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Khách hàng sử dụng lại dịch vụ từ lần 2',\r\n\t\t\tdataIndex: 'RepeatedCustomer',\r\n\t\t\tkey: 'RepeatedCustomer',\r\n\t\t\trender: (text) => <a>{text}</a>,\r\n\t\t\twidth: 270\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Khách hàng sử dụng dịch vụ lần đầu',\r\n\t\t\tdataIndex: 'UniqueCustomer',\r\n\t\t\tkey: 'UniqueCustomer',\r\n\t\t\trender: (text) => <a>{text}</a>,\r\n\t\t\twidth: 270\r\n\t\t}\r\n\t]\r\n\r\n\tconst handleSetRowTotal = () => {\r\n\t\tsetRowTotal({\r\n\t\t\tMonth: 'Total',\r\n\t\t\tCompletedClass: statisticalCourse?.reduce((a, b) => a + b.CompletedClass, 0),\r\n\t\t\tOnGoingClass: statisticalCourse?.reduce((a, b) => a + b.OnGoingClass, 0),\r\n\t\t\tPlannedClass: statisticalCourse?.reduce((a, b) => a + b.PlannedClass, 0),\r\n\t\t\tRepeatedCustomer: statisticalCourse?.reduce((a, b) => a + b.RepeatedCustomer, 0),\r\n\t\t\tUniqueCustomer: statisticalCourse?.reduce((a, b) => a + b.UniqueCustomer, 0)\r\n\t\t})\r\n\t}\r\n\tconst renderTable = () => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<PowerTable columns={columns} dataSource={dataSource} pagination={{ current: 1, pageSize: 20 }} size=\"small\" />\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\thandleSetRowTotal()\r\n\t}, [statisticalCourse])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetDataSource([...statisticalCourse, rowTotal])\r\n\t}, [rowTotal])\r\n\r\n\tuseEffect(() => {}, [dataSource])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Card\r\n\t\t\t\ttitle={<h4>BIỂU ĐỒ KHÓA HỌC</h4>}\r\n\t\t\t\tstyle={{ borderRadius: 20 }}\r\n\t\t\t\textra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t{typeView != 6 && (\r\n\t\t\t\t\t\t\t<Select style={{ width: 280 }} onChange={onChangeSelect} value={typeView}>\r\n\t\t\t\t\t\t\t\t<Option value={0}>Lớp học kết thúc trong tháng</Option>\r\n\t\t\t\t\t\t\t\t<Option value={1}>Lớp học diễn ra trong tháng</Option>\r\n\t\t\t\t\t\t\t\t<Option value={2}>Lớp học dự kiến mở trong tháng</Option>\r\n\t\t\t\t\t\t\t\t<Option value={3}>Khách hàng sử dụng lại dịch vụ lần 2</Option>\r\n\t\t\t\t\t\t\t\t<Option value={4}>Khách hàng sử dụng dịch vụ lần đầu</Option>\r\n\t\t\t\t\t\t\t\t<Option value={5}>Xem tất cả thống kê</Option>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"ml-2\"\r\n\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\ttypeView != 6 ? setTypeView(6) : setTypeView(preType)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{typeView == 6 ? <LineChartOutlined /> : <TableOutlined />}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t{typeView == 5 ? renderTotal() : renderDetail()}\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default CourseChart\r\n"]},"metadata":{},"sourceType":"module"}
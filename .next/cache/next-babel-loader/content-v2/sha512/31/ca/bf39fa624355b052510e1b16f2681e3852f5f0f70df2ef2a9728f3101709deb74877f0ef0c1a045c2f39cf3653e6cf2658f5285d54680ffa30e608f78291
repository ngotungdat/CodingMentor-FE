{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\StaffList\\\\ManageTask\\\\StaffOfTaskGroup\\\\StaffOfTaskGroupForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Form, Modal, Spin, Table, Tooltip } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { UserPlus } from \"react-feather\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport DeleteTableRow from \"~/components/Elements/DeleteTableRow/DeleteTableRow\";\nimport CheckboxField from \"~/components/FormControl/CheckboxField\";\nimport SelectField from \"~/components/FormControl/SelectField\";\nimport { optionCommonPropTypes } from \"~/utils/proptypes\";\nStaffOfTaskGroupForm.propTypes = {\n  isLoading: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    status: PropTypes.bool.isRequired\n  }),\n  handleFetchStaffListByRole: PropTypes.func,\n  handleFetchStaffOfTaskGroup: PropTypes.func,\n  handleFetchTask: PropTypes.func,\n  handleSubmit: PropTypes.func,\n  handleDeleteStaffOfTaskGroup: PropTypes.func,\n  optionRoleList: optionCommonPropTypes,\n  optionStaffList: optionCommonPropTypes,\n  optionTaskList: optionCommonPropTypes,\n  staffOfTaskGroup: PropTypes.arrayOf(PropTypes.shape({\n    ID: PropTypes.number,\n    TaskGroupID: PropTypes.number,\n    TaskGroupName: PropTypes.string,\n    StaffID: PropTypes.number,\n    StaffName: PropTypes.string,\n    RoleID: PropTypes.number,\n    RoleName: PropTypes.string\n  }))\n};\nStaffOfTaskGroupForm.defaultProps = {\n  isLoading: {\n    type: \"\",\n    status: false\n  },\n  handleFetchStaffListByRole: null,\n  handleFetchStaffOfTaskGroup: null,\n  handleFetchTask: null,\n  handleSubmit: null,\n  handleDeleteStaffOfTaskGroup: null,\n  optionRoleList: [],\n  optionStaffList: [],\n  optionTaskList: [],\n  staffOfTaskGroup: []\n};\n\nfunction StaffOfTaskGroupForm(props) {\n  const {\n    isLoading,\n    handleFetchStaffListByRole,\n    handleFetchStaffOfTaskGroup,\n    handleFetchTask,\n    handleSubmit,\n    handleDeleteStaffOfTaskGroup,\n    optionRoleList,\n    optionStaffList,\n    optionTaskList,\n    staffOfTaskGroup\n  } = props;\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: showMoreField,\n    1: setShowMoreField\n  } = useState(false);\n\n  const openModal = () => setIsModalVisible(true);\n\n  const closeModal = () => setIsModalVisible(false);\n\n  const schema = yup.object().shape({\n    RoleID: yup.number().nullable().required(\"Bạn không được để trống\"),\n    StaffID: yup.number().nullable().required(\"Bạn không được để trống\"),\n    isAddTask: yup.bool(),\n    TaskID: yup.number().notRequired().when(\"isAddTask\", (isAddTask, schema) => {\n      if (isAddTask) {\n        return yup.number().nullable().required(`Bạn không được để trống`);\n      }\n\n      return yup.number().nullable().notRequired();\n    })\n  });\n  const defaultValuesInit = {\n    RoleID: null,\n    StaffID: null,\n    isAddTask: false,\n    TaskID: null\n  };\n  const form = useForm({\n    defaultValues: defaultValuesInit,\n    resolver: yupResolver(schema)\n  });\n\n  const checkHandleFetchStaffListByRole = id => {\n    if (!handleFetchStaffListByRole) return;\n    form.setValue(\"StaffID\", null);\n    handleFetchStaffListByRole(id);\n  };\n\n  const checkHandleFetchStaffOfTaskGroup = () => {\n    if (!handleFetchStaffOfTaskGroup) return;\n    handleFetchStaffOfTaskGroup();\n  };\n\n  const checkHandleFetchTask = () => {\n    if (!handleFetchTask) return;\n    handleFetchTask();\n  };\n\n  const checkHandleSubmit = data => {\n    if (!handleSubmit) return;\n    handleSubmit(data).then(res => {\n      if (res) {\n        form.reset(_objectSpread({}, defaultValuesInit));\n        setShowMoreField(false);\n      }\n    });\n  };\n\n  const checkHandleDeleteStaffOfTaskGroup = idx => {\n    if (!handleDeleteStaffOfTaskGroup) return;\n    return handleDeleteStaffOfTaskGroup(idx);\n  };\n\n  useEffect(() => {\n    form.clearErrors();\n    isModalVisible && checkHandleFetchStaffOfTaskGroup();\n  }, [isModalVisible]);\n  const columns = [{\n    title: \"Tên nhân viên\",\n    dataIndex: \"StaffName\"\n  }, {\n    title: \"Chức vụ\",\n    dataIndex: \"RoleName\"\n  }, {\n    align: \"center\",\n    render: (value, _, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => e.stopPropagation(),\n      children: /*#__PURE__*/_jsxDEV(DeleteTableRow, {\n        handleDelete: checkHandleDeleteStaffOfTaskGroup(idx)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-icon add\",\n      onClick: openModal,\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Th\\xEAm nh\\xE2n vi\\xEAn\",\n        children: /*#__PURE__*/_jsxDEV(UserPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: `Thêm nhân viên`,\n      visible: isModalVisible,\n      onCancel: closeModal,\n      footer: null,\n      className: \"staff-task-group-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          layout: \"vertical\",\n          onFinish: form.handleSubmit(checkHandleSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6\",\n              children: /*#__PURE__*/_jsxDEV(SelectField, {\n                style: {\n                  marginBottom: \"12px\"\n                },\n                form: form,\n                name: \"RoleID\",\n                optionList: optionRoleList,\n                label: \"Ch\\u1EE9c v\\u1EE5\",\n                placeholder: \"Ch\\u1ECDn ch\\u1EE9c v\\u1EE5\",\n                onChangeSelect: checkHandleFetchStaffListByRole\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6\",\n              children: /*#__PURE__*/_jsxDEV(SelectField, {\n                style: {\n                  marginBottom: \"12px\"\n                },\n                form: form,\n                name: \"StaffID\",\n                optionList: optionStaffList,\n                label: \"Nh\\xE2n vi\\xEAn\",\n                placeholder: \"Ch\\u1ECDn nh\\xE2n vi\\xEAn\",\n                isLoading: isLoading.type === \"FETCH_STAFF\" && isLoading.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), showMoreField && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(SelectField, {\n                style: {\n                  marginBottom: \"12px\"\n                },\n                form: form,\n                name: \"TaskID\",\n                optionList: optionTaskList,\n                label: \"Task\",\n                placeholder: \"Ch\\u1ECDn task\",\n                isLoading: isLoading.type === \"FETCH_TASK\" && isLoading.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(CheckboxField, {\n                form: form,\n                name: \"isAddTask\",\n                text: \"Th\\xEAm task\",\n                handleChangeCheckbox: vl => {\n                  if (vl) {\n                    checkHandleFetchTask();\n                  }\n\n                  setShowMoreField(vl);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                label: \"Danh s\\xE1ch nh\\xE2n vi\\xEAn\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"wrap-table\",\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    loading: isLoading.type === \"GET_ALL\" && isLoading.status,\n                    dataSource: staffOfTaskGroup,\n                    columns: columns,\n                    size: \"middle\",\n                    pagination: {\n                      pageSize: 5\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary w-100\",\n                disabled: isLoading.type == \"ADD_DATA\" && isLoading.status,\n                children: [\"Add\", isLoading.type == \"ADD_DATA\" && isLoading.status && /*#__PURE__*/_jsxDEV(Spin, {\n                  className: \"loading-base\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, \"1\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default StaffOfTaskGroupForm;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/StaffList/ManageTask/StaffOfTaskGroup/StaffOfTaskGroupForm.tsx"],"names":["yupResolver","Form","Modal","Spin","Table","Tooltip","PropTypes","React","useEffect","useState","UserPlus","useForm","yup","DeleteTableRow","CheckboxField","SelectField","optionCommonPropTypes","StaffOfTaskGroupForm","propTypes","isLoading","shape","type","string","isRequired","status","bool","handleFetchStaffListByRole","func","handleFetchStaffOfTaskGroup","handleFetchTask","handleSubmit","handleDeleteStaffOfTaskGroup","optionRoleList","optionStaffList","optionTaskList","staffOfTaskGroup","arrayOf","ID","number","TaskGroupID","TaskGroupName","StaffID","StaffName","RoleID","RoleName","defaultProps","props","isModalVisible","setIsModalVisible","showMoreField","setShowMoreField","openModal","closeModal","schema","object","nullable","required","isAddTask","TaskID","notRequired","when","defaultValuesInit","form","defaultValues","resolver","checkHandleFetchStaffListByRole","id","setValue","checkHandleFetchStaffOfTaskGroup","checkHandleFetchTask","checkHandleSubmit","data","then","res","reset","checkHandleDeleteStaffOfTaskGroup","idx","clearErrors","columns","title","dataIndex","align","render","value","_","e","stopPropagation","marginBottom","vl","pageSize"],"mappings":"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","sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Form, Modal, Spin, Table, Tooltip } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { UserPlus } from \"react-feather\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport DeleteTableRow from \"~/components/Elements/DeleteTableRow/DeleteTableRow\";\r\nimport CheckboxField from \"~/components/FormControl/CheckboxField\";\r\nimport SelectField from \"~/components/FormControl/SelectField\";\r\nimport { optionCommonPropTypes } from \"~/utils/proptypes\";\r\n\r\nStaffOfTaskGroupForm.propTypes = {\r\n  isLoading: PropTypes.shape({\r\n    type: PropTypes.string.isRequired,\r\n    status: PropTypes.bool.isRequired,\r\n  }),\r\n  handleFetchStaffListByRole: PropTypes.func,\r\n  handleFetchStaffOfTaskGroup: PropTypes.func,\r\n  handleFetchTask: PropTypes.func,\r\n  handleSubmit: PropTypes.func,\r\n  handleDeleteStaffOfTaskGroup: PropTypes.func,\r\n  optionRoleList: optionCommonPropTypes,\r\n  optionStaffList: optionCommonPropTypes,\r\n  optionTaskList: optionCommonPropTypes,\r\n  staffOfTaskGroup: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      ID: PropTypes.number,\r\n      TaskGroupID: PropTypes.number,\r\n      TaskGroupName: PropTypes.string,\r\n      StaffID: PropTypes.number,\r\n      StaffName: PropTypes.string,\r\n      RoleID: PropTypes.number,\r\n      RoleName: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nStaffOfTaskGroupForm.defaultProps = {\r\n  isLoading: { type: \"\", status: false },\r\n  handleFetchStaffListByRole: null,\r\n  handleFetchStaffOfTaskGroup: null,\r\n  handleFetchTask: null,\r\n  handleSubmit: null,\r\n  handleDeleteStaffOfTaskGroup: null,\r\n  optionRoleList: [],\r\n  optionStaffList: [],\r\n  optionTaskList: [],\r\n  staffOfTaskGroup: [],\r\n};\r\nfunction StaffOfTaskGroupForm(props) {\r\n  const {\r\n    isLoading,\r\n    handleFetchStaffListByRole,\r\n    handleFetchStaffOfTaskGroup,\r\n    handleFetchTask,\r\n    handleSubmit,\r\n    handleDeleteStaffOfTaskGroup,\r\n    optionRoleList,\r\n    optionStaffList,\r\n    optionTaskList,\r\n    staffOfTaskGroup,\r\n  } = props;\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [showMoreField, setShowMoreField] = useState(false);\r\n  const openModal = () => setIsModalVisible(true);\r\n  const closeModal = () => setIsModalVisible(false);\r\n\r\n  const schema = yup.object().shape({\r\n    RoleID: yup.number().nullable().required(\"Bạn không được để trống\"),\r\n    StaffID: yup.number().nullable().required(\"Bạn không được để trống\"),\r\n    isAddTask: yup.bool(),\r\n    TaskID: yup\r\n      .number()\r\n      .notRequired()\r\n      .when(\"isAddTask\", (isAddTask, schema) => {\r\n        if (isAddTask) {\r\n          return yup.number().nullable().required(`Bạn không được để trống`);\r\n        }\r\n        return yup.number().nullable().notRequired();\r\n      }),\r\n  });\r\n\r\n  const defaultValuesInit = {\r\n    RoleID: null,\r\n    StaffID: null,\r\n    isAddTask: false,\r\n    TaskID: null,\r\n  };\r\n\r\n  const form = useForm({\r\n    defaultValues: defaultValuesInit,\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const checkHandleFetchStaffListByRole = (id: number) => {\r\n    if (!handleFetchStaffListByRole) return;\r\n    form.setValue(\"StaffID\", null);\r\n    handleFetchStaffListByRole(id);\r\n  };\r\n  const checkHandleFetchStaffOfTaskGroup = () => {\r\n    if (!handleFetchStaffOfTaskGroup) return;\r\n    handleFetchStaffOfTaskGroup();\r\n  };\r\n  const checkHandleFetchTask = () => {\r\n    if (!handleFetchTask) return;\r\n    handleFetchTask();\r\n  };\r\n\r\n  const checkHandleSubmit = (data) => {\r\n    if (!handleSubmit) return;\r\n    handleSubmit(data).then((res) => {\r\n      if (res) {\r\n        form.reset({ ...defaultValuesInit });\r\n        setShowMoreField(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const checkHandleDeleteStaffOfTaskGroup = (idx: number) => {\r\n    if (!handleDeleteStaffOfTaskGroup) return;\r\n    return handleDeleteStaffOfTaskGroup(idx);\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.clearErrors();\r\n    isModalVisible && checkHandleFetchStaffOfTaskGroup();\r\n  }, [isModalVisible]);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Tên nhân viên\",\r\n      dataIndex: \"StaffName\",\r\n    },\r\n    {\r\n      title: \"Chức vụ\",\r\n      dataIndex: \"RoleName\",\r\n    },\r\n    {\r\n      align: \"center\" as \"center\",\r\n      render: (value: IStaffOfTaskGroup, _, idx) => (\r\n        <div onClick={(e) => e.stopPropagation()}>\r\n          <DeleteTableRow\r\n            handleDelete={checkHandleDeleteStaffOfTaskGroup(idx)}\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <button className=\"btn btn-icon add\" onClick={openModal}>\r\n        <Tooltip title=\"Thêm nhân viên\">\r\n          <UserPlus />\r\n        </Tooltip>\r\n      </button>\r\n      <Modal\r\n        title={`Thêm nhân viên`}\r\n        visible={isModalVisible}\r\n        onCancel={closeModal}\r\n        footer={null}\r\n        className=\"staff-task-group-modal\"\r\n      >\r\n        <div>\r\n          <Form\r\n            key=\"1\"\r\n            layout=\"vertical\"\r\n            onFinish={form.handleSubmit(checkHandleSubmit)}\r\n          >\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <SelectField\r\n                  style={{ marginBottom: \"12px\" }}\r\n                  form={form}\r\n                  name=\"RoleID\"\r\n                  optionList={optionRoleList}\r\n                  label=\"Chức vụ\"\r\n                  placeholder=\"Chọn chức vụ\"\r\n                  onChangeSelect={checkHandleFetchStaffListByRole}\r\n                />\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <SelectField\r\n                  style={{ marginBottom: \"12px\" }}\r\n                  form={form}\r\n                  name=\"StaffID\"\r\n                  optionList={optionStaffList}\r\n                  label=\"Nhân viên\"\r\n                  placeholder=\"Chọn nhân viên\"\r\n                  isLoading={\r\n                    isLoading.type === \"FETCH_STAFF\" && isLoading.status\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            {showMoreField && (\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <SelectField\r\n                    style={{ marginBottom: \"12px\" }}\r\n                    form={form}\r\n                    name=\"TaskID\"\r\n                    optionList={optionTaskList}\r\n                    label=\"Task\"\r\n                    placeholder=\"Chọn task\"\r\n                    isLoading={\r\n                      isLoading.type === \"FETCH_TASK\" && isLoading.status\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <CheckboxField\r\n                  form={form}\r\n                  name=\"isAddTask\"\r\n                  text=\"Thêm task\"\r\n                  handleChangeCheckbox={(vl) => {\r\n                    if (vl) {\r\n                      checkHandleFetchTask();\r\n                    }\r\n                    setShowMoreField(vl);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <Form.Item label=\"Danh sách nhân viên\">\r\n                  <div className=\"wrap-table\">\r\n                    <Table\r\n                      loading={isLoading.type === \"GET_ALL\" && isLoading.status}\r\n                      dataSource={staffOfTaskGroup}\r\n                      columns={columns}\r\n                      size=\"middle\"\r\n                      pagination={{ pageSize: 5 }}\r\n                    />\r\n                  </div>\r\n                </Form.Item>\r\n              </div>\r\n            </div>\r\n            <div className=\"row \">\r\n              <div className=\"col-12\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary w-100\"\r\n                  disabled={isLoading.type == \"ADD_DATA\" && isLoading.status}\r\n                >\r\n                  Add\r\n                  {isLoading.type == \"ADD_DATA\" && isLoading.status && (\r\n                    <Spin className=\"loading-base\" />\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StaffOfTaskGroupForm;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Customer\\\\Service\\\\TestAddExam.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Modal, Select, Tooltip } from 'antd';\nimport { DiffOutlined } from '@ant-design/icons';\nimport { testCustomerApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nconst {\n  Option\n} = Select;\n\nconst TestAddExam = props => {\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    dataExam,\n    dataRow,\n    onFetchData\n  } = props;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    0: valueExam,\n    1: setValueExam\n  } = useState(null);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = async () => {\n    const data = {\n      ID: dataRow.ID,\n      ExamTopicID: valueExam,\n      Enable: true\n    };\n    setLoading(true);\n\n    try {\n      let res = await testCustomerApi.update(data);\n\n      if (res.status === 200) {\n        setIsModalVisible(false);\n        onFetchData && onFetchData();\n        showNoti('success', 'Gán đề thành công');\n      } else {\n        showNoti('danger', 'Mạng đang kết nối không ổn định');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  function handleChange_exam(value) {\n    setValueExam(value);\n  }\n\n  useEffect(() => {\n    if (isModalVisible) {\n      setValueExam(dataRow.ExamTopicnName);\n    }\n  }, [isModalVisible]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Th\\xEAm \\u0111\\u1EC1 h\\u1EB9n test\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-icon view ml-2\",\n        onClick: showModal,\n        children: /*#__PURE__*/_jsxDEV(DiffOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"G\\xE1n \\u0111\\u1EC1 h\\u1EB9n test\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      confirmLoading: loading,\n      okText: \"Th\\xEAm\",\n      onCancel: handleCancel,\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Ch\\u1ECDn \\u0111\\u1EC1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: valueExam,\n        className: \"style-input\",\n        onChange: handleChange_exam,\n        children: dataExam === null || dataExam === void 0 ? void 0 : dataExam.map((item, index) => /*#__PURE__*/_jsxDEV(Option, {\n          value: item.ID,\n          children: item.Name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport default TestAddExam;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Customer/Service/TestAddExam.tsx"],"names":["React","useEffect","useState","Modal","Select","Tooltip","DiffOutlined","testCustomerApi","useWrap","Option","TestAddExam","props","isModalVisible","setIsModalVisible","dataExam","dataRow","onFetchData","loading","setLoading","showNoti","valueExam","setValueExam","showModal","handleOk","data","ID","ExamTopicID","Enable","res","update","status","error","message","handleCancel","handleChange_exam","value","ExamTopicnName","map","item","index","Name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Modal, Select, Tooltip } from 'antd';\r\nimport { DiffOutlined } from '@ant-design/icons';\r\nimport { testCustomerApi } from '~/apiBase';\r\nimport { useWrap } from '~/context/wrap';\r\n\r\nconst { Option } = Select;\r\n\r\nconst TestAddExam = (props) => {\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst { dataExam, dataRow, onFetchData } = props;\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst { showNoti } = useWrap();\r\n\tconst [valueExam, setValueExam] = useState(null);\r\n\r\n\tconst showModal = () => {\r\n\t\tsetIsModalVisible(true);\r\n\t};\r\n\r\n\tconst handleOk = async () => {\r\n\t\tconst data = {\r\n\t\t\tID: dataRow.ID,\r\n\t\t\tExamTopicID: valueExam,\r\n\t\t\tEnable: true\r\n\t\t};\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tlet res = await testCustomerApi.update(data);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetIsModalVisible(false);\r\n\t\t\t\tonFetchData && onFetchData();\r\n\t\t\t\tshowNoti('success', 'Gán đề thành công');\r\n\t\t\t} else {\r\n\t\t\t\tshowNoti('danger', 'Mạng đang kết nối không ổn định');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false);\r\n\t};\r\n\r\n\tfunction handleChange_exam(value) {\r\n\t\tsetValueExam(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isModalVisible) {\r\n\t\t\tsetValueExam(dataRow.ExamTopicnName);\r\n\t\t}\r\n\t}, [isModalVisible]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tooltip title=\"Thêm đề hẹn test\">\r\n\t\t\t\t<button className=\"btn btn-icon view ml-2\" onClick={showModal}>\r\n\t\t\t\t\t<DiffOutlined />\r\n\t\t\t\t</button>\r\n\t\t\t</Tooltip>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Gán đề hẹn test\"\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tconfirmLoading={loading}\r\n\t\t\t\tokText=\"Thêm\"\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t>\r\n\t\t\t\t<h6>Chọn đề</h6>\r\n\t\t\t\t<Select value={valueExam} className=\"style-input\" onChange={handleChange_exam}>\r\n\t\t\t\t\t{dataExam?.map((item, index) => (\r\n\t\t\t\t\t\t<Option value={item.ID} key={index}>\r\n\t\t\t\t\t\t\t{item.Name}\r\n\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TestAddExam;\r\n"]},"metadata":{},"sourceType":"module"}
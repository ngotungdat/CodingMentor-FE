{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\Global\\\\ManageZoom\\\\ZoomRoom\\\\ZoomRecordModal.tsx\";\nimport { List, Modal } from 'antd';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { zoomRoomApi } from '~/apiBase';\n\nconst ZoomRecordModal = props => {\n  const {\n    scheduleID,\n    isOpenModal,\n    onCloseModal\n  } = props;\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: recordList,\n    1: setRecordList\n  } = useState([]);\n\n  const getRecordList = async () => {\n    if (!scheduleID) return;\n\n    try {\n      setIsLoading(true);\n      const res = await zoomRoomApi.getRecord(scheduleID);\n\n      if (res.status === 200 && Array.isArray(res.data.data) && res.data.data.length) {\n        setRecordList(res.data.data);\n      } else {\n        setRecordList([]);\n      }\n    } catch (error) {\n      if (error.status === 400) {\n        setRecordList([]);\n      }\n\n      console.log('getRecordList', error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isOpenModal) {\n      getRecordList();\n    }\n  }, [isOpenModal]);\n\n  const checkTitle = title => {\n    if (title === 'shared_screen') return 'Bản ghi chia sẻ màn hình';\n    if (title === 'shared_screen_with_speaker_view') return 'Bản ghi chia sẻ màn hình có tiếng';\n    if (title === 'active_speaker') return 'Bản ghi âm thanh có hình';\n    if (title === 'audio_only') return 'Bản ghi âm thanh';\n    if (title === 'chat_file') return 'Bảng trò chuyện';\n    return 'Bản ghi khác';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Danh s\\xE1ch b\\u1EA3n ghi bu\\u1ED5i h\\u1ECDc\",\n      visible: isOpenModal,\n      footer: null,\n      onCancel: onCloseModal,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        pagination: {\n          pageSize: 5\n        },\n        loading: isLoading,\n        itemLayout: \"horizontal\",\n        dataSource: recordList,\n        renderItem: (item, idx) => /*#__PURE__*/_jsxDEV(List.Item, {\n          actions: [/*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            href: `${item.play_url}`,\n            children: \"Xem tr\\u1EF1c tuy\\u1EBFn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `${item.download_url}`,\n            download: true,\n            children: \"T\\u1EA3i b\\u1EA3n ghi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this)],\n          children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n            title: checkTitle(item.recording_type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nZoomRecordModal.propTypes = {\n  scheduleID: PropTypes.number.isRequired,\n  isOpenModal: PropTypes.bool.isRequired,\n  onCloseModal: PropTypes.func.isRequired\n};\nZoomRecordModal.defaultProps = {};\nexport default ZoomRecordModal;","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/Global/ManageZoom/ZoomRoom/ZoomRecordModal.tsx"],"names":["List","Modal","PropTypes","React","useEffect","useState","zoomRoomApi","ZoomRecordModal","props","scheduleID","isOpenModal","onCloseModal","isLoading","setIsLoading","recordList","setRecordList","getRecordList","res","getRecord","status","Array","isArray","data","length","error","console","log","message","checkTitle","title","pageSize","item","idx","play_url","download_url","recording_type","propTypes","number","isRequired","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import { List, Modal } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { zoomRoomApi } from '~/apiBase'\r\n\r\nconst ZoomRecordModal = (props) => {\r\n\tconst { scheduleID, isOpenModal, onCloseModal } = props\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\tconst [recordList, setRecordList] = useState<IZoomRecord[]>([])\r\n\r\n\tconst getRecordList = async () => {\r\n\t\tif (!scheduleID) return\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true)\r\n\t\t\tconst res = await zoomRoomApi.getRecord(scheduleID)\r\n\t\t\tif (res.status === 200 && Array.isArray(res.data.data) && res.data.data.length) {\r\n\t\t\t\tsetRecordList(res.data.data)\r\n\t\t\t} else {\r\n\t\t\t\tsetRecordList([])\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tif (error.status === 400) {\r\n\t\t\t\tsetRecordList([])\r\n\t\t\t}\r\n\t\t\tconsole.log('getRecordList', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isOpenModal) {\r\n\t\t\tgetRecordList()\r\n\t\t}\r\n\t}, [isOpenModal])\r\n\r\n\tconst checkTitle = (title: string) => {\r\n\t\tif (title === 'shared_screen') return 'Bản ghi chia sẻ màn hình'\r\n\t\tif (title === 'shared_screen_with_speaker_view') return 'Bản ghi chia sẻ màn hình có tiếng'\r\n\t\tif (title === 'active_speaker') return 'Bản ghi âm thanh có hình'\r\n\t\tif (title === 'audio_only') return 'Bản ghi âm thanh'\r\n\t\tif (title === 'chat_file') return 'Bảng trò chuyện'\r\n\t\treturn 'Bản ghi khác'\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal title=\"Danh sách bản ghi buổi học\" visible={isOpenModal} footer={null} onCancel={onCloseModal}>\r\n\t\t\t\t<List\r\n\t\t\t\t\tpagination={{\r\n\t\t\t\t\t\tpageSize: 5\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tloading={isLoading}\r\n\t\t\t\t\titemLayout=\"horizontal\"\r\n\t\t\t\t\tdataSource={recordList}\r\n\t\t\t\t\trenderItem={(item: IZoomRecord, idx) => (\r\n\t\t\t\t\t\t<List.Item\r\n\t\t\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t\t\t<a target=\"_blank\" href={`${item.play_url}`}>\r\n\t\t\t\t\t\t\t\t\tXem trực tuyến\r\n\t\t\t\t\t\t\t\t</a>,\r\n\t\t\t\t\t\t\t\t<a href={`${item.download_url}`} download>\r\n\t\t\t\t\t\t\t\t\tTải bản ghi\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<List.Item.Meta title={checkTitle(item.recording_type)} />\r\n\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\nZoomRecordModal.propTypes = {\r\n\tscheduleID: PropTypes.number.isRequired,\r\n\tisOpenModal: PropTypes.bool.isRequired,\r\n\tonCloseModal: PropTypes.func.isRequired\r\n}\r\nZoomRecordModal.defaultProps = {}\r\nexport default ZoomRecordModal\r\n"]},"metadata":{},"sourceType":"module"}
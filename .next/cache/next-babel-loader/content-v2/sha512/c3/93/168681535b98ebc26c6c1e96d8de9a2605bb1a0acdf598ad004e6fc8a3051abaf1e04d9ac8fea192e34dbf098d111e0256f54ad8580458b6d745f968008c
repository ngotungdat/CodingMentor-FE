{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Profile\\\\ProfileCustomer\\\\InfoCourseCard\\\\RollUpTable.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { rollUpApi } from '~/apiBase';\nimport ExpandTable from '~/components/ExpandTable';\nimport { useWrap } from '~/context/wrap';\nRollUpTable.propTypes = {\n  courseID: PropTypes.number,\n  studentID: PropTypes.number\n};\nRollUpTable.defaultProps = {\n  courseID: 0,\n  studentID: 0\n};\n\nfunction RollUpTable(props) {\n  const {\n    courseID,\n    studentID\n  } = props;\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: 'GET_ALL',\n    status: false\n  });\n  const {\n    0: rollUpList,\n    1: setRollUpList\n  } = useState([]);\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null); // FILTER\n\n  const {\n    0: filters,\n    1: setFilters\n  } = useState({\n    pageSize: 10,\n    pageIndex: 1,\n    CourseID: courseID,\n    StudentID: studentID,\n    CourseScheduleID: 0\n  });\n\n  const getPagination = pageNumber => {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      pageIndex: pageNumber\n    }));\n  };\n\n  const getRollUp = async () => {\n    try {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n      const res = await rollUpApi.getAll(filters);\n\n      if (res.status === 200) {\n        setRollUpList(res.data.data);\n        setTotalPage(res.data.totalRow);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    getRollUp();\n  }, [filters]);\n  const columns = [{\n    title: 'Ngày',\n    width: 150,\n    dataIndex: 'Date',\n    render: dateString => {\n      const date = moment(dateString.slice(0, 11)).format('DD/MM/YYYY');\n      return date;\n    }\n  }, {\n    title: 'Ca',\n    width: 150,\n    dataIndex: 'Date',\n    render: dateString => {\n      return dateString.slice(11);\n    }\n  }, {\n    title: 'Môn học',\n    width: 150,\n    dataIndex: 'SubjectName'\n  }, {\n    title: 'Học lực',\n    width: 150,\n    dataIndex: 'LearningStatusName'\n  }, {\n    title: 'Điểm danh',\n    width: 150,\n    dataIndex: 'StatusName'\n  }, {\n    title: 'Cảnh báo',\n    width: 150,\n    dataIndex: 'Warning',\n    align: 'center',\n    render: (Warning, record) => {\n      let tag = Warning ? 'tag yellow' : '';\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: tag,\n        children: Warning ? 'Warning' : ''\n      }, record.ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }, this);\n    }\n  }];\n\n  const expandedRowRender = exam => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-weight-black\",\n        children: \"Ghi ch\\xFA: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this), exam.Note]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ExpandTable, {\n    loading: isLoading,\n    currentPage: filters.pageIndex,\n    totalPage: totalPage,\n    getPagination: getPagination,\n    noScroll: true,\n    dataSource: rollUpList,\n    columns: columns,\n    Extra: /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"\\u0110i\\u1EC3m danh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this),\n    expandable: {\n      expandedRowRender\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 3\n  }, this);\n}\n\nexport default RollUpTable;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Profile/ProfileCustomer/InfoCourseCard/RollUpTable.tsx"],"names":["moment","PropTypes","React","useEffect","useState","rollUpApi","ExpandTable","useWrap","RollUpTable","propTypes","courseID","number","studentID","defaultProps","props","isLoading","setIsLoading","type","status","rollUpList","setRollUpList","showNoti","totalPage","setTotalPage","filters","setFilters","pageSize","pageIndex","CourseID","StudentID","CourseScheduleID","getPagination","pageNumber","getRollUp","res","getAll","data","totalRow","error","message","columns","title","width","dataIndex","render","dateString","date","slice","format","align","Warning","record","tag","ID","expandedRowRender","exam","Note"],"mappings":"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","sourcesContent":["import moment from 'moment'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { rollUpApi } from '~/apiBase'\r\nimport ExpandTable from '~/components/ExpandTable'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nRollUpTable.propTypes = {\r\n\tcourseID: PropTypes.number,\r\n\tstudentID: PropTypes.number\r\n}\r\nRollUpTable.defaultProps = {\r\n\tcourseID: 0,\r\n\tstudentID: 0\r\n}\r\n\r\nfunction RollUpTable(props) {\r\n\tconst { courseID, studentID } = props\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: 'GET_ALL',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [rollUpList, setRollUpList] = useState<IRollUp[]>([])\r\n\tconst { showNoti } = useWrap()\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\t// FILTER\r\n\tconst [filters, setFilters] = useState({\r\n\t\tpageSize: 10,\r\n\t\tpageIndex: 1,\r\n\t\tCourseID: courseID,\r\n\t\tStudentID: studentID,\r\n\t\tCourseScheduleID: 0\r\n\t})\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\tpageIndex: pageNumber\r\n\t\t})\r\n\t}\r\n\tconst getRollUp = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t})\r\n\t\t\tconst res = await rollUpApi.getAll(filters)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetRollUpList(res.data.data)\r\n\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tgetRollUp()\r\n\t}, [filters])\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Ngày',\r\n\t\t\twidth: 150,\r\n\t\t\tdataIndex: 'Date',\r\n\t\t\trender: (dateString) => {\r\n\t\t\t\tconst date = moment(dateString.slice(0, 11)).format('DD/MM/YYYY')\r\n\t\t\t\treturn date\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ca',\r\n\t\t\twidth: 150,\r\n\t\t\tdataIndex: 'Date',\r\n\t\t\trender: (dateString) => {\r\n\t\t\t\treturn dateString.slice(11)\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ title: 'Môn học', width: 150, dataIndex: 'SubjectName' },\r\n\t\t{\r\n\t\t\ttitle: 'Học lực',\r\n\t\t\twidth: 150,\r\n\t\t\tdataIndex: 'LearningStatusName'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Điểm danh',\r\n\t\t\twidth: 150,\r\n\t\t\tdataIndex: 'StatusName'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Cảnh báo',\r\n\t\t\twidth: 150,\r\n\t\t\tdataIndex: 'Warning',\r\n\t\t\talign: 'center',\r\n\t\t\trender: (Warning, record: IRollUp) => {\r\n\t\t\t\tlet tag = Warning ? 'tag yellow' : ''\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<span className={tag} key={record.ID}>\r\n\t\t\t\t\t\t{Warning ? 'Warning' : ''}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n\tconst expandedRowRender = (exam: IRollUp) => {\r\n\t\treturn (\r\n\t\t\t<p>\r\n\t\t\t\t<span className=\"font-weight-black\">Ghi chú: </span>\r\n\t\t\t\t{exam.Note}\r\n\t\t\t</p>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<ExpandTable\r\n\t\t\tloading={isLoading}\r\n\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\ttotalPage={totalPage}\r\n\t\t\tgetPagination={getPagination}\r\n\t\t\tnoScroll\r\n\t\t\tdataSource={rollUpList}\r\n\t\t\tcolumns={columns}\r\n\t\t\tExtra={<h5>Điểm danh</h5>}\r\n\t\t\texpandable={{ expandedRowRender }}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default RollUpTable\r\n"]},"metadata":{},"sourceType":"module"}
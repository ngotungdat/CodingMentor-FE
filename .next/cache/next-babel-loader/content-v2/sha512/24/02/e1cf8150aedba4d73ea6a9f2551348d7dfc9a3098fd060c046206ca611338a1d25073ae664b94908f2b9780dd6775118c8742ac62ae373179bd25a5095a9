{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\ExamList\\\\ExamShow\\\\DragList.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useDoingTest } from '~/context/useDoingTest';\nimport ReactHtmlParser from 'react-html-parser';\nimport { useDoneTest } from '~/context/useDoneTest';\nlet activeDrag = null;\n\nconst DragList = props => {\n  const {\n    activeID,\n    getActiveID,\n    packageResult,\n    getPackageResult,\n    getListPicked\n  } = useDoingTest();\n  const {\n    dataQuestion,\n    listQuestionID,\n    isDoingTest,\n    setChild,\n    openPagi\n  } = props;\n  const {\n    doneTestData\n  } = useDoneTest();\n  const {\n    0: dataQuestionClone,\n    1: setDataQuestionClone\n  } = useState(dataQuestion);\n  const {\n    0: dataAnswer,\n    1: setDataAnswer\n  } = useState([]);\n  const {\n    0: listCorrectAnswer,\n    1: setListCorrectAnswer\n  } = useState([]);\n  const {\n    0: isDrop,\n    1: setIsDrop\n  } = useState(false);\n\n  if (isDoingTest) {\n    var indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex(item => item.ExamTopicDetailID === dataQuestion.ID);\n  }\n\n  useEffect(() => {\n    if (dataQuestion.Paragraph !== '') {\n      let spaceEditor = document.querySelectorAll('.drag-list .space-editor');\n\n      if (spaceEditor && spaceEditor.length > 0) {\n        spaceEditor.forEach((item, index) => {\n          let quesID = parseInt(item.getAttribute('ques-id')); // Sắp xếp lại thứ tự các ô input trong đoạn văn\n\n          let indexQues = null;\n\n          if (listQuestionID.includes(quesID)) {\n            indexQues = listQuestionID.indexOf(quesID);\n          }\n\n          if (indexQues !== null) {\n            let positionSpace = document.querySelectorAll('.drag-list .position-space');\n\n            if (positionSpace.length < spaceEditor.length) {\n              let span = document.createElement('span');\n              span.classList.add('position-space');\n              span.id = quesID.toString();\n\n              if (quesID === activeID) {\n                span.classList.add('active');\n              }\n\n              span.append(`(${indexQues + 1})`);\n              item.innerHTML = `${(indexQues + 1).toString()}`;\n              item.before(span);\n            } else {\n              if (item.innerHTML == '') {\n                item.innerHTML = `${(indexQues + 1).toString()}`;\n              }\n            }\n          }\n        });\n      }\n    }\n  }, [listQuestionID, dataAnswer]); // ---- ALL ACTION IN DOING TEST ----\n  // On Drop\n\n  const drop = ev => {\n    ev.preventDefault();\n    var data = ev.dataTransfer.getData('text');\n    data && ev.target.appendChild(document.getElementById(data));\n    let nodeList = [...ev.target.childNodes];\n    nodeList.forEach(item => {\n      dataAnswer.every(element => {\n        if (element.ansID === parseInt(item.id)) {\n          // Xử lí mảng dataAnswer\n          element.ansID = null;\n          element.html = null;\n          element.text = null;\n          setDataAnswer([...dataAnswer]); // Xử lí package\n\n          let indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(e => e.ExerciseID === element.quesID);\n          packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList = [];\n          getPackageResult(_objectSpread({}, packageResult));\n          return false;\n        }\n\n        return true;\n      });\n    });\n  }; // Allow Drop\n\n\n  const allowDrop = ev => {\n    ev.preventDefault();\n    const input = ev.target;\n  }; // On Drag\n\n\n  const drag = ev => {\n    ev.dataTransfer.setData('text', ev.target.id);\n  }; // -- ACTION DROP AND DRAG\n\n\n  useEffect(() => {\n    if (!doneTestData) {\n      if (isDoingTest) {\n        let el = document.querySelectorAll('.doingtest-group .drag-list .space-editor');\n        el.forEach(item => {\n          const quesID = parseInt(item.getAttribute('ques-id'));\n          dataAnswer.push({\n            quesID: quesID,\n            ansID: null,\n            html: null,\n            text: null\n          });\n          item.addEventListener('dragleave', event => {\n            item.classList.remove('space-left');\n            item.classList.remove('is-hover');\n          }); // ==================== DRAGOVER  ==============\n\n          item.addEventListener('dragover', event => {\n            const input = event.target;\n            event.preventDefault();\n            input.classList.add('is-hover'); // -- Đầy thành phần drop qua 1 bên khi có hành động drop khác\n\n            if (item.childNodes.length > 0) {\n              if (item.childNodes[0].nodeName === 'DIV') {\n                item.classList.add('space-left');\n              }\n            }\n          }); // ======================= DROP=========================\n\n          item.addEventListener('drop', (ev = new CustomEvent(null, {\n            bubbles: true,\n            cancelable: true\n          })) => {\n            // -- Thêm class auto và xóa khoảng cách sau khi đã drop xong\n            item.classList.add('auto');\n            item.classList.remove('space-left');\n            item.classList.remove('is-hover'); // Active input\n\n            getActiveID(parseInt(item.getAttribute('ques-id'))); // Đổi trạng thái để useeffect chứa active không chạy lại nữa\n\n            setIsDrop(true);\n            getListPicked(parseInt(item.getAttribute('ques-id')));\n\n            const actionDragAndDrop = () => {\n              // -- Khởi tạo và xóa bên trong trước khi drop\n              const input = ev.target;\n              input.innerHTML = '';\n              ev.preventDefault();\n              var data = ev.dataTransfer.getData('text');\n              input.appendChild(document.getElementById(data)); // Kiểm tra sau khi drop thành công thì add vào mảng\n\n              if (input.childNodes[0].nodeName === 'DIV') {\n                let indexQues = dataAnswer.findIndex(item => item.quesID === quesID); // -- Chặn drop thành phần bên trong\n\n                input.childNodes[0].addEventListener('drop', e => {\n                  e.preventDefault(), e.stopPropagation();\n                });\n                input.childNodes[0].addEventListener('dragstart', (e = new CustomEvent(null, {\n                  bubbles: true,\n                  cancelable: true\n                })) => {\n                  const inputChild = e.target;\n                  activeDrag = inputChild.id;\n                }); // -- Kiểm tra phần tử drop xuất phát từ vùng nào\n\n                if (dataAnswer.some(e => e['ansID'] === parseInt(input.children[0].id))) {\n                  let iQuestion = dataAnswer.findIndex(e => e.quesID === quesID);\n                  dataAnswer.every(element => {\n                    if (element.ansID === parseInt(input.children[0].id)) {\n                      element.html = dataAnswer[iQuestion].html;\n                      element.ansID = dataAnswer[iQuestion].ansID;\n                      element.text = dataAnswer[iQuestion].text;\n                      return false;\n                    }\n\n                    return true;\n                  });\n                } else {\n                  // -- Thay thế cái mới và trả về vùng chứa câu trả lời\n                  if (dataAnswer[indexQues].html && dataAnswer[indexQues].ansID) {\n                    let getNodes = str => new DOMParser().parseFromString(str, 'text/html').body.childNodes;\n\n                    let node = getNodes(dataAnswer[indexQues].html);\n                    document.getElementById('area-drop').appendChild(node[0]);\n                  }\n                } // -- Add phần tử mới vào mảng\n\n\n                dataAnswer[indexQues].ansID = parseInt(input.children[0].id);\n                dataAnswer[indexQues].html = input.innerHTML;\n                dataAnswer[indexQues].text = input.children[0].children[0].innerHTML;\n                setDataAnswer([...dataAnswer]);\n              }\n            };\n\n            if (item.children.length == 0) {\n              actionDragAndDrop();\n            } else {\n              if (item.children[0].nodeName === 'TEXT') {\n                actionDragAndDrop();\n              } else {\n                if (item.children[0].id !== activeDrag) {\n                  actionDragAndDrop();\n                }\n              }\n            }\n          });\n        });\n        setDataAnswer([...dataAnswer]);\n      }\n    }\n  }, []); // -- UPDATE AFTER DROP AND DRAG\n\n  useEffect(() => {\n    if (!doneTestData) {\n      if (isDoingTest) {\n        if ((dataAnswer === null || dataAnswer === void 0 ? void 0 : dataAnswer.length) > 0) {\n          let spaceEditor = document.querySelectorAll('.drag-list .space-editor');\n          let boxAns = document.querySelectorAll('.drag-list .drag-list-answer');\n          spaceEditor.forEach(item => {\n            const quesID = parseInt(item.getAttribute('ques-id'));\n            let indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(e => e.ExerciseID === quesID); // --- Kiểm tra nếu có thành phần drop thì thêm class auto và ngược lại\n\n            if (item.childNodes.length > 0) {\n              if (item.childNodes[0].nodeName === 'DIV') {\n                item.classList.add('auto');\n              } else {\n                item.classList.remove('auto');\n              }\n            } else {\n              item.classList.remove('auto');\n            } // --- Sắp xếp lại  vị trí ---\n\n\n            let indexQues = null;\n\n            if (listQuestionID.includes(quesID)) {\n              indexQues = listQuestionID.indexOf(quesID);\n            } // --- --------------- ---\n\n\n            let indexFind = dataAnswer.findIndex(item => item.quesID === quesID);\n\n            if (dataAnswer[indexFind].ansID == null) {\n              if (packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList.length < 1) {\n                item.innerHTML = `(${(indexQues + 1).toString()})`;\n              }\n            } else {\n              if (item.childNodes.length == 0) {\n                let getNodes = str => new DOMParser().parseFromString(str, 'text/html').body.childNodes;\n\n                let node = getNodes(dataAnswer[indexFind].html);\n                item.appendChild(node[0]);\n                item.classList.add('auto');\n              }\n            }\n\n            const checkAndReplace = () => {\n              dataAnswer.forEach((ans, index) => {\n                if (quesID === ans.quesID) {\n                  if (ans.ansID !== null) {\n                    // -- TRẢ VỀ KQ CŨ\n                    let getNodes = str => new DOMParser().parseFromString(str, 'text/html').body.childNodes;\n\n                    let node = getNodes(`<div class=\"drag-list-answer\" draggable=\"true\" id=\"${ans.ansID}\"><span>${ans.text}</span></div>`);\n                    item.innerHTML = '';\n                    item.appendChild(node[0]);\n                    item.classList.add('auto');\n                  }\n                }\n              });\n            };\n\n            if (item.children.length == 0) {\n              checkAndReplace();\n            } else {\n              if (item.children[0].nodeName !== 'DIV') {\n                checkAndReplace();\n              }\n            }\n          });\n          boxAns.forEach(item => {\n            item.addEventListener('dragstart', (ev = new CustomEvent(null, {\n              bubbles: true,\n              cancelable: true\n            })) => {\n              ev.dataTransfer.setData('text', item.id);\n            }); // -- Chặn drop thành phần bên trong\n\n            item.addEventListener('drop', e => {\n              e.preventDefault(), e.stopPropagation();\n            });\n          }); // -- ADD VÀO MẢNG --\n          // Find index\n\n          dataAnswer.forEach(item => {\n            if (item.ansID) {\n              let indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(e => e.ExerciseID === item.quesID); // Add new answer to list - Kiểm tra xem mảng có data chưa, nếu chưa thì thêm mới, ngược lại thì cập nhật object\n              // Đối với loại Điền từ thì mảng chỉ có 1 object đáp án\n\n              if (packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList.length == 0) {\n                packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList.push({\n                  AnswerID: item.ansID,\n                  AnswerContent: item.text,\n                  FileAudio: ''\n                });\n              } else {\n                packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList[0].AnswerContent = item.text;\n                packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList[0].AnswerID = item.ansID;\n              }\n\n              getPackageResult(_objectSpread({}, packageResult));\n            }\n          });\n        }\n      }\n    }\n  }, [dataAnswer]); // Hiện lại những câu đã trả lời sau khi quay lai\n\n  useEffect(() => {\n    if (!doneTestData) {\n      if (isDoingTest && !isDrop) {\n        let newDataQuestion = _objectSpread({}, dataQuestion); // console.log(\"New DATA: \", newDataQuestion);\n\n\n        if (dataQuestion.Paragraph !== '') {\n          let spaceEditor = document.querySelectorAll('.drag-list .space-editor');\n          let dragAns = document.querySelectorAll('.drag-list .area-drop .drag-list-answer'); // -- Kiểm tra các ô drop\n\n          spaceEditor.forEach((item, index) => {\n            let quesID = parseInt(item.getAttribute('ques-id'));\n\n            const checkAllElement = () => {\n              let indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(item => item.ExerciseID === quesID);\n              let indexDataAnswer = dataAnswer.findIndex(item => item.quesID === quesID);\n\n              if (packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList.length > 0) {\n                let AnsIDPackage = null;\n                let AnsContentPackage = null;\n\n                if (dataAnswer[indexDataAnswer].ansID) {\n                  AnsIDPackage = dataAnswer[indexDataAnswer].ansID;\n                  AnsContentPackage = dataAnswer[indexDataAnswer].text;\n                } else {\n                  AnsIDPackage = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList[0].AnswerID;\n                  AnsContentPackage = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList[0].AnswerContent;\n                } // -- TRẢ VỀ KQ CŨ\n\n\n                let getNodes = str => new DOMParser().parseFromString(str, 'text/html').body.childNodes;\n\n                let node = getNodes(`<div class=\"drag-list-answer\" draggable=\"true\" id=\"${AnsIDPackage}\"><span>${AnsContentPackage}</span></div>`);\n                item.innerHTML = '';\n                item.appendChild(node[0]); // -- Cập nhật Data Answer\n\n                dataAnswer.every(element => {\n                  if (element.quesID === quesID) {\n                    element.ansID = AnsIDPackage;\n                    element.text = AnsContentPackage;\n                    element.html = `<div class=\"drag-list-answer\" draggable=\"true\" id=\"${AnsIDPackage}\"><span>${AnsContentPackage}</span></div>`;\n                    return false;\n                  }\n\n                  return true;\n                });\n                setDataAnswer([...dataAnswer]); // -- XÓA TRONG AREA-DROP\n\n                dragAns.forEach(element => {\n                  if (parseInt(element.id) === AnsIDPackage) {\n                    element.remove();\n                  }\n                });\n              } // -- Reset data\n\n\n              setDataQuestionClone(_objectSpread({}, dataQuestionClone));\n              setChild(_objectSpread({}, dataQuestionClone));\n            };\n\n            if (item.children.length == 0) {\n              checkAllElement();\n            } else {\n              if (item.children[0].nodeName !== 'DIV') {\n                checkAllElement();\n              }\n            }\n          });\n        }\n      }\n    } else {\n      if (dataQuestion.Paragraph !== '') {\n        let spaceEditor = document.querySelectorAll('.drag-list .space-editor');\n        spaceEditor.forEach(item => {\n          item.setAttribute('contenteditable', 'false');\n          let quesID = parseInt(item.getAttribute('ques-id'));\n          dataQuestion.ExerciseTopic.every(ques => {\n            if (ques.ExerciseID === quesID) {\n              // Check this answer is right or wrong\n              if (ques.isTrue) {\n                item.classList.add('right-answer');\n              } else {\n                item.classList.add('wrong-answer');\n              } // Find answer content of user\n\n\n              if (ques.ExerciseAnswer.length > 0) {\n                let getNodes = str => new DOMParser().parseFromString(str, 'text/html').body.childNodes;\n\n                if (ques.ExerciseAnswer[0].AnswerContent && ques.ExerciseAnswer[0].AnswerContent !== '') {\n                  item.classList.add('auto');\n                  item.innerHTML = '';\n                  let nodeYourAns = getNodes(`<div class=\"drag-list-answer\" id=\"${ques.ExerciseAnswer[0].AnswerID}\"><span>${ques.ExerciseAnswer[0].AnswerContent}</span></div>`);\n                  item.appendChild(nodeYourAns[0]);\n                } // Tạo đáp án đúng để hover\n\n\n                let nodeCorrectAns = getNodes(`<div class=\"tooltip-answer\" id=\"${quesID}\">${ques.ExerciseAnswer[0].ExerciseAnswerContent}</div>`);\n                item.appendChild(nodeCorrectAns[0]);\n                listCorrectAnswer.push({\n                  id: ques.ExerciseAnswer[0].ExerciseAnswerID,\n                  content: ques.ExerciseAnswer[0].ExerciseAnswerContent\n                });\n                setListCorrectAnswer([...listCorrectAnswer]);\n              }\n\n              return false;\n            }\n\n            return true;\n          });\n        });\n      }\n    }\n\n    if (doneTestData || isDoingTest) {\n      // -- Sắp xếp lại vị trí\n      let positionSpace = document.querySelectorAll('.position-space');\n      positionSpace.forEach(item => {\n        item.classList.remove('active');\n\n        if (parseInt(item.id) === activeID) {\n          item.classList.add('active');\n        }\n      });\n    }\n  }, [activeID]);\n  useEffect(() => {\n    if (doneTestData) {\n      if (listCorrectAnswer.length > 0) {\n        let spaceEditor = document.querySelectorAll('.test-wrapper .drag-list .space-editor');\n        let tooltipAns = document.querySelectorAll('.test-wrapper .drag-list .tooltip-answer');\n        spaceEditor.forEach(item => {\n          // Mouse over\n          item.addEventListener('mouseover', () => {\n            let quesID = item.getAttribute('ques-id');\n            tooltipAns.forEach(e => {\n              if (e.id === quesID) {\n                e.classList.remove('d-none');\n                e.classList.add('d-block');\n              }\n            });\n          }); // Mouse out\n\n          item.addEventListener('mouseout', () => {\n            let quesID = item.getAttribute('ques-id');\n            tooltipAns.forEach(e => {\n              if (e.id === quesID) {\n                e.classList.remove('d-block');\n                e.classList.add('d-none');\n              }\n            });\n          });\n        });\n      }\n    }\n  }, [listCorrectAnswer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drag-list\",\n    style: {\n      height: '100%',\n      marginLeft: -40\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-drag\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-drag test-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: ReactHtmlParser(dataQuestion.Content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"font-italic mb-3 mt-4\",\n          children: \"K\\xE9o \\u0111\\xE1p \\xE1n v\\xE0o \\xF4 th\\xEDch h\\u1EE3p\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 col-md-12 col-sm-12 col-12\",\n          style: {},\n          children: ReactHtmlParser(dataQuestion.Paragraph)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 5\n      }, this), !openPagi && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed-ans\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row m-0\",\n          id: \"area-drop\",\n          onDrop: e => drop(e),\n          onDragOver: e => allowDrop(e),\n          children: dataQuestionClone === null || dataQuestionClone === void 0 ? void 0 : dataQuestionClone.ExerciseTopic.map((item, index) => item.ExerciseAnswer.map((ans, indexAns) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"drag-list-answer ml-3\",\n            draggable: \"true\",\n            onDrop: e => (e.preventDefault(), e.stopPropagation()),\n            onDragStart: e => drag(e),\n            id: ans.ID,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", ans.AnswerContent]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 11\n            }, this)\n          }, indexAns, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 10\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 569,\n    columnNumber: 3\n  }, this);\n};\n\nexport default DragList;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/ExamList/ExamShow/DragList.tsx"],"names":["React","useState","useEffect","useDoingTest","ReactHtmlParser","useDoneTest","activeDrag","DragList","props","activeID","getActiveID","packageResult","getPackageResult","getListPicked","dataQuestion","listQuestionID","isDoingTest","setChild","openPagi","doneTestData","dataQuestionClone","setDataQuestionClone","dataAnswer","setDataAnswer","listCorrectAnswer","setListCorrectAnswer","isDrop","setIsDrop","indexQuestion","SetPackageResultDetailInfoList","findIndex","item","ExamTopicDetailID","ID","Paragraph","spaceEditor","document","querySelectorAll","length","forEach","index","quesID","parseInt","getAttribute","indexQues","includes","indexOf","positionSpace","span","createElement","classList","add","id","toString","append","innerHTML","before","drop","ev","preventDefault","data","dataTransfer","getData","target","appendChild","getElementById","nodeList","childNodes","every","element","ansID","html","text","indexQuestionDetail","SetPackageExerciseStudentInfoList","e","ExerciseID","SetPackageExerciseAnswerStudentList","allowDrop","input","drag","setData","el","push","addEventListener","event","remove","nodeName","CustomEvent","bubbles","cancelable","actionDragAndDrop","stopPropagation","inputChild","some","children","iQuestion","getNodes","str","DOMParser","parseFromString","body","node","boxAns","indexFind","checkAndReplace","ans","AnswerID","AnswerContent","FileAudio","newDataQuestion","dragAns","checkAllElement","indexDataAnswer","AnsIDPackage","AnsContentPackage","setAttribute","ExerciseTopic","ques","isTrue","ExerciseAnswer","nodeYourAns","nodeCorrectAns","ExerciseAnswerContent","ExerciseAnswerID","content","tooltipAns","height","marginLeft","Content","map","indexAns"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,eAAP,MAAiF,mBAAjF;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAGA,IAAIC,UAAU,GAAG,IAAjB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA,aAAzB;AAAwCC,IAAAA,gBAAxC;AAA0DC,IAAAA;AAA1D,MAA4EV,YAAY,EAA9F;AACA,QAAM;AAAEW,IAAAA,YAAF;AAAgBC,IAAAA,cAAhB;AAAgCC,IAAAA,WAAhC;AAA6CC,IAAAA,QAA7C;AAAuDC,IAAAA;AAAvD,MAAoEV,KAA1E;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAmBd,WAAW,EAApC;AACA,QAAM;AAAA,OAACe,iBAAD;AAAA,OAAoBC;AAApB,MAA4CpB,QAAQ,CAACa,YAAD,CAA1D;AACA,QAAM;AAAA,OAACQ,UAAD;AAAA,OAAaC;AAAb,MAA8BtB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACuB,iBAAD;AAAA,OAAoBC;AAApB,MAA4CxB,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM;AAAA,OAACyB,MAAD;AAAA,OAASC;AAAT,MAAsB1B,QAAQ,CAAC,KAAD,CAApC;;AAEA,MAAIe,WAAJ,EAAiB;AAChB,QAAIY,aAAa,GAAGjB,aAAa,CAACkB,8BAAd,CAA6CC,SAA7C,CAAwDC,IAAD,IAAUA,IAAI,CAACC,iBAAL,KAA2BlB,YAAY,CAACmB,EAAzG,CAApB;AACA;;AAED/B,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIY,YAAY,CAACoB,SAAb,KAA2B,EAA/B,EAAmC;AAClC,UAAIC,WAAW,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,0BAA1B,CAAlB;;AAEA,UAAIF,WAAW,IAAIA,WAAW,CAACG,MAAZ,GAAqB,CAAxC,EAA2C;AAC1CH,QAAAA,WAAW,CAACI,OAAZ,CAAoB,CAACR,IAAD,EAAOS,KAAP,KAAiB;AACpC,cAAIC,MAAM,GAAGC,QAAQ,CAACX,IAAI,CAACY,YAAL,CAAkB,SAAlB,CAAD,CAArB,CADoC,CAGpC;;AACA,cAAIC,SAAS,GAAG,IAAhB;;AACA,cAAI7B,cAAc,CAAC8B,QAAf,CAAwBJ,MAAxB,CAAJ,EAAqC;AACpCG,YAAAA,SAAS,GAAG7B,cAAc,CAAC+B,OAAf,CAAuBL,MAAvB,CAAZ;AACA;;AAED,cAAIG,SAAS,KAAK,IAAlB,EAAwB;AACvB,gBAAIG,aAAa,GAAGX,QAAQ,CAACC,gBAAT,CAA0B,4BAA1B,CAApB;;AAEA,gBAAIU,aAAa,CAACT,MAAd,GAAuBH,WAAW,CAACG,MAAvC,EAA+C;AAC9C,kBAAIU,IAAI,GAAGZ,QAAQ,CAACa,aAAT,CAAuB,MAAvB,CAAX;AACAD,cAAAA,IAAI,CAACE,SAAL,CAAeC,GAAf,CAAmB,gBAAnB;AACAH,cAAAA,IAAI,CAACI,EAAL,GAAUX,MAAM,CAACY,QAAP,EAAV;;AACA,kBAAIZ,MAAM,KAAKhC,QAAf,EAAyB;AACxBuC,gBAAAA,IAAI,CAACE,SAAL,CAAeC,GAAf,CAAmB,QAAnB;AACA;;AACDH,cAAAA,IAAI,CAACM,MAAL,CAAa,IAAGV,SAAS,GAAG,CAAE,GAA9B;AAEAb,cAAAA,IAAI,CAACwB,SAAL,GAAkB,GAAE,CAACX,SAAS,GAAG,CAAb,EAAgBS,QAAhB,EAA2B,EAA/C;AACAtB,cAAAA,IAAI,CAACyB,MAAL,CAAYR,IAAZ;AACA,aAXD,MAWO;AACN,kBAAIjB,IAAI,CAACwB,SAAL,IAAkB,EAAtB,EAA0B;AACzBxB,gBAAAA,IAAI,CAACwB,SAAL,GAAkB,GAAE,CAACX,SAAS,GAAG,CAAb,EAAgBS,QAAhB,EAA2B,EAA/C;AACA;AACD;AACD;AACD,SA7BD;AA8BA;AACD;AACD,GArCQ,EAqCN,CAACtC,cAAD,EAAiBO,UAAjB,CArCM,CAAT,CAb2B,CAoD3B;AAEA;;AACA,QAAMmC,IAAI,GAAIC,EAAD,IAAQ;AACpBA,IAAAA,EAAE,CAACC,cAAH;AACA,QAAIC,IAAI,GAAGF,EAAE,CAACG,YAAH,CAAgBC,OAAhB,CAAwB,MAAxB,CAAX;AACAF,IAAAA,IAAI,IAAIF,EAAE,CAACK,MAAH,CAAUC,WAAV,CAAsB5B,QAAQ,CAAC6B,cAAT,CAAwBL,IAAxB,CAAtB,CAAR;AAEA,QAAIM,QAAQ,GAAG,CAAC,GAAGR,EAAE,CAACK,MAAH,CAAUI,UAAd,CAAf;AAEAD,IAAAA,QAAQ,CAAC3B,OAAT,CAAkBR,IAAD,IAAU;AAC1BT,MAAAA,UAAU,CAAC8C,KAAX,CAAkBC,OAAD,IAAa;AAC7B,YAAIA,OAAO,CAACC,KAAR,KAAkB5B,QAAQ,CAACX,IAAI,CAACqB,EAAN,CAA9B,EAAyC;AACxC;AACAiB,UAAAA,OAAO,CAACC,KAAR,GAAgB,IAAhB;AACAD,UAAAA,OAAO,CAACE,IAAR,GAAe,IAAf;AACAF,UAAAA,OAAO,CAACG,IAAR,GAAe,IAAf;AACAjD,UAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,CAAD,CAAb,CALwC,CAOxC;;AACA,cAAImD,mBAAmB,GAAG9D,aAAa,CAACkB,8BAAd,CAA6CD,aAA7C,EAA4D8C,iCAA5D,CAA8F5C,SAA9F,CACxB6C,CAAD,IAAOA,CAAC,CAACC,UAAF,KAAiBP,OAAO,CAAC5B,MADP,CAA1B;AAGA9B,UAAAA,aAAa,CAACkB,8BAAd,CAA6CD,aAA7C,EAA4D8C,iCAA5D,CACCD,mBADD,EAEEI,mCAFF,GAEwC,EAFxC;AAIAjE,UAAAA,gBAAgB,mBAAMD,aAAN,EAAhB;AACA,iBAAO,KAAP;AACA;;AACD,eAAO,IAAP;AACA,OApBD;AAqBA,KAtBD;AAuBA,GA9BD,CAvD2B,CAuF3B;;;AACA,QAAMmE,SAAS,GAAIpB,EAAD,IAAQ;AACzBA,IAAAA,EAAE,CAACC,cAAH;AACA,UAAMoB,KAAK,GAAGrB,EAAE,CAACK,MAAjB;AACA,GAHD,CAxF2B,CA6F3B;;;AACA,QAAMiB,IAAI,GAAItB,EAAD,IAAQ;AACpBA,IAAAA,EAAE,CAACG,YAAH,CAAgBoB,OAAhB,CAAwB,MAAxB,EAAgCvB,EAAE,CAACK,MAAH,CAAUX,EAA1C;AACA,GAFD,CA9F2B,CAkG3B;;;AACAlD,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAACiB,YAAL,EAAmB;AAClB,UAAIH,WAAJ,EAAiB;AAChB,YAAIkE,EAAE,GAAG9C,QAAQ,CAACC,gBAAT,CAA0B,2CAA1B,CAAT;AAEA6C,QAAAA,EAAE,CAAC3C,OAAH,CAAYR,IAAD,IAAU;AACpB,gBAAMU,MAAM,GAAGC,QAAQ,CAACX,IAAI,CAACY,YAAL,CAAkB,SAAlB,CAAD,CAAvB;AAEArB,UAAAA,UAAU,CAAC6D,IAAX,CAAgB;AACf1C,YAAAA,MAAM,EAAEA,MADO;AAEf6B,YAAAA,KAAK,EAAE,IAFQ;AAGfC,YAAAA,IAAI,EAAE,IAHS;AAIfC,YAAAA,IAAI,EAAE;AAJS,WAAhB;AAOAzC,UAAAA,IAAI,CAACqD,gBAAL,CAAsB,WAAtB,EAAoCC,KAAD,IAAW;AAC7CtD,YAAAA,IAAI,CAACmB,SAAL,CAAeoC,MAAf,CAAsB,YAAtB;AACAvD,YAAAA,IAAI,CAACmB,SAAL,CAAeoC,MAAf,CAAsB,UAAtB;AACA,WAHD,EAVoB,CAepB;;AACAvD,UAAAA,IAAI,CAACqD,gBAAL,CAAsB,UAAtB,EAAmCC,KAAD,IAAW;AAC5C,kBAAMN,KAAK,GAAGM,KAAK,CAACtB,MAApB;AACAsB,YAAAA,KAAK,CAAC1B,cAAN;AAEAoB,YAAAA,KAAK,CAAC7B,SAAN,CAAgBC,GAAhB,CAAoB,UAApB,EAJ4C,CAM5C;;AACA,gBAAIpB,IAAI,CAACoC,UAAL,CAAgB7B,MAAhB,GAAyB,CAA7B,EAAgC;AAC/B,kBAAIP,IAAI,CAACoC,UAAL,CAAgB,CAAhB,EAAmBoB,QAAnB,KAAgC,KAApC,EAA2C;AAC1CxD,gBAAAA,IAAI,CAACmB,SAAL,CAAeC,GAAf,CAAmB,YAAnB;AACA;AACD;AACD,WAZD,EAhBoB,CA8BpB;;AACApB,UAAAA,IAAI,CAACqD,gBAAL,CACC,MADD,EAEC,CACC1B,EAEC,GAAG,IAAI8B,WAAJ,CAAgB,IAAhB,EAAsB;AAAEC,YAAAA,OAAO,EAAE,IAAX;AAAiBC,YAAAA,UAAU,EAAE;AAA7B,WAAtB,CAHL,KAIK;AACJ;AACA3D,YAAAA,IAAI,CAACmB,SAAL,CAAeC,GAAf,CAAmB,MAAnB;AACApB,YAAAA,IAAI,CAACmB,SAAL,CAAeoC,MAAf,CAAsB,YAAtB;AACAvD,YAAAA,IAAI,CAACmB,SAAL,CAAeoC,MAAf,CAAsB,UAAtB,EAJI,CAMJ;;AACA5E,YAAAA,WAAW,CAACgC,QAAQ,CAACX,IAAI,CAACY,YAAL,CAAkB,SAAlB,CAAD,CAAT,CAAX,CAPI,CASJ;;AACAhB,YAAAA,SAAS,CAAC,IAAD,CAAT;AAEAd,YAAAA,aAAa,CAAC6B,QAAQ,CAACX,IAAI,CAACY,YAAL,CAAkB,SAAlB,CAAD,CAAT,CAAb;;AAEA,kBAAMgD,iBAAiB,GAAG,MAAM;AAC/B;AACA,oBAAMZ,KAAK,GAAGrB,EAAE,CAACK,MAAjB;AACAgB,cAAAA,KAAK,CAACxB,SAAN,GAAkB,EAAlB;AAEAG,cAAAA,EAAE,CAACC,cAAH;AACA,kBAAIC,IAAI,GAAGF,EAAE,CAACG,YAAH,CAAgBC,OAAhB,CAAwB,MAAxB,CAAX;AAEAiB,cAAAA,KAAK,CAACf,WAAN,CAAkB5B,QAAQ,CAAC6B,cAAT,CAAwBL,IAAxB,CAAlB,EAR+B,CAU/B;;AAEA,kBAAImB,KAAK,CAACZ,UAAN,CAAiB,CAAjB,EAAoBoB,QAApB,KAAiC,KAArC,EAA4C;AAC3C,oBAAI3C,SAAS,GAAGtB,UAAU,CAACQ,SAAX,CAAsBC,IAAD,IAAUA,IAAI,CAACU,MAAL,KAAgBA,MAA/C,CAAhB,CAD2C,CAG3C;;AACAsC,gBAAAA,KAAK,CAACZ,UAAN,CAAiB,CAAjB,EAAoBiB,gBAApB,CAAqC,MAArC,EAA8CT,CAAD,IAAO;AACnDA,kBAAAA,CAAC,CAAChB,cAAF,IAAoBgB,CAAC,CAACiB,eAAF,EAApB;AACA,iBAFD;AAIAb,gBAAAA,KAAK,CAACZ,UAAN,CAAiB,CAAjB,EAAoBiB,gBAApB,CACC,WADD,EAEC,CACCT,CAEC,GAAG,IAAIa,WAAJ,CAAgB,IAAhB,EAAsB;AACzBC,kBAAAA,OAAO,EAAE,IADgB;AAEzBC,kBAAAA,UAAU,EAAE;AAFa,iBAAtB,CAHL,KAOK;AACJ,wBAAMG,UAAU,GAAGlB,CAAC,CAACZ,MAArB;AACAzD,kBAAAA,UAAU,GAAGuF,UAAU,CAACzC,EAAxB;AACA,iBAZF,EAR2C,CAuB3C;;AACA,oBAAI9B,UAAU,CAACwE,IAAX,CAAiBnB,CAAD,IAAOA,CAAC,CAAC,OAAD,CAAD,KAAejC,QAAQ,CAACqC,KAAK,CAACgB,QAAN,CAAe,CAAf,EAAkB3C,EAAnB,CAA9C,CAAJ,EAA2E;AAC1E,sBAAI4C,SAAS,GAAG1E,UAAU,CAACQ,SAAX,CAAsB6C,CAAD,IAAOA,CAAC,CAAClC,MAAF,KAAaA,MAAzC,CAAhB;AAEAnB,kBAAAA,UAAU,CAAC8C,KAAX,CAAkBC,OAAD,IAAa;AAC7B,wBAAIA,OAAO,CAACC,KAAR,KAAkB5B,QAAQ,CAACqC,KAAK,CAACgB,QAAN,CAAe,CAAf,EAAkB3C,EAAnB,CAA9B,EAAsD;AACrDiB,sBAAAA,OAAO,CAACE,IAAR,GAAejD,UAAU,CAAC0E,SAAD,CAAV,CAAsBzB,IAArC;AACAF,sBAAAA,OAAO,CAACC,KAAR,GAAgBhD,UAAU,CAAC0E,SAAD,CAAV,CAAsB1B,KAAtC;AACAD,sBAAAA,OAAO,CAACG,IAAR,GAAelD,UAAU,CAAC0E,SAAD,CAAV,CAAsBxB,IAArC;AAEA,6BAAO,KAAP;AACA;;AACD,2BAAO,IAAP;AACA,mBATD;AAUA,iBAbD,MAaO;AACN;AAEA,sBAAIlD,UAAU,CAACsB,SAAD,CAAV,CAAsB2B,IAAtB,IAA8BjD,UAAU,CAACsB,SAAD,CAAV,CAAsB0B,KAAxD,EAA+D;AAC9D,wBAAI2B,QAAQ,GAAIC,GAAD,IAAS,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCF,GAAhC,EAAqC,WAArC,EAAkDG,IAAlD,CAAuDlC,UAA/E;;AAEA,wBAAImC,IAAI,GAAGL,QAAQ,CAAC3E,UAAU,CAACsB,SAAD,CAAV,CAAsB2B,IAAvB,CAAnB;AAEAnC,oBAAAA,QAAQ,CAAC6B,cAAT,CAAwB,WAAxB,EAAqCD,WAArC,CAAiDsC,IAAI,CAAC,CAAD,CAArD;AACA;AACD,iBA/C0C,CAiD3C;;;AACAhF,gBAAAA,UAAU,CAACsB,SAAD,CAAV,CAAsB0B,KAAtB,GAA8B5B,QAAQ,CAACqC,KAAK,CAACgB,QAAN,CAAe,CAAf,EAAkB3C,EAAnB,CAAtC;AACA9B,gBAAAA,UAAU,CAACsB,SAAD,CAAV,CAAsB2B,IAAtB,GAA6BQ,KAAK,CAACxB,SAAnC;AACAjC,gBAAAA,UAAU,CAACsB,SAAD,CAAV,CAAsB4B,IAAtB,GAA6BO,KAAK,CAACgB,QAAN,CAAe,CAAf,EAAkBA,QAAlB,CAA2B,CAA3B,EAA8BxC,SAA3D;AACAhC,gBAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,CAAD,CAAb;AACA;AACD,aAnED;;AAqEA,gBAAIS,IAAI,CAACgE,QAAL,CAAczD,MAAd,IAAwB,CAA5B,EAA+B;AAC9BqD,cAAAA,iBAAiB;AACjB,aAFD,MAEO;AACN,kBAAI5D,IAAI,CAACgE,QAAL,CAAc,CAAd,EAAiBR,QAAjB,KAA8B,MAAlC,EAA0C;AACzCI,gBAAAA,iBAAiB;AACjB,eAFD,MAEO;AACN,oBAAI5D,IAAI,CAACgE,QAAL,CAAc,CAAd,EAAiB3C,EAAjB,KAAwB9C,UAA5B,EAAwC;AACvCqF,kBAAAA,iBAAiB;AACjB;AACD;AACD;AACD,WApGF;AAsGA,SArID;AAuIApE,QAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,CAAD,CAAb;AACA;AACD;AACD,GA/IQ,EA+IN,EA/IM,CAAT,CAnG2B,CAoP3B;;AACApB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAACiB,YAAL,EAAmB;AAClB,UAAIH,WAAJ,EAAiB;AAChB,YAAI,CAAAM,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEgB,MAAZ,IAAqB,CAAzB,EAA4B;AAC3B,cAAIH,WAAW,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,0BAA1B,CAAlB;AAEA,cAAIkE,MAAM,GAAGnE,QAAQ,CAACC,gBAAT,CAA0B,8BAA1B,CAAb;AAEAF,UAAAA,WAAW,CAACI,OAAZ,CAAqBR,IAAD,IAAU;AAC7B,kBAAMU,MAAM,GAAGC,QAAQ,CAACX,IAAI,CAACY,YAAL,CAAkB,SAAlB,CAAD,CAAvB;AAEA,gBAAI8B,mBAAmB,GAAG9D,aAAa,CAACkB,8BAAd,CACzBD,aADyB,EAExB8C,iCAFwB,CAEU5C,SAFV,CAEqB6C,CAAD,IAAOA,CAAC,CAACC,UAAF,KAAiBnC,MAF5C,CAA1B,CAH6B,CAO7B;;AACA,gBAAIV,IAAI,CAACoC,UAAL,CAAgB7B,MAAhB,GAAyB,CAA7B,EAAgC;AAC/B,kBAAIP,IAAI,CAACoC,UAAL,CAAgB,CAAhB,EAAmBoB,QAAnB,KAAgC,KAApC,EAA2C;AAC1CxD,gBAAAA,IAAI,CAACmB,SAAL,CAAeC,GAAf,CAAmB,MAAnB;AACA,eAFD,MAEO;AACNpB,gBAAAA,IAAI,CAACmB,SAAL,CAAeoC,MAAf,CAAsB,MAAtB;AACA;AACD,aAND,MAMO;AACNvD,cAAAA,IAAI,CAACmB,SAAL,CAAeoC,MAAf,CAAsB,MAAtB;AACA,aAhB4B,CAkB7B;;;AACA,gBAAI1C,SAAS,GAAG,IAAhB;;AACA,gBAAI7B,cAAc,CAAC8B,QAAf,CAAwBJ,MAAxB,CAAJ,EAAqC;AACpCG,cAAAA,SAAS,GAAG7B,cAAc,CAAC+B,OAAf,CAAuBL,MAAvB,CAAZ;AACA,aAtB4B,CAuB7B;;;AAEA,gBAAI+D,SAAS,GAAGlF,UAAU,CAACQ,SAAX,CAAsBC,IAAD,IAAUA,IAAI,CAACU,MAAL,KAAgBA,MAA/C,CAAhB;;AAEA,gBAAInB,UAAU,CAACkF,SAAD,CAAV,CAAsBlC,KAAtB,IAA+B,IAAnC,EAAyC;AACxC,kBACC3D,aAAa,CAACkB,8BAAd,CAA6CD,aAA7C,EAA4D8C,iCAA5D,CAA8FD,mBAA9F,EACEI,mCADF,CACsCvC,MADtC,GAC+C,CAFhD,EAGE;AACDP,gBAAAA,IAAI,CAACwB,SAAL,GAAkB,IAAG,CAACX,SAAS,GAAG,CAAb,EAAgBS,QAAhB,EAA2B,GAAhD;AACA;AACD,aAPD,MAOO;AACN,kBAAItB,IAAI,CAACoC,UAAL,CAAgB7B,MAAhB,IAA0B,CAA9B,EAAiC;AAChC,oBAAI2D,QAAQ,GAAIC,GAAD,IAAS,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCF,GAAhC,EAAqC,WAArC,EAAkDG,IAAlD,CAAuDlC,UAA/E;;AACA,oBAAImC,IAAI,GAAGL,QAAQ,CAAC3E,UAAU,CAACkF,SAAD,CAAV,CAAsBjC,IAAvB,CAAnB;AACAxC,gBAAAA,IAAI,CAACiC,WAAL,CAAiBsC,IAAI,CAAC,CAAD,CAArB;AACAvE,gBAAAA,IAAI,CAACmB,SAAL,CAAeC,GAAf,CAAmB,MAAnB;AACA;AACD;;AAED,kBAAMsD,eAAe,GAAG,MAAM;AAC7BnF,cAAAA,UAAU,CAACiB,OAAX,CAAmB,CAACmE,GAAD,EAAMlE,KAAN,KAAgB;AAClC,oBAAIC,MAAM,KAAKiE,GAAG,CAACjE,MAAnB,EAA2B;AAC1B,sBAAIiE,GAAG,CAACpC,KAAJ,KAAc,IAAlB,EAAwB;AACvB;AACA,wBAAI2B,QAAQ,GAAIC,GAAD,IAAS,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCF,GAAhC,EAAqC,WAArC,EAAkDG,IAAlD,CAAuDlC,UAA/E;;AACA,wBAAImC,IAAI,GAAGL,QAAQ,CAAE,sDAAqDS,GAAG,CAACpC,KAAM,WAAUoC,GAAG,CAAClC,IAAK,eAApF,CAAnB;AACAzC,oBAAAA,IAAI,CAACwB,SAAL,GAAiB,EAAjB;AACAxB,oBAAAA,IAAI,CAACiC,WAAL,CAAiBsC,IAAI,CAAC,CAAD,CAArB;AACAvE,oBAAAA,IAAI,CAACmB,SAAL,CAAeC,GAAf,CAAmB,MAAnB;AACA;AACD;AACD,eAXD;AAYA,aAbD;;AAeA,gBAAIpB,IAAI,CAACgE,QAAL,CAAczD,MAAd,IAAwB,CAA5B,EAA+B;AAC9BmE,cAAAA,eAAe;AACf,aAFD,MAEO;AACN,kBAAI1E,IAAI,CAACgE,QAAL,CAAc,CAAd,EAAiBR,QAAjB,KAA8B,KAAlC,EAAyC;AACxCkB,gBAAAA,eAAe;AACf;AACD;AACD,WAjED;AAmEAF,UAAAA,MAAM,CAAChE,OAAP,CAAgBR,IAAD,IAAU;AACxBA,YAAAA,IAAI,CAACqD,gBAAL,CACC,WADD,EAEC,CACC1B,EAEC,GAAG,IAAI8B,WAAJ,CAAgB,IAAhB,EAAsB;AAAEC,cAAAA,OAAO,EAAE,IAAX;AAAiBC,cAAAA,UAAU,EAAE;AAA7B,aAAtB,CAHL,KAIK;AACJhC,cAAAA,EAAE,CAACG,YAAH,CAAgBoB,OAAhB,CAAwB,MAAxB,EAAgClD,IAAI,CAACqB,EAArC;AACA,aARF,EADwB,CAYxB;;AACArB,YAAAA,IAAI,CAACqD,gBAAL,CAAsB,MAAtB,EAA+BT,CAAD,IAAO;AACpCA,cAAAA,CAAC,CAAChB,cAAF,IAAoBgB,CAAC,CAACiB,eAAF,EAApB;AACA,aAFD;AAGA,WAhBD,EAxE2B,CA0F3B;AACA;;AAEAtE,UAAAA,UAAU,CAACiB,OAAX,CAAoBR,IAAD,IAAU;AAC5B,gBAAIA,IAAI,CAACuC,KAAT,EAAgB;AACf,kBAAIG,mBAAmB,GAAG9D,aAAa,CAACkB,8BAAd,CACzBD,aADyB,EAExB8C,iCAFwB,CAEU5C,SAFV,CAEqB6C,CAAD,IAAOA,CAAC,CAACC,UAAF,KAAiB7C,IAAI,CAACU,MAFjD,CAA1B,CADe,CAKf;AACA;;AACA,kBACC9B,aAAa,CAACkB,8BAAd,CAA6CD,aAA7C,EAA4D8C,iCAA5D,CAA8FD,mBAA9F,EACEI,mCADF,CACsCvC,MADtC,IACgD,CAFjD,EAGE;AACD3B,gBAAAA,aAAa,CAACkB,8BAAd,CAA6CD,aAA7C,EAA4D8C,iCAA5D,CACCD,mBADD,EAEEI,mCAFF,CAEsCM,IAFtC,CAE2C;AAC1CwB,kBAAAA,QAAQ,EAAE5E,IAAI,CAACuC,KAD2B;AAE1CsC,kBAAAA,aAAa,EAAE7E,IAAI,CAACyC,IAFsB;AAG1CqC,kBAAAA,SAAS,EAAE;AAH+B,iBAF3C;AAOA,eAXD,MAWO;AACNlG,gBAAAA,aAAa,CAACkB,8BAAd,CAA6CD,aAA7C,EAA4D8C,iCAA5D,CACCD,mBADD,EAEEI,mCAFF,CAEsC,CAFtC,EAEyC+B,aAFzC,GAEyD7E,IAAI,CAACyC,IAF9D;AAGA7D,gBAAAA,aAAa,CAACkB,8BAAd,CAA6CD,aAA7C,EAA4D8C,iCAA5D,CACCD,mBADD,EAEEI,mCAFF,CAEsC,CAFtC,EAEyC8B,QAFzC,GAEoD5E,IAAI,CAACuC,KAFzD;AAGA;;AACD1D,cAAAA,gBAAgB,mBAAMD,aAAN,EAAhB;AACA;AACD,WA7BD;AA8BA;AACD;AACD;AACD,GAjIQ,EAiIN,CAACW,UAAD,CAjIM,CAAT,CArP2B,CAwX3B;;AACApB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAACiB,YAAL,EAAmB;AAClB,UAAIH,WAAW,IAAI,CAACU,MAApB,EAA4B;AAC3B,YAAIoF,eAAoB,qBAAQhG,YAAR,CAAxB,CAD2B,CAG3B;;;AACA,YAAIA,YAAY,CAACoB,SAAb,KAA2B,EAA/B,EAAmC;AAClC,cAAIC,WAAW,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,0BAA1B,CAAlB;AACA,cAAI0E,OAAO,GAAG3E,QAAQ,CAACC,gBAAT,CAA0B,yCAA1B,CAAd,CAFkC,CAIlC;;AACAF,UAAAA,WAAW,CAACI,OAAZ,CAAoB,CAACR,IAAD,EAAOS,KAAP,KAAiB;AACpC,gBAAIC,MAAM,GAAGC,QAAQ,CAACX,IAAI,CAACY,YAAL,CAAkB,SAAlB,CAAD,CAArB;;AAEA,kBAAMqE,eAAe,GAAG,MAAM;AAC7B,kBAAIvC,mBAAmB,GAAG9D,aAAa,CAACkB,8BAAd,CACzBD,aADyB,EAExB8C,iCAFwB,CAEU5C,SAFV,CAEqBC,IAAD,IAAUA,IAAI,CAAC6C,UAAL,KAAoBnC,MAFlD,CAA1B;AAIA,kBAAIwE,eAAe,GAAG3F,UAAU,CAACQ,SAAX,CAAsBC,IAAD,IAAUA,IAAI,CAACU,MAAL,KAAgBA,MAA/C,CAAtB;;AAEA,kBACC9B,aAAa,CAACkB,8BAAd,CAA6CD,aAA7C,EAA4D8C,iCAA5D,CAA8FD,mBAA9F,EACEI,mCADF,CACsCvC,MADtC,GAC+C,CAFhD,EAGE;AACD,oBAAI4E,YAAY,GAAG,IAAnB;AACA,oBAAIC,iBAAiB,GAAG,IAAxB;;AAEA,oBAAI7F,UAAU,CAAC2F,eAAD,CAAV,CAA4B3C,KAAhC,EAAuC;AACtC4C,kBAAAA,YAAY,GAAG5F,UAAU,CAAC2F,eAAD,CAAV,CAA4B3C,KAA3C;AACA6C,kBAAAA,iBAAiB,GAAG7F,UAAU,CAAC2F,eAAD,CAAV,CAA4BzC,IAAhD;AACA,iBAHD,MAGO;AACN0C,kBAAAA,YAAY,GACXvG,aAAa,CAACkB,8BAAd,CAA6CD,aAA7C,EAA4D8C,iCAA5D,CAA8FD,mBAA9F,EACEI,mCADF,CACsC,CADtC,EACyC8B,QAF1C;AAGAQ,kBAAAA,iBAAiB,GAChBxG,aAAa,CAACkB,8BAAd,CAA6CD,aAA7C,EAA4D8C,iCAA5D,CAA8FD,mBAA9F,EACEI,mCADF,CACsC,CADtC,EACyC+B,aAF1C;AAGA,iBAdA,CAgBD;;;AACA,oBAAIX,QAAQ,GAAIC,GAAD,IAAS,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCF,GAAhC,EAAqC,WAArC,EAAkDG,IAAlD,CAAuDlC,UAA/E;;AACA,oBAAImC,IAAI,GAAGL,QAAQ,CACjB,sDAAqDiB,YAAa,WAAUC,iBAAkB,eAD7E,CAAnB;AAGApF,gBAAAA,IAAI,CAACwB,SAAL,GAAiB,EAAjB;AACAxB,gBAAAA,IAAI,CAACiC,WAAL,CAAiBsC,IAAI,CAAC,CAAD,CAArB,EAtBC,CAwBD;;AACAhF,gBAAAA,UAAU,CAAC8C,KAAX,CAAkBC,OAAD,IAAa;AAC7B,sBAAIA,OAAO,CAAC5B,MAAR,KAAmBA,MAAvB,EAA+B;AAC9B4B,oBAAAA,OAAO,CAACC,KAAR,GAAgB4C,YAAhB;AACA7C,oBAAAA,OAAO,CAACG,IAAR,GAAe2C,iBAAf;AACA9C,oBAAAA,OAAO,CAACE,IAAR,GAAgB,sDAAqD2C,YAAa,WAAUC,iBAAkB,eAA9G;AACA,2BAAO,KAAP;AACA;;AACD,yBAAO,IAAP;AACA,iBARD;AAUA5F,gBAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,CAAD,CAAb,CAnCC,CAqCD;;AACAyF,gBAAAA,OAAO,CAACxE,OAAR,CAAiB8B,OAAD,IAAa;AAC5B,sBAAI3B,QAAQ,CAAC2B,OAAO,CAACjB,EAAT,CAAR,KAAyB8D,YAA7B,EAA2C;AAC1C7C,oBAAAA,OAAO,CAACiB,MAAR;AACA;AACD,iBAJD;AAKA,eArD4B,CAsD7B;;;AACAjE,cAAAA,oBAAoB,mBAAMD,iBAAN,EAApB;AAEAH,cAAAA,QAAQ,mBAAMG,iBAAN,EAAR;AACA,aA1DD;;AA4DA,gBAAIW,IAAI,CAACgE,QAAL,CAAczD,MAAd,IAAwB,CAA5B,EAA+B;AAC9B0E,cAAAA,eAAe;AACf,aAFD,MAEO;AACN,kBAAIjF,IAAI,CAACgE,QAAL,CAAc,CAAd,EAAiBR,QAAjB,KAA8B,KAAlC,EAAyC;AACxCyB,gBAAAA,eAAe;AACf;AACD;AACD,WAtED;AAuEA;AACD;AACD,KAnFD,MAmFO;AACN,UAAIlG,YAAY,CAACoB,SAAb,KAA2B,EAA/B,EAAmC;AAClC,YAAIC,WAAW,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,0BAA1B,CAAlB;AAEAF,QAAAA,WAAW,CAACI,OAAZ,CAAqBR,IAAD,IAAU;AAC7BA,UAAAA,IAAI,CAACqF,YAAL,CAAkB,iBAAlB,EAAqC,OAArC;AACA,cAAI3E,MAAM,GAAGC,QAAQ,CAACX,IAAI,CAACY,YAAL,CAAkB,SAAlB,CAAD,CAArB;AACA7B,UAAAA,YAAY,CAACuG,aAAb,CAA2BjD,KAA3B,CAAkCkD,IAAD,IAAU;AAC1C,gBAAIA,IAAI,CAAC1C,UAAL,KAAoBnC,MAAxB,EAAgC;AAC/B;AACA,kBAAI6E,IAAI,CAACC,MAAT,EAAiB;AAChBxF,gBAAAA,IAAI,CAACmB,SAAL,CAAeC,GAAf,CAAmB,cAAnB;AACA,eAFD,MAEO;AACNpB,gBAAAA,IAAI,CAACmB,SAAL,CAAeC,GAAf,CAAmB,cAAnB;AACA,eAN8B,CAQ/B;;;AACA,kBAAImE,IAAI,CAACE,cAAL,CAAoBlF,MAApB,GAA6B,CAAjC,EAAoC;AACnC,oBAAI2D,QAAQ,GAAIC,GAAD,IAAS,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCF,GAAhC,EAAqC,WAArC,EAAkDG,IAAlD,CAAuDlC,UAA/E;;AAEA,oBAAImD,IAAI,CAACE,cAAL,CAAoB,CAApB,EAAuBZ,aAAvB,IAAwCU,IAAI,CAACE,cAAL,CAAoB,CAApB,EAAuBZ,aAAvB,KAAyC,EAArF,EAAyF;AACxF7E,kBAAAA,IAAI,CAACmB,SAAL,CAAeC,GAAf,CAAmB,MAAnB;AACApB,kBAAAA,IAAI,CAACwB,SAAL,GAAiB,EAAjB;AAEA,sBAAIkE,WAAW,GAAGxB,QAAQ,CACxB,qCAAoCqB,IAAI,CAACE,cAAL,CAAoB,CAApB,EAAuBb,QAAS,WAAUW,IAAI,CAACE,cAAL,CAAoB,CAApB,EAAuBZ,aAAc,eAD3F,CAA1B;AAIA7E,kBAAAA,IAAI,CAACiC,WAAL,CAAiByD,WAAW,CAAC,CAAD,CAA5B;AACA,iBAZkC,CAanC;;;AACA,oBAAIC,cAAc,GAAGzB,QAAQ,CAC3B,mCAAkCxD,MAAO,KAAI6E,IAAI,CAACE,cAAL,CAAoB,CAApB,EAAuBG,qBAAsB,QAD/D,CAA7B;AAGA5F,gBAAAA,IAAI,CAACiC,WAAL,CAAiB0D,cAAc,CAAC,CAAD,CAA/B;AAEAlG,gBAAAA,iBAAiB,CAAC2D,IAAlB,CAAuB;AACtB/B,kBAAAA,EAAE,EAAEkE,IAAI,CAACE,cAAL,CAAoB,CAApB,EAAuBI,gBADL;AAEtBC,kBAAAA,OAAO,EAAEP,IAAI,CAACE,cAAL,CAAoB,CAApB,EAAuBG;AAFV,iBAAvB;AAKAlG,gBAAAA,oBAAoB,CAAC,CAAC,GAAGD,iBAAJ,CAAD,CAApB;AACA;;AAED,qBAAO,KAAP;AACA;;AACD,mBAAO,IAAP;AACA,WAxCD;AAyCA,SA5CD;AA6CA;AACD;;AAED,QAAIL,YAAY,IAAIH,WAApB,EAAiC;AAChC;AACA,UAAI+B,aAAa,GAAGX,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,CAApB;AACAU,MAAAA,aAAa,CAACR,OAAd,CAAuBR,IAAD,IAAU;AAC/BA,QAAAA,IAAI,CAACmB,SAAL,CAAeoC,MAAf,CAAsB,QAAtB;;AACA,YAAI5C,QAAQ,CAACX,IAAI,CAACqB,EAAN,CAAR,KAAsB3C,QAA1B,EAAoC;AACnCsB,UAAAA,IAAI,CAACmB,SAAL,CAAeC,GAAf,CAAmB,QAAnB;AACA;AACD,OALD;AAMA;AACD,GAlJQ,EAkJN,CAAC1C,QAAD,CAlJM,CAAT;AAoJAP,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIiB,YAAJ,EAAkB;AACjB,UAAIK,iBAAiB,CAACc,MAAlB,GAA2B,CAA/B,EAAkC;AACjC,YAAIH,WAAW,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,wCAA1B,CAAlB;AACA,YAAIyF,UAAU,GAAG1F,QAAQ,CAACC,gBAAT,CAA0B,0CAA1B,CAAjB;AAEAF,QAAAA,WAAW,CAACI,OAAZ,CAAqBR,IAAD,IAAU;AAC7B;AACAA,UAAAA,IAAI,CAACqD,gBAAL,CAAsB,WAAtB,EAAmC,MAAM;AACxC,gBAAI3C,MAAM,GAAGV,IAAI,CAACY,YAAL,CAAkB,SAAlB,CAAb;AACAmF,YAAAA,UAAU,CAACvF,OAAX,CAAoBoC,CAAD,IAAO;AACzB,kBAAIA,CAAC,CAACvB,EAAF,KAASX,MAAb,EAAqB;AACpBkC,gBAAAA,CAAC,CAACzB,SAAF,CAAYoC,MAAZ,CAAmB,QAAnB;AACAX,gBAAAA,CAAC,CAACzB,SAAF,CAAYC,GAAZ,CAAgB,SAAhB;AACA;AACD,aALD;AAMA,WARD,EAF6B,CAY7B;;AACApB,UAAAA,IAAI,CAACqD,gBAAL,CAAsB,UAAtB,EAAkC,MAAM;AACvC,gBAAI3C,MAAM,GAAGV,IAAI,CAACY,YAAL,CAAkB,SAAlB,CAAb;AACAmF,YAAAA,UAAU,CAACvF,OAAX,CAAoBoC,CAAD,IAAO;AACzB,kBAAIA,CAAC,CAACvB,EAAF,KAASX,MAAb,EAAqB;AACpBkC,gBAAAA,CAAC,CAACzB,SAAF,CAAYoC,MAAZ,CAAmB,SAAnB;AACAX,gBAAAA,CAAC,CAACzB,SAAF,CAAYC,GAAZ,CAAgB,QAAhB;AACA;AACD,aALD;AAMA,WARD;AASA,SAtBD;AAuBA;AACD;AACD,GA/BQ,EA+BN,CAAC3B,iBAAD,CA/BM,CAAT;AAiCA,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAEuG,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,UAAU,EAAE,CAAC;AAA/B,KAAlC;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,oBAAmB5H,eAAe,CAACU,YAAY,CAACmH,OAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAI,UAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAIC;AAAK,UAAA,SAAS,EAAC,qCAAf;AAAqD,UAAA,KAAK,EAAE,EAA5D;AAAA,oBACE7H,eAAe,CAACU,YAAY,CAACoB,SAAd;AADjB;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAUE,CAAChB,QAAD,iBACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACC;AAAK,UAAA,SAAS,EAAC,SAAf;AAAyB,UAAA,EAAE,EAAC,WAA5B;AAAwC,UAAA,MAAM,EAAGyD,CAAD,IAAOlB,IAAI,CAACkB,CAAD,CAA3D;AAAgE,UAAA,UAAU,EAAGA,CAAD,IAAOG,SAAS,CAACH,CAAD,CAA5F;AAAA,oBACEvD,iBADF,aACEA,iBADF,uBACEA,iBAAiB,CAAEiG,aAAnB,CAAiCa,GAAjC,CAAqC,CAACnG,IAAD,EAAOS,KAAP,KACrCT,IAAI,CAACyF,cAAL,CAAoBU,GAApB,CAAwB,CAACxB,GAAD,EAAMyB,QAAN,kBACvB;AACC,YAAA,SAAS,EAAC,uBADX;AAGC,YAAA,SAAS,EAAC,MAHX;AAIC,YAAA,MAAM,EAAGxD,CAAD,KAAQA,CAAC,CAAChB,cAAF,IAAoBgB,CAAC,CAACiB,eAAF,EAA5B,CAJT;AAKC,YAAA,WAAW,EAAGjB,CAAD,IAAOK,IAAI,CAACL,CAAD,CALzB;AAMC,YAAA,EAAE,EAAE+B,GAAG,CAACzE,EANT;AAAA,mCAQC;AAAA,8BAAQyE,GAAG,CAACE,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AARD,aAEMuB,QAFN;AAAA;AAAA;AAAA;AAAA,kBADD,CADA;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAsCA,CAplBD;;AAslBA,eAAe5H,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport { useDoingTest } from '~/context/useDoingTest'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser'\r\nimport { useDoneTest } from '~/context/useDoneTest'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\n\r\nlet activeDrag = null\r\n\r\nconst DragList = (props) => {\r\n\tconst { activeID, getActiveID, packageResult, getPackageResult, getListPicked } = useDoingTest()\r\n\tconst { dataQuestion, listQuestionID, isDoingTest, setChild, openPagi } = props\r\n\tconst { doneTestData } = useDoneTest()\r\n\tconst [dataQuestionClone, setDataQuestionClone] = useState(dataQuestion)\r\n\tconst [dataAnswer, setDataAnswer] = useState([])\r\n\tconst [listCorrectAnswer, setListCorrectAnswer] = useState([])\r\n\tconst [isDrop, setIsDrop] = useState(false)\r\n\r\n\tif (isDoingTest) {\r\n\t\tvar indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex((item) => item.ExamTopicDetailID === dataQuestion.ID)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dataQuestion.Paragraph !== '') {\r\n\t\t\tlet spaceEditor = document.querySelectorAll('.drag-list .space-editor')\r\n\r\n\t\t\tif (spaceEditor && spaceEditor.length > 0) {\r\n\t\t\t\tspaceEditor.forEach((item, index) => {\r\n\t\t\t\t\tlet quesID = parseInt(item.getAttribute('ques-id'))\r\n\r\n\t\t\t\t\t// Sắp xếp lại thứ tự các ô input trong đoạn văn\r\n\t\t\t\t\tlet indexQues = null\r\n\t\t\t\t\tif (listQuestionID.includes(quesID)) {\r\n\t\t\t\t\t\tindexQues = listQuestionID.indexOf(quesID)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (indexQues !== null) {\r\n\t\t\t\t\t\tlet positionSpace = document.querySelectorAll('.drag-list .position-space')\r\n\r\n\t\t\t\t\t\tif (positionSpace.length < spaceEditor.length) {\r\n\t\t\t\t\t\t\tlet span = document.createElement('span')\r\n\t\t\t\t\t\t\tspan.classList.add('position-space')\r\n\t\t\t\t\t\t\tspan.id = quesID.toString()\r\n\t\t\t\t\t\t\tif (quesID === activeID) {\r\n\t\t\t\t\t\t\t\tspan.classList.add('active')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tspan.append(`(${indexQues + 1})`)\r\n\r\n\t\t\t\t\t\t\titem.innerHTML = `${(indexQues + 1).toString()}`\r\n\t\t\t\t\t\t\titem.before(span)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (item.innerHTML == '') {\r\n\t\t\t\t\t\t\t\titem.innerHTML = `${(indexQues + 1).toString()}`\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}, [listQuestionID, dataAnswer])\r\n\r\n\t// ---- ALL ACTION IN DOING TEST ----\r\n\r\n\t// On Drop\r\n\tconst drop = (ev) => {\r\n\t\tev.preventDefault()\r\n\t\tvar data = ev.dataTransfer.getData('text')\r\n\t\tdata && ev.target.appendChild(document.getElementById(data))\r\n\r\n\t\tlet nodeList = [...ev.target.childNodes]\r\n\r\n\t\tnodeList.forEach((item) => {\r\n\t\t\tdataAnswer.every((element) => {\r\n\t\t\t\tif (element.ansID === parseInt(item.id)) {\r\n\t\t\t\t\t// Xử lí mảng dataAnswer\r\n\t\t\t\t\telement.ansID = null\r\n\t\t\t\t\telement.html = null\r\n\t\t\t\t\telement.text = null\r\n\t\t\t\t\tsetDataAnswer([...dataAnswer])\r\n\r\n\t\t\t\t\t// Xử lí package\r\n\t\t\t\t\tlet indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(\r\n\t\t\t\t\t\t(e) => e.ExerciseID === element.quesID\r\n\t\t\t\t\t)\r\n\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\t\t\t\tindexQuestionDetail\r\n\t\t\t\t\t].SetPackageExerciseAnswerStudentList = []\r\n\r\n\t\t\t\t\tgetPackageResult({ ...packageResult })\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\treturn true\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t// Allow Drop\r\n\tconst allowDrop = (ev) => {\r\n\t\tev.preventDefault()\r\n\t\tconst input = ev.target as HTMLElement\r\n\t}\r\n\r\n\t// On Drag\r\n\tconst drag = (ev) => {\r\n\t\tev.dataTransfer.setData('text', ev.target.id)\r\n\t}\r\n\r\n\t// -- ACTION DROP AND DRAG\r\n\tuseEffect(() => {\r\n\t\tif (!doneTestData) {\r\n\t\t\tif (isDoingTest) {\r\n\t\t\t\tlet el = document.querySelectorAll('.doingtest-group .drag-list .space-editor')\r\n\r\n\t\t\t\tel.forEach((item) => {\r\n\t\t\t\t\tconst quesID = parseInt(item.getAttribute('ques-id'))\r\n\r\n\t\t\t\t\tdataAnswer.push({\r\n\t\t\t\t\t\tquesID: quesID,\r\n\t\t\t\t\t\tansID: null,\r\n\t\t\t\t\t\thtml: null,\r\n\t\t\t\t\t\ttext: null\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\titem.addEventListener('dragleave', (event) => {\r\n\t\t\t\t\t\titem.classList.remove('space-left')\r\n\t\t\t\t\t\titem.classList.remove('is-hover')\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\t// ==================== DRAGOVER  ==============\r\n\t\t\t\t\titem.addEventListener('dragover', (event) => {\r\n\t\t\t\t\t\tconst input = event.target as HTMLElement\r\n\t\t\t\t\t\tevent.preventDefault()\r\n\r\n\t\t\t\t\t\tinput.classList.add('is-hover')\r\n\r\n\t\t\t\t\t\t// -- Đầy thành phần drop qua 1 bên khi có hành động drop khác\r\n\t\t\t\t\t\tif (item.childNodes.length > 0) {\r\n\t\t\t\t\t\t\tif (item.childNodes[0].nodeName === 'DIV') {\r\n\t\t\t\t\t\t\t\titem.classList.add('space-left')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\t// ======================= DROP=========================\r\n\t\t\t\t\titem.addEventListener(\r\n\t\t\t\t\t\t'drop',\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tev: CustomEvent & {\r\n\t\t\t\t\t\t\t\tdataTransfer?: DataTransfer\r\n\t\t\t\t\t\t\t} = new CustomEvent(null, { bubbles: true, cancelable: true })\r\n\t\t\t\t\t\t) => {\r\n\t\t\t\t\t\t\t// -- Thêm class auto và xóa khoảng cách sau khi đã drop xong\r\n\t\t\t\t\t\t\titem.classList.add('auto')\r\n\t\t\t\t\t\t\titem.classList.remove('space-left')\r\n\t\t\t\t\t\t\titem.classList.remove('is-hover')\r\n\r\n\t\t\t\t\t\t\t// Active input\r\n\t\t\t\t\t\t\tgetActiveID(parseInt(item.getAttribute('ques-id')))\r\n\r\n\t\t\t\t\t\t\t// Đổi trạng thái để useeffect chứa active không chạy lại nữa\r\n\t\t\t\t\t\t\tsetIsDrop(true)\r\n\r\n\t\t\t\t\t\t\tgetListPicked(parseInt(item.getAttribute('ques-id')))\r\n\r\n\t\t\t\t\t\t\tconst actionDragAndDrop = () => {\r\n\t\t\t\t\t\t\t\t// -- Khởi tạo và xóa bên trong trước khi drop\r\n\t\t\t\t\t\t\t\tconst input = ev.target as HTMLElement\r\n\t\t\t\t\t\t\t\tinput.innerHTML = ''\r\n\r\n\t\t\t\t\t\t\t\tev.preventDefault()\r\n\t\t\t\t\t\t\t\tvar data = ev.dataTransfer.getData('text')\r\n\r\n\t\t\t\t\t\t\t\tinput.appendChild(document.getElementById(data))\r\n\r\n\t\t\t\t\t\t\t\t// Kiểm tra sau khi drop thành công thì add vào mảng\r\n\r\n\t\t\t\t\t\t\t\tif (input.childNodes[0].nodeName === 'DIV') {\r\n\t\t\t\t\t\t\t\t\tlet indexQues = dataAnswer.findIndex((item) => item.quesID === quesID)\r\n\r\n\t\t\t\t\t\t\t\t\t// -- Chặn drop thành phần bên trong\r\n\t\t\t\t\t\t\t\t\tinput.childNodes[0].addEventListener('drop', (e) => {\r\n\t\t\t\t\t\t\t\t\t\te.preventDefault(), e.stopPropagation()\r\n\t\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\t\tinput.childNodes[0].addEventListener(\r\n\t\t\t\t\t\t\t\t\t\t'dragstart',\r\n\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\te: CustomEvent & {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdataTransfer?: DataTransfer\r\n\t\t\t\t\t\t\t\t\t\t\t} = new CustomEvent(null, {\r\n\t\t\t\t\t\t\t\t\t\t\t\tbubbles: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcancelable: true\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t) => {\r\n\t\t\t\t\t\t\t\t\t\t\tconst inputChild = e.target as HTMLElement\r\n\t\t\t\t\t\t\t\t\t\t\tactiveDrag = inputChild.id\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t\t\t// -- Kiểm tra phần tử drop xuất phát từ vùng nào\r\n\t\t\t\t\t\t\t\t\tif (dataAnswer.some((e) => e['ansID'] === parseInt(input.children[0].id))) {\r\n\t\t\t\t\t\t\t\t\t\tlet iQuestion = dataAnswer.findIndex((e) => e.quesID === quesID)\r\n\r\n\t\t\t\t\t\t\t\t\t\tdataAnswer.every((element) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (element.ansID === parseInt(input.children[0].id)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\telement.html = dataAnswer[iQuestion].html\r\n\t\t\t\t\t\t\t\t\t\t\t\telement.ansID = dataAnswer[iQuestion].ansID\r\n\t\t\t\t\t\t\t\t\t\t\t\telement.text = dataAnswer[iQuestion].text\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t// -- Thay thế cái mới và trả về vùng chứa câu trả lời\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (dataAnswer[indexQues].html && dataAnswer[indexQues].ansID) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet getNodes = (str) => new DOMParser().parseFromString(str, 'text/html').body.childNodes\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tlet node = getNodes(dataAnswer[indexQues].html)\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById('area-drop').appendChild(node[0])\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// -- Add phần tử mới vào mảng\r\n\t\t\t\t\t\t\t\t\tdataAnswer[indexQues].ansID = parseInt(input.children[0].id)\r\n\t\t\t\t\t\t\t\t\tdataAnswer[indexQues].html = input.innerHTML\r\n\t\t\t\t\t\t\t\t\tdataAnswer[indexQues].text = input.children[0].children[0].innerHTML\r\n\t\t\t\t\t\t\t\t\tsetDataAnswer([...dataAnswer])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (item.children.length == 0) {\r\n\t\t\t\t\t\t\t\tactionDragAndDrop()\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (item.children[0].nodeName === 'TEXT') {\r\n\t\t\t\t\t\t\t\t\tactionDragAndDrop()\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (item.children[0].id !== activeDrag) {\r\n\t\t\t\t\t\t\t\t\t\tactionDragAndDrop()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\r\n\t\t\t\tsetDataAnswer([...dataAnswer])\r\n\t\t\t}\r\n\t\t}\r\n\t}, [])\r\n\r\n\t// -- UPDATE AFTER DROP AND DRAG\r\n\tuseEffect(() => {\r\n\t\tif (!doneTestData) {\r\n\t\t\tif (isDoingTest) {\r\n\t\t\t\tif (dataAnswer?.length > 0) {\r\n\t\t\t\t\tlet spaceEditor = document.querySelectorAll('.drag-list .space-editor')\r\n\r\n\t\t\t\t\tlet boxAns = document.querySelectorAll('.drag-list .drag-list-answer')\r\n\r\n\t\t\t\t\tspaceEditor.forEach((item) => {\r\n\t\t\t\t\t\tconst quesID = parseInt(item.getAttribute('ques-id'))\r\n\r\n\t\t\t\t\t\tlet indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[\r\n\t\t\t\t\t\t\tindexQuestion\r\n\t\t\t\t\t\t].SetPackageExerciseStudentInfoList.findIndex((e) => e.ExerciseID === quesID)\r\n\r\n\t\t\t\t\t\t// --- Kiểm tra nếu có thành phần drop thì thêm class auto và ngược lại\r\n\t\t\t\t\t\tif (item.childNodes.length > 0) {\r\n\t\t\t\t\t\t\tif (item.childNodes[0].nodeName === 'DIV') {\r\n\t\t\t\t\t\t\t\titem.classList.add('auto')\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\titem.classList.remove('auto')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\titem.classList.remove('auto')\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// --- Sắp xếp lại  vị trí ---\r\n\t\t\t\t\t\tlet indexQues = null\r\n\t\t\t\t\t\tif (listQuestionID.includes(quesID)) {\r\n\t\t\t\t\t\t\tindexQues = listQuestionID.indexOf(quesID)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// --- --------------- ---\r\n\r\n\t\t\t\t\t\tlet indexFind = dataAnswer.findIndex((item) => item.quesID === quesID)\r\n\r\n\t\t\t\t\t\tif (dataAnswer[indexFind].ansID == null) {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail]\r\n\t\t\t\t\t\t\t\t\t.SetPackageExerciseAnswerStudentList.length < 1\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\titem.innerHTML = `(${(indexQues + 1).toString()})`\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (item.childNodes.length == 0) {\r\n\t\t\t\t\t\t\t\tlet getNodes = (str) => new DOMParser().parseFromString(str, 'text/html').body.childNodes\r\n\t\t\t\t\t\t\t\tlet node = getNodes(dataAnswer[indexFind].html)\r\n\t\t\t\t\t\t\t\titem.appendChild(node[0])\r\n\t\t\t\t\t\t\t\titem.classList.add('auto')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst checkAndReplace = () => {\r\n\t\t\t\t\t\t\tdataAnswer.forEach((ans, index) => {\r\n\t\t\t\t\t\t\t\tif (quesID === ans.quesID) {\r\n\t\t\t\t\t\t\t\t\tif (ans.ansID !== null) {\r\n\t\t\t\t\t\t\t\t\t\t// -- TRẢ VỀ KQ CŨ\r\n\t\t\t\t\t\t\t\t\t\tlet getNodes = (str) => new DOMParser().parseFromString(str, 'text/html').body.childNodes\r\n\t\t\t\t\t\t\t\t\t\tlet node = getNodes(`<div class=\"drag-list-answer\" draggable=\"true\" id=\"${ans.ansID}\"><span>${ans.text}</span></div>`)\r\n\t\t\t\t\t\t\t\t\t\titem.innerHTML = ''\r\n\t\t\t\t\t\t\t\t\t\titem.appendChild(node[0])\r\n\t\t\t\t\t\t\t\t\t\titem.classList.add('auto')\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (item.children.length == 0) {\r\n\t\t\t\t\t\t\tcheckAndReplace()\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (item.children[0].nodeName !== 'DIV') {\r\n\t\t\t\t\t\t\t\tcheckAndReplace()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tboxAns.forEach((item) => {\r\n\t\t\t\t\t\titem.addEventListener(\r\n\t\t\t\t\t\t\t'dragstart',\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tev: CustomEvent & {\r\n\t\t\t\t\t\t\t\t\tdataTransfer?: DataTransfer\r\n\t\t\t\t\t\t\t\t} = new CustomEvent(null, { bubbles: true, cancelable: true })\r\n\t\t\t\t\t\t\t) => {\r\n\t\t\t\t\t\t\t\tev.dataTransfer.setData('text', item.id)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t// -- Chặn drop thành phần bên trong\r\n\t\t\t\t\t\titem.addEventListener('drop', (e) => {\r\n\t\t\t\t\t\t\te.preventDefault(), e.stopPropagation()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\t// -- ADD VÀO MẢNG --\r\n\t\t\t\t\t// Find index\r\n\r\n\t\t\t\t\tdataAnswer.forEach((item) => {\r\n\t\t\t\t\t\tif (item.ansID) {\r\n\t\t\t\t\t\t\tlet indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[\r\n\t\t\t\t\t\t\t\tindexQuestion\r\n\t\t\t\t\t\t\t].SetPackageExerciseStudentInfoList.findIndex((e) => e.ExerciseID === item.quesID)\r\n\r\n\t\t\t\t\t\t\t// Add new answer to list - Kiểm tra xem mảng có data chưa, nếu chưa thì thêm mới, ngược lại thì cập nhật object\r\n\t\t\t\t\t\t\t// Đối với loại Điền từ thì mảng chỉ có 1 object đáp án\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail]\r\n\t\t\t\t\t\t\t\t\t.SetPackageExerciseAnswerStudentList.length == 0\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\t\t\t\t\t\t\tindexQuestionDetail\r\n\t\t\t\t\t\t\t\t].SetPackageExerciseAnswerStudentList.push({\r\n\t\t\t\t\t\t\t\t\tAnswerID: item.ansID,\r\n\t\t\t\t\t\t\t\t\tAnswerContent: item.text,\r\n\t\t\t\t\t\t\t\t\tFileAudio: ''\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\t\t\t\t\t\t\tindexQuestionDetail\r\n\t\t\t\t\t\t\t\t].SetPackageExerciseAnswerStudentList[0].AnswerContent = item.text\r\n\t\t\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\t\t\t\t\t\t\tindexQuestionDetail\r\n\t\t\t\t\t\t\t\t].SetPackageExerciseAnswerStudentList[0].AnswerID = item.ansID\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tgetPackageResult({ ...packageResult })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, [dataAnswer])\r\n\r\n\t// Hiện lại những câu đã trả lời sau khi quay lai\r\n\tuseEffect(() => {\r\n\t\tif (!doneTestData) {\r\n\t\t\tif (isDoingTest && !isDrop) {\r\n\t\t\t\tlet newDataQuestion: any = { ...dataQuestion }\r\n\r\n\t\t\t\t// console.log(\"New DATA: \", newDataQuestion);\r\n\t\t\t\tif (dataQuestion.Paragraph !== '') {\r\n\t\t\t\t\tlet spaceEditor = document.querySelectorAll('.drag-list .space-editor')\r\n\t\t\t\t\tlet dragAns = document.querySelectorAll('.drag-list .area-drop .drag-list-answer')\r\n\r\n\t\t\t\t\t// -- Kiểm tra các ô drop\r\n\t\t\t\t\tspaceEditor.forEach((item, index) => {\r\n\t\t\t\t\t\tlet quesID = parseInt(item.getAttribute('ques-id'))\r\n\r\n\t\t\t\t\t\tconst checkAllElement = () => {\r\n\t\t\t\t\t\t\tlet indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[\r\n\t\t\t\t\t\t\t\tindexQuestion\r\n\t\t\t\t\t\t\t].SetPackageExerciseStudentInfoList.findIndex((item) => item.ExerciseID === quesID)\r\n\r\n\t\t\t\t\t\t\tlet indexDataAnswer = dataAnswer.findIndex((item) => item.quesID === quesID)\r\n\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail]\r\n\t\t\t\t\t\t\t\t\t.SetPackageExerciseAnswerStudentList.length > 0\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tlet AnsIDPackage = null\r\n\t\t\t\t\t\t\t\tlet AnsContentPackage = null\r\n\r\n\t\t\t\t\t\t\t\tif (dataAnswer[indexDataAnswer].ansID) {\r\n\t\t\t\t\t\t\t\t\tAnsIDPackage = dataAnswer[indexDataAnswer].ansID\r\n\t\t\t\t\t\t\t\t\tAnsContentPackage = dataAnswer[indexDataAnswer].text\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tAnsIDPackage =\r\n\t\t\t\t\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail]\r\n\t\t\t\t\t\t\t\t\t\t\t.SetPackageExerciseAnswerStudentList[0].AnswerID\r\n\t\t\t\t\t\t\t\t\tAnsContentPackage =\r\n\t\t\t\t\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail]\r\n\t\t\t\t\t\t\t\t\t\t\t.SetPackageExerciseAnswerStudentList[0].AnswerContent\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// -- TRẢ VỀ KQ CŨ\r\n\t\t\t\t\t\t\t\tlet getNodes = (str) => new DOMParser().parseFromString(str, 'text/html').body.childNodes\r\n\t\t\t\t\t\t\t\tlet node = getNodes(\r\n\t\t\t\t\t\t\t\t\t`<div class=\"drag-list-answer\" draggable=\"true\" id=\"${AnsIDPackage}\"><span>${AnsContentPackage}</span></div>`\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\titem.innerHTML = ''\r\n\t\t\t\t\t\t\t\titem.appendChild(node[0])\r\n\r\n\t\t\t\t\t\t\t\t// -- Cập nhật Data Answer\r\n\t\t\t\t\t\t\t\tdataAnswer.every((element) => {\r\n\t\t\t\t\t\t\t\t\tif (element.quesID === quesID) {\r\n\t\t\t\t\t\t\t\t\t\telement.ansID = AnsIDPackage\r\n\t\t\t\t\t\t\t\t\t\telement.text = AnsContentPackage\r\n\t\t\t\t\t\t\t\t\t\telement.html = `<div class=\"drag-list-answer\" draggable=\"true\" id=\"${AnsIDPackage}\"><span>${AnsContentPackage}</span></div>`\r\n\t\t\t\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\tsetDataAnswer([...dataAnswer])\r\n\r\n\t\t\t\t\t\t\t\t// -- XÓA TRONG AREA-DROP\r\n\t\t\t\t\t\t\t\tdragAns.forEach((element) => {\r\n\t\t\t\t\t\t\t\t\tif (parseInt(element.id) === AnsIDPackage) {\r\n\t\t\t\t\t\t\t\t\t\telement.remove()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// -- Reset data\r\n\t\t\t\t\t\t\tsetDataQuestionClone({ ...dataQuestionClone })\r\n\r\n\t\t\t\t\t\t\tsetChild({ ...dataQuestionClone })\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (item.children.length == 0) {\r\n\t\t\t\t\t\t\tcheckAllElement()\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (item.children[0].nodeName !== 'DIV') {\r\n\t\t\t\t\t\t\t\tcheckAllElement()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (dataQuestion.Paragraph !== '') {\r\n\t\t\t\tlet spaceEditor = document.querySelectorAll('.drag-list .space-editor')\r\n\r\n\t\t\t\tspaceEditor.forEach((item) => {\r\n\t\t\t\t\titem.setAttribute('contenteditable', 'false')\r\n\t\t\t\t\tlet quesID = parseInt(item.getAttribute('ques-id'))\r\n\t\t\t\t\tdataQuestion.ExerciseTopic.every((ques) => {\r\n\t\t\t\t\t\tif (ques.ExerciseID === quesID) {\r\n\t\t\t\t\t\t\t// Check this answer is right or wrong\r\n\t\t\t\t\t\t\tif (ques.isTrue) {\r\n\t\t\t\t\t\t\t\titem.classList.add('right-answer')\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\titem.classList.add('wrong-answer')\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Find answer content of user\r\n\t\t\t\t\t\t\tif (ques.ExerciseAnswer.length > 0) {\r\n\t\t\t\t\t\t\t\tlet getNodes = (str) => new DOMParser().parseFromString(str, 'text/html').body.childNodes\r\n\r\n\t\t\t\t\t\t\t\tif (ques.ExerciseAnswer[0].AnswerContent && ques.ExerciseAnswer[0].AnswerContent !== '') {\r\n\t\t\t\t\t\t\t\t\titem.classList.add('auto')\r\n\t\t\t\t\t\t\t\t\titem.innerHTML = ''\r\n\r\n\t\t\t\t\t\t\t\t\tlet nodeYourAns = getNodes(\r\n\t\t\t\t\t\t\t\t\t\t`<div class=\"drag-list-answer\" id=\"${ques.ExerciseAnswer[0].AnswerID}\"><span>${ques.ExerciseAnswer[0].AnswerContent}</span></div>`\r\n\t\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t\t\titem.appendChild(nodeYourAns[0])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// Tạo đáp án đúng để hover\r\n\t\t\t\t\t\t\t\tlet nodeCorrectAns = getNodes(\r\n\t\t\t\t\t\t\t\t\t`<div class=\"tooltip-answer\" id=\"${quesID}\">${ques.ExerciseAnswer[0].ExerciseAnswerContent}</div>`\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\titem.appendChild(nodeCorrectAns[0])\r\n\r\n\t\t\t\t\t\t\t\tlistCorrectAnswer.push({\r\n\t\t\t\t\t\t\t\t\tid: ques.ExerciseAnswer[0].ExerciseAnswerID,\r\n\t\t\t\t\t\t\t\t\tcontent: ques.ExerciseAnswer[0].ExerciseAnswerContent\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\tsetListCorrectAnswer([...listCorrectAnswer])\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (doneTestData || isDoingTest) {\r\n\t\t\t// -- Sắp xếp lại vị trí\r\n\t\t\tlet positionSpace = document.querySelectorAll('.position-space')\r\n\t\t\tpositionSpace.forEach((item) => {\r\n\t\t\t\titem.classList.remove('active')\r\n\t\t\t\tif (parseInt(item.id) === activeID) {\r\n\t\t\t\t\titem.classList.add('active')\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}, [activeID])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (doneTestData) {\r\n\t\t\tif (listCorrectAnswer.length > 0) {\r\n\t\t\t\tlet spaceEditor = document.querySelectorAll('.test-wrapper .drag-list .space-editor')\r\n\t\t\t\tlet tooltipAns = document.querySelectorAll('.test-wrapper .drag-list .tooltip-answer')\r\n\r\n\t\t\t\tspaceEditor.forEach((item) => {\r\n\t\t\t\t\t// Mouse over\r\n\t\t\t\t\titem.addEventListener('mouseover', () => {\r\n\t\t\t\t\t\tlet quesID = item.getAttribute('ques-id')\r\n\t\t\t\t\t\ttooltipAns.forEach((e) => {\r\n\t\t\t\t\t\t\tif (e.id === quesID) {\r\n\t\t\t\t\t\t\t\te.classList.remove('d-none')\r\n\t\t\t\t\t\t\t\te.classList.add('d-block')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\t// Mouse out\r\n\t\t\t\t\titem.addEventListener('mouseout', () => {\r\n\t\t\t\t\t\tlet quesID = item.getAttribute('ques-id')\r\n\t\t\t\t\t\ttooltipAns.forEach((e) => {\r\n\t\t\t\t\t\t\tif (e.id === quesID) {\r\n\t\t\t\t\t\t\t\te.classList.remove('d-block')\r\n\t\t\t\t\t\t\t\te.classList.add('d-none')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}, [listCorrectAnswer])\r\n\r\n\treturn (\r\n\t\t<div className=\"drag-list\" style={{ height: '100%', marginLeft: -40 }}>\r\n\t\t\t<div className=\"wrap-drag\">\r\n\t\t\t\t<div className=\"main-drag test-body\">\r\n\t\t\t\t\t<div className=\"\">{ReactHtmlParser(dataQuestion.Content)}</div>\r\n\t\t\t\t\t<h6 className=\"font-italic mb-3 mt-4\">Kéo đáp án vào ô thích hợp</h6>\r\n\r\n\t\t\t\t\t<div className=\"col-lg-6 col-md-12 col-sm-12 col-12\" style={{}}>\r\n\t\t\t\t\t\t{ReactHtmlParser(dataQuestion.Paragraph)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{!openPagi && (\r\n\t\t\t\t\t<div className=\"fixed-ans\">\r\n\t\t\t\t\t\t<div className=\"row m-0\" id=\"area-drop\" onDrop={(e) => drop(e)} onDragOver={(e) => allowDrop(e)}>\r\n\t\t\t\t\t\t\t{dataQuestionClone?.ExerciseTopic.map((item, index) =>\r\n\t\t\t\t\t\t\t\titem.ExerciseAnswer.map((ans, indexAns) => (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"drag-list-answer ml-3\"\r\n\t\t\t\t\t\t\t\t\t\tkey={indexAns}\r\n\t\t\t\t\t\t\t\t\t\tdraggable=\"true\"\r\n\t\t\t\t\t\t\t\t\t\tonDrop={(e) => (e.preventDefault(), e.stopPropagation())}\r\n\t\t\t\t\t\t\t\t\t\tonDragStart={(e) => drag(e)}\r\n\t\t\t\t\t\t\t\t\t\tid={ans.ID}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<span> {ans.AnswerContent}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{/* \r\n\r\n\t\t\t*/}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DragList\r\n"]},"metadata":{},"sourceType":"module"}
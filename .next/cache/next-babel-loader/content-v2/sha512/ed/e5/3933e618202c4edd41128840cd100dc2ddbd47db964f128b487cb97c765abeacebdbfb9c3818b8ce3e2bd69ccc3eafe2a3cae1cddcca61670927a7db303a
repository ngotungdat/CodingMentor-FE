{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\PowerTable\\\\index.tsx\";\nimport { Card, Table } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useWrap } from '~/context/wrap';\nconst PowerTable = /*#__PURE__*/React.memo(props => {\n  var _props$loading, _props$loading2;\n\n  const {\n    getTitlePage\n  } = useWrap();\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    selectedRowKeys: []\n  });\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    0: activeIndex,\n    1: setActiveIndex\n  } = useState(null);\n\n  const selectRow = record => {\n    const selectedRowKeys = [];\n\n    if (selectedRowKeys.indexOf(record.key) >= 0) {\n      selectedRowKeys.splice(selectedRowKeys.indexOf(record.key), 1);\n    } else {\n      selectedRowKeys.push(record.key);\n    }\n\n    setState({\n      selectedRowKeys\n    });\n  };\n\n  const onSelectedRowKeysChange = selectedRowKeys => {\n    setState({\n      selectedRowKeys\n    });\n  };\n\n  const changePagination = (pageNumber, pageSize) => {\n    if (typeof props.getPagination != 'undefined') {\n      props.getPagination(pageNumber, pageSize);\n    } else {\n      return pageNumber;\n    }\n  };\n\n  const rowSelection = {\n    selectedRowKeys: state.selectedRowKeys,\n    onChange: onSelectedRowKeysChange,\n    hideSelectAll: true\n  };\n\n  const onShowSizeChange = (current, size) => {\n    console.log('Curren: ', current);\n    console.log('Size: ', size);\n  };\n\n  useEffect(() => {\n    if (props.TitlePage) {\n      getTitlePage(props.TitlePage);\n    }\n\n    if (props.dataSource) {\n      let dataClone = [...props.dataSource];\n      dataClone.forEach((item, index) => {\n        item.key = index.toString();\n      });\n      setDataSource(dataClone);\n    }\n  }, [props.dataSource]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap-table\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: `cardRadius ${props.addClass && props.addClass} ${props.Size ? props.Size : '' // table-small || table-medium\n            }`,\n            title: props.Extra,\n            extra: props.TitleCard,\n            children: [props.children, /*#__PURE__*/_jsxDEV(Table, {\n              loading: ((_props$loading = props.loading) === null || _props$loading === void 0 ? void 0 : _props$loading.type) == 'GET_ALL' && ((_props$loading2 = props.loading) === null || _props$loading2 === void 0 ? void 0 : _props$loading2.status),\n              bordered: props.haveBorder ? props.haveBorder : false // boolean\n              ,\n              scroll: {\n                x: 'max-content',\n                y: 450\n              },\n              columns: props.columns,\n              dataSource: dataSource,\n              size: \"middle\",\n              pagination: {\n                pageSize: 30,\n                pageSizeOptions: ['30'],\n                showTotal: () => props.totalPage && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-weight-black\",\n                  children: [\"T\\u1ED5ng c\\u1ED9ng: \", props.totalPage]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 46\n                }, this),\n                onShowSizeChange: onShowSizeChange,\n                total: props.totalPage && props.totalPage,\n                onChange: (pageNumber, pageSize) => changePagination(pageNumber, pageSize),\n                current: props.currentPage && props.currentPage\n              } // rowSelection={rowSelection}\n              ,\n              rowClassName: (record, index) => index == activeIndex ? 'table-row-active' : index % 2 === 0 ? 'table-row-light' : 'table-row-dark',\n              onRow: (record, index) => ({\n                onClick: () => {\n                  selectRow(record);\n                  setActiveIndex(index);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n});\nexport default PowerTable;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/PowerTable/index.tsx"],"names":["Card","Table","React","useEffect","useState","useWrap","PowerTable","memo","props","getTitlePage","state","setState","selectedRowKeys","dataSource","setDataSource","activeIndex","setActiveIndex","selectRow","record","indexOf","key","splice","push","onSelectedRowKeysChange","changePagination","pageNumber","pageSize","getPagination","rowSelection","onChange","hideSelectAll","onShowSizeChange","current","size","console","log","TitlePage","dataClone","forEach","item","index","toString","addClass","Size","Extra","TitleCard","children","loading","type","status","haveBorder","x","y","columns","pageSizeOptions","showTotal","totalPage","total","currentPage","onClick"],"mappings":"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","sourcesContent":["import { Card, Table } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst PowerTable = React.memo((props: any) => {\r\n\tconst { getTitlePage } = useWrap()\r\n\tconst [state, setState] = useState({ selectedRowKeys: [] })\r\n\tconst [dataSource, setDataSource] = useState([])\r\n\tconst [activeIndex, setActiveIndex] = useState(null)\r\n\r\n\tconst selectRow = (record) => {\r\n\t\tconst selectedRowKeys = []\r\n\r\n\t\tif (selectedRowKeys.indexOf(record.key) >= 0) {\r\n\t\t\tselectedRowKeys.splice(selectedRowKeys.indexOf(record.key), 1)\r\n\t\t} else {\r\n\t\t\tselectedRowKeys.push(record.key)\r\n\t\t}\r\n\t\tsetState({ selectedRowKeys })\r\n\t}\r\n\r\n\tconst onSelectedRowKeysChange = (selectedRowKeys) => {\r\n\t\tsetState({ selectedRowKeys })\r\n\t}\r\n\r\n\tconst changePagination = (pageNumber, pageSize) => {\r\n\t\tif (typeof props.getPagination != 'undefined') {\r\n\t\t\tprops.getPagination(pageNumber, pageSize)\r\n\t\t} else {\r\n\t\t\treturn pageNumber\r\n\t\t}\r\n\t}\r\n\r\n\tconst rowSelection = {\r\n\t\tselectedRowKeys: state.selectedRowKeys,\r\n\t\tonChange: onSelectedRowKeysChange,\r\n\t\thideSelectAll: true\r\n\t}\r\n\r\n\tconst onShowSizeChange = (current, size) => {\r\n\t\tconsole.log('Curren: ', current)\r\n\t\tconsole.log('Size: ', size)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.TitlePage) {\r\n\t\t\tgetTitlePage(props.TitlePage)\r\n\t\t}\r\n\t\tif (props.dataSource) {\r\n\t\t\tlet dataClone = [...props.dataSource]\r\n\t\t\tdataClone.forEach((item, index) => {\r\n\t\t\t\titem.key = index.toString()\r\n\t\t\t})\r\n\r\n\t\t\tsetDataSource(dataClone)\r\n\t\t}\r\n\t}, [props.dataSource])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t{/* <TitlePage title={props.TitlePage} /> */}\r\n\t\t\t\t\t<div className=\"wrap-table\">\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tclassName={`cardRadius ${props.addClass && props.addClass} ${\r\n\t\t\t\t\t\t\t\tprops.Size ? props.Size : '' // table-small || table-medium\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\ttitle={props.Extra}\r\n\t\t\t\t\t\t\textra={props.TitleCard}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{props.children}\r\n\t\t\t\t\t\t\t<Table\r\n\t\t\t\t\t\t\t\tloading={props.loading?.type == 'GET_ALL' && props.loading?.status}\r\n\t\t\t\t\t\t\t\tbordered={props.haveBorder ? props.haveBorder : false} // boolean\r\n\t\t\t\t\t\t\t\tscroll={{ x: 'max-content', y: 450 }}\r\n\t\t\t\t\t\t\t\tcolumns={props.columns}\r\n\t\t\t\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\t\t\t\tsize=\"middle\"\r\n\t\t\t\t\t\t\t\tpagination={{\r\n\t\t\t\t\t\t\t\t\tpageSize: 30,\r\n\t\t\t\t\t\t\t\t\tpageSizeOptions: ['30'],\r\n\t\t\t\t\t\t\t\t\tshowTotal: () => props.totalPage && <div className=\"font-weight-black\">Tổng cộng: {props.totalPage}</div>,\r\n\t\t\t\t\t\t\t\t\tonShowSizeChange: onShowSizeChange,\r\n\t\t\t\t\t\t\t\t\ttotal: props.totalPage && props.totalPage,\r\n\t\t\t\t\t\t\t\t\tonChange: (pageNumber, pageSize) => changePagination(pageNumber, pageSize),\r\n\t\t\t\t\t\t\t\t\tcurrent: props.currentPage && props.currentPage\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t// rowSelection={rowSelection}\r\n\t\t\t\t\t\t\t\trowClassName={(record, index) =>\r\n\t\t\t\t\t\t\t\t\tindex == activeIndex ? 'table-row-active' : index % 2 === 0 ? 'table-row-light' : 'table-row-dark'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonRow={(record, index) => ({\r\n\t\t\t\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\t\t\t\tselectRow(record)\r\n\t\t\t\t\t\t\t\t\t\tsetActiveIndex(index)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n})\r\n\r\nexport default PowerTable\r\n"]},"metadata":{},"sourceType":"module"}
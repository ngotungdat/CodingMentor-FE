{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Dashboard\\\\StatisticalPercentOfStudentByArea.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Skeleton } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total';\nimport BarChartStatistical from './BarChart';\n\nvar StatisticalRate = function StatisticalRate() {\n  _s();\n\n  var _useState = useState([]),\n      statisticalPercentStudentByArea = _useState[0],\n      setStatisticalPercentStudentByArea = _useState[1];\n\n  var _useState2 = useState({\n    status: '',\n    loading: false\n  }),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState({\n    branch: 0,\n    StartYear: 2017,\n    EndYear: 2022,\n    Year: new Date().getFullYear(),\n    Month: new Date().getMonth() + 1\n  }),\n      todoApi = _useState3[0],\n      setTodoApi = _useState3[1];\n\n  var getPercentOfStudentByArea = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, temp;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading({\n                status: 'GET_STAT_PERCENT_STUDENT_BY_AREA',\n                loading: true\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return statisticalApi.getPercentOfStudentByArea();\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                temp = [];\n                res.data.data.forEach(function (item) {\n                  return temp.push({\n                    ID: item.AreaID,\n                    dataKey: item.AreaName,\n                    value: item.Amount,\n                    title: 'TỈ LỆ HỌC VIÊN THEO TỈNH THÀNH'\n                  });\n                });\n                setStatisticalPercentStudentByArea(temp);\n              }\n\n              if (res.status === 204) {\n                setStatisticalPercentStudentByArea([]);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 11:\n              _context.prev = 11;\n              setIsLoading({\n                status: 'GET_STAT_PERCENT_STUDENT_BY_AREA',\n                loading: false\n              });\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9, 11, 14]]);\n    }));\n\n    return function getPercentOfStudentByArea() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getPercentOfStudentByArea();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading.status === 'GET_STAT_PERCENT_STUDENT_BY_AREA' && isLoading.loading == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-5\",\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        active: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(BarChartStatistical, {\n          title: 'Thống kê phần trăm học viên theo tỉnh thành',\n          dataStatistical: statisticalPercentStudentByArea,\n          colorTick: \"#0da779\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false);\n};\n\n_s(StatisticalRate, \"/LCku+vPEV+Ybkpqggs4ydFs6yk=\");\n\n_c = StatisticalRate;\nexport default StatisticalRate;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatisticalRate\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Dashboard/StatisticalPercentOfStudentByArea.tsx"],"names":["Skeleton","React","useState","useEffect","statisticalApi","BarChartStatistical","StatisticalRate","statisticalPercentStudentByArea","setStatisticalPercentStudentByArea","status","loading","isLoading","setIsLoading","branch","StartYear","EndYear","Year","Date","getFullYear","Month","getMonth","todoApi","setTodoApi","getPercentOfStudentByArea","res","temp","data","forEach","item","push","ID","AreaID","dataKey","AreaName","value","Amount","title"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,MAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,OAAOC,mBAAP,MAAgC,YAAhC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAAA,kBACiDJ,QAAQ,CAAsB,EAAtB,CADzD;AAAA,MACtBK,+BADsB;AAAA,MACWC,kCADX;;AAAA,mBAEKN,QAAQ,CAAC;AAC1CO,IAAAA,MAAM,EAAE,EADkC;AAE1CC,IAAAA,OAAO,EAAE;AAFiC,GAAD,CAFb;AAAA,MAEtBC,SAFsB;AAAA,MAEXC,YAFW;;AAAA,mBAMCV,QAAQ,CAAC;AACtCW,IAAAA,MAAM,EAAE,CAD8B;AAEtCC,IAAAA,SAAS,EAAE,IAF2B;AAGtCC,IAAAA,OAAO,EAAE,IAH6B;AAItCC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAJgC;AAKtCC,IAAAA,KAAK,EAAE,IAAIF,IAAJ,GAAWG,QAAX,KAAwB;AALO,GAAD,CANT;AAAA,MAMtBC,OANsB;AAAA,MAMbC,UANa;;AAc7B,MAAMC,yBAAyB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjCX,cAAAA,YAAY,CAAC;AAAEH,gBAAAA,MAAM,EAAE,kCAAV;AAA8CC,gBAAAA,OAAO,EAAE;AAAvD,eAAD,CAAZ;AADiC;AAAA;AAAA,qBAGhBN,cAAc,CAACmB,yBAAf,EAHgB;;AAAA;AAG5BC,cAAAA,GAH4B;;AAIhC,kBAAIA,GAAG,CAACf,MAAJ,KAAe,GAAnB,EAAwB;AACnBgB,gBAAAA,IADmB,GACZ,EADY;AAEvBD,gBAAAA,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,OAAd,CAAsB,UAACC,IAAD;AAAA,yBACrBH,IAAI,CAACI,IAAL,CAAU;AAAEC,oBAAAA,EAAE,EAAEF,IAAI,CAACG,MAAX;AAAmBC,oBAAAA,OAAO,EAAEJ,IAAI,CAACK,QAAjC;AAA2CC,oBAAAA,KAAK,EAAEN,IAAI,CAACO,MAAvD;AAA+DC,oBAAAA,KAAK,EAAE;AAAtE,mBAAV,CADqB;AAAA,iBAAtB;AAGA5B,gBAAAA,kCAAkC,CAACiB,IAAD,CAAlC;AACA;;AACD,kBAAID,GAAG,CAACf,MAAJ,KAAe,GAAnB,EAAwB;AACvBD,gBAAAA,kCAAkC,CAAC,EAAD,CAAlC;AACA;;AAb+B;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgBhCI,cAAAA,YAAY,CAAC;AAAEH,gBAAAA,MAAM,EAAE,kCAAV;AAA8CC,gBAAAA,OAAO,EAAE;AAAvD,eAAD,CAAZ;AAhBgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAzBa,yBAAyB;AAAA;AAAA;AAAA,KAA/B;;AAoBApB,EAAAA,SAAS,CAAC,YAAM;AACfoB,IAAAA,yBAAyB;AACzB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAA,cACEZ,SAAS,CAACF,MAAV,KAAqB,kCAArB,IAA2DE,SAAS,CAACD,OAAV,IAAqB,IAAhF,gBACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACC,QAAC,QAAD;AAAU,QAAA,MAAM;AAAhB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,aADA,gBAKA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACC,QAAC,mBAAD;AACC,UAAA,KAAK,EAAE,6CADR;AAEC,UAAA,eAAe,EAAEH,+BAFlB;AAGC,UAAA,SAAS,EAAC;AAHX;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AANF,mBADD;AAmBA,CAzDD;;GAAMD,e;;KAAAA,e;AA2DN,eAAeA,eAAf","sourcesContent":["import { Skeleton } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total'\r\nimport BarChartStatistical from './BarChart'\r\n\r\nconst StatisticalRate = () => {\r\n\tconst [statisticalPercentStudentByArea, setStatisticalPercentStudentByArea] = useState<IStatDataBarChart[]>([])\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\tstatus: '',\r\n\t\tloading: false\r\n\t})\r\n\tconst [todoApi, setTodoApi] = useState({\r\n\t\tbranch: 0,\r\n\t\tStartYear: 2017,\r\n\t\tEndYear: 2022,\r\n\t\tYear: new Date().getFullYear(),\r\n\t\tMonth: new Date().getMonth() + 1\r\n\t})\r\n\r\n\tconst getPercentOfStudentByArea = async () => {\r\n\t\tsetIsLoading({ status: 'GET_STAT_PERCENT_STUDENT_BY_AREA', loading: true })\r\n\t\ttry {\r\n\t\t\tlet res = await statisticalApi.getPercentOfStudentByArea()\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tlet temp = []\r\n\t\t\t\tres.data.data.forEach((item) =>\r\n\t\t\t\t\ttemp.push({ ID: item.AreaID, dataKey: item.AreaName, value: item.Amount, title: 'TỈ LỆ HỌC VIÊN THEO TỈNH THÀNH' })\r\n\t\t\t\t)\r\n\t\t\t\tsetStatisticalPercentStudentByArea(temp)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetStatisticalPercentStudentByArea([])\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ status: 'GET_STAT_PERCENT_STUDENT_BY_AREA', loading: false })\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetPercentOfStudentByArea()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading.status === 'GET_STAT_PERCENT_STUDENT_BY_AREA' && isLoading.loading == true ? (\r\n\t\t\t\t<div className=\"row pb-5\">\r\n\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"row pb-5\">\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<BarChartStatistical\r\n\t\t\t\t\t\t\ttitle={'Thống kê phần trăm học viên theo tỉnh thành'}\r\n\t\t\t\t\t\t\tdataStatistical={statisticalPercentStudentByArea}\r\n\t\t\t\t\t\t\tcolorTick=\"#0da779\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default StatisticalRate\r\n"]},"metadata":{},"sourceType":"module"}
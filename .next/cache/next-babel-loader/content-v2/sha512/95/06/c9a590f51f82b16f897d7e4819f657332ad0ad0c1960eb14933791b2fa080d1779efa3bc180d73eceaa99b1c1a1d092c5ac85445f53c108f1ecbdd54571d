{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Elements\\\\EditorSimple\\\\Editor.tsx\";\nimport React, { useEffect, useState, useRef, useLayoutEffect } from 'react';\nimport ReactSummernote from 'react-summernote';\nimport 'react-summernote/dist/react-summernote.css'; // import styles\n\nimport 'react-summernote/lang/summernote-ru-RU'; // you can import any other locale\n\nimport { studentApi } from '~/apiBase';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Modal, Input } from 'antd'; // Import bootstrap(v3 or v4) dependencies\n\nimport 'bootstrap/js/src/modal';\nimport 'bootstrap/js/src/dropdown';\nimport 'bootstrap/js/src/tooltip';\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst EditorSummernote = props => {\n  const {\n    getDataEditor,\n    questionContent,\n    isReset,\n    isTranslate,\n    defaultValue,\n    isSimpleTool,\n    height\n  } = props;\n  const {\n    0: valueEditor,\n    1: setValueEditor\n  } = useState(questionContent);\n  const {\n    0: textSelect,\n    1: setTextSelect\n  } = useState(null);\n  const {\n    0: textTranslate,\n    1: setTextTranslate\n  } = useState(null);\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: dataTranslate,\n    1: setDataTranslate\n  } = useState([]);\n  const {\n    0: isAddTranslate,\n    1: setIsAddTranslate\n  } = useState(false);\n  const {\n    0: reloadContent,\n    1: setReloadContent\n  } = useState(false);\n  let inputTranslate = useRef(null); // Châu thêm defaultValue\n\n  useEffect(() => {\n    if (defaultValue !== undefined && defaultValue !== null) {\n      setValueEditor(defaultValue);\n    }\n  }, []);\n\n  const showModal = type => {\n    setIsModalVisible(true);\n\n    if (type == 'add') {\n      setIsAddTranslate(true);\n    } else {\n      setIsAddTranslate(false);\n    }\n  };\n\n  const handleOk = () => {\n    if (isAddTranslate) {\n      if (textSelect) {\n        handleAddTranslate();\n      }\n    } else {\n      handleFixTranslate();\n    }\n\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    setTextSelect(null);\n    setTextTranslate(null);\n  }; // GET TRANSLATE TEXT\n\n\n  const onChange_GetTranslateText = e => {\n    let text = e.target.value;\n    setTextTranslate(text);\n  };\n\n  const onKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleAddTranslate();\n      setIsModalVisible(false);\n    }\n  }; // HANDLE FIX TRANSLATE\n\n\n  const handleFixTranslate = () => {\n    let elementNote = document.querySelectorAll('#editor-element .note-editable .text-note-of-translate');\n    elementNote.forEach((item, index) => {\n      let noteID = parseInt(item.getAttribute('data-note'));\n      let textItem = item.innerHTML;\n      let indexData = dataTranslate.findIndex(e => e.noteID === noteID);\n\n      if (dataTranslate[indexData].textTranslate !== textItem) {\n        item.innerHTML = dataTranslate[indexData].textTranslate;\n        item.setAttribute('title', dataTranslate[indexData].textTranslate);\n      }\n    });\n    setReloadContent(true);\n  }; // HANDLE ADD TRANSLATE\n\n\n  const handleAddTranslate = () => {\n    let elementEditor = document.querySelectorAll('#editor-element .note-editable');\n    let elementP = document.querySelectorAll('#editor-element .note-editable p');\n\n    const onAdd = item => {\n      let innerText = item.innerHTML;\n\n      if (innerText.includes(textSelect)) {\n        let noteID = null;\n\n        if (dataTranslate.length < 1) {\n          noteID = 0;\n        } else {\n          noteID = dataTranslate[dataTranslate.length - 1].noteID + 1;\n        }\n\n        item.innerHTML = innerText.replace(textSelect, `<input class=\"input-prevent-translate\"/><span title=\"${textTranslate}\" class=\"text-normal-of-translate\">${textSelect}<span data-note=\"${noteID}\" class=\"text-note-of-translate\">${textTranslate}</span></span><input class=\"input-prevent-translate\"/>`);\n        dataTranslate.push({\n          noteID: noteID,\n          textSelect: textSelect,\n          textTranslate: textTranslate\n        });\n        setDataTranslate([...dataTranslate]);\n      }\n    };\n\n    if (elementP.length > 0) {\n      elementP.forEach(item => {\n        onAdd(item);\n      });\n    } else {\n      onAdd(elementEditor[0]);\n    }\n\n    setTextTranslate(null);\n    setTextSelect(null);\n    setReloadContent(true);\n  };\n\n  const onFixTextTranslate = (e, noteID) => {\n    let text = e.target.value;\n    let index = dataTranslate.findIndex(item => item.noteID == noteID);\n    console.log('Index: ', index);\n    dataTranslate[index].textTranslate = text;\n    setDataTranslate([...dataTranslate]);\n  };\n\n  useEffect(() => {\n    let getNodes = str => new DOMParser().parseFromString(str, 'text/html').body.childNodes;\n\n    let editorElement = document.getElementById('editor-element');\n    editorElement.addEventListener('mouseup', e => {\n      var sel = window.getSelection && window.getSelection();\n\n      if (sel && sel.rangeCount > 0) {\n        let textSelect = window.getSelection().toString();\n        setTextSelect(textSelect);\n      }\n    });\n  }); // ON CHANGE\n\n  const onChange = content => {\n    getDataEditor(content);\n  }; // UPLOAD IMAGES\n\n\n  const onImageUpload = async fileList => {\n    try {\n      let res = await studentApi.uploadImage(fileList[0]);\n\n      if (res.status == 200) {\n        ReactSummernote.insertImage(res.data.data);\n      }\n    } catch (error) {\n      console.log('Error', error);\n    } finally {}\n  };\n\n  useLayoutEffect(() => {\n    if (isModalVisible) {\n      inputTranslate.current && inputTranslate.current.select();\n    }\n  }, [isModalVisible]);\n  useEffect(() => {\n    if (reloadContent) {\n      let elementEditor = document.querySelectorAll('#editor-element .note-editable');\n      setValueEditor(elementEditor[0].innerHTML);\n      getDataEditor(elementEditor[0].innerHTML);\n      setReloadContent(false);\n    }\n  }, [reloadContent]); // HANDLE RESET\n\n  useEffect(() => {\n    isReset && (ReactSummernote.reset(), setValueEditor(''));\n  }, [isReset]);\n  useEffect(() => {\n    let elementNote = document.querySelectorAll('#editor-element .note-editable .text-normal-of-translate');\n    console.log('Element Note: ', elementNote);\n\n    if (elementNote.length > 0) {\n      elementNote.forEach(item => {\n        //@ts-ignore\n        let noteID = item.lastChild.attributes[0].nodeValue;\n        let textSelect = item.firstChild.nodeValue;\n        let textTranslate = item.lastChild.childNodes[0].nodeValue;\n        dataTranslate.push({\n          noteID: parseInt(noteID),\n          textSelect: textSelect,\n          textTranslate: textTranslate\n        });\n      });\n      setDataTranslate([...dataTranslate]);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Phi\\xEAn \\xE2m\",\n      visible: isModalVisible,\n      okText: \"L\\u01B0u\",\n      cancelText: \"H\\u1EE7y\",\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: isAddTranslate ? textSelect ? /*#__PURE__*/_jsxDEV(Input, {\n        allowClear: true,\n        id: \"input-translate\",\n        className: \"style-input\",\n        value: textTranslate,\n        onChange: onChange_GetTranslateText,\n        onKeyDown: onKeyDown,\n        ref: inputTranslate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 500\n        },\n        children: \"Vui l\\xF2ng ch\\u1ECDn n\\u1ED9i dung c\\u1EA7n phi\\xEAn \\xE2m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-translate\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-center\",\n              children: \"N\\u1ED9i dung\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-center\",\n              children: \"Phi\\xEAn \\xE2m\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: dataTranslate.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.textSelect\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"show-text-translate\",\n                  type: \"text\",\n                  value: item.textTranslate,\n                  onChange: e => {\n                    onFixTextTranslate(e, item.noteID);\n                  },\n                  onKeyDown: e => {\n                    if (e.key === 'Enter') {\n                      handleFixTranslate();\n                      setIsModalVisible(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 11\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 10\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-editor\",\n      id: \"editor-element\",\n      style: {\n        borderRadius: 8\n      },\n      children: [isTranslate && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center mb-2\",\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            width: '100%',\n            justifyContent: 'flex-end'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-editor d-flex align-items-center mr-2\",\n            onClick: () => showModal('add'),\n            children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 9\n            }, this), \" Th\\xEAm Phi\\xEAn \\xE2m\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 7\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(ReactSummernote, {\n        value: valueEditor,\n        children: ReactHtmlParser(valueEditor),\n        options: {\n          lang: 'vn',\n          height: height || 220,\n          dialogsInBody: true,\n          toolbar: isSimpleTool ? [['style', ['style']], ['font', ['bold', 'underline']], ['fontname', ['fontname']], ['para', ['ul', 'ol', 'paragraph']], ['insert', ['link']]] : [['style', ['style']], ['font', ['bold', 'underline', 'clear']], ['fontname', ['fontname']], ['para', ['ul', 'ol', 'paragraph']], ['table', ['table']], ['insert', ['link', 'picture', 'video']], ['view', ['fullscreen', 'codeview']]]\n        },\n        onChange: content => onChange(content),\n        onImageUpload: onImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport default EditorSummernote;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Elements/EditorSimple/Editor.tsx"],"names":["React","useEffect","useState","useRef","useLayoutEffect","ReactSummernote","studentApi","ReactHtmlParser","Modal","Input","PlusOutlined","EditorSummernote","props","getDataEditor","questionContent","isReset","isTranslate","defaultValue","isSimpleTool","height","valueEditor","setValueEditor","textSelect","setTextSelect","textTranslate","setTextTranslate","isModalVisible","setIsModalVisible","dataTranslate","setDataTranslate","isAddTranslate","setIsAddTranslate","reloadContent","setReloadContent","inputTranslate","undefined","showModal","type","handleOk","handleAddTranslate","handleFixTranslate","handleCancel","onChange_GetTranslateText","e","text","target","value","onKeyDown","key","elementNote","document","querySelectorAll","forEach","item","index","noteID","parseInt","getAttribute","textItem","innerHTML","indexData","findIndex","setAttribute","elementEditor","elementP","onAdd","innerText","includes","length","replace","push","onFixTextTranslate","console","log","getNodes","str","DOMParser","parseFromString","body","childNodes","editorElement","getElementById","addEventListener","sel","window","getSelection","rangeCount","toString","onChange","content","onImageUpload","fileList","res","uploadImage","status","insertImage","data","error","current","select","reset","lastChild","attributes","nodeValue","firstChild","fontWeight","map","borderRadius","display","flexDirection","width","justifyContent","lang","dialogsInBody","toolbar"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, useLayoutEffect } from 'react'\r\nimport ReactSummernote from 'react-summernote'\r\nimport 'react-summernote/dist/react-summernote.css' // import styles\r\nimport 'react-summernote/lang/summernote-ru-RU' // you can import any other locale\r\nimport { studentApi } from '~/apiBase'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { Modal, Input } from 'antd'\r\n\r\n// Import bootstrap(v3 or v4) dependencies\r\nimport 'bootstrap/js/src/modal'\r\nimport 'bootstrap/js/src/dropdown'\r\nimport 'bootstrap/js/src/tooltip'\r\nimport { BorderOutlined, EditOutlined, PlusOutlined } from '@ant-design/icons'\r\n\r\ntype dataTranslate = Array<{\r\n\tnoteID: number\r\n\ttextSelect: string\r\n\ttextTranslate: string\r\n}>\r\n\r\nconst EditorSummernote = (props) => {\r\n\tconst { getDataEditor, questionContent, isReset, isTranslate, defaultValue, isSimpleTool, height } = props\r\n\tconst [valueEditor, setValueEditor] = useState(questionContent)\r\n\tconst [textSelect, setTextSelect] = useState(null)\r\n\tconst [textTranslate, setTextTranslate] = useState(null)\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst [dataTranslate, setDataTranslate] = useState<dataTranslate>([])\r\n\tconst [isAddTranslate, setIsAddTranslate] = useState(false)\r\n\tconst [reloadContent, setReloadContent] = useState(false)\r\n\tlet inputTranslate = useRef(null)\r\n\r\n\t// Châu thêm defaultValue\r\n\tuseEffect(() => {\r\n\t\tif (defaultValue !== undefined && defaultValue !== null) {\r\n\t\t\tsetValueEditor(defaultValue)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst showModal = (type) => {\r\n\t\tsetIsModalVisible(true)\r\n\t\tif (type == 'add') {\r\n\t\t\tsetIsAddTranslate(true)\r\n\t\t} else {\r\n\t\t\tsetIsAddTranslate(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleOk = () => {\r\n\t\tif (isAddTranslate) {\r\n\t\t\tif (textSelect) {\r\n\t\t\t\thandleAddTranslate()\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\thandleFixTranslate()\r\n\t\t}\r\n\t\tsetIsModalVisible(false)\r\n\t}\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false)\r\n\t\tsetTextSelect(null)\r\n\t\tsetTextTranslate(null)\r\n\t}\r\n\r\n\t// GET TRANSLATE TEXT\r\n\tconst onChange_GetTranslateText = (e) => {\r\n\t\tlet text = e.target.value\r\n\t\tsetTextTranslate(text)\r\n\t}\r\n\r\n\tconst onKeyDown = (e) => {\r\n\t\tif (e.key === 'Enter') {\r\n\t\t\thandleAddTranslate()\r\n\t\t\tsetIsModalVisible(false)\r\n\t\t}\r\n\t}\r\n\r\n\t// HANDLE FIX TRANSLATE\r\n\tconst handleFixTranslate = () => {\r\n\t\tlet elementNote = document.querySelectorAll('#editor-element .note-editable .text-note-of-translate')\r\n\t\telementNote.forEach((item, index) => {\r\n\t\t\tlet noteID = parseInt(item.getAttribute('data-note'))\r\n\t\t\tlet textItem = item.innerHTML\r\n\r\n\t\t\tlet indexData = dataTranslate.findIndex((e) => e.noteID === noteID)\r\n\t\t\tif (dataTranslate[indexData].textTranslate !== textItem) {\r\n\t\t\t\titem.innerHTML = dataTranslate[indexData].textTranslate\r\n\t\t\t\titem.setAttribute('title', dataTranslate[indexData].textTranslate)\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetReloadContent(true)\r\n\t}\r\n\r\n\t// HANDLE ADD TRANSLATE\r\n\tconst handleAddTranslate = () => {\r\n\t\tlet elementEditor = document.querySelectorAll('#editor-element .note-editable')\r\n\t\tlet elementP = document.querySelectorAll('#editor-element .note-editable p')\r\n\r\n\t\tconst onAdd = (item) => {\r\n\t\t\tlet innerText = item.innerHTML\r\n\t\t\tif (innerText.includes(textSelect)) {\r\n\t\t\t\tlet noteID = null\r\n\t\t\t\tif (dataTranslate.length < 1) {\r\n\t\t\t\t\tnoteID = 0\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnoteID = dataTranslate[dataTranslate.length - 1].noteID + 1\r\n\t\t\t\t}\r\n\r\n\t\t\t\titem.innerHTML = innerText.replace(\r\n\t\t\t\t\ttextSelect,\r\n\t\t\t\t\t`<input class=\"input-prevent-translate\"/><span title=\"${textTranslate}\" class=\"text-normal-of-translate\">${textSelect}<span data-note=\"${noteID}\" class=\"text-note-of-translate\">${textTranslate}</span></span><input class=\"input-prevent-translate\"/>`\r\n\t\t\t\t)\r\n\r\n\t\t\t\tdataTranslate.push({\r\n\t\t\t\t\tnoteID: noteID,\r\n\t\t\t\t\ttextSelect: textSelect,\r\n\t\t\t\t\ttextTranslate: textTranslate\r\n\t\t\t\t})\r\n\t\t\t\tsetDataTranslate([...dataTranslate])\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (elementP.length > 0) {\r\n\t\t\telementP.forEach((item) => {\r\n\t\t\t\tonAdd(item)\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tonAdd(elementEditor[0])\r\n\t\t}\r\n\r\n\t\tsetTextTranslate(null)\r\n\t\tsetTextSelect(null)\r\n\t\tsetReloadContent(true)\r\n\t}\r\n\r\n\tconst onFixTextTranslate = (e, noteID) => {\r\n\t\tlet text = e.target.value\r\n\t\tlet index = dataTranslate.findIndex((item) => item.noteID == noteID)\r\n\r\n\t\tconsole.log('Index: ', index)\r\n\r\n\t\tdataTranslate[index].textTranslate = text\r\n\t\tsetDataTranslate([...dataTranslate])\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tlet getNodes = (str) => new DOMParser().parseFromString(str, 'text/html').body.childNodes\r\n\r\n\t\tlet editorElement = document.getElementById('editor-element')\r\n\t\teditorElement.addEventListener('mouseup', (e) => {\r\n\t\t\tvar sel = window.getSelection && window.getSelection()\r\n\t\t\tif (sel && sel.rangeCount > 0) {\r\n\t\t\t\tlet textSelect = window.getSelection().toString()\r\n\t\t\t\tsetTextSelect(textSelect)\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n\r\n\t// ON CHANGE\r\n\tconst onChange = (content) => {\r\n\t\tgetDataEditor(content)\r\n\t}\r\n\r\n\t// UPLOAD IMAGES\r\n\tconst onImageUpload = async (fileList) => {\r\n\t\ttry {\r\n\t\t\tlet res = await studentApi.uploadImage(fileList[0])\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tReactSummernote.insertImage(res.data.data)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Error', error)\r\n\t\t} finally {\r\n\t\t}\r\n\t}\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\tif (isModalVisible) {\r\n\t\t\tinputTranslate.current && inputTranslate.current.select()\r\n\t\t}\r\n\t}, [isModalVisible])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (reloadContent) {\r\n\t\t\tlet elementEditor = document.querySelectorAll('#editor-element .note-editable')\r\n\t\t\tsetValueEditor(elementEditor[0].innerHTML)\r\n\t\t\tgetDataEditor(elementEditor[0].innerHTML)\r\n\t\t\tsetReloadContent(false)\r\n\t\t}\r\n\t}, [reloadContent])\r\n\r\n\t// HANDLE RESET\r\n\tuseEffect(() => {\r\n\t\tisReset && (ReactSummernote.reset(), setValueEditor(''))\r\n\t}, [isReset])\r\n\r\n\tuseEffect(() => {\r\n\t\tlet elementNote = document.querySelectorAll('#editor-element .note-editable .text-normal-of-translate')\r\n\r\n\t\tconsole.log('Element Note: ', elementNote)\r\n\r\n\t\tif (elementNote.length > 0) {\r\n\t\t\telementNote.forEach((item) => {\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tlet noteID = item.lastChild.attributes[0].nodeValue\r\n\t\t\t\tlet textSelect = item.firstChild.nodeValue\r\n\t\t\t\tlet textTranslate = item.lastChild.childNodes[0].nodeValue\r\n\t\t\t\tdataTranslate.push({\r\n\t\t\t\t\tnoteID: parseInt(noteID),\r\n\t\t\t\t\ttextSelect: textSelect,\r\n\t\t\t\t\ttextTranslate: textTranslate\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\tsetDataTranslate([...dataTranslate])\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal title=\"Phiên âm\" visible={isModalVisible} okText=\"Lưu\" cancelText=\"Hủy\" onOk={handleOk} onCancel={handleCancel}>\r\n\t\t\t\t{isAddTranslate ? (\r\n\t\t\t\t\ttextSelect ? (\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tallowClear\r\n\t\t\t\t\t\t\tid=\"input-translate\"\r\n\t\t\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\t\t\tvalue={textTranslate}\r\n\t\t\t\t\t\t\tonChange={onChange_GetTranslateText}\r\n\t\t\t\t\t\t\tonKeyDown={onKeyDown}\r\n\t\t\t\t\t\t\tref={inputTranslate}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p style={{ fontWeight: 500 }}>Vui lòng chọn nội dung cần phiên âm</p>\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"detail-translate\">\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<th className=\"text-center\">Nội dung</th>\r\n\t\t\t\t\t\t\t\t<th className=\"text-center\">Phiên âm</th>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{dataTranslate.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<td>{item.textSelect}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"show-text-translate\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={item.textTranslate}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFixTextTranslate(e, item.noteID)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonKeyDown={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleFixTranslate()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Modal>\r\n\t\t\t<div className=\"wrap-editor\" id=\"editor-element\" style={{ borderRadius: 8 }}>\r\n\t\t\t\t{isTranslate && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"d-flex align-items-center mb-2\"\r\n\t\t\t\t\t\t\tstyle={{ display: 'flex', flexDirection: 'row', width: '100%', justifyContent: 'flex-end' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<button className=\"btn-editor d-flex align-items-center mr-2\" onClick={() => showModal('add')}>\r\n\t\t\t\t\t\t\t\t<PlusOutlined className=\"mr-2\" /> Thêm Phiên âm\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<ReactSummernote\r\n\t\t\t\t\tvalue={valueEditor}\r\n\t\t\t\t\tchildren={ReactHtmlParser(valueEditor)}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\tlang: 'vn',\r\n\t\t\t\t\t\theight: height || 220,\r\n\t\t\t\t\t\tdialogsInBody: true,\r\n\t\t\t\t\t\ttoolbar: isSimpleTool\r\n\t\t\t\t\t\t\t? [\r\n\t\t\t\t\t\t\t\t\t['style', ['style']],\r\n\t\t\t\t\t\t\t\t\t['font', ['bold', 'underline']],\r\n\t\t\t\t\t\t\t\t\t['fontname', ['fontname']],\r\n\t\t\t\t\t\t\t\t\t['para', ['ul', 'ol', 'paragraph']],\r\n\t\t\t\t\t\t\t\t\t['insert', ['link']]\r\n\t\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t\t: [\r\n\t\t\t\t\t\t\t\t\t['style', ['style']],\r\n\t\t\t\t\t\t\t\t\t['font', ['bold', 'underline', 'clear']],\r\n\t\t\t\t\t\t\t\t\t['fontname', ['fontname']],\r\n\t\t\t\t\t\t\t\t\t['para', ['ul', 'ol', 'paragraph']],\r\n\t\t\t\t\t\t\t\t\t['table', ['table']],\r\n\t\t\t\t\t\t\t\t\t['insert', ['link', 'picture', 'video']],\r\n\t\t\t\t\t\t\t\t\t['view', ['fullscreen', 'codeview']]\r\n\t\t\t\t\t\t\t  ]\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={(content) => onChange(content)}\r\n\t\t\t\t\tonImageUpload={onImageUpload}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default EditorSummernote\r\n"]},"metadata":{},"sourceType":"module"}
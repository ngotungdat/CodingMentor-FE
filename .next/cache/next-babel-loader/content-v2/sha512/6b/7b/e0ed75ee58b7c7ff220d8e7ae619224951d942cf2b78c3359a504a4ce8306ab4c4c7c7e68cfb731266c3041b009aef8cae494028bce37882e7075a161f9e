{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\QuestionBank\\\\QuestionFormType\\\\GroupForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { exerciseGroupApi } from '~/apiBase/';\nimport EditorSimple from '~/components/Elements/EditorSimple';\nimport UploadAudio from '~/components/Elements/UploadAudio';\nimport { useWrap } from '~/context/wrap';\n\nconst GroupForm = props => {\n  const {\n    isSubmit,\n    questionData,\n    changeIsSubmit,\n    visible,\n    changeData\n  } = props;\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    handleSubmit,\n    formState: {\n      isSubmitting,\n      errors,\n      isSubmitted\n    }\n  } = useForm();\n  const [form] = Form.useForm();\n  const {\n    0: questionDataForm,\n    1: setQuestionDataForm\n  } = useState(questionData);\n  const {\n    0: isResetEditor,\n    1: setIsResetEditor\n  } = useState(false);\n  const {\n    0: loadAtFirst,\n    1: setLoadAtFirst\n  } = useState(true);\n  console.log('question data Form: ', questionDataForm);\n  console.log('Question Data: ', questionData); // GET INTRODUCE EDITOR\n\n  const getIntroduceEditor = dataEditor => {\n    if (questionDataForm) {\n      questionDataForm.Introduce = dataEditor;\n    }\n\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // GET VALUE IN EDITOR\n\n\n  const getDataEditor = dataEditor => {\n    if (questionDataForm) {\n      console.log('Data content: ', dataEditor);\n      questionDataForm.Content = dataEditor;\n    }\n\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // Reset value in form\n\n\n  const resetForm = () => {\n    questionDataForm.Content = '';\n    questionDataForm.ExerciseAnswer.forEach(item => {\n      item.AnswerContent = '';\n      item.isTrue = false;\n    });\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // SUBMIT FORM\n\n\n  const handleSubmitQuestion = async () => {\n    let res = null;\n    let newData = {\n      Content: questionDataForm.Content,\n      CurriculumID: questionDataForm.CurriculumID,\n      Level: questionDataForm.Level,\n      Type: questionDataForm.Type,\n      LinkAudio: questionDataForm.LinkAudio,\n      Introduce: questionDataForm.Introduce,\n      SkillID: questionDataForm.SkillID\n    };\n    console.log('Data submit is: ', newData);\n\n    try {\n      if (questionDataForm.ID) {\n        res = await exerciseGroupApi.update(_objectSpread(_objectSpread({}, newData), {}, {\n          ID: questionDataForm.ID\n        }));\n      } else {\n        res = await exerciseGroupApi.add(newData);\n      }\n\n      if (res.status == 200) {\n        changeIsSubmit(questionDataForm.ID ? questionDataForm : res.data.data);\n        showNoti('success', `${questionDataForm.ID ? 'Cập nhật' : 'Thêm'} Thành công`);\n\n        if (!questionDataForm.ID) {\n          resetForm();\n        }\n\n        setIsResetEditor(true);\n        setTimeout(() => {\n          setIsResetEditor(false);\n        }, 500);\n      }\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    isSubmit && handleSubmitQuestion();\n  }, [isSubmit]);\n  useEffect(() => {\n    if (visible) {\n      if (!questionData.ID) {\n        questionData.Content = '';\n        questionData.Introduce = '';\n        questionData.LinkAudio = '';\n      }\n\n      setQuestionDataForm(questionData);\n    } else {\n      setQuestionDataForm(null);\n      setLoadAtFirst(true);\n    }\n  }, [visible]);\n  useEffect(() => {\n    console.log('chạy vô');\n\n    if (questionDataForm) {\n      if (!loadAtFirst) {\n        if (questionDataForm.Content !== '' || questionDataForm.Introduce !== '' || questionDataForm.LinkAudio !== '') {\n          changeData && changeData();\n        }\n      }\n\n      setLoadAtFirst(false);\n    }\n  }, [questionDataForm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-create-question\",\n    children: visible && questionDataForm && /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      layout: \"vertical\",\n      onFinish: handleSubmitQuestion,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"Question\",\n              label: \"Gi\\u1EDBi thi\\u1EC7u\",\n              children: /*#__PURE__*/_jsxDEV(EditorSimple, {\n                handleChange: value => getIntroduceEditor(value),\n                isReset: isResetEditor,\n                questionContent: questionDataForm === null || questionDataForm === void 0 ? void 0 : questionDataForm.Introduce,\n                questionData: questionDataForm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"Question\",\n              label: \"N\\u1ED9i dung\",\n              children: /*#__PURE__*/_jsxDEV(EditorSimple, {\n                isTranslate: true,\n                handleChange: value => getDataEditor(value),\n                isReset: isResetEditor,\n                questionContent: questionDataForm === null || questionDataForm === void 0 ? void 0 : questionDataForm.Content,\n                questionData: questionDataForm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"T\\u1EA3i l\\xEAn link Audio\",\n              children: /*#__PURE__*/_jsxDEV(UploadAudio, {\n                getFile: file => {\n                  questionDataForm.LinkAudio = file;\n                  setQuestionDataForm(_objectSpread({}, questionDataForm));\n                },\n                valueFile: questionDataForm === null || questionDataForm === void 0 ? void 0 : questionDataForm.LinkAudio\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 3\n  }, this);\n};\n\nexport default GroupForm;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/QuestionBank/QuestionFormType/GroupForm.tsx"],"names":["Form","React","useEffect","useState","useForm","exerciseGroupApi","EditorSimple","UploadAudio","useWrap","GroupForm","props","isSubmit","questionData","changeIsSubmit","visible","changeData","showNoti","handleSubmit","formState","isSubmitting","errors","isSubmitted","form","questionDataForm","setQuestionDataForm","isResetEditor","setIsResetEditor","loadAtFirst","setLoadAtFirst","console","log","getIntroduceEditor","dataEditor","Introduce","getDataEditor","Content","resetForm","ExerciseAnswer","forEach","item","AnswerContent","isTrue","handleSubmitQuestion","res","newData","CurriculumID","Level","Type","LinkAudio","SkillID","ID","update","add","status","data","setTimeout","error","value","file"],"mappings":"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","sourcesContent":["import { Form } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { exerciseGroupApi } from '~/apiBase/'\r\nimport EditorSimple from '~/components/Elements/EditorSimple'\r\nimport UploadAudio from '~/components/Elements/UploadAudio'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst GroupForm = (props) => {\r\n\tconst { isSubmit, questionData, changeIsSubmit, visible, changeData } = props\r\n\tconst { showNoti } = useWrap()\r\n\tconst {\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, errors, isSubmitted }\r\n\t} = useForm()\r\n\tconst [form] = Form.useForm()\r\n\tconst [questionDataForm, setQuestionDataForm] = useState(questionData)\r\n\tconst [isResetEditor, setIsResetEditor] = useState(false)\r\n\tconst [loadAtFirst, setLoadAtFirst] = useState(true)\r\n\r\n\tconsole.log('question data Form: ', questionDataForm)\r\n\tconsole.log('Question Data: ', questionData)\r\n\r\n\t// GET INTRODUCE EDITOR\r\n\tconst getIntroduceEditor = (dataEditor: any) => {\r\n\t\tif (questionDataForm) {\r\n\t\t\tquestionDataForm.Introduce = dataEditor\r\n\t\t}\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// GET VALUE IN EDITOR\r\n\tconst getDataEditor = (dataEditor: any) => {\r\n\t\tif (questionDataForm) {\r\n\t\t\tconsole.log('Data content: ', dataEditor)\r\n\t\t\tquestionDataForm.Content = dataEditor\r\n\t\t}\r\n\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// Reset value in form\r\n\tconst resetForm = () => {\r\n\t\tquestionDataForm.Content = ''\r\n\t\tquestionDataForm.ExerciseAnswer.forEach((item) => {\r\n\t\t\titem.AnswerContent = ''\r\n\t\t\titem.isTrue = false\r\n\t\t})\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// SUBMIT FORM\r\n\tconst handleSubmitQuestion = async () => {\r\n\t\tlet res = null\r\n\t\tlet newData = {\r\n\t\t\tContent: questionDataForm.Content,\r\n\t\t\tCurriculumID: questionDataForm.CurriculumID,\r\n\t\t\tLevel: questionDataForm.Level,\r\n\t\t\tType: questionDataForm.Type,\r\n\t\t\tLinkAudio: questionDataForm.LinkAudio,\r\n\t\t\tIntroduce: questionDataForm.Introduce,\r\n\t\t\tSkillID: questionDataForm.SkillID\r\n\t\t}\r\n\r\n\t\tconsole.log('Data submit is: ', newData)\r\n\r\n\t\ttry {\r\n\t\t\tif (questionDataForm.ID) {\r\n\t\t\t\tres = await exerciseGroupApi.update({\r\n\t\t\t\t\t...newData,\r\n\t\t\t\t\tID: questionDataForm.ID\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tres = await exerciseGroupApi.add(newData)\r\n\t\t\t}\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tchangeIsSubmit(questionDataForm.ID ? questionDataForm : res.data.data)\r\n\t\t\t\tshowNoti('success', `${questionDataForm.ID ? 'Cập nhật' : 'Thêm'} Thành công`)\r\n\t\t\t\tif (!questionDataForm.ID) {\r\n\t\t\t\t\tresetForm()\r\n\t\t\t\t}\r\n\t\t\t\tsetIsResetEditor(true)\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetIsResetEditor(false)\r\n\t\t\t\t}, 500)\r\n\t\t\t}\r\n\t\t} catch (error) {}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tisSubmit && handleSubmitQuestion()\r\n\t}, [isSubmit])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (visible) {\r\n\t\t\tif (!questionData.ID) {\r\n\t\t\t\tquestionData.Content = ''\r\n\t\t\t\tquestionData.Introduce = ''\r\n\t\t\t\tquestionData.LinkAudio = ''\r\n\t\t\t}\r\n\r\n\t\t\tsetQuestionDataForm(questionData)\r\n\t\t} else {\r\n\t\t\tsetQuestionDataForm(null)\r\n\t\t\tsetLoadAtFirst(true)\r\n\t\t}\r\n\t}, [visible])\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('chạy vô')\r\n\t\tif (questionDataForm) {\r\n\t\t\tif (!loadAtFirst) {\r\n\t\t\t\tif (questionDataForm.Content !== '' || questionDataForm.Introduce !== '' || questionDataForm.LinkAudio !== '') {\r\n\t\t\t\t\tchangeData && changeData()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetLoadAtFirst(false)\r\n\t\t}\r\n\t}, [questionDataForm])\r\n\r\n\treturn (\r\n\t\t<div className=\"form-create-question\">\r\n\t\t\t{visible && questionDataForm && (\r\n\t\t\t\t<Form form={form} layout=\"vertical\" onFinish={handleSubmitQuestion}>\r\n\t\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t<Form.Item name=\"Question\" label=\"Giới thiệu\">\r\n\t\t\t\t\t\t\t\t\t<EditorSimple\r\n\t\t\t\t\t\t\t\t\t\thandleChange={(value) => getIntroduceEditor(value)}\r\n\t\t\t\t\t\t\t\t\t\tisReset={isResetEditor}\r\n\t\t\t\t\t\t\t\t\t\tquestionContent={questionDataForm?.Introduce}\r\n\t\t\t\t\t\t\t\t\t\tquestionData={questionDataForm}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t<Form.Item name=\"Question\" label=\"Nội dung\">\r\n\t\t\t\t\t\t\t\t\t<EditorSimple\r\n\t\t\t\t\t\t\t\t\t\tisTranslate={true}\r\n\t\t\t\t\t\t\t\t\t\thandleChange={(value) => getDataEditor(value)}\r\n\t\t\t\t\t\t\t\t\t\tisReset={isResetEditor}\r\n\t\t\t\t\t\t\t\t\t\tquestionContent={questionDataForm?.Content}\r\n\t\t\t\t\t\t\t\t\t\tquestionData={questionDataForm}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t<Form.Item label=\"Tải lên link Audio\">\r\n\t\t\t\t\t\t\t\t\t<UploadAudio\r\n\t\t\t\t\t\t\t\t\t\tgetFile={(file) => {\r\n\t\t\t\t\t\t\t\t\t\t\tquestionDataForm.LinkAudio = file\r\n\t\t\t\t\t\t\t\t\t\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tvalueFile={questionDataForm?.LinkAudio}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default GroupForm\r\n"]},"metadata":{},"sourceType":"module"}
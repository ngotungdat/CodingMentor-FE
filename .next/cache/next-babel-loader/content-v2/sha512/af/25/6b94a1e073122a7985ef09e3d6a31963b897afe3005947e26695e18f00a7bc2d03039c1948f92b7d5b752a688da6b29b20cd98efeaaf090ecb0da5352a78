{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Package\\\\RankResult\\\\RankResult.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { rankResultApi } from '~/apiBase/package/rank-result';\nimport PowerTable from '~/components/PowerTable';\nimport { useWrap } from '~/context/wrap';\nimport { examTopicApi } from '~/apiBase';\nimport { Select } from 'antd';\nconst {\n  Option\n} = Select;\n\nconst RankResult = props => {\n  const {\n    isStudent,\n    getDataDeital,\n    ExamTopicID\n  } = props;\n  let listFieldFilter = {\n    pageIndex: 1,\n    fromDate: null,\n    toDate: null,\n    TeacherID: null,\n    StatusID: null,\n    Month: null,\n    Year: null\n  };\n  let listFieldSearch = {\n    pageIndex: 1,\n    TeacherName: null\n  };\n  const {\n    0: dataFilter,\n    1: setDataFilter\n  } = useState([{\n    name: 'TeacherID',\n    title: 'Giáo viên',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: null,\n    value: null\n  }, {\n    name: 'StatusID',\n    title: 'Trạng thái',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: [{\n      title: 'Chưa chốt',\n      value: 1\n    }, {\n      title: 'Đã chốt lương',\n      value: 2\n    }],\n    value: null\n  }, {\n    name: 'date-range',\n    title: 'Từ - đến',\n    col: 'col-12',\n    type: 'date-range',\n    value: null\n  }]);\n  const {\n    0: dataExam,\n    1: setDataExam\n  } = useState([]); // ------ BASE USESTATE TABLE -------\n\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    showNoti,\n    pageSize,\n    userInformation\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const listTodoApi = {\n    pageSize: 9999,\n    pageIndex: currentPage,\n    sort: null,\n    sortType: null,\n    ExamTopicID: null\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi); // GET EXAM LIST\n\n  const getExamList = async () => {\n    try {\n      let res = await examTopicApi.getAll({\n        selectAll: true,\n        Type: 2\n      });\n      res.status == 200 && setDataExam(res.data.data);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // GET DATA SOURCE\n\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await rankResultApi.getAll(_objectSpread(_objectSpread({}, todoApi), {}, {\n        ExamTopicID: (todoApi === null || todoApi === void 0 ? void 0 : todoApi.ExamTopicID) == null ? ExamTopicID : todoApi === null || todoApi === void 0 ? void 0 : todoApi.ExamTopicID\n      }));\n      res.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow));\n      res.status == 204 && (showNoti('danger', 'Không có dữ liệu'), setDataSource([]));\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  const getPagination = pageNumber => {\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      pageIndex: pageNumber\n    }));\n  }; // -------------- CHECK FIELD ---------------------\n\n\n  const checkField = (valueSearch, dataIndex) => {\n    let newList = _objectSpread({}, listFieldSearch);\n\n    Object.keys(newList).forEach(function (key) {\n      console.log('key: ', key);\n\n      if (key != dataIndex) {\n        if (key != 'pageIndex') {\n          newList[key] = null;\n        }\n      } else {\n        newList[key] = valueSearch;\n      }\n    });\n    return newList;\n  };\n\n  const handleChange_Exam = value => {\n    if (value === 'all') {\n      setTodoApi(_objectSpread({}, listTodoApi));\n    } else {\n      setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n        ExamTopicID: value\n      }));\n    }\n  };\n\n  const columns = [{\n    title: 'Hạng',\n    dataIndex: 'Rank',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Học viên',\n    dataIndex: 'StudentName',\n    render: (text, data) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary d-flex align-items-center\",\n      children: [data.Rank == 1 && /*#__PURE__*/_jsxDEV(\"img\", {\n        width: \"15px\",\n        className: \"logo-img mr-2\",\n        src: \"/images/king.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }, this), \" \", text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }, this)\n  }, {\n    title: 'Đề thi',\n    dataIndex: 'ExamTopicName',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Điểm',\n    dataIndex: 'Point',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 22\n    }, this)\n  }];\n  useEffect(() => {\n    getDataSource();\n  }, [todoApi]);\n  useEffect(() => {\n    getExamList();\n  }, []);\n  useEffect(() => {\n    if (userInformation) {\n      if (todoApi.ExamTopicID) {\n        dataSource.every(item => {\n          if (item.StudentID === userInformation.UserInformationID) {\n            getDataDeital && getDataDeital(item);\n            return false;\n          }\n\n          return true;\n        });\n      }\n    }\n  }, [userInformation, dataSource]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PowerTable, {\n      Size: !isStudent ? 'table-medium' : '',\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: pageNumber => getPagination(pageNumber),\n      loading: isLoading,\n      addClass: \"basic-header\",\n      TitlePage: \"X\\u1EBFp h\\u1EA1ng l\\xE0m b\\xE0i\",\n      TitleCard: null,\n      dataSource: dataSource,\n      columns: columns,\n      Extra: ExamTopicID == undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"all\",\n          className: \"style-input\",\n          placeholder: \"Ch\\u1ECDn \\u0111\\u1EC1 thi\",\n          style: {\n            width: 150\n          },\n          onChange: handleChange_Exam,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"all\",\n            children: \"T\\u1EA5t c\\u1EA3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 9\n          }, this), (dataExam === null || dataExam === void 0 ? void 0 : dataExam.length) > 0 && dataExam.map((item, index) => /*#__PURE__*/_jsxDEV(Option, {\n            value: item.ID,\n            children: item.Name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 11\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 7\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nexport default RankResult;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Package/RankResult/RankResult.tsx"],"names":["React","useEffect","useState","rankResultApi","PowerTable","useWrap","examTopicApi","Select","Option","RankResult","props","isStudent","getDataDeital","ExamTopicID","listFieldFilter","pageIndex","fromDate","toDate","TeacherID","StatusID","Month","Year","listFieldSearch","TeacherName","dataFilter","setDataFilter","name","title","col","type","optionList","value","dataExam","setDataExam","dataSource","setDataSource","showNoti","pageSize","userInformation","isLoading","setIsLoading","status","totalPage","setTotalPage","currentPage","setCurrentPage","listTodoApi","sort","sortType","todoApi","setTodoApi","getExamList","res","getAll","selectAll","Type","data","error","message","getDataSource","totalRow","getPagination","pageNumber","checkField","valueSearch","dataIndex","newList","Object","keys","forEach","key","console","log","handleChange_Exam","columns","render","text","Rank","every","item","StudentID","UserInformationID","undefined","width","length","map","index","ID","Name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { rankResultApi } from '~/apiBase/package/rank-result'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { examTopicApi } from '~/apiBase'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nconst RankResult = (props) => {\r\n\tconst { isStudent, getDataDeital, ExamTopicID } = props\r\n\r\n\tlet listFieldFilter = {\r\n\t\tpageIndex: 1,\r\n\t\tfromDate: null,\r\n\t\ttoDate: null,\r\n\t\tTeacherID: null,\r\n\t\tStatusID: null,\r\n\t\tMonth: null,\r\n\t\tYear: null\r\n\t}\r\n\r\n\tlet listFieldSearch = {\r\n\t\tpageIndex: 1,\r\n\t\tTeacherName: null\r\n\t}\r\n\r\n\tconst [dataFilter, setDataFilter] = useState([\r\n\t\t{\r\n\t\t\tname: 'TeacherID',\r\n\t\t\ttitle: 'Giáo viên',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null,\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'StatusID',\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Chưa chốt',\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Đã chốt lương',\r\n\t\t\t\t\tvalue: 2\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tname: 'date-range',\r\n\t\t\ttitle: 'Từ - đến',\r\n\t\t\tcol: 'col-12',\r\n\t\t\ttype: 'date-range',\r\n\t\t\tvalue: null\r\n\t\t}\r\n\t])\r\n\r\n\tconst [dataExam, setDataExam] = useState<IExamTopic[]>([])\r\n\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState<IRankResult[]>([])\r\n\tconst { showNoti, pageSize, userInformation } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\r\n\tconst listTodoApi = {\r\n\t\tpageSize: 9999,\r\n\t\tpageIndex: currentPage,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tExamTopicID: null\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// GET EXAM LIST\r\n\tconst getExamList = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await examTopicApi.getAll({ selectAll: true, Type: 2 })\r\n\t\t\tres.status == 200 && setDataExam(res.data.data)\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await rankResultApi.getAll({ ...todoApi, ExamTopicID: todoApi?.ExamTopicID == null ? ExamTopicID : todoApi?.ExamTopicID })\r\n\t\t\tres.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow))\r\n\r\n\t\t\tres.status == 204 && (showNoti('danger', 'Không có dữ liệu'), setDataSource([]))\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\tpageIndex: pageNumber\r\n\t\t})\r\n\t}\r\n\r\n\t// -------------- CHECK FIELD ---------------------\r\n\tconst checkField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = { ...listFieldSearch }\r\n\t\tObject.keys(newList).forEach(function (key) {\r\n\t\t\tconsole.log('key: ', key)\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\t\tnewList[key] = null\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewList[key] = valueSearch\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn newList\r\n\t}\r\n\r\n\tconst handleChange_Exam = (value) => {\r\n\t\tif (value === 'all') {\r\n\t\t\tsetTodoApi({\r\n\t\t\t\t...listTodoApi\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tsetTodoApi({\r\n\t\t\t\t...todoApi,\r\n\t\t\t\tExamTopicID: value\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Hạng',\r\n\t\t\tdataIndex: 'Rank',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Học viên',\r\n\t\t\tdataIndex: 'StudentName',\r\n\t\t\trender: (text, data) => (\r\n\t\t\t\t<p className=\"font-weight-primary d-flex align-items-center\">\r\n\t\t\t\t\t{data.Rank == 1 && <img width=\"15px\" className=\"logo-img mr-2\" src=\"/images/king.png\"></img>} {text}\r\n\t\t\t\t</p>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Đề thi',\r\n\t\t\tdataIndex: 'ExamTopicName',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Điểm',\r\n\t\t\tdataIndex: 'Point',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t}\r\n\t]\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t}, [todoApi])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetExamList()\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userInformation) {\r\n\t\t\tif (todoApi.ExamTopicID) {\r\n\t\t\t\tdataSource.every((item) => {\r\n\t\t\t\t\tif (item.StudentID === userInformation.UserInformationID) {\r\n\t\t\t\t\t\tgetDataDeital && getDataDeital(item)\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}, [userInformation, dataSource])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PowerTable\r\n\t\t\t\tSize={!isStudent ? 'table-medium' : ''}\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Xếp hạng làm bài\"\r\n\t\t\t\tTitleCard={null}\r\n\t\t\t\tdataSource={dataSource}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\tExamTopicID == undefined ? (\r\n\t\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tdefaultValue=\"all\"\r\n\t\t\t\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Chọn đề thi\"\r\n\t\t\t\t\t\t\t\tstyle={{ width: 150 }}\r\n\t\t\t\t\t\t\t\tonChange={handleChange_Exam}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Option value=\"all\">Tất cả</Option>\r\n\t\t\t\t\t\t\t\t{dataExam?.length > 0 &&\r\n\t\t\t\t\t\t\t\t\tdataExam.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<Option value={item.ID} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.Name}\r\n\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : null\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default RankResult\r\n"]},"metadata":{},"sourceType":"module"}
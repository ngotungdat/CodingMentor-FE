{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Sales\\\\SalerList\\\\SalerList.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport moment from 'moment';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { areaApi, branchApi, districtApi, staffApi, wardApi } from '~/apiBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nimport { fmSelectArr } from '~/utils/functions';\nimport TeacherFilterForm from '../../Teacher/Teacher/TeacherFilterForm';\nimport SalerListForm from './SalerListForm';\nvar defaultAreaList = {\n  areaList: [],\n  districtList: [],\n  wardList: []\n};\nvar baseField = {\n  pageIndex: 1,\n  sort: 1,\n  sortType: false,\n  AreaID: '',\n  FullNameUnicode: '',\n  fromDate: '',\n  toDate: '',\n  StatusID: null,\n  RoleID: 6\n};\nvar optionGenderList = [{\n  title: 'Nữ',\n  value: 0\n}, {\n  title: 'Nam',\n  value: 1\n}, {\n  title: 'Khác',\n  value: 2\n}];\nvar optionStatusList = [{\n  title: 'Hoạt động',\n  value: 0\n}, {\n  title: 'Khóa',\n  value: 1\n}];\nvar sortOptionList = [{\n  dataSort: {\n    sort: 0,\n    sortType: true\n  },\n  value: 1,\n  text: 'Tên tăng dần'\n}, {\n  dataSort: {\n    sort: 0,\n    sortType: false\n  },\n  value: 2,\n  text: 'Tên giảm dần'\n}, {\n  dataSort: {\n    sort: 2,\n    sortType: true\n  },\n  value: 3,\n  text: 'Ngày nhận việc tăng dần'\n}, {\n  dataSort: {\n    sort: 2,\n    sortType: false\n  },\n  value: 4,\n  text: 'Ngày nhận việc giảm dần'\n}];\n\nvar SalerList = function SalerList() {\n  _s();\n\n  var _useState = useState([]),\n      salerList = _useState[0],\n      setSalerList = _useState[1];\n\n  var _useState2 = useState(defaultAreaList),\n      optionAreaSystemList = _useState2[0],\n      setOptionAreaSystemList = _useState2[1];\n\n  var _useState3 = useState([]),\n      branchList = _useState3[0],\n      setBranchList = _useState3[1];\n\n  var _useState4 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      totalPage = _useState5[0],\n      setTotalPage = _useState5[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      pageSize = _useWrap.pageSize;\n\n  var _useState6 = useState(''),\n      activeColumnSearch = _useState6[0],\n      setActiveColumnSearch = _useState6[1];\n\n  var listFieldInit = _objectSpread(_objectSpread({}, baseField), {}, {\n    pageSize: pageSize\n  });\n\n  var refValue = useRef({\n    sort: 1,\n    sortType: false,\n    pageIndex: 1,\n    pageSize: pageSize\n  });\n\n  var _useState7 = useState(listFieldInit),\n      filters = _useState7[0],\n      setFilters = _useState7[1]; // FILTER\n\n\n  var onFilter = function onFilter(obj) {\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1,\n      fromDate: moment(obj.fromDate).format('YYYY/MM/DD'),\n      toDate: moment(obj.toDate).format('YYYY/MM/DD')\n    }));\n  }; // PAGINATION\n\n\n  var getPagination = function getPagination(pageIndex, pageSize) {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize: pageSize,\n      pageIndex: pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  }; // SORT\n\n\n  var onSort = function onSort(option) {\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), refValue.current));\n  }; // RESET SEARCH\n\n\n  var onResetSearch = function onResetSearch() {\n    setActiveColumnSearch('');\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), {}, {\n      pageSize: refValue.current.pageSize\n    }));\n  }; // ACTION SEARCH\n\n\n  var onSearch = function onSearch(valueSearch, dataIndex) {\n    setActiveColumnSearch(dataIndex);\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, _defineProperty({\n      pageIndex: 1\n    }, dataIndex, valueSearch)));\n  }; // GET AREA\n\n\n  var fetchAreaList = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, newAreaList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return areaApi.getAll({\n                selectAll: true\n              });\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status === 200 && res.data.totalRow && res.data.data.length) {\n                newAreaList = fmSelectArr(res.data.data, 'AreaName', 'AreaID');\n                setOptionAreaSystemList(_objectSpread(_objectSpread({}, optionAreaSystemList), {}, {\n                  areaList: newAreaList\n                }));\n              }\n\n              _context.next = 9;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function fetchAreaList() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchAreaList();\n  }, []); // DISTRICT BY AREA\n\n  var fetchDistrictByAreaID = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var res, newDistrictList;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return districtApi.getAll({\n                AreaID: id\n              });\n\n            case 3:\n              res = _context2.sent;\n\n              if (res.status === 200 && res.data.totalRow && res.data.data.length) {\n                newDistrictList = fmSelectArr(res.data.data, 'DistrictName', 'ID');\n                setOptionAreaSystemList(_objectSpread(_objectSpread({}, optionAreaSystemList), {}, {\n                  districtList: newDistrictList,\n                  wardList: []\n                }));\n              }\n\n              _context2.next = 9;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function fetchDistrictByAreaID(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // WARD BY DISTRICT\n\n\n  var fetchWardByDistrictID = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n      var res, newWardList;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsLoading({\n                type: 'FETCH_WARD_BY_DISTRICT',\n                status: true\n              });\n              _context3.prev = 1;\n              _context3.next = 4;\n              return wardApi.getAll({\n                DistrictID: id\n              });\n\n            case 4:\n              res = _context3.sent;\n\n              if (res.status === 200 && res.data.totalRow && res.data.data.length) {\n                newWardList = fmSelectArr(res.data.data, 'WardName', 'ID');\n                setOptionAreaSystemList(_objectSpread(_objectSpread({}, optionAreaSystemList), {}, {\n                  wardList: newWardList\n                }));\n              }\n\n              _context3.next = 10;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n\n            case 10:\n              _context3.prev = 10;\n              setIsLoading({\n                type: 'FETCH_WARD_BY_DISTRICT',\n                status: false\n              });\n              return _context3.finish(10);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8, 10, 13]]);\n    }));\n\n    return function fetchWardByDistrictID(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // BRANCH BY AREA\n\n\n  var fetchBranch = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id) {\n      var res, newBranchList;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setIsLoading({\n                type: 'FETCH_DATA_BY_AREA',\n                status: true\n              });\n              _context4.prev = 1;\n              _context4.next = 4;\n              return branchApi.getAll({\n                pageIndex: 1,\n                pageSize: pageSize\n              });\n\n            case 4:\n              res = _context4.sent;\n\n              if (res.status === 200 && res.data.totalRow) {\n                newBranchList = fmSelectArr(res.data.data, 'BranchName', 'ID');\n                setBranchList(newBranchList);\n              }\n\n              if (res.status === 204) {\n                setBranchList([]);\n              }\n\n              _context4.next = 11;\n              break;\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](1);\n\n            case 11:\n              _context4.prev = 11;\n              setIsLoading({\n                type: 'FETCH_DATA_BY_AREA',\n                status: false\n              });\n              return _context4.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 9, 11, 14]]);\n    }));\n\n    return function fetchBranch(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // GET DATA IN FIRST TIME\n\n\n  var fetchSalerList = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context5.prev = 1;\n              _context5.next = 4;\n              return staffApi.getAll(filters);\n\n            case 4:\n              res = _context5.sent;\n\n              if (res.status === 200) {\n                if (res.data.totalRow && res.data.data.length) {\n                  setSalerList(res.data.data);\n                  setTotalPage(res.data.totalRow);\n                }\n              }\n\n              if (res.status === 204) {\n                setSalerList([]);\n                setTotalPage(0);\n              }\n\n              _context5.next = 12;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](1);\n              showNoti('danger', _context5.t0.message);\n\n            case 12:\n              _context5.prev = 12;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context5.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function fetchSalerList() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchSalerList();\n  }, [filters]); // CREATE\n\n  var onCreateTeacher = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(data) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              _context6.next = 4;\n              return staffApi.add(data);\n\n            case 4:\n              res = _context6.sent;\n\n              if (!(res.status === 200)) {\n                _context6.next = 9;\n                break;\n              }\n\n              showNoti('success', res.data.message);\n              onResetSearch();\n              return _context6.abrupt(\"return\", true);\n\n            case 9:\n              _context6.next = 14;\n              break;\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](0);\n              showNoti('danger', _context6.t0.message);\n\n            case 14:\n              _context6.prev = 14;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context6.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 11, 14, 17]]);\n    }));\n\n    return function onCreateTeacher(_x4) {\n      return _ref6.apply(this, arguments);\n    };\n  }(); // UPDATE\n\n\n  var onUpdateTeacher = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(newObj, idx) {\n      var res, newSalerAPI, newSalerList, newBranch;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              _context7.prev = 1;\n              newSalerAPI = _objectSpread(_objectSpread({}, newObj), {}, {\n                Branch: newObj.Branch.join(',')\n              });\n              _context7.next = 5;\n              return staffApi.update(newSalerAPI);\n\n            case 5:\n              res = _context7.sent;\n\n              if (res.status === 200) {\n                newSalerList = _toConsumableArray(salerList);\n                newBranch = branchList.filter(function (ob) {\n                  return newObj.Branch.some(function (nb) {\n                    return nb === ob.value;\n                  });\n                }).map(function (b) {\n                  return {\n                    ID: b.value,\n                    BranchName: b.title\n                  };\n                });\n                newSalerList.splice(idx, 1, _objectSpread(_objectSpread({}, newObj), {}, {\n                  Branch: newBranch\n                }));\n                setSalerList(newSalerList);\n                showNoti('success', res.data.message);\n              }\n\n              _context7.next = 12;\n              break;\n\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](1);\n              showNoti('danger', _context7.t0.message);\n\n            case 12:\n              _context7.prev = 12;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context7.abrupt(\"return\", res);\n\n            case 16:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[1, 9, 12, 16]]);\n    }));\n\n    return function onUpdateTeacher(_x5, _x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var columns = [_objectSpread(_objectSpread({\n    title: 'Họ và tên',\n    dataIndex: 'FullNameUnicode'\n  }, FilterColumn('FullNameUnicode', onSearch, onResetSearch, 'text')), {}, {\n    className: activeColumnSearch === 'FullNameUnicode' ? 'active-column-search' : '',\n    render: function render(text) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 22\n      }, _this);\n    }\n  }), _objectSpread(_objectSpread({\n    title: 'Tỉnh/Thành phố',\n    dataIndex: 'AreaName'\n  }, FilterColumn('AreaID', onSearch, onResetSearch, 'select', optionAreaSystemList.areaList)), {}, {\n    className: activeColumnSearch === 'AreaID' ? 'active-column-search' : '',\n    render: function render(text) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 22\n      }, _this);\n    }\n  }), {\n    title: 'Giới tính',\n    dataIndex: 'Gender',\n    render: function render(genderID) {\n      return optionGenderList.find(function (o) {\n        return o.value === genderID;\n      }).title;\n    }\n  }, {\n    title: 'SĐT',\n    dataIndex: 'Mobile'\n  }, {\n    title: 'Email',\n    dataIndex: 'Email'\n  }, {\n    title: 'Ngày nhận việc',\n    dataIndex: 'Jobdate',\n    render: function render(date) {\n      return date && moment(date).format('DD/MM/YYYY');\n    }\n  }, _objectSpread(_objectSpread({\n    title: 'Trạng thái',\n    dataIndex: 'StatusID',\n    width: 140\n  }, FilterColumn('StatusID', onSearch, onResetSearch, 'select', optionStatusList)), {}, {\n    render: function render(status) {\n      return status ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag gray\",\n        children: \"Kh\\xF3a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 34\n      }, _this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag green\",\n        children: \"Ho\\u1EA1t \\u0111\\u1ED9ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 75\n      }, _this);\n    }\n  }), {\n    align: 'center',\n    render: function render(value, _, idx) {\n      return /*#__PURE__*/_jsxDEV(SalerListForm, {\n        isLoading: isLoading,\n        isUpdate: true,\n        updateObj: value,\n        optionStatusList: optionStatusList,\n        optionGenderList: optionGenderList,\n        optionAreaSystemList: optionAreaSystemList,\n        handleFetchDistrict: fetchDistrictByAreaID,\n        handleFetchWard: fetchWardByDistrictID,\n        optionBranchList: branchList,\n        handleFetchBranch: fetchBranch,\n        handleSubmit: onUpdateTeacher\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 5\n      }, _this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PowerTable, {\n      currentPage: filters.pageIndex,\n      totalPage: totalPage,\n      getPagination: getPagination,\n      loading: isLoading,\n      addClass: \"basic-header\",\n      columns: columns,\n      dataSource: salerList,\n      TitlePage: \"Danh s\\xE1ch t\\u01B0 v\\u1EA5n vi\\xEAn\",\n      TitleCard: /*#__PURE__*/_jsxDEV(SalerListForm, {\n        isLoading: isLoading,\n        optionStatusList: optionStatusList,\n        optionGenderList: optionGenderList,\n        optionAreaSystemList: optionAreaSystemList,\n        handleFetchDistrict: fetchDistrictByAreaID,\n        handleFetchWard: fetchWardByDistrictID,\n        optionBranchList: branchList,\n        handleFetchBranch: fetchBranch,\n        handleSubmit: onCreateTeacher\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 6\n      }, _this),\n      Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: [/*#__PURE__*/_jsxDEV(TeacherFilterForm, {\n          handleFilter: onFilter,\n          handleResetFilter: onResetSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(SortBox, {\n          width: 190,\n          handleSort: onSort,\n          dataOption: sortOptionList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 7\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false);\n};\n\n_s(SalerList, \"r5+/nk6ilUQYCp7VqOKagzOqZko=\", false, function () {\n  return [useWrap];\n});\n\n_c = SalerList;\nexport default SalerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalerList\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Sales/SalerList/SalerList.tsx"],"names":["moment","React","useEffect","useRef","useState","areaApi","branchApi","districtApi","staffApi","wardApi","SortBox","PowerTable","FilterColumn","useWrap","fmSelectArr","TeacherFilterForm","SalerListForm","defaultAreaList","areaList","districtList","wardList","baseField","pageIndex","sort","sortType","AreaID","FullNameUnicode","fromDate","toDate","StatusID","RoleID","optionGenderList","title","value","optionStatusList","sortOptionList","dataSort","text","SalerList","salerList","setSalerList","optionAreaSystemList","setOptionAreaSystemList","branchList","setBranchList","type","status","isLoading","setIsLoading","totalPage","setTotalPage","showNoti","pageSize","activeColumnSearch","setActiveColumnSearch","listFieldInit","refValue","filters","setFilters","onFilter","obj","current","format","getPagination","onSort","option","onResetSearch","onSearch","valueSearch","dataIndex","fetchAreaList","getAll","selectAll","res","data","totalRow","length","newAreaList","fetchDistrictByAreaID","id","newDistrictList","fetchWardByDistrictID","DistrictID","newWardList","fetchBranch","newBranchList","fetchSalerList","message","onCreateTeacher","add","onUpdateTeacher","newObj","idx","newSalerAPI","Branch","join","update","newSalerList","newBranch","filter","ob","some","nb","map","b","ID","BranchName","splice","columns","className","render","genderID","find","o","date","width","align","_"],"mappings":"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","sourcesContent":["import moment from 'moment'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { areaApi, branchApi, districtApi, staffApi, wardApi } from '~/apiBase'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { fmSelectArr } from '~/utils/functions'\r\nimport TeacherFilterForm from '../../Teacher/Teacher/TeacherFilterForm'\r\nimport SalerListForm from './SalerListForm'\r\n\r\ntype IAreaList = {\r\n\tareaList: IOptionCommon[]\r\n\tdistrictList: IOptionCommon[]\r\n\twardList: IOptionCommon[]\r\n}\r\n\r\nconst defaultAreaList = {\r\n\tareaList: [],\r\n\tdistrictList: [],\r\n\twardList: []\r\n}\r\n\r\nconst baseField = {\r\n\tpageIndex: 1,\r\n\tsort: 1,\r\n\tsortType: false,\r\n\tAreaID: '',\r\n\tFullNameUnicode: '',\r\n\tfromDate: '',\r\n\ttoDate: '',\r\n\tStatusID: null,\r\n\tRoleID: 6\r\n}\r\n\r\nconst optionGenderList = [\r\n\t{ title: 'Nữ', value: 0 },\r\n\t{ title: 'Nam', value: 1 },\r\n\t{ title: 'Khác', value: 2 }\r\n]\r\n\r\nconst optionStatusList = [\r\n\t{ title: 'Hoạt động', value: 0 },\r\n\t{ title: 'Khóa', value: 1 }\r\n]\r\n\r\nconst sortOptionList = [\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\tvalue: 1,\r\n\t\ttext: 'Tên tăng dần'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\tvalue: 2,\r\n\t\ttext: 'Tên giảm dần'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\tvalue: 3,\r\n\t\ttext: 'Ngày nhận việc tăng dần'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\tvalue: 4,\r\n\t\ttext: 'Ngày nhận việc giảm dần'\r\n\t}\r\n]\r\n\r\nconst SalerList = () => {\r\n\tconst [salerList, setSalerList] = useState<IStaff[]>([])\r\n\tconst [optionAreaSystemList, setOptionAreaSystemList] = useState<IAreaList>(defaultAreaList)\r\n\tconst [branchList, setBranchList] = useState([])\r\n\tconst [isLoading, setIsLoading] = useState({ type: '', status: false })\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst { showNoti, pageSize } = useWrap()\r\n\tconst [activeColumnSearch, setActiveColumnSearch] = useState('')\r\n\r\n\tconst listFieldInit = { ...baseField, pageSize: pageSize }\r\n\r\n\tlet refValue = useRef({ sort: 1, sortType: false, pageIndex: 1, pageSize: pageSize })\r\n\r\n\tconst [filters, setFilters] = useState(listFieldInit)\r\n\r\n\t// FILTER\r\n\tconst onFilter = (obj) => {\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tfromDate: moment(obj.fromDate).format('YYYY/MM/DD'),\r\n\t\t\ttoDate: moment(obj.toDate).format('YYYY/MM/DD')\r\n\t\t})\r\n\t}\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10\r\n\t\trefValue.current = { ...refValue.current, pageSize, pageIndex }\r\n\t\tsetFilters({ ...filters, ...refValue.current })\r\n\t}\r\n\r\n\t// SORT\r\n\tconst onSort = (option) => {\r\n\t\trefValue.current = { ...refValue.current, sort: option.title.sort, sortType: option.title.sortType }\r\n\t\tsetFilters({ ...listFieldInit, ...refValue.current })\r\n\t}\r\n\r\n\t// RESET SEARCH\r\n\tconst onResetSearch = () => {\r\n\t\tsetActiveColumnSearch('')\r\n\t\tsetFilters({ ...listFieldInit, pageSize: refValue.current.pageSize })\r\n\t}\r\n\r\n\t// ACTION SEARCH\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tsetActiveColumnSearch(dataIndex)\r\n\t\tsetFilters({ ...listFieldInit, ...refValue.current, pageIndex: 1, [dataIndex]: valueSearch })\r\n\t}\r\n\r\n\t// GET AREA\r\n\tconst fetchAreaList = async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await areaApi.getAll({ selectAll: true })\r\n\t\t\tif (res.status === 200 && res.data.totalRow && res.data.data.length) {\r\n\t\t\t\tconst newAreaList = fmSelectArr(res.data.data, 'AreaName', 'AreaID')\r\n\t\t\t\tsetOptionAreaSystemList({ ...optionAreaSystemList, areaList: newAreaList })\r\n\t\t\t}\r\n\t\t} catch (error) {}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchAreaList()\r\n\t}, [])\r\n\r\n\t// DISTRICT BY AREA\r\n\tconst fetchDistrictByAreaID = async (id: number) => {\r\n\t\ttry {\r\n\t\t\tconst res = await districtApi.getAll({ AreaID: id })\r\n\t\t\tif (res.status === 200 && res.data.totalRow && res.data.data.length) {\r\n\t\t\t\tconst newDistrictList = fmSelectArr(res.data.data, 'DistrictName', 'ID')\r\n\t\t\t\tsetOptionAreaSystemList({ ...optionAreaSystemList, districtList: newDistrictList, wardList: [] })\r\n\t\t\t}\r\n\t\t} catch (error) {}\r\n\t}\r\n\r\n\t// WARD BY DISTRICT\r\n\tconst fetchWardByDistrictID = async (id: number) => {\r\n\t\tsetIsLoading({ type: 'FETCH_WARD_BY_DISTRICT', status: true })\r\n\t\ttry {\r\n\t\t\tconst res = await wardApi.getAll({ DistrictID: id })\r\n\t\t\tif (res.status === 200 && res.data.totalRow && res.data.data.length) {\r\n\t\t\t\tconst newWardList = fmSelectArr(res.data.data, 'WardName', 'ID')\r\n\t\t\t\tsetOptionAreaSystemList({ ...optionAreaSystemList, wardList: newWardList })\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'FETCH_WARD_BY_DISTRICT', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\t// BRANCH BY AREA\r\n\tconst fetchBranch = async (id: number) => {\r\n\t\tsetIsLoading({ type: 'FETCH_DATA_BY_AREA', status: true })\r\n\t\ttry {\r\n\t\t\tlet res = await branchApi.getAll({ pageIndex: 1, pageSize: pageSize })\r\n\t\t\tif (res.status === 200 && res.data.totalRow) {\r\n\t\t\t\tconst newBranchList = fmSelectArr(res.data.data, 'BranchName', 'ID')\r\n\t\t\t\tsetBranchList(newBranchList)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetBranchList([])\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'FETCH_DATA_BY_AREA', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\t// GET DATA IN FIRST TIME\r\n\tconst fetchSalerList = async () => {\r\n\t\tsetIsLoading({ type: 'GET_ALL', status: true })\r\n\t\ttry {\r\n\t\t\tlet res = await staffApi.getAll(filters)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tif (res.data.totalRow && res.data.data.length) {\r\n\t\t\t\t\tsetSalerList(res.data.data)\r\n\t\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetSalerList([])\r\n\t\t\t\tsetTotalPage(0)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'GET_ALL', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchSalerList()\r\n\t}, [filters])\r\n\r\n\t// CREATE\r\n\tconst onCreateTeacher = async (data) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({ type: 'ADD_DATA', status: true })\r\n\t\t\tconst res = await staffApi.add(data)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\tonResetSearch()\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'ADD_DATA', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\t// UPDATE\r\n\tconst onUpdateTeacher = async (newObj: any, idx: number) => {\r\n\t\tsetIsLoading({ type: 'ADD_DATA', status: true })\r\n\t\tlet res\r\n\t\ttry {\r\n\t\t\tconst newSalerAPI = { ...newObj, Branch: newObj.Branch.join(',') }\r\n\t\t\tres = await staffApi.update(newSalerAPI)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newSalerList = [...salerList]\r\n\t\t\t\tconst newBranch = branchList\r\n\t\t\t\t\t.filter((ob) => newObj.Branch.some((nb) => nb === ob.value))\r\n\t\t\t\t\t.map((b) => ({\r\n\t\t\t\t\t\tID: b.value,\r\n\t\t\t\t\t\tBranchName: b.title\r\n\t\t\t\t\t}))\r\n\t\t\t\tnewSalerList.splice(idx, 1, { ...newObj, Branch: newBranch })\r\n\t\t\t\tsetSalerList(newSalerList)\r\n\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'ADD_DATA', status: false })\r\n\t\t\treturn res\r\n\t\t}\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Họ và tên',\r\n\t\t\tdataIndex: 'FullNameUnicode',\r\n\t\t\t...FilterColumn('FullNameUnicode', onSearch, onResetSearch, 'text'),\r\n\t\t\tclassName: activeColumnSearch === 'FullNameUnicode' ? 'active-column-search' : '',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tỉnh/Thành phố',\r\n\t\t\tdataIndex: 'AreaName',\r\n\t\t\t...FilterColumn('AreaID', onSearch, onResetSearch, 'select', optionAreaSystemList.areaList),\r\n\t\t\tclassName: activeColumnSearch === 'AreaID' ? 'active-column-search' : '',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Giới tính',\r\n\t\t\tdataIndex: 'Gender',\r\n\t\t\trender: (genderID) => optionGenderList.find((o) => o.value === genderID).title\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'SĐT',\r\n\t\t\tdataIndex: 'Mobile'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Email',\r\n\t\t\tdataIndex: 'Email'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày nhận việc',\r\n\t\t\tdataIndex: 'Jobdate',\r\n\t\t\trender: (date) => date && moment(date).format('DD/MM/YYYY')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tdataIndex: 'StatusID',\r\n\t\t\twidth: 140,\r\n\t\t\t...FilterColumn('StatusID', onSearch, onResetSearch, 'select', optionStatusList),\r\n\t\t\trender: (status) => (status ? <span className=\"tag gray\">Khóa</span> : <span className=\"tag green\">Hoạt động</span>)\r\n\t\t},\r\n\t\t{\r\n\t\t\talign: 'center',\r\n\t\t\trender: (value, _, idx) => (\r\n\t\t\t\t<SalerListForm\r\n\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\tisUpdate={true}\r\n\t\t\t\t\tupdateObj={value}\r\n\t\t\t\t\toptionStatusList={optionStatusList}\r\n\t\t\t\t\toptionGenderList={optionGenderList}\r\n\t\t\t\t\toptionAreaSystemList={optionAreaSystemList}\r\n\t\t\t\t\thandleFetchDistrict={fetchDistrictByAreaID}\r\n\t\t\t\t\thandleFetchWard={fetchWardByDistrictID}\r\n\t\t\t\t\toptionBranchList={branchList}\r\n\t\t\t\t\thandleFetchBranch={fetchBranch}\r\n\t\t\t\t\thandleSubmit={onUpdateTeacher}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PowerTable\r\n\t\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\t\ttotalPage={totalPage}\r\n\t\t\t\tgetPagination={getPagination}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdataSource={salerList}\r\n\t\t\t\tTitlePage=\"Danh sách tư vấn viên\"\r\n\t\t\t\tTitleCard={\r\n\t\t\t\t\t<SalerListForm\r\n\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\toptionStatusList={optionStatusList}\r\n\t\t\t\t\t\toptionGenderList={optionGenderList}\r\n\t\t\t\t\t\toptionAreaSystemList={optionAreaSystemList}\r\n\t\t\t\t\t\thandleFetchDistrict={fetchDistrictByAreaID}\r\n\t\t\t\t\t\thandleFetchWard={fetchWardByDistrictID}\r\n\t\t\t\t\t\toptionBranchList={branchList}\r\n\t\t\t\t\t\thandleFetchBranch={fetchBranch}\r\n\t\t\t\t\t\thandleSubmit={onCreateTeacher}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t<TeacherFilterForm handleFilter={onFilter} handleResetFilter={onResetSearch} />\r\n\t\t\t\t\t\t<SortBox width={190} handleSort={onSort} dataOption={sortOptionList} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SalerList\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Customer\\\\Service\\\\Student\\\\ServiceTestStudent.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport moment from 'moment';\nimport router from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport { branchApi, studentApi, testCustomerApi, examTopicApi } from '~/apiBase';\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase';\nimport NotiModal from '~/components/Elements/NotiModal/NotiModal';\nimport SortBox from '~/components/Elements/SortBox';\nimport ExpandTable from '~/components/ExpandTable';\nimport LayoutBase from '~/components/LayoutBase';\nimport { useWrap } from '~/context/wrap';\nimport { EditOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport ExamAppointmentPoint from '../../../ExamAppointment/ExamAppointmentPoint';\nimport Link from 'next/link';\nlet pageIndex = 1;\nlet listFieldSearch = {\n  pageIndex: 1,\n  FullNameUnicode: null\n};\nlet listFieldFilter = {\n  pageIndex: 1,\n  BranchID: null,\n  // lọc\n  UserInformationID: null,\n  Status: null,\n  AppointmentDate: null\n};\nconst dataOption = [{\n  dataSort: {\n    sort: 2,\n    sortType: true\n  },\n  text: 'Tên A - Z '\n}, {\n  dataSort: {\n    sort: 2,\n    sortType: false\n  },\n  text: 'Tên Z - A'\n}, {\n  dataSort: {\n    sort: 0,\n    sortType: true\n  },\n  text: 'Ngày hẹn A - Z'\n}, {\n  dataSort: {\n    sort: 0,\n    sortType: false\n  },\n  text: 'Ngày hẹn Z - A'\n}]; // -- FOR DIFFERENT VIEW --\n\nconst listApi = [{\n  api: branchApi,\n  text: 'Trung tâm',\n  name: 'Branch'\n}, {\n  api: studentApi,\n  text: 'Học viên',\n  name: 'Student'\n}];\nexport default function ServiceTestStudent(props) {\n  const {\n    0: listDataForm,\n    1: setListDataForm\n  } = useState({\n    Branch: [],\n    Student: []\n  });\n  const {\n    0: dataExam,\n    1: setDataExam\n  } = useState([]);\n  const {\n    0: currentDate,\n    1: setCurrentDate\n  } = useState(null);\n  const {\n    0: isOpenNoti,\n    1: setisOpenNoti\n  } = useState(false);\n  const {\n    0: contentNoti,\n    1: setContentNoti\n  } = useState(''); // ------ BASE USESTATE TABLE -------\n\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    showNoti,\n    pageSize,\n    userInformation\n  } = useWrap();\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    sort: null,\n    sortType: null,\n    FullNameUnicode: null,\n    BranchID: null,\n    // lọc\n    UserInformationID: userInformation === null || userInformation === void 0 ? void 0 : userInformation.UserInformationID,\n    Status: null,\n    AppointmentDate: null\n  };\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: indexRow,\n    1: setIndexRow\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi);\n  const {\n    0: showfirst,\n    1: setShowFirst\n  } = useState(false); // ------ LIST FILTER -------\n\n  const {\n    0: dataFilter,\n    1: setDataFilter\n  } = useState([{\n    name: 'BranchID',\n    title: 'Trung tâm',\n    col: 'col-md-12 col-12',\n    type: 'select',\n    optionList: null,\n    // Gọi api xong trả data vào đây\n    value: null\n  }, {\n    name: 'Status',\n    title: 'Trạng thái',\n    col: 'col-md-12 col-12',\n    type: 'select',\n    optionList: [{\n      title: 'Chưa test',\n      value: 0\n    }, {\n      title: 'Đang chấm bài test',\n      value: 1\n    }, {\n      title: 'Chưa đăng kí khóa học',\n      value: 2\n    }, {\n      title: 'Đã đăng kí khóa học',\n      value: 3\n    }, {\n      title: 'Đã hủy hẹn test',\n      value: 4\n    }],\n    value: null\n  }, {\n    name: 'AppointmentDate',\n    title: 'Ngày hẹn test',\n    col: 'col-md-12 col-12',\n    type: 'date-single',\n    value: null\n  }, {\n    name: 'date-range',\n    title: 'Từ - đến',\n    col: 'col-12',\n    type: 'date-range',\n    value: null\n  }]);\n\n  const makeNewData = (data, name) => {\n    let newData = null;\n\n    switch (name) {\n      case 'Branch':\n        newData = data.map(item => ({\n          title: item.BranchName,\n          value: item.ID\n        }));\n        setDataFunc('BranchID', newData);\n        break;\n\n      case 'Student':\n        newData = data.map(item => ({\n          title: item.FullNameUnicode,\n          value: item.UserInformationID,\n          counselorsName: item.CounselorsName == null ? '' : item.CounselorsName\n        }));\n        break;\n\n      default:\n        break;\n    }\n\n    return newData;\n  };\n\n  const getDataTolist = (data, name) => {\n    let newData = makeNewData(data, name);\n    Object.keys(listDataForm).forEach(function (key) {\n      if (key == name) {\n        listDataForm[key] = newData;\n      }\n    });\n    setListDataForm(_objectSpread({}, listDataForm));\n  }; // ----------- GET DATA EXAM ------------\n\n\n  const getDataExam = async () => {\n    try {\n      let res = await examTopicApi.getAll({\n        selectAll: true,\n        type: 1\n      });\n\n      if (res.status === 200) {\n        setDataExam(res.data.data);\n      }\n    } catch (error) {\n      console.log('Error Exam: ', error.message);\n    }\n  }; // ----------- GET DATA SOURCE ---------------\n\n\n  const getDataAll = arrApi => {\n    arrApi.forEach((item, index) => {\n      ;\n\n      (async () => {\n        let res = null;\n\n        try {\n          if (item.name == 'Counselors') {\n            res = await item.api.getAll({\n              pageIndex: 1,\n              pageSize: 99999,\n              RoleID: 6,\n              StatusID: 0,\n              Enable: true\n            });\n          } else {\n            res = await item.api.getAll({\n              pageIndex: 1,\n              pageSize: 99999,\n              Enable: true\n            });\n          }\n\n          res.status == 200 && getDataTolist(res.data.data, item.name);\n          res.status == 204 && showNoti('danger', item.text + ' Không có dữ liệu');\n        } catch (error) {\n          showNoti('danger', error.message);\n        } finally {}\n      })();\n    });\n  }; // GET DATA SOURCE\n\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await testCustomerApi.getAll(todoApi);\n\n      if (res.status == 200) {\n        setDataSource(res.data.data);\n        setTotalPage(res.data.totalRow); //@ts-ignore\n        // setTestDate(moment(res.data.data.AppointmentDate).format('DD/MM/YYYY HH:mm'));\n      }\n\n      res.status == 204 && setDataSource([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // ------ SET DATA FUN ------\n\n\n  const setDataFunc = (name, data) => {\n    dataFilter.every((item, index) => {\n      if (item.name == name) {\n        item.optionList = data;\n        return false;\n      }\n\n      return true;\n    });\n    setDataFilter([...dataFilter]);\n  }; // ---------------- AFTER SUBMIT -----------------\n\n\n  const afterPost = mes => {\n    // showNoti(\"success\", mes);\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // ----------------- ON SUBMIT --------------------\n\n\n  const _onSubmit = async dataSubmit => {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res = null;\n\n    try {\n      if (dataSubmit.ID) {\n        res = await testCustomerApi.update(dataSubmit);\n\n        if (res.status == 200) {\n          let newDataSource = [...dataSource];\n          newDataSource.splice(indexRow, 1, _objectSpread(_objectSpread({}, dataSubmit), {}, {\n            FullNameUnicode: listDataForm.Student.find(item => item.value == dataSubmit.UserInformationID).title,\n            BranchName: listDataForm.Branch.find(item => item.value == dataSubmit.BranchID).title\n          }));\n          setDataSource(newDataSource);\n          showNoti('success', res.data.message);\n        }\n      } else {\n        var _res;\n\n        res = await testCustomerApi.add(dataSubmit);\n        ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && afterPost(res.data.message);\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n    }\n\n    return res;\n  }; // -------------- HANDLE FILTER ------------------\n\n\n  const handleFilter = listFilter => {\n    let newListFilter = _objectSpread({}, listFieldFilter);\n\n    listFilter.forEach((item, index) => {\n      let key = item.name;\n      Object.keys(newListFilter).forEach(keyFilter => {\n        if (keyFilter == key) {\n          newListFilter[key] = item.value;\n        }\n      });\n    });\n    setTodoApi(_objectSpread(_objectSpread(_objectSpread({}, listTodoApi), newListFilter), {}, {\n      pageIndex: 1\n    }));\n  }; // --------------- HANDLE SORT ----------------------\n\n\n  const handleSort = async option => {\n    let newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1,\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n\n    setCurrentPage(1), setTodoApi(newTodoApi);\n  }; // ------------ ON SEARCH -----------------------\n\n\n  const checkField = (valueSearch, dataIndex) => {\n    let newList = _objectSpread({}, listFieldSearch);\n\n    Object.keys(newList).forEach(function (key) {\n      if (key != dataIndex) {\n        if (key != 'pageIndex') {\n          newList[key] = null;\n        }\n      } else {\n        newList[key] = valueSearch;\n      }\n    });\n    return newList;\n  };\n\n  const onSearch = (valueSearch, dataIndex) => {\n    let clearKey = checkField(valueSearch, dataIndex);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), clearKey));\n  }; // HANDLE RESET\n\n\n  const resetListFieldSearch = () => {\n    Object.keys(listFieldSearch).forEach(function (key) {\n      if (key != 'pageIndex') {\n        listFieldSearch[key] = null;\n      }\n    });\n  };\n\n  const handleReset = () => {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1), resetListFieldSearch();\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  const getPagination = pageNumber => {\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      // ...listFieldSearch,\n      pageIndex: pageIndex\n    }));\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(() => {\n    if (userInformation) {\n      getDataSource();\n    }\n  }, [todoApi]);\n  useEffect(() => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    if (userInformation) {\n      !showfirst && (setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n        UserInformationID: userInformation.UserInformationID\n      })), setShowFirst(true));\n    }\n  }, [userInformation]);\n  useEffect(() => {\n    // getDataAll(listApi);\n    getDataExam(); // Get current date\n\n    let currentdate = new Date();\n    let datetime = currentdate.getDate() + '/' + (currentdate.getMonth() + 1) + '/' + currentdate.getFullYear() + ' ' + currentdate.getHours() + ':' + currentdate.getMinutes();\n    setCurrentDate(datetime);\n  }, []);\n\n  const moveToTest = (e, data) => {\n    e.preventDefault();\n    let testDate = moment(data.AppointmentDate).format('DD/MM/YYYY') + ' ' + data.Time;\n    testDate = new Date(testDate);\n\n    if (new Date(currentDate) < testDate) {\n      setisOpenNoti(true);\n      setContentNoti('Chưa đến giờ làm bài test');\n    } else {\n      if (data.Status == 0) {\n        router.push({\n          pathname: '/exam/exam-review',\n          query: {\n            examID: data.ExamTopicID,\n            packageDetailID: data.ID,\n            type: 'test'\n          }\n        });\n      } else {\n        setisOpenNoti(true);\n\n        if (data.Status !== 4) {\n          setContentNoti('Bạn đã làm bài test này rồi!');\n        } else {\n          setContentNoti('Lịch hẹn test của bạn đã bị hủy');\n        }\n      }\n    }\n  }; // const expandedRowRender = (record) => {\n  // \t// return record.Note ? record.Note : \"Không có ghi chú\";\n  // \treturn (\n  // \t\t<>\n  // \t\t\t<div className=\"box-note mt-2\">\n  // \t\t\t\t<h6 className=\"d-block text-underline\">Ghi chú:</h6>\n  // \t\t\t\t<p>{record.Note}</p>\n  // \t\t\t</div>\n  // \t\t\t<TestCustomerPoint ID={record.ID} />\n  // \t\t</>\n  // \t);\n  // };\n\n\n  const expandedRowRender = (data, index) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ExamAppointmentPoint, {\n        infoID: data.ID,\n        userID: data.UserInformationID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  };\n\n  const columns = [{\n    title: 'Ngày hẹn',\n    dataIndex: 'AppointmentDate',\n    render: date => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: moment(date).format('DD/MM/YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 27\n    }, this)\n  }, {\n    title: 'Giờ hẹn',\n    dataIndex: 'Time',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 22\n    }, this)\n  }, {\n    width: 150,\n    title: 'Trung tâm',\n    dataIndex: 'BranchName',\n    render: a => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: a\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 19\n    }, this)\n  }, {\n    width: 150,\n    title: 'Đề test',\n    dataIndex: 'ExamTopicnName',\n    render: (text, data) => data.Status == 0 && data.ExamTopicID !== 0 && /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"L\\xE0m \\u0111\\u1EC1 test\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"\",\n        className: \"font-weight-link d-flex align-items-center\",\n        onClick: e => moveToTest(e, data),\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 6\n    }, this)\n  }, {\n    title: 'Tư vấn viên',\n    dataIndex: 'CounselorsName'\n  }, {\n    title: 'Trạng thái',\n    dataIndex: 'Status',\n    width: 100,\n    filters: [{\n      text: 'Chưa test',\n      value: 0\n    }, {\n      text: 'Đang chấm bài',\n      value: 1\n    }, {\n      text: 'Chờ đăng kí khóa học',\n      value: 2\n    }, {\n      text: 'Đã đăng kí khóa học',\n      value: 3\n    }],\n    onFilter: (value, record) => record.Status === value,\n    render: status => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [status == 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag red\",\n          children: \"Ch\\u01B0a test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 23\n        }, this), status == 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag blue\",\n          children: \"\\u0110ang ch\\u1EA5m b\\xE0i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 23\n        }, this), status == 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag yellow\",\n          children: \"Ch\\u1EDD \\u0111\\u0103ng k\\xED kh\\xF3a h\\u1ECDc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 23\n        }, this), status == 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag green\",\n          children: \"\\u0110\\xE3 \\u0111\\u0103ng k\\xED kh\\xF3a h\\u1ECDc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 23\n        }, this), status == 4 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag gray\",\n          children: \"\\u0110\\xE3 h\\u1EE7y h\\u1EB9n test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true);\n    }\n  }, {\n    title: '',\n    render: (text, data, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [data.ExamAppointmentResultID !== 0 && /*#__PURE__*/_jsxDEV(Link, {\n        href: {\n          pathname: '/customer/service/service-test-student/detail/[slug]',\n          query: {\n            slug: data.ID,\n            examID: data.ExamTopicID,\n            ExamAppointmentResultID: data.ExamAppointmentResultID\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Chi ti\\u1EBFt k\\u1EBFt qu\\u1EA3 \\u0111\\u1EC1 h\\u1EB9n test\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-icon\",\n            children: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 7\n      }, this), data.Status == 0 && data.ExamTopicID !== 0 && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"L\\xE0m \\u0111\\u1EC1 test\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-icon edit mr-2\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"\",\n            className: \"font-weight-link d-flex align-items-center\",\n            onClick: e => moveToTest(e, data),\n            children: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NotiModal, {\n      isOpen: isOpenNoti,\n      isCancel: () => setisOpenNoti(false),\n      isOk: () => setisOpenNoti(false),\n      content: contentNoti\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ExpandTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: pageNumber => getPagination(pageNumber),\n      loading: isLoading,\n      addClass: \"basic-header\",\n      TitlePage: \"Th\\xF4ng tin h\\u1EB9n test\",\n      dataSource: dataSource,\n      columns: columns,\n      Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: [/*#__PURE__*/_jsxDEV(FilterBase, {\n          dataFilter: dataFilter,\n          handleFilter: listFilter => handleFilter(listFilter),\n          handleReset: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(SortBox, {\n          handleSort: value => handleSort(value),\n          dataOption: dataOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 6\n      }, this),\n      expandable: {\n        expandedRowRender\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\nServiceTestStudent.layout = LayoutBase;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Customer/Service/Student/ServiceTestStudent.tsx"],"names":["moment","router","React","useEffect","useState","branchApi","studentApi","testCustomerApi","examTopicApi","FilterBase","NotiModal","SortBox","ExpandTable","LayoutBase","useWrap","EditOutlined","ExclamationCircleOutlined","Tooltip","ExamAppointmentPoint","Link","pageIndex","listFieldSearch","FullNameUnicode","listFieldFilter","BranchID","UserInformationID","Status","AppointmentDate","dataOption","dataSort","sort","sortType","text","listApi","api","name","ServiceTestStudent","props","listDataForm","setListDataForm","Branch","Student","dataExam","setDataExam","currentDate","setCurrentDate","isOpenNoti","setisOpenNoti","contentNoti","setContentNoti","dataSource","setDataSource","showNoti","pageSize","userInformation","listTodoApi","isLoading","setIsLoading","type","status","totalPage","setTotalPage","indexRow","setIndexRow","currentPage","setCurrentPage","todoApi","setTodoApi","showfirst","setShowFirst","dataFilter","setDataFilter","title","col","optionList","value","makeNewData","data","newData","map","item","BranchName","ID","setDataFunc","counselorsName","CounselorsName","getDataTolist","Object","keys","forEach","key","getDataExam","res","getAll","selectAll","error","console","log","message","getDataAll","arrApi","index","RoleID","StatusID","Enable","getDataSource","totalRow","every","afterPost","mes","_onSubmit","dataSubmit","update","newDataSource","splice","find","add","handleFilter","listFilter","newListFilter","keyFilter","handleSort","option","newTodoApi","checkField","valueSearch","dataIndex","newList","onSearch","clearKey","resetListFieldSearch","handleReset","getPagination","pageNumber","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","moveToTest","e","preventDefault","testDate","format","Time","push","pathname","query","examID","ExamTopicID","packageDetailID","expandedRowRender","columns","render","date","width","a","filters","onFilter","record","ExamAppointmentResultID","slug","layout"],"mappings":"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","sourcesContent":["import moment from 'moment'\r\nimport router from 'next/router'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { branchApi, studentApi, testCustomerApi, examTopicApi } from '~/apiBase'\r\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase'\r\nimport NotiModal from '~/components/Elements/NotiModal/NotiModal'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport ExpandTable from '~/components/ExpandTable'\r\n\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nimport { EditOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport { Tooltip } from 'antd'\r\nimport ExamAppointmentPoint from '../../../ExamAppointment/ExamAppointmentPoint'\r\nimport Link from 'next/link'\r\n\r\nlet pageIndex = 1\r\n\r\nlet listFieldSearch = {\r\n\tpageIndex: 1,\r\n\tFullNameUnicode: null\r\n}\r\n\r\nlet listFieldFilter = {\r\n\tpageIndex: 1,\r\n\tBranchID: null, // lọc\r\n\tUserInformationID: null,\r\n\tStatus: null,\r\n\tAppointmentDate: null\r\n}\r\n\r\nconst dataOption = [\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Tên A - Z '\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Tên Z - A'\r\n\t},\r\n\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Ngày hẹn A - Z'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Ngày hẹn Z - A'\r\n\t}\r\n]\r\n\r\n// -- FOR DIFFERENT VIEW --\r\ninterface optionObj {\r\n\ttitle: string\r\n\tvalue: number\r\n}\r\n\r\ninterface studentObj {\r\n\ttitle: string\r\n\tvalue: number\r\n\tcounselorsName: string\r\n}\r\n\r\ninterface listDataForm {\r\n\tBranch: Array<optionObj>\r\n\tStudent: Array<studentObj>\r\n}\r\n\r\nconst listApi = [\r\n\t{\r\n\t\tapi: branchApi,\r\n\t\ttext: 'Trung tâm',\r\n\t\tname: 'Branch'\r\n\t},\r\n\t{\r\n\t\tapi: studentApi,\r\n\t\ttext: 'Học viên',\r\n\t\tname: 'Student'\r\n\t}\r\n]\r\n\r\nexport default function ServiceTestStudent(props) {\r\n\tconst [listDataForm, setListDataForm] = useState<listDataForm>({ Branch: [], Student: [] })\r\n\tconst [dataExam, setDataExam] = useState<IExamTopic[]>([])\r\n\tconst [currentDate, setCurrentDate] = useState<any>(null)\r\n\tconst [isOpenNoti, setisOpenNoti] = useState(false)\r\n\tconst [contentNoti, setContentNoti] = useState('')\r\n\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState<ITestCustomer[]>([])\r\n\tconst { showNoti, pageSize, userInformation } = useWrap()\r\n\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tFullNameUnicode: null,\r\n\t\tBranchID: null, // lọc\r\n\t\tUserInformationID: userInformation?.UserInformationID,\r\n\t\tStatus: null,\r\n\t\tAppointmentDate: null\r\n\t}\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [indexRow, setIndexRow] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\tconst [showfirst, setShowFirst] = useState(false)\r\n\r\n\t// ------ LIST FILTER -------\r\n\tconst [dataFilter, setDataFilter] = useState([\r\n\t\t{\r\n\t\t\tname: 'BranchID',\r\n\t\t\ttitle: 'Trung tâm',\r\n\t\t\tcol: 'col-md-12 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null, // Gọi api xong trả data vào đây\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tname: 'Status',\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tcol: 'col-md-12 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Chưa test',\r\n\t\t\t\t\tvalue: 0\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Đang chấm bài test',\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Chưa đăng kí khóa học',\r\n\t\t\t\t\tvalue: 2\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Đã đăng kí khóa học',\r\n\t\t\t\t\tvalue: 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Đã hủy hẹn test',\r\n\t\t\t\t\tvalue: 4\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'AppointmentDate',\r\n\t\t\ttitle: 'Ngày hẹn test',\r\n\t\t\tcol: 'col-md-12 col-12',\r\n\t\t\ttype: 'date-single',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'date-range',\r\n\t\t\ttitle: 'Từ - đến',\r\n\t\t\tcol: 'col-12',\r\n\t\t\ttype: 'date-range',\r\n\t\t\tvalue: null\r\n\t\t}\r\n\t])\r\n\r\n\tconst makeNewData = (data, name) => {\r\n\t\tlet newData = null\r\n\t\tswitch (name) {\r\n\t\t\tcase 'Branch':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.BranchName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('BranchID', newData)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 'Student':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.FullNameUnicode,\r\n\t\t\t\t\tvalue: item.UserInformationID,\r\n\t\t\t\t\tcounselorsName: item.CounselorsName == null ? '' : item.CounselorsName\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\r\n\t\treturn newData\r\n\t}\r\n\r\n\tconst getDataTolist = (data: any, name: any) => {\r\n\t\tlet newData = makeNewData(data, name)\r\n\r\n\t\tObject.keys(listDataForm).forEach(function (key) {\r\n\t\t\tif (key == name) {\r\n\t\t\t\tlistDataForm[key] = newData\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetListDataForm({ ...listDataForm })\r\n\t}\r\n\r\n\t// ----------- GET DATA EXAM ------------\r\n\tconst getDataExam = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await examTopicApi.getAll({\r\n\t\t\t\tselectAll: true,\r\n\t\t\t\ttype: 1\r\n\t\t\t})\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetDataExam(res.data.data)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Error Exam: ', error.message)\r\n\t\t}\r\n\t}\r\n\r\n\t// ----------- GET DATA SOURCE ---------------\r\n\tconst getDataAll = (arrApi) => {\r\n\t\tarrApi.forEach((item, index) => {\r\n\t\t\t;(async () => {\r\n\t\t\t\tlet res = null\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (item.name == 'Counselors') {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tRoleID: 6,\r\n\t\t\t\t\t\t\tStatusID: 0,\r\n\t\t\t\t\t\t\tEnable: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tEnable: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tres.status == 200 && getDataTolist(res.data.data, item.name)\r\n\r\n\t\t\t\t\tres.status == 204 && showNoti('danger', item.text + ' Không có dữ liệu')\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t\t} finally {\r\n\t\t\t\t}\r\n\t\t\t})()\r\n\t\t})\r\n\t}\r\n\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await testCustomerApi.getAll(todoApi)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetDataSource(res.data.data)\r\n\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\t// setTestDate(moment(res.data.data.AppointmentDate).format('DD/MM/YYYY HH:mm'));\r\n\t\t\t}\r\n\t\t\tres.status == 204 && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// ------ SET DATA FUN ------\r\n\tconst setDataFunc = (name, data) => {\r\n\t\tdataFilter.every((item, index) => {\r\n\t\t\tif (item.name == name) {\r\n\t\t\t\titem.optionList = data\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t\tsetDataFilter([...dataFilter])\r\n\t}\r\n\r\n\t// ---------------- AFTER SUBMIT -----------------\r\n\tconst afterPost = (mes) => {\r\n\t\t// showNoti(\"success\", mes);\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// ----------------- ON SUBMIT --------------------\r\n\tconst _onSubmit = async (dataSubmit: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet res = null\r\n\r\n\t\ttry {\r\n\t\t\tif (dataSubmit.ID) {\r\n\t\t\t\tres = await testCustomerApi.update(dataSubmit)\r\n\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tlet newDataSource = [...dataSource]\r\n\t\t\t\t\tnewDataSource.splice(indexRow, 1, {\r\n\t\t\t\t\t\t...dataSubmit,\r\n\t\t\t\t\t\tFullNameUnicode: listDataForm.Student.find((item) => item.value == dataSubmit.UserInformationID).title,\r\n\t\t\t\t\t\tBranchName: listDataForm.Branch.find((item) => item.value == dataSubmit.BranchID).title\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetDataSource(newDataSource)\r\n\t\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tres = await testCustomerApi.add(dataSubmit)\r\n\t\t\t\tres?.status == 200 && afterPost(res.data.message)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error: ', error)\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\t// -------------- HANDLE FILTER ------------------\r\n\tconst handleFilter = (listFilter) => {\r\n\t\tlet newListFilter = { ...listFieldFilter }\r\n\t\tlistFilter.forEach((item, index) => {\r\n\t\t\tlet key = item.name\r\n\t\t\tObject.keys(newListFilter).forEach((keyFilter) => {\r\n\t\t\t\tif (keyFilter == key) {\r\n\t\t\t\t\tnewListFilter[key] = item.value\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tsetTodoApi({ ...listTodoApi, ...newListFilter, pageIndex: 1 })\r\n\t}\r\n\r\n\t// --------------- HANDLE SORT ----------------------\r\n\tconst handleSort = async (option) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetCurrentPage(1), setTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// ------------ ON SEARCH -----------------------\r\n\r\n\tconst checkField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = { ...listFieldSearch }\r\n\t\tObject.keys(newList).forEach(function (key) {\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\t\tnewList[key] = null\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewList[key] = valueSearch\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn newList\r\n\t}\r\n\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tlet clearKey = checkField(valueSearch, dataIndex)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t...clearKey\r\n\t\t})\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tconst resetListFieldSearch = () => {\r\n\t\tObject.keys(listFieldSearch).forEach(function (key) {\r\n\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\tlistFieldSearch[key] = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1), resetListFieldSearch()\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tpageIndex = pageNumber\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t// ...listFieldSearch,\r\n\t\t\tpageIndex: pageIndex\r\n\t\t})\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tif (userInformation) {\r\n\t\t\tgetDataSource()\r\n\t\t}\r\n\t}, [todoApi])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\tif (userInformation) {\r\n\t\t\t!showfirst && (setTodoApi({ ...todoApi, UserInformationID: userInformation.UserInformationID }), setShowFirst(true))\r\n\t\t}\r\n\t}, [userInformation])\r\n\r\n\tuseEffect(() => {\r\n\t\t// getDataAll(listApi);\r\n\t\tgetDataExam()\r\n\r\n\t\t// Get current date\r\n\t\tlet currentdate = new Date()\r\n\t\tlet datetime =\r\n\t\t\tcurrentdate.getDate() +\r\n\t\t\t'/' +\r\n\t\t\t(currentdate.getMonth() + 1) +\r\n\t\t\t'/' +\r\n\t\t\tcurrentdate.getFullYear() +\r\n\t\t\t' ' +\r\n\t\t\tcurrentdate.getHours() +\r\n\t\t\t':' +\r\n\t\t\tcurrentdate.getMinutes()\r\n\r\n\t\tsetCurrentDate(datetime)\r\n\t}, [])\r\n\r\n\tconst moveToTest = (e, data) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tlet testDate: any = moment(data.AppointmentDate).format('DD/MM/YYYY') + ' ' + data.Time\r\n\r\n\t\ttestDate = new Date(testDate)\r\n\r\n\t\tif (new Date(currentDate) < testDate) {\r\n\t\t\tsetisOpenNoti(true)\r\n\t\t\tsetContentNoti('Chưa đến giờ làm bài test')\r\n\t\t} else {\r\n\t\t\tif (data.Status == 0) {\r\n\t\t\t\trouter.push({\r\n\t\t\t\t\tpathname: '/exam/exam-review',\r\n\t\t\t\t\tquery: {\r\n\t\t\t\t\t\texamID: data.ExamTopicID,\r\n\t\t\t\t\t\tpackageDetailID: data.ID,\r\n\t\t\t\t\t\ttype: 'test'\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tsetisOpenNoti(true)\r\n\t\t\t\tif (data.Status !== 4) {\r\n\t\t\t\t\tsetContentNoti('Bạn đã làm bài test này rồi!')\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetContentNoti('Lịch hẹn test của bạn đã bị hủy')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// const expandedRowRender = (record) => {\r\n\t// \t// return record.Note ? record.Note : \"Không có ghi chú\";\r\n\t// \treturn (\r\n\t// \t\t<>\r\n\t// \t\t\t<div className=\"box-note mt-2\">\r\n\t// \t\t\t\t<h6 className=\"d-block text-underline\">Ghi chú:</h6>\r\n\t// \t\t\t\t<p>{record.Note}</p>\r\n\t// \t\t\t</div>\r\n\t// \t\t\t<TestCustomerPoint ID={record.ID} />\r\n\t// \t\t</>\r\n\t// \t);\r\n\t// };\r\n\r\n\tconst expandedRowRender = (data, index) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<ExamAppointmentPoint infoID={data.ID} userID={data.UserInformationID} />\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Ngày hẹn',\r\n\t\t\tdataIndex: 'AppointmentDate',\r\n\t\t\trender: (date: any) => <p className=\"font-weight-black\">{moment(date).format('DD/MM/YYYY')}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Giờ hẹn',\r\n\t\t\tdataIndex: 'Time',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 150,\r\n\t\t\ttitle: 'Trung tâm',\r\n\t\t\tdataIndex: 'BranchName',\r\n\t\t\trender: (a) => <p className=\"font-weight-black\">{a}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 150,\r\n\t\t\ttitle: 'Đề test',\r\n\t\t\tdataIndex: 'ExamTopicnName',\r\n\t\t\trender: (text, data: any) =>\r\n\t\t\t\tdata.Status == 0 &&\r\n\t\t\t\tdata.ExamTopicID !== 0 && (\r\n\t\t\t\t\t<Tooltip title=\"Làm đề test\">\r\n\t\t\t\t\t\t<a href=\"\" className=\"font-weight-link d-flex align-items-center\" onClick={(e) => moveToTest(e, data)}>\r\n\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tư vấn viên',\r\n\t\t\tdataIndex: 'CounselorsName'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tdataIndex: 'Status',\r\n\t\t\twidth: 100,\r\n\t\t\tfilters: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Chưa test',\r\n\t\t\t\t\tvalue: 0\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Đang chấm bài',\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Chờ đăng kí khóa học',\r\n\t\t\t\t\tvalue: 2\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Đã đăng kí khóa học',\r\n\t\t\t\t\tvalue: 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tonFilter: (value, record) => record.Status === value,\r\n\t\t\trender: (status) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{status == 0 && <span className=\"tag red\">Chưa test</span>}\r\n\t\t\t\t\t\t{status == 1 && <span className=\"tag blue\">Đang chấm bài</span>}\r\n\t\t\t\t\t\t{status == 2 && <span className=\"tag yellow\">Chờ đăng kí khóa học</span>}\r\n\t\t\t\t\t\t{status == 3 && <span className=\"tag green\">Đã đăng kí khóa học</span>}\r\n\t\t\t\t\t\t{status == 4 && <span className=\"tag gray\">Đã hủy hẹn test</span>}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t\trender: (text, data, index) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{data.ExamAppointmentResultID !== 0 && (\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\t\tpathname: '/customer/service/service-test-student/detail/[slug]',\r\n\t\t\t\t\t\t\t\tquery: {\r\n\t\t\t\t\t\t\t\t\tslug: data.ID,\r\n\t\t\t\t\t\t\t\t\texamID: data.ExamTopicID,\r\n\t\t\t\t\t\t\t\t\tExamAppointmentResultID: data.ExamAppointmentResultID\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Tooltip title=\"Chi tiết kết quả đề hẹn test\">\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-icon\">\r\n\t\t\t\t\t\t\t\t\t<ExclamationCircleOutlined />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{data.Status == 0 && data.ExamTopicID !== 0 && (\r\n\t\t\t\t\t\t<Tooltip title=\"Làm đề test\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-icon edit mr-2\">\r\n\t\t\t\t\t\t\t\t<a href=\"\" className=\"font-weight-link d-flex align-items-center\" onClick={(e) => moveToTest(e, data)}>\r\n\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<NotiModal isOpen={isOpenNoti} isCancel={() => setisOpenNoti(false)} isOk={() => setisOpenNoti(false)} content={contentNoti} />\r\n\t\t\t<ExpandTable\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Thông tin hẹn test\"\r\n\t\t\t\tdataSource={dataSource}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t<FilterBase dataFilter={dataFilter} handleFilter={(listFilter: any) => handleFilter(listFilter)} handleReset={handleReset} />\r\n\t\t\t\t\t\t<SortBox handleSort={(value) => handleSort(value)} dataOption={dataOption} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\texpandable={{ expandedRowRender }}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nServiceTestStudent.layout = LayoutBase\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\FormControl\\\\UploadAvatarField\\\\index.tsx\";\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Form, Spin, Upload } from 'antd';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Controller } from 'react-hook-form';\nimport { studentApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\n\nconst UploadAvatarField = props => {\n  var _errors$name;\n\n  const {\n    form,\n    name,\n    label,\n    disabled,\n    style,\n    className\n  } = props;\n  const {\n    0: imgUrl,\n    1: setImgUrl\n  } = useState('');\n  const {\n    0: loadingImage,\n    1: setLoadingImage\n  } = useState(false);\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    errors\n  } = form.formState;\n  const hasError = errors[name];\n\n  const handleUploadAvatar = async file => {\n    try {\n      if (file.status === 'uploading') {\n        setLoadingImage(true);\n        return;\n      }\n\n      if (file.status === 'done') {\n        const res = await studentApi.uploadImage(file.originFileObj);\n\n        if (res.status === 200) {\n          setImgUrl(res.data.data);\n          return res;\n        }\n      }\n    } catch (err) {\n      console.log('UploadAvatarField-handleUploadAvatar', err);\n    } finally {\n      setLoadingImage(false);\n    }\n  };\n\n  const beforeUpload = file => {\n    const validTypeList = ['image/png', 'image/jpg', 'image/jpeg', 'image/bmp'];\n    const isValidType = validTypeList.includes(file.type);\n\n    if (!isValidType) {\n      showNoti('danger', `${file.name} không đúng định dạng (jpg | jpeg | png | bmp).`);\n    }\n\n    return isValidType;\n  };\n\n  const UploadButton = props => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bg-upload  ${loadingImage && 'loading'}`,\n        children: loadingImage ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 80\n        }, this) : /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 102\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form.Item, {\n    required: false,\n    style: style,\n    label: label,\n    className: `${className} ${hasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      name: name,\n      control: form.control,\n      render: ({\n        field\n      }) => {\n        return /*#__PURE__*/_jsxDEV(Upload, {\n          name: field.name,\n          ref: field.ref,\n          listType: \"picture-card\",\n          className: \"avatar-uploader\",\n          disabled: disabled,\n          showUploadList: false,\n          beforeUpload: beforeUpload,\n          onChange: obj => {\n            handleUploadAvatar(obj.file).then(res => (res === null || res === void 0 ? void 0 : res.status) === 200 && field.onChange(res.data.data));\n          },\n          children: [loadingImage ? /*#__PURE__*/_jsxDEV(Spin, {\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgUrl || field.value,\n            alt: \"avatar\",\n            style: {\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover',\n              display: imgUrl || field.value ? 'block' : 'none',\n              zIndex: 1000\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(UploadButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ant-form-item-explain ant-form-item-explain-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }, this);\n};\n\nUploadAvatarField.propTypes = {\n  form: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  disabled: PropTypes.bool,\n  style: PropTypes.shape({}),\n  className: PropTypes.string\n};\nUploadAvatarField.defaultProps = {\n  label: '',\n  disabled: false,\n  style: {},\n  className: ''\n};\nexport default UploadAvatarField;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/FormControl/UploadAvatarField/index.tsx"],"names":["LoadingOutlined","PlusOutlined","Form","Spin","Upload","PropTypes","React","useState","Controller","studentApi","useWrap","UploadAvatarField","props","form","name","label","disabled","style","className","imgUrl","setImgUrl","loadingImage","setLoadingImage","showNoti","errors","formState","hasError","handleUploadAvatar","file","status","res","uploadImage","originFileObj","data","err","console","log","beforeUpload","validTypeList","isValidType","includes","type","UploadButton","control","field","ref","obj","then","onChange","value","width","height","objectFit","display","zIndex","message","propTypes","object","isRequired","string","bool","shape","defaultProps"],"mappings":"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","sourcesContent":["import { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport { Form, Spin, Upload } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useState } from 'react'\r\nimport { Controller } from 'react-hook-form'\r\nimport { studentApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\ninterface RcFile extends File {\r\n\tuid: string\r\n\tlastModifiedDate: Date\r\n}\r\ntype IFile = {\r\n\tuid: string\r\n\tsize?: number\r\n\tname: string\r\n\tfileName?: string\r\n\tlastModified?: number\r\n\tlastModifiedDate?: Date\r\n\turl?: string\r\n\tstatus?: 'error' | 'success' | 'done' | 'uploading' | 'removed'\r\n\tpercent?: number\r\n\tthumbUrl?: string\r\n\toriginFileObj?: RcFile\r\n\tresponse?: string\r\n\terror?: any\r\n\tlinkProps?: any\r\n\ttype?: string\r\n\txhr?: any\r\n\tpreview?: string\r\n}\r\n\r\nconst UploadAvatarField = (props) => {\r\n\tconst { form, name, label, disabled, style, className } = props\r\n\r\n\tconst [imgUrl, setImgUrl] = useState('')\r\n\tconst [loadingImage, setLoadingImage] = useState(false)\r\n\tconst { showNoti } = useWrap()\r\n\tconst { errors } = form.formState\r\n\tconst hasError = errors[name]\r\n\r\n\tconst handleUploadAvatar = async (file: any) => {\r\n\t\ttry {\r\n\t\t\tif (file.status === 'uploading') {\r\n\t\t\t\tsetLoadingImage(true)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (file.status === 'done') {\r\n\t\t\t\tconst res = await studentApi.uploadImage(file.originFileObj)\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tsetImgUrl(res.data.data)\r\n\t\t\t\t\treturn res\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('UploadAvatarField-handleUploadAvatar', err)\r\n\t\t} finally {\r\n\t\t\tsetLoadingImage(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst beforeUpload = (file: IFile) => {\r\n\t\tconst validTypeList = ['image/png', 'image/jpg', 'image/jpeg', 'image/bmp']\r\n\t\tconst isValidType = validTypeList.includes(file.type)\r\n\t\tif (!isValidType) {\r\n\t\t\tshowNoti('danger', `${file.name} không đúng định dạng (jpg | jpeg | png | bmp).`)\r\n\t\t}\r\n\t\treturn isValidType\r\n\t}\r\n\r\n\tconst UploadButton = (props) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className={`bg-upload  ${loadingImage && 'loading'}`}>{loadingImage ? <LoadingOutlined /> : <PlusOutlined />}</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form.Item\r\n\t\t\trequired={false}\r\n\t\t\tstyle={style}\r\n\t\t\tlabel={label}\r\n\t\t\tclassName={`${className} ${hasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''}`}\r\n\t\t>\r\n\t\t\t<Controller\r\n\t\t\t\tname={name}\r\n\t\t\t\tcontrol={form.control}\r\n\t\t\t\trender={({ field }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\tname={field.name}\r\n\t\t\t\t\t\t\tref={field.ref}\r\n\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\tonChange={(obj) => {\r\n\t\t\t\t\t\t\t\thandleUploadAvatar(obj.file).then((res) => res?.status === 200 && field.onChange(res.data.data))\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{loadingImage ? (\r\n\t\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={imgUrl || field.value}\r\n\t\t\t\t\t\t\t\t\talt=\"avatar\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\t\t\t\tdisplay: imgUrl || field.value ? 'block' : 'none',\r\n\t\t\t\t\t\t\t\t\t\tzIndex: 1000\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<UploadButton />\r\n\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{hasError && (\r\n\t\t\t\t<div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n\t\t\t\t\t<div role=\"alert\">{errors[name]?.message}</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Form.Item>\r\n\t)\r\n}\r\nUploadAvatarField.propTypes = {\r\n\tform: PropTypes.object.isRequired,\r\n\tname: PropTypes.string.isRequired,\r\n\tlabel: PropTypes.string,\r\n\tdisabled: PropTypes.bool,\r\n\tstyle: PropTypes.shape({}),\r\n\tclassName: PropTypes.string\r\n}\r\nUploadAvatarField.defaultProps = {\r\n\tlabel: '',\r\n\tdisabled: false,\r\n\tstyle: {},\r\n\tclassName: ''\r\n}\r\nexport default UploadAvatarField\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Profile\\\\ProfileCustomer\\\\InfoStudyCard\\\\InfoStudyCard.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { programApi, studyRoleApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport update from 'immutability-helper';\nimport { Card, Table } from 'antd';\nimport AddStudyRole from './AddStudyRole';\nvar type = 'DraggableBodyRow';\n\nvar DraggableBodyRow = function DraggableBodyRow(_ref) {\n  _s();\n\n  var index = _ref.index,\n      moveRow = _ref.moveRow,\n      className = _ref.className,\n      style = _ref.style,\n      restProps = _objectWithoutProperties(_ref, [\"index\", \"moveRow\", \"className\", \"style\"]);\n\n  var ref = useRef();\n\n  var _useDrop = useDrop({\n    accept: type,\n    collect: function collect(monitor) {\n      //@ts-ignore\n      var _ref2 = monitor.getItem() || {},\n          dragIndex = _ref2.index;\n\n      if (dragIndex === index) {\n        return {};\n      }\n\n      return {\n        isOver: monitor.isOver(),\n        dropClassName: dragIndex < index ? ' drop-over-downward' : ' drop-over-upward'\n      };\n    },\n    drop: function drop(item) {\n      //@ts-ignore\n      moveRow(item.index, index);\n    }\n  }),\n      _useDrop2 = _slicedToArray(_useDrop, 2),\n      _useDrop2$ = _useDrop2[0],\n      isOver = _useDrop2$.isOver,\n      dropClassName = _useDrop2$.dropClassName,\n      drop = _useDrop2[1];\n\n  var _useDrag = useDrag({\n    type: type,\n    item: {\n      index: index\n    },\n    collect: function collect(monitor) {\n      return {\n        isDragging: monitor.isDragging()\n      };\n    }\n  }),\n      _useDrag2 = _slicedToArray(_useDrag, 2),\n      drag = _useDrag2[1];\n\n  drop(drag(ref));\n  return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread({\n    ref: ref,\n    className: \"\".concat(className).concat(isOver ? dropClassName : ''),\n    style: _objectSpread({\n      cursor: 'move'\n    }, style)\n  }, restProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DraggableBodyRow, \"RQ/gfEoGCM1Zl9t7zflUIqwIZls=\", false, function () {\n  return [useDrop, useDrag];\n});\n\n_c = DraggableBodyRow;\n\nvar InfoStudyCard = function InfoStudyCard(props) {\n  _s2();\n\n  var studentID = props.studentID;\n\n  var _useState = useState([]),\n      dataProgram = _useState[0],\n      setDataProgram = _useState[1];\n\n  var _useState2 = useState(null),\n      dataSource = _useState2[0],\n      setDataSource = _useState2[1];\n\n  var _useState3 = useState(false),\n      isLoading = _useState3[0],\n      setIsLoading = _useState3[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      pageSize = _useWrap.pageSize;\n\n  var _useState4 = useState(null),\n      totalPage = _useState4[0],\n      setTotalPage = _useState4[1];\n\n  var _useState5 = useState(1),\n      currentPage = _useState5[0],\n      setCurrentPage = _useState5[1];\n\n  var listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: 1,\n    StudentID: studentID\n  };\n\n  var _useState6 = useState(listTodoApi),\n      todoApi = _useState6[0],\n      setTodoApi = _useState6[1];\n\n  var getDataProgram = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, newData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return programApi.getAll({\n                selectAll: true\n              });\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status == 200) {\n                newData = res.data.data.map(function (item) {\n                  return {\n                    title: item.ProgramName,\n                    value: item.ID\n                  };\n                });\n                setDataProgram(newData);\n              }\n\n              res.status == 204 && setDataProgram([]);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0.message);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function getDataProgram() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getDataSource = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsLoading(true);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return studyRoleApi.getAll(todoApi);\n\n            case 4:\n              res = _context2.sent;\n              res.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow));\n              res.status == 204 && setDataSource([]);\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              showNoti('danger', _context2.t0.message);\n\n            case 12:\n              _context2.prev = 12;\n              setIsLoading(false);\n              return _context2.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function getDataSource() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var columns = [{\n    title: 'Chương trình',\n    dataIndex: 'ProgramName',\n    key: 'programname'\n  }, {\n    title: 'Ghi chú',\n    dataIndex: 'Note',\n    key: 'note'\n  }, {\n    title: 'Ngày tạo',\n    dataIndex: 'CreatedOn',\n    key: 'createdon'\n  }, {\n    title: 'Tạo bởi',\n    dataIndex: 'CreatedBy',\n    key: 'createdby'\n  }];\n\n  var updatePosition = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(indexFirst, indexAfter) {\n      var dataSubmit, res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dataSubmit = {\n                IDOne: indexFirst,\n                IDTwo: indexAfter\n              };\n              setIsLoading(true);\n              _context3.prev = 2;\n              _context3.next = 5;\n              return studyRoleApi.changePosition(dataSubmit);\n\n            case 5:\n              res = _context3.sent;\n\n              if (res.status === 200) {\n                showNoti('success', 'Đổi vị trí thành công');\n                setTodoApi(_objectSpread({}, todoApi));\n              } else {\n                setIsLoading(false);\n              }\n\n              _context3.next = 13;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](2);\n              showNoti('danger', _context3.t0.message);\n              setIsLoading(false);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 9]]);\n    }));\n\n    return function updatePosition(_x, _x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); // const [data, setData] = useState(dataSource);\n\n\n  var components = {\n    body: {\n      row: DraggableBodyRow\n    }\n  };\n  var moveRow = useCallback(function (dragIndex, hoverIndex) {\n    var dragRow = dataSource[dragIndex];\n    var dragID = dataSource[dragIndex].ID;\n    var hoverID = dataSource[hoverIndex].ID;\n    updatePosition(dragID, hoverID);\n    setDataSource(update(dataSource, {\n      $splice: [[dragIndex, 1], [hoverIndex, 0, dragRow]]\n    }));\n  }, [dataSource]);\n\n  var _onFetchData = function onFetchData() {\n    setTodoApi(_objectSpread({}, todoApi));\n    setCurrentPage(1);\n  };\n\n  useEffect(function () {\n    getDataSource();\n\n    if (dataProgram.length == 0) {\n      getDataProgram();\n    }\n  }, [todoApi]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-table\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        extra: /*#__PURE__*/_jsxDEV(AddStudyRole, {\n          studentID: studentID,\n          dataProgram: dataProgram,\n          onFetchData: function onFetchData() {\n            return _onFetchData();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 18\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(DndProvider, {\n          backend: HTML5Backend,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table-drop\",\n            columns: columns,\n            dataSource: dataSource,\n            components: components //@ts-ignore\n            ,\n            onRow: function onRow(record, index) {\n              return {\n                index: index,\n                moveRow: moveRow,\n                record: record\n              };\n            },\n            loading: isLoading,\n            size: \"middle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false);\n};\n\n_s2(InfoStudyCard, \"/V1XjWCi3JOdm2s6TT64a69IYTA=\", false, function () {\n  return [useWrap];\n});\n\n_c2 = InfoStudyCard;\nexport default InfoStudyCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DraggableBodyRow\");\n$RefreshReg$(_c2, \"InfoStudyCard\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Profile/ProfileCustomer/InfoStudyCard/InfoStudyCard.tsx"],"names":["React","useState","useRef","useCallback","useEffect","programApi","studyRoleApi","useWrap","DndProvider","useDrag","useDrop","HTML5Backend","update","Card","Table","AddStudyRole","type","DraggableBodyRow","index","moveRow","className","style","restProps","ref","accept","collect","monitor","getItem","dragIndex","isOver","dropClassName","drop","item","isDragging","drag","cursor","InfoStudyCard","props","studentID","dataProgram","setDataProgram","dataSource","setDataSource","isLoading","setIsLoading","showNoti","pageSize","totalPage","setTotalPage","currentPage","setCurrentPage","listTodoApi","pageIndex","StudentID","todoApi","setTodoApi","getDataProgram","getAll","selectAll","res","status","newData","data","map","title","ProgramName","value","ID","console","log","message","getDataSource","totalRow","columns","dataIndex","key","updatePosition","indexFirst","indexAfter","dataSubmit","IDOne","IDTwo","changePosition","components","body","row","hoverIndex","dragRow","dragID","hoverID","$splice","onFetchData","length","record"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\r\nimport { programApi, studyRoleApi } from '~/apiBase';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport update from 'immutability-helper';\r\nimport { Card, Table } from 'antd';\r\nimport AddStudyRole from './AddStudyRole';\r\n\r\nconst type = 'DraggableBodyRow';\r\n\r\nconst DraggableBodyRow = ({ index, moveRow, className, style, ...restProps }) => {\r\n\tconst ref = useRef();\r\n\tconst [{ isOver, dropClassName }, drop] = useDrop({\r\n\t\taccept: type,\r\n\t\tcollect: (monitor) => {\r\n\t\t\t//@ts-ignore\r\n\t\t\tconst { index: dragIndex } = monitor.getItem() || {};\r\n\t\t\tif (dragIndex === index) {\r\n\t\t\t\treturn {};\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tisOver: monitor.isOver(),\r\n\t\t\t\tdropClassName: dragIndex < index ? ' drop-over-downward' : ' drop-over-upward'\r\n\t\t\t};\r\n\t\t},\r\n\t\tdrop: (item) => {\r\n\t\t\t//@ts-ignore\r\n\t\t\tmoveRow(item.index, index);\r\n\t\t}\r\n\t});\r\n\tconst [, drag] = useDrag({\r\n\t\ttype,\r\n\t\titem: { index },\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisDragging: monitor.isDragging()\r\n\t\t})\r\n\t});\r\n\tdrop(drag(ref));\r\n\r\n\treturn <tr ref={ref} className={`${className}${isOver ? dropClassName : ''}`} style={{ cursor: 'move', ...style }} {...restProps} />;\r\n};\r\n\r\nconst InfoStudyCard = (props) => {\r\n\tconst { studentID } = props;\r\n\tconst [dataProgram, setDataProgram] = useState([]);\r\n\r\n\tconst [dataSource, setDataSource] = useState(null);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst { showNoti, pageSize } = useWrap();\r\n\tconst [totalPage, setTotalPage] = useState(null);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: 1,\r\n\t\tStudentID: studentID\r\n\t};\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi);\r\n\r\n\tconst getDataProgram = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await programApi.getAll({ selectAll: true });\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tlet newData = res.data.data.map((item) => ({\r\n\t\t\t\t\ttitle: item.ProgramName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}));\r\n\t\t\t\tsetDataProgram(newData);\r\n\t\t\t}\r\n\r\n\t\t\tres.status == 204 && setDataProgram([]);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tlet res = await studyRoleApi.getAll(todoApi);\r\n\r\n\t\t\tres.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow));\r\n\t\t\tres.status == 204 && setDataSource([]);\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Chương trình',\r\n\t\t\tdataIndex: 'ProgramName',\r\n\t\t\tkey: 'programname'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ghi chú',\r\n\t\t\tdataIndex: 'Note',\r\n\t\t\tkey: 'note'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày tạo',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\tkey: 'createdon'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tạo bởi',\r\n\t\t\tdataIndex: 'CreatedBy',\r\n\t\t\tkey: 'createdby'\r\n\t\t}\r\n\t];\r\n\r\n\tconst updatePosition = async (indexFirst, indexAfter) => {\r\n\t\tlet dataSubmit = {\r\n\t\t\tIDOne: indexFirst,\r\n\t\t\tIDTwo: indexAfter\r\n\t\t};\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tlet res = await studyRoleApi.changePosition(dataSubmit);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tshowNoti('success', 'Đổi vị trí thành công');\r\n\t\t\t\tsetTodoApi({ ...todoApi });\r\n\t\t\t} else {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// const [data, setData] = useState(dataSource);\r\n\r\n\tconst components = {\r\n\t\tbody: {\r\n\t\t\trow: DraggableBodyRow\r\n\t\t}\r\n\t};\r\n\r\n\tconst moveRow = useCallback(\r\n\t\t(dragIndex: any, hoverIndex: any) => {\r\n\t\t\tconst dragRow = dataSource[dragIndex];\r\n\r\n\t\t\tconst dragID = dataSource[dragIndex].ID;\r\n\t\t\tconst hoverID = dataSource[hoverIndex].ID;\r\n\r\n\t\t\tupdatePosition(dragID, hoverID);\r\n\r\n\t\t\tsetDataSource(\r\n\t\t\t\tupdate(dataSource, {\r\n\t\t\t\t\t$splice: [\r\n\t\t\t\t\t\t[dragIndex, 1],\r\n\t\t\t\t\t\t[hoverIndex, 0, dragRow]\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\t[dataSource]\r\n\t);\r\n\r\n\tconst onFetchData = () => {\r\n\t\tsetTodoApi({ ...todoApi });\r\n\t\tsetCurrentPage(1);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataSource();\r\n\t\tif (dataProgram.length == 0) {\r\n\t\t\tgetDataProgram();\r\n\t\t}\r\n\t}, [todoApi]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"wrap-table\">\r\n\t\t\t\t<Card extra={<AddStudyRole studentID={studentID} dataProgram={dataProgram} onFetchData={() => onFetchData()} />}>\r\n\t\t\t\t\t<DndProvider backend={HTML5Backend}>\r\n\t\t\t\t\t\t<Table\r\n\t\t\t\t\t\t\tclassName=\"table-drop\"\r\n\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\t\t\tcomponents={components}\r\n\t\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t\tonRow={(record, index) => ({ index, moveRow, record })}\r\n\t\t\t\t\t\t\tloading={isLoading}\r\n\t\t\t\t\t\t\tsize=\"middle\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</DndProvider>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default InfoStudyCard;\r\n"]},"metadata":{},"sourceType":"module"}
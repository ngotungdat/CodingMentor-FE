{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\package\\\\package-result-student\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ExclamationCircleOutlined, FormOutlined } from '@ant-design/icons';\nimport { Modal, Tooltip } from 'antd';\nimport Link from 'next/link';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { priceFixExamApi } from '~/apiBase';\nimport { packageDetailApi } from '~/apiBase/package/package-detail';\nimport { packageResultApi } from '~/apiBase/package/package-result';\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport ExpandTable from '~/components/ExpandTable';\nimport PackageResultExpand from '~/components/Global/Package/PackageResult/PackageResultExpand';\nimport LayoutBase from '~/components/LayoutBase';\nimport { useWrap } from '~/context/wrap';\n\nconst RequestMaking = props => {\n  // 1 - Đã nộp bài\n  // 2 - Đang chấm bài\n  // 3 - Đã chấm bài\n  // 4 - Đang chấm bài lại\n  // 5 - Đã chấm bài lại\n  const {\n    status,\n    AmountFixOfStudent,\n    handleBuyMarking,\n    onFetchData,\n    dataRow\n  } = props;\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleRequestMaking = async () => {\n    // 1 - Đã nộp bài\n    // 2 - Đang chấm bài\n    // 3 - Đã chấm bài\n    // 4 - Đang chấm bài lại\n    // 5 - Đã chấm bài lại\n    let res = null;\n    let dataSubmit = {\n      ID: dataRow.ID,\n      Enable: true\n    };\n    setLoading(true);\n\n    try {\n      switch (dataRow.StatusID) {\n        case 1:\n          res = await packageResultApi.update(_objectSpread(_objectSpread({}, dataSubmit), {}, {\n            isFixPaid: true\n          }));\n          break;\n\n        case 3:\n          res = await packageResultApi.update(_objectSpread(_objectSpread({}, dataSubmit), {}, {\n            isReevaluate: true\n          }));\n          break;\n\n        default:\n          break;\n      }\n\n      if (res.status == 200) {\n        showNoti('success', 'Yêu cầu thành công');\n        onFetchData && onFetchData();\n        setIsModalVisible(false);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleOk = () => {\n    if (AmountFixOfStudent > 0) {\n      handleRequestMaking();\n    } else {\n      handleBuyMarking && handleBuyMarking();\n      setIsModalVisible(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: status == 1 ? 'Yêu cầu chấm bài' : 'Yêu cầu chấm lại',\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-icon edit\",\n        onClick: showModal,\n        children: /*#__PURE__*/_jsxDEV(FormOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      confirmLoading: loading,\n      title: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-icon\",\n        onClick: showModal,\n        children: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }, this),\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      okText: AmountFixOfStudent > 0 ? 'Ok' : 'Mua lượt chấm',\n      children: AmountFixOfStudent > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 500\n        },\n        children: status == 1 ? 'Bạn muốn yêu cầu chấm đề này?' : 'Bạn muốn yêu cầu chấm lại đề này?'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 500\n        },\n        children: \"B\\u1EA1n c\\u1EA7n mua l\\u01B0\\u1EE3t ch\\u1EA5m b\\xE0i \\u0111\\u1EC3 s\\u1EED d\\u1EE5ng ch\\u1EE9c n\\u0103ng n\\xE0y!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nconst PackageResultStudent = () => {\n  const {\n    0: dataTeacher,\n    1: setDataTeacher\n  } = useState([]);\n  const {\n    0: dataStudent,\n    1: setDataStudent\n  } = useState([]);\n  const {\n    0: userID,\n    1: setUserID\n  } = useState(null);\n  const {\n    0: dataLevel,\n    1: setDataLevel\n  } = useState([]);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: itemDetail,\n    1: setItemDetail\n  } = useState();\n  const {\n    showNoti,\n    pageSize,\n    userInformation\n  } = useWrap();\n  const listParamsDefault = {\n    pageSize: pageSize,\n    pageIndex: currentPage,\n    sort: null,\n    sortType: null,\n    fromDate: null,\n    toDate: null,\n    StudentID: null,\n    SetPackageDetailID: null,\n    isDone: null,\n    StudentName: null,\n    ExamTopicType: null\n  };\n  const {\n    0: params,\n    1: setParams\n  } = useState(listParamsDefault);\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: packageSetResult,\n    1: setPackageSetResult\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: 'GET_ALL',\n    status: false\n  });\n  const {\n    0: isOpenMarking,\n    1: setIsOpenMarking\n  } = useState(false);\n\n  const onSearch = data => {\n    setCurrentPage(1);\n    setParams(_objectSpread(_objectSpread({}, listParamsDefault), {}, {\n      StudentName: data\n    }));\n  };\n\n  const handleReset = () => {\n    setCurrentPage(1);\n    setParams(listParamsDefault);\n  };\n\n  const returnTypeExam = data => {\n    let text = ''; // if(data.ListeningNumber > 0 && data.SpeakingNumber > 0 && data.WritingNumber > 0 && data.ReadingNumber){\n    //     text = \"Tổng hợp\"\n    // }\n\n    if (data.ListeningNumber > 0 || data.ReadingNumber > 0) {\n      if (data.SpeakingNumber > 0 || data.WritingNumber > 0) {\n        text = 'Tổng hợp';\n      } else {\n        text = 'Trắc nghiệm';\n      }\n    } else {\n      if (data.SpeakingNumber > 0 || data.WritingNumber > 0) {\n        text = 'Tự luận';\n      }\n    }\n\n    return text;\n  };\n\n  const sortOption = [{\n    dataSort: {\n      sortType: null\n    },\n    value: 1,\n    text: 'Mới cập nhật'\n  }, {\n    dataSort: {\n      sortType: true\n    },\n    value: 2,\n    text: 'Từ dưới lên'\n  }];\n  const {\n    0: dataFilter,\n    1: setDataFilter\n  } = useState([{\n    name: 'SetPackageDetailID',\n    title: 'Bộ đề',\n    col: 'col-12',\n    type: 'select',\n    optionList: null,\n    value: null\n  }, {\n    name: 'StatusID',\n    title: 'Trạng thái',\n    col: 'col-12',\n    type: 'select',\n    optionList: [{\n      value: 1,\n      title: 'Đã nộp bài'\n    }, {\n      value: 2,\n      title: 'Đang chấm bài'\n    }, {\n      value: 3,\n      title: 'Đã chấm bài'\n    }, {\n      value: 4,\n      title: 'Đang chấm bài lại'\n    }, {\n      value: 5,\n      title: 'Đã chấm bài'\n    }],\n    value: null\n  }, {\n    name: 'date-range',\n    title: 'Ngày tạo',\n    col: 'col-12',\n    type: 'date-range',\n    value: null\n  }]);\n\n  const handleFilter = listFilter => {\n    console.log('List Filter when submit: ', listFilter);\n    let newListFilter = {\n      pageIndex: 1,\n      fromDate: null,\n      toDate: null,\n      StudentID: null,\n      SetPackageDetailID: null,\n      isDone: null,\n      StudentName: null,\n      ExamTopicType: null,\n      StatusID: null\n    };\n    listFilter.forEach((item, index) => {\n      let key = item.name;\n      Object.keys(newListFilter).forEach(keyFilter => {\n        if (keyFilter == key) {\n          newListFilter[key] = item.value;\n        }\n      });\n    });\n    setParams(_objectSpread(_objectSpread(_objectSpread({}, listParamsDefault), newListFilter), {}, {\n      pageIndex: 1\n    }));\n  };\n\n  const handleSort = async option => {\n    setParams(_objectSpread(_objectSpread({}, listParamsDefault), {}, {\n      sortType: option.title.sortType\n    }));\n  };\n\n  const setDataFunc = (name, data) => {\n    dataFilter.every((item, index) => {\n      if (item.name == name) {\n        item.optionList = data;\n        return false;\n      }\n\n      return true;\n    });\n    setDataFilter([...dataFilter]);\n  }; // GET DATA LEVEL\n\n\n  const getDataLevel = async () => {\n    try {\n      let res = await priceFixExamApi.getAll({\n        pageSize: 9999,\n        pageIndex: 1\n      });\n\n      if (res.status == 200) {\n        let newData = res.data.data.map(item => ({\n          title: item.SetPackageLevel,\n          value: item.ID,\n          price: item.Price\n        }));\n        setDataLevel(newData);\n        setDataFunc('SetPackageLevel', newData);\n      }\n    } catch (error) {\n      console.log('Error Level Package: ', error.message);\n    }\n  }; // const getDataStudent = async () => {\n  // \ttry {\n  // \t\tlet res = await studentApi.getAll({ pageSize: pageSize, pageIndex: 1 });\n  // \t\tif (res.status == 200) {\n  // \t\t\tconst newData = res.data.data.map((item) => ({\n  // \t\t\t\ttitle: item.FullNameUnicode,\n  // \t\t\t\tvalue: item.UserInformationID\n  // \t\t\t}));\n  // \t\t\tsetDataFunc('StudentID', newData);\n  // \t\t\tsetDataStudent(newData);\n  // \t\t}\n  // \t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu học sinh này!');\n  // \t} catch (error) {\n  // \t\tshowNoti('danger', error.message);\n  // \t} finally {\n  // \t}\n  // };\n\n\n  const getDataSetPackageResult = page => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    (async () => {\n      try {\n        let res = await packageResultApi.getAll(_objectSpread(_objectSpread({}, params), {}, {\n          pageIndex: page\n        })); //@ts-ignore\n\n        res.status == 200 && setPackageSetResult(res.data.data);\n\n        if (res.status == 204) {\n          showNoti('danger', 'Không tìm thấy dữ liệu!'); // setCurrentPage(1);\n          // setParams(listParamsDefault);\n\n          setPackageSetResult([]);\n        } else setTotalPage(res.data.totalRow);\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'GET_ALL',\n          status: false\n        });\n      }\n    })();\n  };\n\n  const getDataPackageDetail = async () => {\n    try {\n      let res = await packageDetailApi.getAll({\n        pageSize: 99999,\n        pageIndex: 1\n      });\n\n      if (res.status == 200) {\n        const newData = res.data.data.map(item => ({\n          title: item.SetPackageName,\n          value: item.ID\n        }));\n        setDataFunc('SetPackageDetailID', newData);\n      }\n\n      res.status == 204 && showNoti('danger', 'Không có dữ liệu bộ đề này!');\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {}\n  };\n\n  const getPagination = pageNumber => {\n    setCurrentPage(pageNumber);\n    setParams(_objectSpread(_objectSpread({}, params), {}, {\n      pageIndex: currentPage\n    }));\n  };\n\n  const onFetchData = () => {\n    setParams(_objectSpread({}, params));\n  };\n\n  const handleRequestMaking = async (status, id) => {\n    // 1 - Đã nộp bài\n    // 2 - Đang chấm bài\n    // 3 - Đã chấm bài\n    // 4 - Đang chấm bài lại\n    // 5 - Đã chấm bài lại\n    let res = null;\n    let dataSubmit = {\n      ID: id,\n      Enable: true\n    };\n\n    try {\n      switch (status) {\n        case 1:\n          res = await packageResultApi.update(_objectSpread(_objectSpread({}, dataSubmit), {}, {\n            isFixPaid: true\n          }));\n          break;\n\n        case 3:\n          res = await packageResultApi.update(_objectSpread(_objectSpread({}, dataSubmit), {}, {\n            isReevaluate: true\n          }));\n          break;\n\n        default:\n          break;\n      }\n\n      if (res.status == 200) {\n        setParams(_objectSpread({}, params));\n        showNoti('success', 'Yêu cầu thành công');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    }\n  };\n\n  const expandedRowRender = (data, index) => {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(PackageResultExpand, {\n        infoID: data.ID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 4\n    }, this);\n  };\n\n  const handleBuyMarking = () => {\n    setIsOpenMarking(true);\n  };\n\n  const columns = [{\n    title: 'Đề thi',\n    dataIndex: 'ExamTopicName',\n    render: (text, data) => /*#__PURE__*/_jsxDEV(Link, {\n      href: {\n        pathname: '/package/package-result-student/detail/[slug]',\n        query: {\n          slug: `${data.ID}`,\n          examID: data.ExamTopicID,\n          packageDetailID: data.SetPackageDetailID\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 5\n    }, this)\n  }, {\n    title: 'Trạng thái',\n    dataIndex: 'StatusID',\n    align: 'center',\n    render: status => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [status == 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag gray\",\n        children: \"\\u0110\\xE3 n\\u1ED9p b\\xE0i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 22\n      }, this), status == 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag yellow\",\n        children: \"\\u0110ang ch\\u1EA5m b\\xE0i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 22\n      }, this), status == 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag green\",\n        children: \"\\u0110\\xE3 ch\\u1EA5m b\\xE0i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 22\n      }, this), status == 4 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag yellow\",\n        children: \"\\u0110ang ch\\u1EA5m b\\xE0i l\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 22\n      }, this), status == 5 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag green\",\n        children: \"\\u0110\\xE3 ch\\u1EA5m b\\xE0i l\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 5\n    }, this)\n  }, {\n    title: 'Dạng đề',\n    align: 'center',\n    render: data => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: returnTypeExam(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 25\n      }, this)\n    }, void 0, false)\n  }, {\n    align: 'right',\n    render: data => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: {\n          pathname: '/package/package-result-student/detail/[slug]',\n          query: {\n            slug: `${data.ID}`,\n            examID: data.ExamTopicID,\n            packageDetailID: data.SetPackageDetailID,\n            score: true\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"K\\u1EBFt qu\\u1EA3 b\\u1ED9 \\u0111\\u1EC1 chi ti\\u1EBFt\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-icon\",\n            children: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 6\n      }, this), (data.StatusID == 1 || data.StatusID == 3) && (data.SpeakingNumber > 0 || data.WritingNumber > 0) && /*#__PURE__*/_jsxDEV(RequestMaking, {\n        handleBuyMarking: () => handleBuyMarking(),\n        AmountFixOfStudent: data.AmountFixOfStudent,\n        onFetchData: () => onFetchData(),\n        status: data.StatusID,\n        dataRow: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }];\n  useEffect(() => {\n    getDataSetPackageResult(currentPage);\n  }, [params]);\n  useEffect(() => {\n    if (userInformation) {\n      setUserID(userInformation.UserInformationID);\n    }\n  }, [userInformation]);\n  useEffect(() => {\n    // getDataStudent();\n    getDataPackageDetail();\n    getDataLevel();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ExpandTable, {\n    currentPage: currentPage,\n    loading: isLoading,\n    totalPage: totalPage && totalPage,\n    getPagination: pageNumber => getPagination(pageNumber),\n    addClass: \"basic-header\",\n    TitlePage: \"k\\u1EBFt qu\\u1EA3 thi\",\n    dataSource: packageSetResult,\n    columns: columns // TitleCard={\n    // \t<>\n    // \t\t<PayFixExamForm isBuy={true} userID={userID} dataLevel={dataLevel} isOpenMarking={isOpenMarking} />\n    // \t</>\n    // }\n    ,\n    Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extra-table\",\n      children: [/*#__PURE__*/_jsxDEV(FilterBase, {\n        dataFilter: dataFilter,\n        handleFilter: listFilter => handleFilter(listFilter),\n        handleReset: handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(SortBox, {\n        dataOption: sortOption,\n        handleSort: value => handleSort(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 5\n    }, this),\n    handleExpand: data => setItemDetail(data),\n    expandable: {\n      expandedRowRender\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 519,\n    columnNumber: 3\n  }, this);\n};\n\nPackageResultStudent.layout = LayoutBase;\nexport default PackageResultStudent;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/package/package-result-student/index.tsx"],"names":["ExclamationCircleOutlined","FormOutlined","Modal","Tooltip","Link","React","Fragment","useEffect","useState","priceFixExamApi","packageDetailApi","packageResultApi","FilterBase","SortBox","ExpandTable","PackageResultExpand","LayoutBase","useWrap","RequestMaking","props","status","AmountFixOfStudent","handleBuyMarking","onFetchData","dataRow","isModalVisible","setIsModalVisible","showNoti","loading","setLoading","showModal","handleRequestMaking","res","dataSubmit","ID","Enable","StatusID","update","isFixPaid","isReevaluate","error","message","handleOk","handleCancel","fontWeight","PackageResultStudent","dataTeacher","setDataTeacher","dataStudent","setDataStudent","userID","setUserID","dataLevel","setDataLevel","currentPage","setCurrentPage","itemDetail","setItemDetail","pageSize","userInformation","listParamsDefault","pageIndex","sort","sortType","fromDate","toDate","StudentID","SetPackageDetailID","isDone","StudentName","ExamTopicType","params","setParams","totalPage","setTotalPage","packageSetResult","setPackageSetResult","isLoading","setIsLoading","type","isOpenMarking","setIsOpenMarking","onSearch","data","handleReset","returnTypeExam","text","ListeningNumber","ReadingNumber","SpeakingNumber","WritingNumber","sortOption","dataSort","value","dataFilter","setDataFilter","name","title","col","optionList","handleFilter","listFilter","console","log","newListFilter","forEach","item","index","key","Object","keys","keyFilter","handleSort","option","setDataFunc","every","getDataLevel","getAll","newData","map","SetPackageLevel","price","Price","getDataSetPackageResult","page","totalRow","getDataPackageDetail","SetPackageName","getPagination","pageNumber","id","expandedRowRender","columns","dataIndex","render","pathname","query","slug","examID","ExamTopicID","packageDetailID","align","score","UserInformationID","layout"],"mappings":"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","sourcesContent":["import { ExclamationCircleOutlined, FormOutlined } from '@ant-design/icons'\r\nimport { Modal, Tooltip } from 'antd'\r\nimport Link from 'next/link'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { priceFixExamApi } from '~/apiBase'\r\nimport { packageDetailApi } from '~/apiBase/package/package-detail'\r\nimport { packageResultApi } from '~/apiBase/package/package-result'\r\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport ExpandTable from '~/components/ExpandTable'\r\nimport PackageResultExpand from '~/components/Global/Package/PackageResult/PackageResultExpand'\r\nimport PayFixExamForm from '~/components/Global/Package/PayFixExam/PayFixExamForm'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst RequestMaking = (props) => {\r\n\t// 1 - Đã nộp bài\r\n\t// 2 - Đang chấm bài\r\n\t// 3 - Đã chấm bài\r\n\t// 4 - Đang chấm bài lại\r\n\t// 5 - Đã chấm bài lại\r\n\tconst { status, AmountFixOfStudent, handleBuyMarking, onFetchData, dataRow } = props\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst { showNoti } = useWrap()\r\n\tconst [loading, setLoading] = useState(false)\r\n\r\n\tconst showModal = () => {\r\n\t\tsetIsModalVisible(true)\r\n\t}\r\n\r\n\tconst handleRequestMaking = async () => {\r\n\t\t// 1 - Đã nộp bài\r\n\t\t// 2 - Đang chấm bài\r\n\t\t// 3 - Đã chấm bài\r\n\t\t// 4 - Đang chấm bài lại\r\n\t\t// 5 - Đã chấm bài lại\r\n\t\tlet res = null\r\n\t\tlet dataSubmit = {\r\n\t\t\tID: dataRow.ID,\r\n\t\t\tEnable: true\r\n\t\t}\r\n\t\tsetLoading(true)\r\n\t\ttry {\r\n\t\t\tswitch (dataRow.StatusID) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tres = await packageResultApi.update({\r\n\t\t\t\t\t\t...dataSubmit,\r\n\t\t\t\t\t\tisFixPaid: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tres = await packageResultApi.update({\r\n\t\t\t\t\t\t...dataSubmit,\r\n\t\t\t\t\t\tisReevaluate: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tshowNoti('success', 'Yêu cầu thành công')\r\n\t\t\t\tonFetchData && onFetchData()\r\n\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleOk = () => {\r\n\t\tif (AmountFixOfStudent > 0) {\r\n\t\t\thandleRequestMaking()\r\n\t\t} else {\r\n\t\t\thandleBuyMarking && handleBuyMarking()\r\n\t\t\tsetIsModalVisible(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tooltip title={status == 1 ? 'Yêu cầu chấm bài' : 'Yêu cầu chấm lại'}>\r\n\t\t\t\t<button className=\"btn btn-icon edit\" onClick={showModal}>\r\n\t\t\t\t\t<FormOutlined />\r\n\t\t\t\t</button>\r\n\t\t\t</Tooltip>\r\n\t\t\t<Modal\r\n\t\t\t\tconfirmLoading={loading}\r\n\t\t\t\ttitle={\r\n\t\t\t\t\t<button className=\"btn btn-icon\" onClick={showModal}>\r\n\t\t\t\t\t\t<ExclamationCircleOutlined />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t}\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\tokText={AmountFixOfStudent > 0 ? 'Ok' : 'Mua lượt chấm'}\r\n\t\t\t>\r\n\t\t\t\t{AmountFixOfStudent > 0 ? (\r\n\t\t\t\t\t<p style={{ fontWeight: 500 }}>{status == 1 ? 'Bạn muốn yêu cầu chấm đề này?' : 'Bạn muốn yêu cầu chấm lại đề này?'}</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p style={{ fontWeight: 500 }}>Bạn cần mua lượt chấm bài để sử dụng chức năng này!</p>\r\n\t\t\t\t)}\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst PackageResultStudent = () => {\r\n\tconst [dataTeacher, setDataTeacher] = useState([])\r\n\tconst [dataStudent, setDataStudent] = useState([])\r\n\tconst [userID, setUserID] = useState(null)\r\n\tconst [dataLevel, setDataLevel] = useState([])\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [itemDetail, setItemDetail] = useState()\r\n\tconst { showNoti, pageSize, userInformation } = useWrap()\r\n\tconst listParamsDefault = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: currentPage,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tfromDate: null,\r\n\t\ttoDate: null,\r\n\t\tStudentID: null,\r\n\t\tSetPackageDetailID: null,\r\n\t\tisDone: null,\r\n\t\tStudentName: null,\r\n\t\tExamTopicType: null\r\n\t}\r\n\tconst [params, setParams] = useState(listParamsDefault)\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [packageSetResult, setPackageSetResult] = useState<ISetPackageResult[]>([])\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: 'GET_ALL',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [isOpenMarking, setIsOpenMarking] = useState(false)\r\n\r\n\tconst onSearch = (data) => {\r\n\t\tsetCurrentPage(1)\r\n\t\tsetParams({\r\n\t\t\t...listParamsDefault,\r\n\t\t\tStudentName: data\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetCurrentPage(1)\r\n\t\tsetParams(listParamsDefault)\r\n\t}\r\n\r\n\tconst returnTypeExam = (data) => {\r\n\t\tlet text = ''\r\n\t\t// if(data.ListeningNumber > 0 && data.SpeakingNumber > 0 && data.WritingNumber > 0 && data.ReadingNumber){\r\n\t\t//     text = \"Tổng hợp\"\r\n\t\t// }\r\n\t\tif (data.ListeningNumber > 0 || data.ReadingNumber > 0) {\r\n\t\t\tif (data.SpeakingNumber > 0 || data.WritingNumber > 0) {\r\n\t\t\t\ttext = 'Tổng hợp'\r\n\t\t\t} else {\r\n\t\t\t\ttext = 'Trắc nghiệm'\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (data.SpeakingNumber > 0 || data.WritingNumber > 0) {\r\n\t\t\t\ttext = 'Tự luận'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn text\r\n\t}\r\n\r\n\tconst sortOption = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsortType: null\r\n\t\t\t},\r\n\t\t\tvalue: 1,\r\n\t\t\ttext: 'Mới cập nhật'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 2,\r\n\t\t\ttext: 'Từ dưới lên'\r\n\t\t}\r\n\t]\r\n\r\n\tconst [dataFilter, setDataFilter] = useState([\r\n\t\t{\r\n\t\t\tname: 'SetPackageDetailID',\r\n\t\t\ttitle: 'Bộ đề',\r\n\t\t\tcol: 'col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null,\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'StatusID',\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tcol: 'col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: [\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 1,\r\n\t\t\t\t\ttitle: 'Đã nộp bài'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 2,\r\n\t\t\t\t\ttitle: 'Đang chấm bài'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 3,\r\n\t\t\t\t\ttitle: 'Đã chấm bài'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 4,\r\n\t\t\t\t\ttitle: 'Đang chấm bài lại'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 5,\r\n\t\t\t\t\ttitle: 'Đã chấm bài'\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tname: 'date-range',\r\n\t\t\ttitle: 'Ngày tạo',\r\n\t\t\tcol: 'col-12',\r\n\t\t\ttype: 'date-range',\r\n\t\t\tvalue: null\r\n\t\t}\r\n\t])\r\n\r\n\tconst handleFilter = (listFilter) => {\r\n\t\tconsole.log('List Filter when submit: ', listFilter)\r\n\r\n\t\tlet newListFilter = {\r\n\t\t\tpageIndex: 1,\r\n\t\t\tfromDate: null,\r\n\t\t\ttoDate: null,\r\n\t\t\tStudentID: null,\r\n\t\t\tSetPackageDetailID: null,\r\n\t\t\tisDone: null,\r\n\t\t\tStudentName: null,\r\n\t\t\tExamTopicType: null,\r\n\t\t\tStatusID: null\r\n\t\t}\r\n\t\tlistFilter.forEach((item, index) => {\r\n\t\t\tlet key = item.name\r\n\t\t\tObject.keys(newListFilter).forEach((keyFilter) => {\r\n\t\t\t\tif (keyFilter == key) {\r\n\t\t\t\t\tnewListFilter[key] = item.value\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tsetParams({ ...listParamsDefault, ...newListFilter, pageIndex: 1 })\r\n\t}\r\n\r\n\tconst handleSort = async (option) => {\r\n\t\tsetParams({\r\n\t\t\t...listParamsDefault,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t})\r\n\t}\r\n\r\n\tconst setDataFunc = (name, data) => {\r\n\t\tdataFilter.every((item, index) => {\r\n\t\t\tif (item.name == name) {\r\n\t\t\t\titem.optionList = data\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t\tsetDataFilter([...dataFilter])\r\n\t}\r\n\t// GET DATA LEVEL\r\n\tconst getDataLevel = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await priceFixExamApi.getAll({ pageSize: 9999, pageIndex: 1 })\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tlet newData = res.data.data.map((item) => ({\r\n\t\t\t\t\ttitle: item.SetPackageLevel,\r\n\t\t\t\t\tvalue: item.ID,\r\n\t\t\t\t\tprice: item.Price\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataLevel(newData)\r\n\t\t\t\tsetDataFunc('SetPackageLevel', newData)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Error Level Package: ', error.message)\r\n\t\t}\r\n\t}\r\n\r\n\t// const getDataStudent = async () => {\r\n\t// \ttry {\r\n\t// \t\tlet res = await studentApi.getAll({ pageSize: pageSize, pageIndex: 1 });\r\n\t// \t\tif (res.status == 200) {\r\n\t// \t\t\tconst newData = res.data.data.map((item) => ({\r\n\t// \t\t\t\ttitle: item.FullNameUnicode,\r\n\t// \t\t\t\tvalue: item.UserInformationID\r\n\t// \t\t\t}));\r\n\t// \t\t\tsetDataFunc('StudentID', newData);\r\n\t// \t\t\tsetDataStudent(newData);\r\n\t// \t\t}\r\n\r\n\t// \t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu học sinh này!');\r\n\t// \t} catch (error) {\r\n\t// \t\tshowNoti('danger', error.message);\r\n\t// \t} finally {\r\n\t// \t}\r\n\t// };\r\n\tconst getDataSetPackageResult = (page: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\t;(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await packageResultApi.getAll({ ...params, pageIndex: page })\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tres.status == 200 && setPackageSetResult(res.data.data)\r\n\t\t\t\tif (res.status == 204) {\r\n\t\t\t\t\tshowNoti('danger', 'Không tìm thấy dữ liệu!')\r\n\t\t\t\t\t// setCurrentPage(1);\r\n\t\t\t\t\t// setParams(listParamsDefault);\r\n\t\t\t\t\tsetPackageSetResult([])\r\n\t\t\t\t} else setTotalPage(res.data.totalRow)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})()\r\n\t}\r\n\r\n\tconst getDataPackageDetail = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await packageDetailApi.getAll({\r\n\t\t\t\tpageSize: 99999,\r\n\t\t\t\tpageIndex: 1\r\n\t\t\t})\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tconst newData = res.data.data.map((item) => ({\r\n\t\t\t\t\ttitle: item.SetPackageName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('SetPackageDetailID', newData)\r\n\t\t\t}\r\n\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu bộ đề này!')\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t}\r\n\t}\r\n\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetParams({\r\n\t\t\t...params,\r\n\t\t\tpageIndex: currentPage\r\n\t\t})\r\n\t}\r\n\r\n\tconst onFetchData = () => {\r\n\t\tsetParams({\r\n\t\t\t...params\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleRequestMaking = async (status, id) => {\r\n\t\t// 1 - Đã nộp bài\r\n\t\t// 2 - Đang chấm bài\r\n\t\t// 3 - Đã chấm bài\r\n\t\t// 4 - Đang chấm bài lại\r\n\t\t// 5 - Đã chấm bài lại\r\n\t\tlet res = null\r\n\t\tlet dataSubmit = {\r\n\t\t\tID: id,\r\n\t\t\tEnable: true\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tswitch (status) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tres = await packageResultApi.update({\r\n\t\t\t\t\t\t...dataSubmit,\r\n\t\t\t\t\t\tisFixPaid: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tres = await packageResultApi.update({\r\n\t\t\t\t\t\t...dataSubmit,\r\n\t\t\t\t\t\tisReevaluate: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetParams({ ...params })\r\n\t\t\t\tshowNoti('success', 'Yêu cầu thành công')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t}\r\n\t}\r\n\r\n\tconst expandedRowRender = (data, index) => {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<PackageResultExpand infoID={data.ID} />\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\tconst handleBuyMarking = () => {\r\n\t\tsetIsOpenMarking(true)\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Đề thi',\r\n\t\t\tdataIndex: 'ExamTopicName',\r\n\t\t\trender: (text, data) => (\r\n\t\t\t\t<Link\r\n\t\t\t\t\thref={{\r\n\t\t\t\t\t\tpathname: '/package/package-result-student/detail/[slug]',\r\n\t\t\t\t\t\tquery: { slug: `${data.ID}`, examID: data.ExamTopicID, packageDetailID: data.SetPackageDetailID }\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<a href=\"#\" className=\"font-weight-black\">\r\n\t\t\t\t\t\t{text}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</Link>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tdataIndex: 'StatusID',\r\n\t\t\talign: 'center',\r\n\t\t\trender: (status) => (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t{status == 1 && <span className=\"tag gray\">Đã nộp bài</span>}\r\n\t\t\t\t\t{status == 2 && <span className=\"tag yellow\">Đang chấm bài</span>}\r\n\t\t\t\t\t{status == 3 && <span className=\"tag green\">Đã chấm bài</span>}\r\n\t\t\t\t\t{status == 4 && <span className=\"tag yellow\">Đang chấm bài lại</span>}\r\n\t\t\t\t\t{status == 5 && <span className=\"tag green\">Đã chấm bài lại</span>}\r\n\t\t\t\t</Fragment>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Dạng đề',\r\n\t\t\talign: 'center',\r\n\t\t\trender: (data) => <>{<p className=\"font-weight-black\">{returnTypeExam(data)}</p>}</>\r\n\t\t},\r\n\t\t{\r\n\t\t\talign: 'right',\r\n\t\t\trender: (data) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\tpathname: '/package/package-result-student/detail/[slug]',\r\n\t\t\t\t\t\t\tquery: {\r\n\t\t\t\t\t\t\t\tslug: `${data.ID}`,\r\n\t\t\t\t\t\t\t\texamID: data.ExamTopicID,\r\n\t\t\t\t\t\t\t\tpackageDetailID: data.SetPackageDetailID,\r\n\t\t\t\t\t\t\t\tscore: true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tooltip title=\"Kết quả bộ đề chi tiết\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-icon\">\r\n\t\t\t\t\t\t\t\t<ExclamationCircleOutlined />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t{(data.StatusID == 1 || data.StatusID == 3) && (data.SpeakingNumber > 0 || data.WritingNumber > 0) && (\r\n\t\t\t\t\t\t<RequestMaking\r\n\t\t\t\t\t\t\thandleBuyMarking={() => handleBuyMarking()}\r\n\t\t\t\t\t\t\tAmountFixOfStudent={data.AmountFixOfStudent}\r\n\t\t\t\t\t\t\tonFetchData={() => onFetchData()}\r\n\t\t\t\t\t\t\tstatus={data.StatusID}\r\n\t\t\t\t\t\t\tdataRow={data}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataSetPackageResult(currentPage)\r\n\t}, [params])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userInformation) {\r\n\t\t\tsetUserID(userInformation.UserInformationID)\r\n\t\t}\r\n\t}, [userInformation])\r\n\r\n\tuseEffect(() => {\r\n\t\t// getDataStudent();\r\n\t\tgetDataPackageDetail()\r\n\t\tgetDataLevel()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<ExpandTable\r\n\t\t\tcurrentPage={currentPage}\r\n\t\t\tloading={isLoading}\r\n\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\taddClass=\"basic-header\"\r\n\t\t\tTitlePage=\"kết quả thi\"\r\n\t\t\tdataSource={packageSetResult}\r\n\t\t\tcolumns={columns}\r\n\t\t\t// TitleCard={\r\n\t\t\t// \t<>\r\n\t\t\t// \t\t<PayFixExamForm isBuy={true} userID={userID} dataLevel={dataLevel} isOpenMarking={isOpenMarking} />\r\n\t\t\t// \t</>\r\n\t\t\t// }\r\n\t\t\tExtra={\r\n\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t<FilterBase dataFilter={dataFilter} handleFilter={(listFilter: any) => handleFilter(listFilter)} handleReset={handleReset} />\r\n\r\n\t\t\t\t\t<SortBox dataOption={sortOption} handleSort={(value) => handleSort(value)} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\thandleExpand={(data) => setItemDetail(data)}\r\n\t\t\texpandable={{ expandedRowRender }}\r\n\t\t/>\r\n\t)\r\n}\r\nPackageResultStudent.layout = LayoutBase\r\nexport default PackageResultStudent\r\n"]},"metadata":{},"sourceType":"module"}
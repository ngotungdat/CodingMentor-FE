{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\option\\\\staff-salary\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport SortBox from '~/components/Elements/SortBox';\nimport FilterStaffSalaryTable from '~/components/Global/Option/FilterTable/FilterStaffSalaryTable';\nimport StaffSalaryForm from '~/components/Global/Option/StaffSalaryForm';\nimport LayoutBase from '~/components/LayoutBase';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nimport { staffSalaryApi } from '~/apiBase';\nimport { Tooltip } from 'antd';\nimport { AlertTriangle, X } from 'react-feather';\nimport Modal from 'antd/lib/modal/Modal';\nimport moment from 'moment';\n\nconst StaffSalary = () => {\n  const {\n    0: dataTable,\n    1: setDataTable\n  } = useState([]);\n  const {\n    0: dataDelete,\n    1: setDataDelete\n  } = useState({\n    SalaryID: null,\n    Enable: null\n  });\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: activeColumnSearch,\n    1: setActiveColumnSearch\n  } = useState('');\n  const {\n    0: updateSalary,\n    1: setUpdateSalary\n  } = useState({\n    type: '',\n    SalaryID: null\n  });\n  let pageIndex = 1; // SORT\n\n  const dataOption = [{\n    dataSort: {\n      sort: 2,\n      sortType: false\n    },\n    value: 3,\n    text: 'Tên giảm dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: true\n    },\n    value: 4,\n    text: 'Tên tăng dần '\n  }]; // PARAMS SEARCH\n\n  let listField = {\n    FullName: ''\n  }; // PARAMS API GETALL\n\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    sort: null,\n    sortType: null,\n    RoleID: null,\n    FullName: null,\n    fromDate: null,\n    toDate: null\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi); // GET DATA STAFFSALARY\n\n  const getDataTable = () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    (async () => {\n      try {\n        let res = await staffSalaryApi.getAll(todoApi);\n\n        if (res.status == 204) {\n          showNoti('danger', 'Không có dữ liệu');\n          handleReset();\n          setDataTable([]);\n        }\n\n        if (res.status == 200) {\n          setDataTable(res.data.data);\n\n          if (res.data.data.length < 1) {\n            handleReset();\n          }\n\n          setTotalPage(res.data.totalRow);\n        }\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'GET_ALL',\n          status: false\n        });\n      }\n    })();\n  }; // ADD DATA\n\n\n  const _onSubmit = async data => {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res = null;\n\n    if (updateSalary.type == 'update') {\n      try {\n        res = await staffSalaryApi.update(_objectSpread(_objectSpread({}, data), {}, {\n          SalaryID: updateSalary.SalaryID,\n          Enable: true\n        }));\n        res.status === 200 && showNoti('success', 'Cập nhật thành công'), getDataTable();\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: false\n        });\n      }\n    } else {\n      try {\n        var _res;\n\n        res = await staffSalaryApi.add(data);\n        ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && afterPost('Thêm');\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: false\n        });\n      }\n    }\n\n    return res;\n  };\n\n  const afterPost = value => {\n    showNoti('success', `${value} thành công`);\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // PAGINATION\n\n\n  const getPagination = (pageNumber, pageSize) => {\n    if (!pageSize) pageSize = 10;\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      //   ...listFieldSearch,\n      pageIndex: pageIndex,\n      pageSize: pageSize\n    }));\n  }; // ON SEARCH\n\n\n  const compareField = (valueSearch, dataIndex) => {\n    let newList = null;\n    Object.keys(listField).forEach(function (key) {\n      if (key != dataIndex) {\n        listField[key] = '';\n      } else {\n        listField[key] = valueSearch;\n      }\n    });\n    newList = listField;\n    return newList;\n  };\n\n  const onSearch = (valueSearch, dataIndex) => {\n    let clearKey = compareField(valueSearch, dataIndex);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      pageIndex: 1\n    }, clearKey));\n    setCurrentPage(pageIndex);\n  }; // DELETE\n\n\n  const handleDelele = async () => {\n    if (dataDelete) {\n      setIsModalVisible(false);\n      let res = null;\n\n      try {\n        res = await staffSalaryApi.update(dataDelete);\n        res.status === 200 && showNoti('success', 'Xóa thành công');\n\n        if (dataTable.length === 1) {\n          listTodoApi.pageIndex === 1 ? setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n            pageIndex: 1\n          })) : setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n            pageIndex: listTodoApi.pageIndex - 1\n          }));\n          return;\n        }\n\n        getDataTable();\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'DELETE_DATA',\n          status: false\n        });\n      }\n    }\n  }; // HANDLE RESET\n\n\n  const handleReset = () => {\n    setActiveColumnSearch('');\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // HANDLE SORT\n\n\n  const handleSort = async option => {\n    let newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n\n    setCurrentPage(1);\n    setTodoApi(newTodoApi);\n  }; // HANDLE FILTER\n\n\n  const _onFilterTable = data => {\n    let newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1,\n      RoleID: data.RoleID,\n      fromDate: data.fromDate,\n      toDate: data.toDate\n    });\n\n    setCurrentPage(1);\n    setTodoApi(newTodoApi);\n  }; // COLUMNS TABLE\n\n\n  const columns = [_objectSpread(_objectSpread({\n    title: 'Họ và tên',\n    dataIndex: 'FullName'\n  }, FilterColumn('FullName', onSearch, handleReset, 'text')), {}, {\n    className: activeColumnSearch === 'ID' ? 'active-column-search' : '',\n    render: text => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 12\n      }, this);\n    }\n  }), {\n    title: 'Email',\n    dataIndex: 'Email'\n  }, {\n    title: 'Vai trò',\n    dataIndex: 'RoleName'\n  }, {\n    title: 'Mức lương',\n    dataIndex: 'Salary',\n    render: salary => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-primary\",\n        children: Intl.NumberFormat('ja-JP').format(salary)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    title: 'Loại',\n    dataIndex: 'StyleName'\n  }, {\n    title: 'Thêm bởi',\n    dataIndex: 'CreatedBy'\n  }, {\n    title: 'Thêm lúc',\n    dataIndex: 'CreatedOn',\n    render: date => moment(date).format('DD/MM/YYYY')\n  }, {\n    align: 'right',\n    render: record => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StaffSalaryForm, {\n        showIcon: true,\n        rowData: record,\n        isLoading: isLoading,\n        _onSubmitStaff: data => _onSubmit(data),\n        setUpdateSalary: setUpdateSalary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"X\\xF3a\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-icon delete\",\n          onClick: () => {\n            setIsModalVisible(true);\n            setDataDelete({\n              SalaryID: record.SalaryID,\n              Enable: false\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(X, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }];\n  useEffect(() => {\n    getDataTable();\n  }, [todoApi]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      title: /*#__PURE__*/_jsxDEV(AlertTriangle, {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 12\n      }, this),\n      visible: isModalVisible,\n      onOk: () => handleDelele(),\n      onCancel: () => setIsModalVisible(false),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-confirm\",\n        children: \"B\\u1EA1n c\\xF3 ch\\u1EAFc ch\\u1EAFn mu\\u1ED1n x\\xF3a kh\\xF4ng ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PowerTable, {\n      loading: isLoading,\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: getPagination,\n      addClass: \"basic-header\",\n      TitlePage: \"C\\u1EA5u h\\xECnh l\\u01B0\\u01A1ng\",\n      TitleCard: /*#__PURE__*/_jsxDEV(StaffSalaryForm, {\n        showAdd: true,\n        isLoading: isLoading,\n        _onSubmitStaff: data => _onSubmit(data),\n        setUpdateSalary: setUpdateSalary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 6\n      }, this),\n      dataSource: dataTable,\n      columns: columns,\n      Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: [/*#__PURE__*/_jsxDEV(FilterStaffSalaryTable, {\n          _onFilter: value => _onFilterTable(value),\n          _onHandleReset: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(SortBox, {\n          handleSort: value => handleSort(value),\n          dataOption: dataOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 3\n  }, this);\n};\n\nStaffSalary.layout = LayoutBase;\nexport default StaffSalary;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/option/staff-salary/index.tsx"],"names":["React","Fragment","useEffect","useState","SortBox","FilterStaffSalaryTable","StaffSalaryForm","LayoutBase","PowerTable","FilterColumn","useWrap","staffSalaryApi","Tooltip","AlertTriangle","X","Modal","moment","StaffSalary","dataTable","setDataTable","dataDelete","setDataDelete","SalaryID","Enable","showNoti","pageSize","isModalVisible","setIsModalVisible","isLoading","setIsLoading","type","status","totalPage","setTotalPage","currentPage","setCurrentPage","activeColumnSearch","setActiveColumnSearch","updateSalary","setUpdateSalary","pageIndex","dataOption","dataSort","sort","sortType","value","text","listField","FullName","listTodoApi","RoleID","fromDate","toDate","todoApi","setTodoApi","getDataTable","res","getAll","handleReset","data","length","totalRow","error","message","_onSubmit","update","add","afterPost","getPagination","pageNumber","compareField","valueSearch","dataIndex","newList","Object","keys","forEach","key","onSearch","clearKey","handleDelele","handleSort","option","newTodoApi","title","_onFilterTable","columns","className","render","salary","Intl","NumberFormat","format","date","align","record","layout"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport FilterStaffSalaryTable from '~/components/Global/Option/FilterTable/FilterStaffSalaryTable'\r\nimport StaffSalaryForm from '~/components/Global/Option/StaffSalaryForm'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { staffSalaryApi } from '~/apiBase'\r\nimport { Tooltip } from 'antd'\r\nimport { AlertTriangle, X } from 'react-feather'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport moment from 'moment'\r\n\r\nconst StaffSalary = () => {\r\n\tconst [dataTable, setDataTable] = useState<IStaffSalary[]>([])\r\n\r\n\tconst [dataDelete, setDataDelete] = useState({\r\n\t\tSalaryID: null,\r\n\t\tEnable: null\r\n\t})\r\n\tconst { showNoti, pageSize } = useWrap()\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [activeColumnSearch, setActiveColumnSearch] = useState('')\r\n\tconst [updateSalary, setUpdateSalary] = useState({\r\n\t\ttype: '',\r\n\t\tSalaryID: null\r\n\t})\r\n\r\n\tlet pageIndex = 1\r\n\r\n\t// SORT\r\n\tconst dataOption = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 3,\r\n\t\t\ttext: 'Tên giảm dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 4,\r\n\t\t\ttext: 'Tên tăng dần '\r\n\t\t}\r\n\t]\r\n\r\n\t// PARAMS SEARCH\r\n\tlet listField = {\r\n\t\tFullName: ''\r\n\t}\r\n\r\n\t// PARAMS API GETALL\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tRoleID: null,\r\n\t\tFullName: null,\r\n\t\tfromDate: null,\r\n\t\ttoDate: null\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// GET DATA STAFFSALARY\r\n\tconst getDataTable = () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\t;(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await staffSalaryApi.getAll(todoApi)\r\n\t\t\t\tif (res.status == 204) {\r\n\t\t\t\t\tshowNoti('danger', 'Không có dữ liệu')\r\n\t\t\t\t\thandleReset()\r\n\t\t\t\t\tsetDataTable([])\r\n\t\t\t\t}\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tsetDataTable(res.data.data)\r\n\t\t\t\t\tif (res.data.data.length < 1) {\r\n\t\t\t\t\t\thandleReset()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})()\r\n\t}\r\n\r\n\t// ADD DATA\r\n\tconst _onSubmit = async (data: any) => {\r\n\t\tsetIsLoading({ type: 'ADD_DATA', status: true })\r\n\r\n\t\tlet res = null\r\n\r\n\t\tif (updateSalary.type == 'update') {\r\n\t\t\ttry {\r\n\t\t\t\tres = await staffSalaryApi.update({ ...data, SalaryID: updateSalary.SalaryID, Enable: true })\r\n\t\t\t\tres.status === 200 && showNoti('success', 'Cập nhật thành công'), getDataTable()\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tres = await staffSalaryApi.add(data)\r\n\t\t\t\tres?.status == 200 && afterPost('Thêm')\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\tconst afterPost = (value) => {\r\n\t\tshowNoti('success', `${value} thành công`)\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageNumber: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10\r\n\t\tpageIndex = pageNumber\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t//   ...listFieldSearch,\r\n\t\t\tpageIndex: pageIndex,\r\n\t\t\tpageSize: pageSize\r\n\t\t})\r\n\t}\r\n\r\n\t// ON SEARCH\r\n\tconst compareField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = null\r\n\t\tObject.keys(listField).forEach(function (key) {\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tlistField[key] = ''\r\n\t\t\t} else {\r\n\t\t\t\tlistField[key] = valueSearch\r\n\t\t\t}\r\n\t\t})\r\n\t\tnewList = listField\r\n\t\treturn newList\r\n\t}\r\n\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tlet clearKey = compareField(valueSearch, dataIndex)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t...clearKey\r\n\t\t})\r\n\r\n\t\tsetCurrentPage(pageIndex)\r\n\t}\r\n\r\n\t// DELETE\r\n\tconst handleDelele = async () => {\r\n\t\tif (dataDelete) {\r\n\t\t\tsetIsModalVisible(false)\r\n\t\t\tlet res = null\r\n\t\t\ttry {\r\n\t\t\t\tres = await staffSalaryApi.update(dataDelete)\r\n\t\t\t\tres.status === 200 && showNoti('success', 'Xóa thành công')\r\n\t\t\t\tif (dataTable.length === 1) {\r\n\t\t\t\t\tlistTodoApi.pageIndex === 1\r\n\t\t\t\t\t\t? setTodoApi({\r\n\t\t\t\t\t\t\t\t...listTodoApi,\r\n\t\t\t\t\t\t\t\tpageIndex: 1\r\n\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t: setTodoApi({\r\n\t\t\t\t\t\t\t\t...listTodoApi,\r\n\t\t\t\t\t\t\t\tpageIndex: listTodoApi.pageIndex - 1\r\n\t\t\t\t\t\t  })\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tgetDataTable()\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'DELETE_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tconst handleReset = () => {\r\n\t\tsetActiveColumnSearch('')\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// HANDLE SORT\r\n\tconst handleSort = async (option) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\r\n\t\tsetCurrentPage(1)\r\n\t\tsetTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// HANDLE FILTER\r\n\tconst _onFilterTable = (data) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tRoleID: data.RoleID,\r\n\t\t\tfromDate: data.fromDate,\r\n\t\t\ttoDate: data.toDate\r\n\t\t}\r\n\t\tsetCurrentPage(1)\r\n\t\tsetTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// COLUMNS TABLE\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Họ và tên',\r\n\t\t\tdataIndex: 'FullName',\r\n\t\t\t...FilterColumn('FullName', onSearch, handleReset, 'text'),\r\n\t\t\tclassName: activeColumnSearch === 'ID' ? 'active-column-search' : '',\r\n\t\t\trender: (text) => {\r\n\t\t\t\treturn <p className=\"font-weight-black\">{text}</p>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Email',\r\n\t\t\tdataIndex: 'Email'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Vai trò',\r\n\t\t\tdataIndex: 'RoleName'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Mức lương',\r\n\t\t\tdataIndex: 'Salary',\r\n\t\t\trender: (salary) => {\r\n\t\t\t\treturn <p className=\"font-weight-primary\">{Intl.NumberFormat('ja-JP').format(salary)}</p>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Loại',\r\n\t\t\tdataIndex: 'StyleName'\r\n\t\t},\r\n\t\t{ title: 'Thêm bởi', dataIndex: 'CreatedBy' },\r\n\t\t{\r\n\t\t\ttitle: 'Thêm lúc',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\trender: (date) => moment(date).format('DD/MM/YYYY')\r\n\t\t},\r\n\t\t{\r\n\t\t\talign: 'right',\r\n\t\t\trender: (record) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<StaffSalaryForm\r\n\t\t\t\t\t\tshowIcon={true}\r\n\t\t\t\t\t\trowData={record}\r\n\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t_onSubmitStaff={(data: any) => _onSubmit(data)}\r\n\t\t\t\t\t\tsetUpdateSalary={setUpdateSalary}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Tooltip title=\"Xóa\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"btn btn-icon delete\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetIsModalVisible(true)\r\n\t\t\t\t\t\t\t\tsetDataDelete({\r\n\t\t\t\t\t\t\t\t\tSalaryID: record.SalaryID,\r\n\t\t\t\t\t\t\t\t\tEnable: false\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<X />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataTable()\r\n\t}, [todoApi])\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={<AlertTriangle color=\"red\" />}\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonOk={() => handleDelele()}\r\n\t\t\t\tonCancel={() => setIsModalVisible(false)}\r\n\t\t\t>\r\n\t\t\t\t<span className=\"text-confirm\">Bạn có chắc chắn muốn xóa không ?</span>\r\n\t\t\t</Modal>\r\n\t\t\t<PowerTable\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={getPagination}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Cấu hình lương\"\r\n\t\t\t\tTitleCard={\r\n\t\t\t\t\t<StaffSalaryForm\r\n\t\t\t\t\t\tshowAdd={true}\r\n\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t_onSubmitStaff={(data: any) => _onSubmit(data)}\r\n\t\t\t\t\t\tsetUpdateSalary={setUpdateSalary}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tdataSource={dataTable}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t<FilterStaffSalaryTable _onFilter={(value: any) => _onFilterTable(value)} _onHandleReset={handleReset} />\r\n\t\t\t\t\t\t<SortBox handleSort={(value) => handleSort(value)} dataOption={dataOption} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\nStaffSalary.layout = LayoutBase\r\nexport default StaffSalary\r\n"]},"metadata":{},"sourceType":"module"}
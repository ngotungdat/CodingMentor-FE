{"ast":null,"code":"import { instance } from './instance';\n\nconst FormData = require('form-data');\n\nexport const login = async params => {\n  try {\n    const formData = new FormData();\n    formData.append('username', params.username);\n    formData.append('password', params.password);\n    const res = await instance.post('/api/Account/LoginV2', formData, {\n      headers: formData.getHeaders()\n    });\n    return res;\n  } catch (error) {\n    console.log('login error', error);\n    return Promise.reject(error);\n  }\n};\nexport const loginByDev = async params => {\n  try {\n    const formData = new FormData();\n    formData.append('roleId', params.roleId);\n    const res = await instance.post('/api/LoginByDev', formData, {\n      headers: formData.getHeaders()\n    });\n    return res;\n  } catch (error) {\n    console.log('login error', error);\n    return Promise.reject(error);\n  }\n};\nexport const registerAPI = async params => {\n  try {\n    const res = await instance.post('/auth/signup', params);\n    return res;\n  } catch (error) {\n    console.log('register error', error);\n    return Promise.reject(error);\n  }\n};\nexport const SocialLogin = async params => {\n  try {\n    var myHeaders = new Headers();\n    myHeaders.append('token', params === null || params === void 0 ? void 0 : params.tokenId);\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    let res = '';\n    let link = (params === null || params === void 0 ? void 0 : params.type) == 'google' ? '/api/LoginByGoogleAccount' : '/api/LoginByFacebook';\n    console.log('POST - ', link.toUpperCase());\n    await fetch(process.env.NEXT_PUBLIC_API_ENDPOINT + link, requestOptions).then(response => response.text()).then(result => {\n      res = JSON.parse(result);\n    }).catch(error => console.log('error', error));\n    return res;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/services/auth.tsx"],"names":["instance","FormData","require","login","params","formData","append","username","password","res","post","headers","getHeaders","error","console","log","Promise","reject","loginByDev","roleId","registerAPI","SocialLogin","myHeaders","Headers","tokenId","requestOptions","method","redirect","link","type","toUpperCase","fetch","process","env","NEXT_PUBLIC_API_ENDPOINT","then","response","text","result","JSON","parse","catch"],"mappings":"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","sourcesContent":["import { instance } from './instance'\r\nconst FormData = require('form-data')\r\nexport const login = async (params) => {\r\n\ttry {\r\n\t\tconst formData = new FormData()\r\n\t\tformData.append('username', params.username)\r\n\t\tformData.append('password', params.password)\r\n\t\tconst res = await instance.post('/api/Account/LoginV2', formData, {\r\n\t\t\theaders: formData.getHeaders()\r\n\t\t})\r\n\t\treturn res\r\n\t} catch (error) {\r\n\t\tconsole.log('login error', error)\r\n\t\treturn Promise.reject(error)\r\n\t}\r\n}\r\n\r\nexport const loginByDev = async (params) => {\r\n\ttry {\r\n\t\tconst formData = new FormData()\r\n\t\tformData.append('roleId', params.roleId)\r\n\t\tconst res = await instance.post('/api/LoginByDev', formData, {\r\n\t\t\theaders: formData.getHeaders()\r\n\t\t})\r\n\t\treturn res\r\n\t} catch (error) {\r\n\t\tconsole.log('login error', error)\r\n\t\treturn Promise.reject(error)\r\n\t}\r\n}\r\n\r\nexport const registerAPI = async (params: { username: String; email: String; password: String; roles: Array<String> }) => {\r\n\ttry {\r\n\t\tconst res = await instance.post('/auth/signup', params)\r\n\t\treturn res\r\n\t} catch (error) {\r\n\t\tconsole.log('register error', error)\r\n\t\treturn Promise.reject(error)\r\n\t}\r\n}\r\n\r\nexport const SocialLogin = async (params) => {\r\n\ttry {\r\n\t\tvar myHeaders = new Headers()\r\n\t\tmyHeaders.append('token', params?.tokenId)\r\n\t\tvar requestOptions: any = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: myHeaders,\r\n\t\t\tredirect: 'follow'\r\n\t\t}\r\n\t\tlet res = ''\r\n\t\tlet link = params?.type == 'google' ? '/api/LoginByGoogleAccount' : '/api/LoginByFacebook'\r\n\t\tconsole.log('POST - ', link.toUpperCase())\r\n\t\tawait fetch(process.env.NEXT_PUBLIC_API_ENDPOINT + link, requestOptions)\r\n\t\t\t.then((response) => response.text())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tres = JSON.parse(result)\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log('error', error))\r\n\t\treturn res\r\n\t} catch (error) {\r\n\t\treturn Promise.reject(error)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
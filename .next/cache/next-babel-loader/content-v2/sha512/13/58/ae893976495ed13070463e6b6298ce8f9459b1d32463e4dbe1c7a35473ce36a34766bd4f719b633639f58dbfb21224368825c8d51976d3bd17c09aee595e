{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\Global\\\\CourseExam\\\\CourseExamDetail.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { courseExamApi } from '~/apiBase/package/course-exam';\nimport { useWrap } from '~/context/wrap';\nimport Link from 'next/link';\nimport NestedTable from '~/components/Elements/NestedTable';\nimport { Tooltip } from 'antd';\nimport { ExclamationCircleOutlined, FormOutlined } from '@ant-design/icons';\nimport CourseExamPoint from './CourseExamPoint';\nimport { teacherApi } from '~/apiBase';\nimport CourseExamUpdate from './CourseExamUpdate';\n\nvar CourseExamDetail = function CourseExamDetail(props) {\n  _s();\n\n  var studentID = props.studentID; // ------ BASE USESTATE TABLE -------\n\n  var _useState = useState([]),\n      dataSource = _useState[0],\n      setDataSource = _useState[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      pageSize = _useWrap.pageSize,\n      userInformation = _useWrap.userInformation;\n\n  var _useState2 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      totalPage = _useState3[0],\n      setTotalPage = _useState3[1];\n\n  var _useState4 = useState(null),\n      indexRow = _useState4[0],\n      setIndexRow = _useState4[1];\n\n  var _useState5 = useState(1),\n      currentPage = _useState5[0],\n      setCurrentPage = _useState5[1];\n\n  var listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: 1,\n    sort: null,\n    sortType: null,\n    ProgramCode: null,\n    ProgramName: null,\n    Type: null,\n    Level: null,\n    fromDate: null,\n    toDate: null,\n    UserInformationID: studentID\n  };\n\n  var _useState6 = useState(listTodoApi),\n      todoApi = _useState6[0],\n      setTodoApi = _useState6[1];\n\n  var _useState7 = useState([]),\n      dataTeacher = _useState7[0],\n      setDataTeacher = _useState7[1]; // Get list teacher\n\n\n  var getListTeacher = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, newData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return teacherApi.getAll({\n                selectAll: true,\n                StatusID: 0\n              });\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                newData = res.data.data.map(function (item) {\n                  return {\n                    title: item.FullNameUnicode,\n                    value: item.UserInformationID\n                  };\n                });\n                setDataTeacher(newData);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('Error Get List Teacher: ', _context.t0.message);\n\n            case 10:\n              _context.prev = 10;\n              return _context.finish(10);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7, 10, 12]]);\n    }));\n\n    return function getListTeacher() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // GET DATA SOURCE\n\n\n  var getDataSource = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return courseExamApi.getAll(todoApi);\n\n            case 4:\n              res = _context2.sent;\n              res.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow));\n              res.status == 204 && setDataSource([]);\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              showNoti('danger', _context2.t0.message);\n\n            case 12:\n              _context2.prev = 12;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context2.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function getDataSource() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // -------------- GET PAGE_NUMBER -----------------\n\n\n  var _getPagination = function getPagination(pageNumber) {\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      // ...listFieldSearch,\n      pageIndex: pageNumber\n    }));\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(function () {\n    getDataSource();\n  }, [todoApi]); // ---------------- COLUMN --------------------\n\n  var columns = [{\n    title: 'Đề thi',\n    dataIndex: 'ExamTopicName',\n    render: function render(text, data) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) !== 2 ? /*#__PURE__*/_jsxDEV(Link, {\n          href: {\n            pathname: '/course-exam/detail/[slug]',\n            query: {\n              slug: \"\".concat(data.ID)\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            className: \"font-weight-black\",\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }, _this) : /*#__PURE__*/_jsxDEV(Link, {\n          href: {\n            pathname: '/course-exam/detail/[slug]',\n            query: {\n              slug: \"\".concat(data.ID),\n              teacherMarking: data.TeacherID,\n              packageResultID: data.ID,\n              type: 'check'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            className: \"font-weight-black\",\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false);\n    }\n  }, {\n    title: 'Tổng điểm',\n    dataIndex: 'PointTotal',\n    render: function render(point, data) {\n      return /*#__PURE__*/_jsxDEV(CourseExamPoint, {\n        infoID: data.ID,\n        point: point,\n        detailID: data.ID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }, _this);\n    }\n  }, {\n    title: 'Dạng đề',\n    dataIndex: 'Type',\n    render: function render(text, data) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [data.Type == 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-weight-black\",\n          children: \"B\\xE0i t\\u1EADp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 26\n        }, _this), data.Type == 2 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-weight-black\",\n          style: {\n            color: '#174898'\n          },\n          children: \"B\\xE0i ki\\u1EC3m tra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 8\n        }, _this)]\n      }, void 0, true);\n    }\n  }, {\n    title: 'Giáo viên chấm bài',\n    dataIndex: 'TeacherName',\n    render: function render(text) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-primary\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 22\n      }, _this);\n    }\n  }, {\n    title: 'Trạng thái chấm bài',\n    dataIndex: 'isDone',\n    filters: [{\n      text: 'Đã chấm xong',\n      value: true\n    }, {\n      text: 'Chưa chấm xong',\n      value: false\n    }],\n    onFilter: function onFilter(value, record) {\n      return record.isDone === value;\n    },\n    render: function render(type) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [type == true && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag green\",\n          children: \"\\u0110\\xE3 ch\\u1EA5m xong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 23\n        }, _this), type == false && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag gray\",\n          children: \"Ch\\u01B0a ch\\u1EA5m xong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 24\n        }, _this)]\n      }, void 0, true);\n    }\n  }, {\n    render: function render(data) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) !== 2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CourseExamUpdate, {\n            dataTeacher: dataTeacher,\n            dataRow: data,\n            onFetchData: function onFetchData() {\n              return setTodoApi(_objectSpread({}, todoApi));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 8\n          }, _this), /*#__PURE__*/_jsxDEV(Link, {\n            href: {\n              pathname: '/course-exam/detail/[slug]',\n              query: {\n                slug: \"\".concat(data.ID)\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Chi ti\\u1EBFt b\\xE0i l\\xE0m\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-icon\",\n                children: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 11\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 9\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 8\n          }, _this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Link, {\n          href: {\n            pathname: '/course-exam/detail/[slug]',\n            query: {\n              slug: \"\".concat(data.ID),\n              teacherMarking: data.TeacherID,\n              packageResultID: data.ID,\n              type: 'check'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Ch\\u1EA5m b\\xE0i ngay\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-icon edit\",\n              children: /*#__PURE__*/_jsxDEV(FormOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 9\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false);\n    }\n  }];\n  useEffect(function () {\n    getListTeacher();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NestedTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: function getPagination(pageNumber) {\n        return _getPagination(pageNumber);\n      },\n      loading: isLoading,\n      addClass: \"basic-header\",\n      TitlePage: \"\",\n      dataSource: dataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false);\n};\n\n_s(CourseExamDetail, \"qnhAn9jjJxCb0uK52f8jC0rrJF0=\", false, function () {\n  return [useWrap];\n});\n\n_c = CourseExamDetail;\nexport default CourseExamDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseExamDetail\");","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/Global/CourseExam/CourseExamDetail.tsx"],"names":["React","useState","useEffect","courseExamApi","useWrap","Link","NestedTable","Tooltip","ExclamationCircleOutlined","FormOutlined","CourseExamPoint","teacherApi","CourseExamUpdate","CourseExamDetail","props","studentID","dataSource","setDataSource","showNoti","pageSize","userInformation","type","status","isLoading","setIsLoading","totalPage","setTotalPage","indexRow","setIndexRow","currentPage","setCurrentPage","listTodoApi","pageIndex","sort","sortType","ProgramCode","ProgramName","Type","Level","fromDate","toDate","UserInformationID","todoApi","setTodoApi","dataTeacher","setDataTeacher","getListTeacher","getAll","selectAll","StatusID","res","newData","data","map","item","title","FullNameUnicode","value","console","log","message","getDataSource","totalRow","getPagination","pageNumber","columns","dataIndex","render","text","RoleID","pathname","query","slug","ID","teacherMarking","TeacherID","packageResultID","point","color","filters","onFilter","record","isDone"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { courseExamApi } from '~/apiBase/package/course-exam'\r\nimport { useWrap } from '~/context/wrap'\r\nimport Link from 'next/link'\r\nimport NestedTable from '~/components/Elements/NestedTable'\r\nimport { Tooltip } from 'antd'\r\nimport { ExclamationCircleOutlined, FormOutlined } from '@ant-design/icons'\r\nimport CourseExamPoint from './CourseExamPoint'\r\nimport { teacherApi } from '~/apiBase'\r\nimport CourseExamUpdate from './CourseExamUpdate'\r\n\r\nconst CourseExamDetail = (props) => {\r\n\tconst { studentID } = props\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState<ICourseExam[]>([])\r\n\tconst { showNoti, pageSize, userInformation } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [indexRow, setIndexRow] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: 1,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tProgramCode: null,\r\n\t\tProgramName: null,\r\n\t\tType: null,\r\n\t\tLevel: null,\r\n\t\tfromDate: null,\r\n\t\ttoDate: null,\r\n\t\tUserInformationID: studentID\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\tconst [dataTeacher, setDataTeacher] = useState([])\r\n\r\n\t// Get list teacher\r\n\tconst getListTeacher = async () => {\r\n\t\t// setLoadingTeacher(true);\r\n\t\ttry {\r\n\t\t\tlet res = await teacherApi.getAll({\r\n\t\t\t\tselectAll: true,\r\n\t\t\t\tStatusID: 0\r\n\t\t\t})\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tlet newData = res.data.data.map((item) => ({\r\n\t\t\t\t\ttitle: item.FullNameUnicode,\r\n\t\t\t\t\tvalue: item.UserInformationID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataTeacher(newData)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Error Get List Teacher: ', error.message)\r\n\t\t} finally {\r\n\t\t\t// setLoadingTeacher(true);\r\n\t\t}\r\n\t}\r\n\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await courseExamApi.getAll(todoApi)\r\n\t\t\tres.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow))\r\n\r\n\t\t\tres.status == 204 && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t// ...listFieldSearch,\r\n\t\t\tpageIndex: pageNumber\r\n\t\t})\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t}, [todoApi])\r\n\r\n\t// ---------------- COLUMN --------------------\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Đề thi',\r\n\t\t\tdataIndex: 'ExamTopicName',\r\n\t\t\trender: (text, data) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{userInformation?.RoleID !== 2 ? (\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\t\tpathname: '/course-exam/detail/[slug]',\r\n\t\t\t\t\t\t\t\tquery: { slug: `${data.ID}` }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"font-weight-black\">\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\t\tpathname: '/course-exam/detail/[slug]',\r\n\t\t\t\t\t\t\t\tquery: {\r\n\t\t\t\t\t\t\t\t\tslug: `${data.ID}`,\r\n\t\t\t\t\t\t\t\t\tteacherMarking: data.TeacherID,\r\n\t\t\t\t\t\t\t\t\tpackageResultID: data.ID,\r\n\t\t\t\t\t\t\t\t\ttype: 'check'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"font-weight-black\">\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tổng điểm',\r\n\t\t\tdataIndex: 'PointTotal',\r\n\t\t\trender: (point, data) => <CourseExamPoint infoID={data.ID} point={point} detailID={data.ID} />\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Dạng đề',\r\n\t\t\tdataIndex: 'Type',\r\n\t\t\trender: (text, data) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{data.Type == 1 && <p className=\"font-weight-black\">Bài tập</p>}\r\n\t\t\t\t\t\t{data.Type == 2 && (\r\n\t\t\t\t\t\t\t<p className=\"font-weight-black\" style={{ color: '#174898' }}>\r\n\t\t\t\t\t\t\t\tBài kiểm tra\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\ttitle: 'Giáo viên chấm bài',\r\n\t\t\tdataIndex: 'TeacherName',\r\n\t\t\trender: (text) => <p className=\"font-weight-primary\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái chấm bài',\r\n\t\t\tdataIndex: 'isDone',\r\n\t\t\tfilters: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Đã chấm xong',\r\n\t\t\t\t\tvalue: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Chưa chấm xong',\r\n\t\t\t\t\tvalue: false\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tonFilter: (value, record) => record.isDone === value,\r\n\t\t\trender: (type) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{type == true && <span className=\"tag green\">Đã chấm xong</span>}\r\n\t\t\t\t\t{type == false && <span className=\"tag gray\">Chưa chấm xong</span>}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\trender: (data) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{userInformation?.RoleID !== 2 ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<CourseExamUpdate dataTeacher={dataTeacher} dataRow={data} onFetchData={() => setTodoApi({ ...todoApi })} />\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\t\t\tpathname: '/course-exam/detail/[slug]',\r\n\t\t\t\t\t\t\t\t\tquery: { slug: `${data.ID}` }\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Chi tiết bài làm\">\r\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-icon\">\r\n\t\t\t\t\t\t\t\t\t\t<ExclamationCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\t\tpathname: '/course-exam/detail/[slug]',\r\n\t\t\t\t\t\t\t\tquery: {\r\n\t\t\t\t\t\t\t\t\tslug: `${data.ID}`,\r\n\t\t\t\t\t\t\t\t\tteacherMarking: data.TeacherID,\r\n\t\t\t\t\t\t\t\t\tpackageResultID: data.ID,\r\n\t\t\t\t\t\t\t\t\ttype: 'check'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Tooltip title=\"Chấm bài ngay\">\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-icon edit\">\r\n\t\t\t\t\t\t\t\t\t<FormOutlined />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\tuseEffect(() => {\r\n\t\tgetListTeacher()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<NestedTable\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"\"\r\n\t\t\t\tdataSource={dataSource}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CourseExamDetail\r\n"]},"metadata":{},"sourceType":"module"}
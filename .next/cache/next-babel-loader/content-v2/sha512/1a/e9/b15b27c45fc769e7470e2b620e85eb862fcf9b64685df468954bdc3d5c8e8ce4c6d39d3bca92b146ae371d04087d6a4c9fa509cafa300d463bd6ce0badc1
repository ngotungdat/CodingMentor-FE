{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Sales\\\\SalesSalaryHistory\\\\SalesSalaryHistory.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { saleCampaignApi, saleSalaryApi, staffApi } from '~/apiBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nimport { fmSelectArr, numberWithCommas } from '~/utils/functions';\n\nfunction SalesSalaryHistory(props) {\n  const {\n    0: saleSalaryList,\n    1: setSaleSalaryList\n  } = useState([]);\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: optionListForFilter,\n    1: setOptionListForFilter\n  } = useState({\n    optionSaleCampaignList: [],\n    optionCounselorList: []\n  });\n  const {\n    0: activeColumnSearch,\n    1: setActiveColumnSearch\n  } = useState('');\n  const sortOptionList = [{\n    dataSort: {\n      sort: 0,\n      sortType: true\n    },\n    value: 1,\n    text: 'Lương tăng dần'\n  }, {\n    dataSort: {\n      sort: 0,\n      sortType: false\n    },\n    value: 2,\n    text: 'Lương giảm dần'\n  }, {\n    dataSort: {\n      sort: 1,\n      sortType: true\n    },\n    value: 3,\n    text: 'Thưởng tăng dần'\n  }, {\n    dataSort: {\n      sort: 1,\n      sortType: false\n    },\n    value: 4,\n    text: 'Thưởng giảm dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: true\n    },\n    value: 5,\n    text: 'Tổng lương tăng dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: false\n    },\n    value: 6,\n    text: 'Tổng lương giảm dần'\n  }]; // FILTER\n\n  const listFieldInit = {\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false,\n    CounselorsID: null,\n    SaleCampaignID: null,\n    DonePaid: true\n  };\n  let refValue = useRef({\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false\n  });\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(listFieldInit); // FILTER\n\n  const onFilter = obj => {\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1\n    }, obj));\n  }; // PAGINATION\n\n\n  const getPagination = (pageIndex, pageSize) => {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize,\n      pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  }; // SORT\n\n\n  const onSort = option => {\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), refValue.current));\n  }; // RESET SEARCH\n\n\n  const onResetSearch = () => {\n    setActiveColumnSearch('');\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), {}, {\n      pageSize: refValue.current.pageSize\n    }));\n  }; // ACTION SEARCH\n\n\n  const onSearch = (valueSearch, dataIndex) => {\n    setActiveColumnSearch(dataIndex);\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1,\n      [dataIndex]: valueSearch\n    }));\n  }; // GET DATA TABLE\n\n\n  const fetchSaleCampaignList = async () => {\n    try {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n      const res = await saleSalaryApi.getAll(filters);\n\n      if (res.status === 200) {\n        setSaleSalaryList(res.data.data);\n        setTotalPage(res.data.totalRow);\n      }\n\n      if (res.status === 204) {\n        setSaleSalaryList([]);\n        setTotalPage(0);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchSaleCampaignList();\n  }, [filters]);\n\n  const fetchDataForFilter = async () => {\n    try {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n      const [counselorRes, saleCampaignRes] = await Promise.all([staffApi.getAll({\n        selectAll: true,\n        RoleID: 6\n      }), saleCampaignApi.getAll({\n        selectAll: true\n      })]);\n      const rs = {\n        optionSaleCampaignList: [],\n        optionCounselorList: []\n      };\n\n      if (counselorRes.status === 200) {\n        rs.optionCounselorList = fmSelectArr(counselorRes.data.data, 'FullNameUnicode', 'UserInformationID');\n      }\n\n      if (saleCampaignRes.status === 200) {\n        rs.optionSaleCampaignList = fmSelectArr(saleCampaignRes.data.data, 'Name', 'ID');\n      }\n\n      setOptionListForFilter(rs);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchDataForFilter();\n  }, []);\n  const columns = [_objectSpread(_objectSpread({\n    title: 'Tư vấn viên',\n    dataIndex: 'CounselorsName'\n  }, FilterColumn('CounselorsID', onSearch, onResetSearch, 'select', optionListForFilter.optionCounselorList)), {}, {\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 22\n    }, this),\n    className: activeColumnSearch === 'CounselorsID' ? 'active-column-search' : ''\n  }), _objectSpread(_objectSpread({\n    title: 'Chiến dịch',\n    dataIndex: 'SaleCampaignName'\n  }, FilterColumn('SaleCampaignID', onSearch, onResetSearch, 'select', optionListForFilter.optionSaleCampaignList)), {}, {\n    className: activeColumnSearch === 'SaleCampaignID' ? 'active-column-search' : ''\n  }), {\n    title: 'Lương chiến dịch',\n    dataIndex: 'Salary',\n    render: price => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: numberWithCommas(price)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 23\n    }, this)\n  }, {\n    title: 'Thưởng',\n    dataIndex: 'Bonus',\n    render: price => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: numberWithCommas(price)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 23\n    }, this)\n  }, {\n    title: 'Tổng lương',\n    dataIndex: 'TotalSalary',\n    render: price => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: numberWithCommas(price)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 23\n    }, this)\n  }, {\n    title: 'Ghi chú',\n    dataIndex: 'Note'\n  }];\n  return /*#__PURE__*/_jsxDEV(PowerTable, {\n    loading: isLoading,\n    currentPage: filters.pageIndex,\n    totalPage: totalPage,\n    getPagination: getPagination,\n    addClass: \"basic-header\",\n    TitlePage: \"L\\u1ECBch s\\u1EED duy\\u1EC7t l\\u01B0\\u01A1ng\",\n    dataSource: saleSalaryList,\n    columns: columns,\n    Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extra-table\",\n      children: /*#__PURE__*/_jsxDEV(SortBox, {\n        handleSort: onSort,\n        dataOption: sortOptionList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 3\n  }, this);\n}\n\nexport default SalesSalaryHistory;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Sales/SalesSalaryHistory/SalesSalaryHistory.tsx"],"names":["React","useEffect","useRef","useState","saleCampaignApi","saleSalaryApi","staffApi","SortBox","PowerTable","FilterColumn","useWrap","fmSelectArr","numberWithCommas","SalesSalaryHistory","props","saleSalaryList","setSaleSalaryList","showNoti","isLoading","setIsLoading","type","status","totalPage","setTotalPage","optionListForFilter","setOptionListForFilter","optionSaleCampaignList","optionCounselorList","activeColumnSearch","setActiveColumnSearch","sortOptionList","dataSort","sort","sortType","value","text","listFieldInit","pageIndex","pageSize","CounselorsID","SaleCampaignID","DonePaid","refValue","filters","setFilters","onFilter","obj","current","getPagination","onSort","option","title","onResetSearch","onSearch","valueSearch","dataIndex","fetchSaleCampaignList","res","getAll","data","totalRow","error","message","fetchDataForFilter","counselorRes","saleCampaignRes","Promise","all","selectAll","RoleID","rs","columns","render","className","price"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { saleCampaignApi, saleSalaryApi, staffApi } from '~/apiBase';\r\nimport SortBox from '~/components/Elements/SortBox';\r\nimport PowerTable from '~/components/PowerTable';\r\nimport FilterColumn from '~/components/Tables/FilterColumn';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { fmSelectArr, numberWithCommas } from '~/utils/functions';\r\n\r\ntype IOptionListFilter = {\r\n\toptionSaleCampaignList: IOptionCommon[];\r\n\toptionCounselorList: IOptionCommon[];\r\n};\r\nfunction SalesSalaryHistory(props) {\r\n\tconst [saleSalaryList, setSaleSalaryList] = useState<ISaleSalary[]>([]);\r\n\tconst { showNoti } = useWrap();\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t});\r\n\tconst [totalPage, setTotalPage] = useState(null);\r\n\tconst [optionListForFilter, setOptionListForFilter] = useState<IOptionListFilter>({\r\n\t\toptionSaleCampaignList: [],\r\n\t\toptionCounselorList: []\r\n\t});\r\n\tconst [activeColumnSearch, setActiveColumnSearch] = useState('');\r\n\tconst sortOptionList = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 1,\r\n\t\t\ttext: 'Lương tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 2,\r\n\t\t\ttext: 'Lương giảm dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 1,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 3,\r\n\t\t\ttext: 'Thưởng tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 1,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 4,\r\n\t\t\ttext: 'Thưởng giảm dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 5,\r\n\t\t\ttext: 'Tổng lương tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 6,\r\n\t\t\ttext: 'Tổng lương giảm dần'\r\n\t\t}\r\n\t];\r\n\t// FILTER\r\n\tconst listFieldInit = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false,\r\n\r\n\t\tCounselorsID: null,\r\n\t\tSaleCampaignID: null,\r\n\t\tDonePaid: true\r\n\t};\r\n\tlet refValue = useRef({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false\r\n\t});\r\n\tconst [filters, setFilters] = useState(listFieldInit);\r\n\r\n\t// FILTER\r\n\tconst onFilter = (obj) => {\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t...obj\r\n\t\t});\r\n\t};\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10;\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tpageSize,\r\n\t\t\tpageIndex\r\n\t\t};\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\t...refValue.current\r\n\t\t});\r\n\t};\r\n\t// SORT\r\n\tconst onSort = (option) => {\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t};\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current\r\n\t\t});\r\n\t};\r\n\t// RESET SEARCH\r\n\tconst onResetSearch = () => {\r\n\t\tsetActiveColumnSearch('');\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\tpageSize: refValue.current.pageSize\r\n\t\t});\r\n\t};\r\n\t// ACTION SEARCH\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tsetActiveColumnSearch(dataIndex);\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t[dataIndex]: valueSearch\r\n\t\t});\r\n\t};\r\n\r\n\t// GET DATA TABLE\r\n\tconst fetchSaleCampaignList = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\tconst res = await saleSalaryApi.getAll(filters);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetSaleSalaryList(res.data.data);\r\n\t\t\t\tsetTotalPage(res.data.totalRow);\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetSaleSalaryList([]);\r\n\t\t\t\tsetTotalPage(0);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tfetchSaleCampaignList();\r\n\t}, [filters]);\r\n\r\n\tconst fetchDataForFilter = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\tconst [counselorRes, saleCampaignRes] = await Promise.all([\r\n\t\t\t\tstaffApi.getAll({ selectAll: true, RoleID: 6 }),\r\n\t\t\t\tsaleCampaignApi.getAll({ selectAll: true })\r\n\t\t\t]);\r\n\t\t\tconst rs: IOptionListFilter = {\r\n\t\t\t\toptionSaleCampaignList: [],\r\n\t\t\t\toptionCounselorList: []\r\n\t\t\t};\r\n\t\t\tif (counselorRes.status === 200) {\r\n\t\t\t\trs.optionCounselorList = fmSelectArr(counselorRes.data.data, 'FullNameUnicode', 'UserInformationID');\r\n\t\t\t}\r\n\t\t\tif (saleCampaignRes.status === 200) {\r\n\t\t\t\trs.optionSaleCampaignList = fmSelectArr(saleCampaignRes.data.data, 'Name', 'ID');\r\n\t\t\t}\r\n\t\t\tsetOptionListForFilter(rs);\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tfetchDataForFilter();\r\n\t}, []);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Tư vấn viên',\r\n\t\t\tdataIndex: 'CounselorsName',\r\n\t\t\t...FilterColumn('CounselorsID', onSearch, onResetSearch, 'select', optionListForFilter.optionCounselorList),\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>,\r\n\t\t\tclassName: activeColumnSearch === 'CounselorsID' ? 'active-column-search' : ''\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Chiến dịch',\r\n\t\t\tdataIndex: 'SaleCampaignName',\r\n\t\t\t...FilterColumn('SaleCampaignID', onSearch, onResetSearch, 'select', optionListForFilter.optionSaleCampaignList),\r\n\t\t\tclassName: activeColumnSearch === 'SaleCampaignID' ? 'active-column-search' : ''\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Lương chiến dịch',\r\n\t\t\tdataIndex: 'Salary',\r\n\t\t\trender: (price) => <p className=\"font-weight-black\">{numberWithCommas(price)}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Thưởng',\r\n\t\t\tdataIndex: 'Bonus',\r\n\t\t\trender: (price) => <p className=\"font-weight-black\">{numberWithCommas(price)}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tổng lương',\r\n\t\t\tdataIndex: 'TotalSalary',\r\n\t\t\trender: (price) => <p className=\"font-weight-black\">{numberWithCommas(price)}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ghi chú',\r\n\t\t\tdataIndex: 'Note'\r\n\t\t}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<PowerTable\r\n\t\t\tloading={isLoading}\r\n\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\ttotalPage={totalPage}\r\n\t\t\tgetPagination={getPagination}\r\n\t\t\taddClass=\"basic-header\"\r\n\t\t\tTitlePage=\"Lịch sử duyệt lương\"\r\n\t\t\tdataSource={saleSalaryList}\r\n\t\t\tcolumns={columns}\r\n\t\t\tExtra={\r\n\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t<SortBox handleSort={onSort} dataOption={sortOptionList} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default SalesSalaryHistory;\r\n"]},"metadata":{},"sourceType":"module"}
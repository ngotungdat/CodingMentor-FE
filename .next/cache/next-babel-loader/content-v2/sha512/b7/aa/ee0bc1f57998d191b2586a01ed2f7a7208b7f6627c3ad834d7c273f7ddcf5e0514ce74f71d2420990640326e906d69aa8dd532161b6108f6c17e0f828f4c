{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Customer\\\\Service\\\\ServiceAppointmentTest.tsx\",\n    _s = $RefreshSig$(),\n    _this2 = this,\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport moment from 'moment';\nimport router from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport { branchApi, studentApi, testCustomerApi, examTopicApi, packageExaminerApi, teacherApi } from '~/apiBase';\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase';\nimport NotiModal from '~/components/Elements/NotiModal/NotiModal';\nimport SortBox from '~/components/Elements/SortBox';\nimport ExpandTable from '~/components/ExpandTable';\nimport TestAddExam from '~/components/Global/Customer/Service/TestAddExam';\nimport TestCustomerForm from '~/components/Global/Customer/Service/TestCustomerForm';\nimport LayoutBase from '~/components/LayoutBase';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nimport ExamAppointmentPoint from '../../ExamAppointment/ExamAppointmentPoint';\nimport { CloseOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport { Modal, Tooltip } from 'antd';\nimport Link from 'next/link';\nvar pageIndex = 1;\nvar listFieldSearch = {\n  pageIndex: 1,\n  FullNameUnicode: null\n};\nvar listFieldFilter = {\n  pageIndex: 1,\n  BranchID: null,\n  // lọc\n  UserInformationID: null,\n  Status: null,\n  AppointmentDate: null\n};\nvar dataOption = [{\n  dataSort: {\n    sort: 2,\n    sortType: true\n  },\n  text: 'Tên A - Z '\n}, {\n  dataSort: {\n    sort: 2,\n    sortType: false\n  },\n  text: 'Tên Z - A'\n}, {\n  dataSort: {\n    sort: 0,\n    sortType: true\n  },\n  text: 'Ngày hẹn A - Z'\n}, {\n  dataSort: {\n    sort: 0,\n    sortType: false\n  },\n  text: 'Ngày hẹn Z - A'\n}]; // -- FOR DIFFERENT VIEW --\n\nvar listApi = [{\n  api: branchApi,\n  text: 'Trung tâm',\n  name: 'Branch'\n}, {\n  api: studentApi,\n  text: 'Học viên',\n  name: 'Student'\n}, {\n  api: teacherApi,\n  text: 'Giáo viên',\n  name: 'Teacher'\n}];\nexport default function ServiceAppointmentTest(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState({\n    Branch: [],\n    Student: [],\n    Teacher: []\n  }),\n      listDataForm = _useState[0],\n      setListDataForm = _useState[1];\n\n  var _useState2 = useState([]),\n      dataExam = _useState2[0],\n      setDataExam = _useState2[1];\n\n  var _useState3 = useState(null),\n      currentDay = _useState3[0],\n      setCurrentDate = _useState3[1];\n\n  var _useState4 = useState(false),\n      isOpenNoti = _useState4[0],\n      setisOpenNoti = _useState4[1];\n\n  var _useState5 = useState(null),\n      userID = _useState5[0],\n      setUserID = _useState5[1]; // ------ BASE USESTATE TABLE -------\n\n\n  var _useState6 = useState([]),\n      dataSource = _useState6[0],\n      setDataSource = _useState6[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      pageSize = _useWrap.pageSize,\n      userInformation = _useWrap.userInformation;\n\n  var listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    sort: null,\n    sortType: null,\n    FullNameUnicode: null,\n    BranchID: null,\n    // lọc\n    UserInformationID: null,\n    Status: null,\n    AppointmentDate: null\n  };\n\n  var _useState7 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState7[0],\n      setIsLoading = _useState7[1];\n\n  var _useState8 = useState(null),\n      totalPage = _useState8[0],\n      setTotalPage = _useState8[1];\n\n  var _useState9 = useState(null),\n      indexRow = _useState9[0],\n      setIndexRow = _useState9[1];\n\n  var _useState10 = useState(1),\n      currentPage = _useState10[0],\n      setCurrentPage = _useState10[1];\n\n  var _useState11 = useState(listTodoApi),\n      todoApi = _useState11[0],\n      setTodoApi = _useState11[1]; // ------ LIST FILTER -------\n\n\n  var _useState12 = useState([{\n    name: 'BranchID',\n    title: 'Trung tâm',\n    col: 'col-md-12 col-12',\n    type: 'select',\n    optionList: null,\n    // Gọi api xong trả data vào đây\n    value: null\n  }, {\n    name: 'Status',\n    title: 'Trạng thái',\n    col: 'col-md-12 col-12',\n    type: 'select',\n    optionList: [{\n      title: 'Chưa test',\n      value: 0\n    }, {\n      title: 'Đang chấm bài test',\n      value: 1\n    }, {\n      title: 'Chưa đăng kí khóa học',\n      value: 2\n    }, {\n      title: 'Đã đăng kí khóa học',\n      value: 3\n    }, {\n      title: 'Đã hủy hẹn test',\n      value: 4\n    }],\n    value: null\n  }, {\n    name: 'AppointmentDate',\n    title: 'Ngày hẹn test',\n    col: 'col-md-12 col-12',\n    type: 'date-single',\n    value: null\n  }, {\n    name: 'date-range',\n    title: 'Từ - đến',\n    col: 'col-12',\n    type: 'date-range',\n    value: null\n  }]),\n      dataFilter = _useState12[0],\n      setDataFilter = _useState12[1];\n\n  var _useState13 = useState([]),\n      dataTeacher = _useState13[0],\n      setDataTeacher = _useState13[1]; // Get list teacher\n\n\n  var getListTeacher = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, newData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return packageExaminerApi.getAll({\n                selectAll: true\n              });\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                newData = res.data.data.map(function (item) {\n                  return {\n                    title: item.TeacherName,\n                    value: item.TeacherID\n                  };\n                });\n                setDataTeacher(newData);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('Error Get List Teacher: ', _context.t0.message);\n\n            case 10:\n              _context.prev = 10;\n              return _context.finish(10);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7, 10, 12]]);\n    }));\n\n    return function getListTeacher() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var makeNewData = function makeNewData(data, name) {\n    var newData = null;\n\n    switch (name) {\n      case 'Branch':\n        newData = data.map(function (item) {\n          return {\n            title: item.BranchName,\n            value: item.ID\n          };\n        });\n        setDataFunc('BranchID', newData);\n        break;\n\n      case 'Student':\n        newData = data.map(function (item) {\n          return {\n            title: item.FullNameUnicode,\n            value: item.UserInformationID,\n            counselorsName: item.CounselorsName == null ? '' : item.CounselorsName\n          };\n        });\n        break;\n\n      case 'Teacher':\n        newData = data.map(function (item) {\n          return {\n            title: item.FullNameUnicode,\n            value: item.UserInformationID\n          };\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    return newData;\n  };\n\n  var getDataTolist = function getDataTolist(data, name) {\n    var newData = makeNewData(data, name);\n    Object.keys(listDataForm).forEach(function (key) {\n      if (key == name) {\n        listDataForm[key] = newData;\n      }\n    });\n    setListDataForm(_objectSpread({}, listDataForm));\n  }; // ----------- GET DATA EXAM ------------\n\n\n  var getDataExam = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return examTopicApi.getAll({\n                selectAll: true,\n                type: 1\n              });\n\n            case 3:\n              res = _context2.sent;\n\n              if (res.status === 200) {\n                setDataExam(res.data.data);\n              }\n\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log('Error Exam: ', _context2.t0.message);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function getDataExam() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // ----------- GET DATA SOURCE ---------------\n\n\n  var getDataAll = function getDataAll(arrApi) {\n    arrApi.forEach(function (item, index) {\n      _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                res = null;\n                _context3.prev = 1;\n\n                if (!(item.name == 'Counselors')) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                _context3.next = 5;\n                return item.api.getAll({\n                  pageIndex: 1,\n                  pageSize: 99999,\n                  RoleID: 6,\n                  StatusID: 0,\n                  Enable: true\n                });\n\n              case 5:\n                res = _context3.sent;\n                _context3.next = 11;\n                break;\n\n              case 8:\n                _context3.next = 10;\n                return item.api.getAll({\n                  pageIndex: 1,\n                  pageSize: 99999,\n                  Enable: true\n                });\n\n              case 10:\n                res = _context3.sent;\n\n              case 11:\n                res.status == 200 && getDataTolist(res.data.data, item.name);\n                res.status == 204 && console.log(item.text + ' Không có dữ liệu');\n                _context3.next = 18;\n                break;\n\n              case 15:\n                _context3.prev = 15;\n                _context3.t0 = _context3[\"catch\"](1);\n                // showNoti('danger', error.message);\n                console.log(_context3.t0);\n\n              case 18:\n                _context3.prev = 18;\n                return _context3.finish(18);\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 15, 18, 20]]);\n      }))();\n    });\n  }; // GET DATA SOURCE\n\n\n  var getDataSource = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context4.prev = 1;\n              _context4.next = 4;\n              return testCustomerApi.getAll(todoApi);\n\n            case 4:\n              res = _context4.sent;\n\n              if (res.status == 200) {\n                setDataSource(res.data.data);\n                setTotalPage(res.data.totalRow); //@ts-ignore\n                // setTestDate(moment(res.data.data.AppointmentDate).format('DD/MM/YYYY HH:mm'));\n              }\n\n              res.status == 204 && setDataSource([]);\n              _context4.next = 12;\n              break;\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](1);\n              _context4.t0.status == 500 ? showNoti('danger', 'Đường truyền mạng không ổn định') : showNoti('danger', _context4.t0.message);\n\n            case 12:\n              _context4.prev = 12;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context4.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function getDataSource() {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // ------ SET DATA FUN ------\n\n\n  var setDataFunc = function setDataFunc(name, data) {\n    dataFilter.every(function (item, index) {\n      if (item.name == name) {\n        item.optionList = data;\n        return false;\n      }\n\n      return true;\n    });\n    setDataFilter(_toConsumableArray(dataFilter));\n  }; // ---------------- AFTER SUBMIT -----------------\n\n\n  var afterPost = function afterPost(mes) {\n    // showNoti(\"success\", mes);\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // ----------------- ON SUBMIT --------------------\n\n\n  var _onSubmit2 = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dataSubmit) {\n      var res, _res;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              // console.log('Data submit: ', dataSubmit);\n              // console.log('List data form: ', listDataForm);\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              res = null;\n              _context5.prev = 2;\n\n              if (!dataSubmit.ID) {\n                _context5.next = 10;\n                break;\n              }\n\n              _context5.next = 6;\n              return testCustomerApi.update(dataSubmit);\n\n            case 6:\n              res = _context5.sent;\n\n              if (res.status == 200) {\n                // let newDataSource = [...dataSource];\n                // newDataSource.splice(indexRow, 1, {\n                // \t...dataSubmit,\n                // \tFullNameUnicode: listDataForm.Student.find((item) => item.value == dataSubmit.UserInformationID).title,\n                // \tBranchName: listDataForm.Branch.find((item) => item.value == dataSubmit.BranchID).title,\n                // \tTeacherName: listDataForm.Teacher.find((item) => item.value == dataSubmit.TeacherID).title\n                // });\n                // setDataSource(newDataSource);\n                setTodoApi(_objectSpread({}, todoApi));\n                showNoti('success', res.data.message);\n              }\n\n              _context5.next = 14;\n              break;\n\n            case 10:\n              _context5.next = 12;\n              return testCustomerApi.add(dataSubmit);\n\n            case 12:\n              res = _context5.sent;\n              ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && afterPost(res.data.message);\n\n            case 14:\n              _context5.next = 20;\n              break;\n\n            case 16:\n              _context5.prev = 16;\n              _context5.t0 = _context5[\"catch\"](2);\n              console.log('error: ', _context5.t0);\n              showNoti('danger', _context5.t0.message);\n\n            case 20:\n              _context5.prev = 20;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context5.finish(20);\n\n            case 23:\n              return _context5.abrupt(\"return\", res);\n\n            case 24:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[2, 16, 20, 23]]);\n    }));\n\n    return function _onSubmit(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); // -------------- HANDLE FILTER ------------------\n\n\n  var _handleFilter = function handleFilter(listFilter) {\n    var newListFilter = _objectSpread({}, listFieldFilter);\n\n    listFilter.forEach(function (item, index) {\n      var key = item.name;\n      Object.keys(newListFilter).forEach(function (keyFilter) {\n        if (keyFilter == key) {\n          newListFilter[key] = item.value;\n        }\n      });\n    });\n    setTodoApi(_objectSpread(_objectSpread(_objectSpread({}, listTodoApi), newListFilter), {}, {\n      pageIndex: 1\n    }));\n  }; // --------------- HANDLE SORT ----------------------\n\n\n  var _handleSort = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(option) {\n      var newTodoApi;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n                pageIndex: 1,\n                sort: option.title.sort,\n                sortType: option.title.sortType\n              });\n              setCurrentPage(1), setTodoApi(newTodoApi);\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function handleSort(_x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }(); // ------------ ON SEARCH -----------------------\n\n\n  var checkField = function checkField(valueSearch, dataIndex) {\n    var newList = _objectSpread({}, listFieldSearch);\n\n    Object.keys(newList).forEach(function (key) {\n      if (key != dataIndex) {\n        if (key != 'pageIndex') {\n          newList[key] = null;\n        }\n      } else {\n        newList[key] = valueSearch;\n      }\n    });\n    return newList;\n  };\n\n  var onSearch = function onSearch(valueSearch, dataIndex) {\n    var clearKey = dataIndex == 'FullNameUnicode' ? {\n      FullNameUnicode: valueSearch\n    } : dataIndex == 'Mobile' ? {\n      Mobile: valueSearch\n    } : {\n      Email: valueSearch\n    };\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), clearKey));\n  }; // HANDLE RESET\n\n\n  var resetListFieldSearch = function resetListFieldSearch() {\n    Object.keys(listFieldSearch).forEach(function (key) {\n      if (key != 'pageIndex') {\n        listFieldSearch[key] = null;\n      }\n    });\n  };\n\n  var handleReset = function handleReset() {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1), resetListFieldSearch();\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  var _getPagination = function getPagination(pageNumber) {\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      // ...listFieldSearch,\n      pageIndex: pageIndex\n    }));\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(function () {\n    getDataSource();\n  }, [todoApi]);\n  useEffect(function () {\n    getDataAll(listApi);\n    getDataExam(); // Get current date\n\n    var currentdate = new Date();\n    var datetime = currentdate.getDate() + '/' + (currentdate.getMonth() + 1) + '/' + currentdate.getFullYear() + ' ' + currentdate.getHours() + ':' + currentdate.getMinutes();\n    setCurrentDate(datetime);\n  }, []);\n  useEffect(function () {\n    if (userInformation) {\n      setUserID(userInformation.UserInformationID);\n    }\n  }, [userInformation]);\n\n  var moveToTest = function moveToTest(e, data) {\n    e.preventDefault();\n    var testDate = moment(data.AppointmentDate).format('DD/MM/YYYY') + ' ' + data.Time;\n    console.log('Test DAte: ', testDate);\n\n    if (currentDay < testDate) {\n      setisOpenNoti(true);\n    } else {\n      router.push('');\n    }\n  };\n\n  var expandedRowRender = function expandedRowRender(record) {\n    // return record.Note ? record.Note : \"Không có ghi chú\";\n    // return (\n    // \t<>\n    // \t\t<div className=\"box-note mt-2\">\n    // \t\t\t<h6 className=\"d-block text-underline\">Ghi chú:</h6>\n    // \t\t\t<p>{record.Note}</p>\n    // \t\t</div>\n    // \t\t<TestCustomerPoint ID={record.ID} />\n    // \t</>\n    // );\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 500\n        },\n        className: \"mt-3 mb-2\",\n        children: \"Ghi ch\\xFA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: record.Note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(ExamAppointmentPoint, {\n        infoID: record.ID,\n        userID: record.UserInformationID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var onUpdateData = function onUpdateData() {\n    setTodoApi(_objectSpread({}, todoApi));\n  };\n\n  var columns = [_objectSpread({\n    width: 200,\n    title: 'Học viên',\n    dataIndex: 'FullNameUnicode',\n    fixed: 'left',\n    render: function render(a) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-primary\",\n        children: a\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 19\n      }, _this);\n    }\n  }, FilterColumn('FullNameUnicode', onSearch, handleReset, 'text')), _objectSpread({\n    title: 'Email',\n    dataIndex: 'Email',\n    fixed: 'left',\n    render: function render(a) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-primary\",\n        children: a\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 19\n      }, _this);\n    }\n  }, FilterColumn('Email', onSearch, handleReset, 'text')), _objectSpread({\n    title: 'SDT',\n    dataIndex: 'Mobile',\n    fixed: 'left',\n    render: function render(a) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-primary\",\n        children: a\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 19\n      }, _this);\n    }\n  }, FilterColumn('Mobile', onSearch, handleReset, 'text')), {\n    width: 170,\n    title: 'Trung tâm',\n    dataIndex: 'BranchName',\n    render: function render(a) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: a\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 19\n      }, _this);\n    }\n  }, {\n    width: 170,\n    title: 'Đề test',\n    dataIndex: 'ExamTopicnName',\n    render: function render(text, data) {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: {\n          pathname: \"/question-bank/exam-list/exam-detail/\".concat(data.ExamTopicID)\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"\",\n          className: \"font-weight-link\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 5\n      }, _this);\n    }\n  }, {\n    title: 'Ngày hẹn',\n    dataIndex: 'AppointmentDate',\n    render: function render(date) {\n      return moment(date).format('DD/MM/YYYY');\n    }\n  }, {\n    width: 100,\n    title: 'Giờ hẹn',\n    dataIndex: 'Time',\n    align: 'center'\n  }, {\n    width: 170,\n    title: 'Giáo viên chấm bài',\n    dataIndex: 'TeacherName'\n  }, {\n    width: 190,\n    title: 'Tư vấn viên',\n    dataIndex: 'CounselorsName'\n  }, {\n    title: 'Trạng thái',\n    dataIndex: 'Status',\n    align: 'center',\n    filters: [{\n      text: 'Chưa test',\n      value: 0\n    }, {\n      text: 'Đang chấm bài',\n      value: 1\n    }, {\n      text: 'Chờ đăng kí khóa học',\n      value: 2\n    }, {\n      text: 'Đã đăng kí khóa học',\n      value: 3\n    }, {\n      text: 'Đã hủy hẹn test',\n      value: 4\n    }],\n    onFilter: function onFilter(value, record) {\n      return record.Status === value;\n    },\n    render: function render(status) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [status == 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag red\",\n          children: \"Ch\\u01B0a test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 23\n        }, _this), status == 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag blue\",\n          children: \"\\u0110ang ch\\u1EA5m b\\xE0i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 23\n        }, _this), status == 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag yellow\",\n          children: \"Ch\\u1EDD \\u0111\\u0103ng k\\xED kh\\xF3a h\\u1ECDc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 23\n        }, _this), status == 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag green\",\n          children: \"\\u0110\\xE3 \\u0111\\u0103ng k\\xED \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 23\n        }, _this), status == 4 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag gray\",\n          children: \"\\u0110\\xE3 h\\u1EE7y h\\u1EB9n test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 23\n        }, _this)]\n      }, void 0, true);\n    }\n  }, {\n    title: '',\n    render: function render(text, data, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: function onClick(e) {\n          return e.stopPropagation();\n        },\n        children: [/*#__PURE__*/_jsxDEV(TestCustomerForm, {\n          getIndex: function getIndex() {\n            return setIndexRow(index);\n          },\n          index: index,\n          rowData: data,\n          rowID: data.ID,\n          listData: listDataForm,\n          isLoading: isLoading,\n          _onSubmit: function _onSubmit(data) {\n            return _onSubmit2(data);\n          },\n          dataExam: dataExam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(TestAddExam, {\n          dataExam: dataExam,\n          dataRow: data,\n          onFetchData: function onFetchData() {\n            return setTodoApi(_objectSpread({}, todoApi));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 6\n        }, _this), data.Status == 0 && /*#__PURE__*/_jsxDEV(CancelTest, {\n          onUpdateData: onUpdateData,\n          dataRow: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 27\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 5\n      }, _this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NotiModal, {\n      isOpen: isOpenNoti,\n      isCancel: function isCancel() {\n        return setisOpenNoti(false);\n      },\n      isOk: function isOk() {\n        return setisOpenNoti(false);\n      },\n      content: \"Ch\\u01B0a \\u0111\\u1EBFn gi\\u1EDD l\\xE0m \\u0111\\u1EC1 test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ExpandTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: function getPagination(pageNumber) {\n        return _getPagination(pageNumber);\n      },\n      loading: isLoading,\n      addClass: \"basic-header\",\n      TitlePage: \"Danh s\\xE1ch KH\\xC1CH H\\u1EB8N TEST\" // TitleCard={\n      //   <StudentAdviseForm\n      //     listData={listDataForm}\n      //     isLoading={isLoading}\n      //     _onSubmit={(data: any) => _onSubmit(data)}\n      //   />\n      // }\n      ,\n      dataSource: dataSource,\n      columns: columns,\n      Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: [/*#__PURE__*/_jsxDEV(FilterBase, {\n          dataFilter: dataFilter,\n          handleFilter: function handleFilter(listFilter) {\n            return _handleFilter(listFilter);\n          },\n          handleReset: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(SortBox, {\n          handleSort: function handleSort(value) {\n            return _handleSort(value);\n          },\n          dataOption: dataOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 6\n      }, this),\n      expandable: {\n        expandedRowRender: expandedRowRender\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ServiceAppointmentTest, \"LsgORH8z6h9dvJDmRuH8fKAa/ZE=\", false, function () {\n  return [useWrap];\n});\n\n_c = ServiceAppointmentTest;\nServiceAppointmentTest.layout = LayoutBase;\n\nvar CancelTest = function CancelTest(props) {\n  _s2();\n\n  var onUpdateData = props.onUpdateData,\n      dataRow = props.dataRow;\n\n  var _useState14 = useState(false),\n      isModalVisible = _useState14[0],\n      setIsModalVisible = _useState14[1];\n\n  var _useWrap2 = useWrap(),\n      showNoti = _useWrap2.showNoti;\n\n  var _useState15 = useState(false),\n      loading = _useState15[0],\n      setLoading = _useState15[1];\n\n  var showModal = function showModal() {\n    setIsModalVisible(true);\n  };\n\n  var handleOk = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var dataSubmit, res;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              dataSubmit = {\n                ID: dataRow.ID,\n                Status: 4\n              };\n              setLoading(true);\n              _context7.prev = 2;\n              _context7.next = 5;\n              return testCustomerApi.update(dataSubmit);\n\n            case 5:\n              res = _context7.sent;\n\n              if (res.status == 200) {\n                showNoti('success', 'Hủy lịch hẹn test thành công!');\n                setIsModalVisible(false);\n                onUpdateData && onUpdateData();\n              }\n\n              _context7.next = 12;\n              break;\n\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](2);\n              showNoti('danger', _context7.t0.message);\n\n            case 12:\n              _context7.prev = 12;\n              setLoading(false);\n              return _context7.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[2, 9, 12, 15]]);\n    }));\n\n    return function handleOk() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var handleCancel = function handleCancel() {\n    setIsModalVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"H\\u1EE7y l\\u1ECBch h\\u1EB9n\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-icon delete\",\n        onClick: showModal,\n        children: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 6\n        }, _this2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 5\n      }, _this2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 4\n    }, _this2), /*#__PURE__*/_jsxDEV(Modal, {\n      title: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-icon delete\",\n        children: /*#__PURE__*/_jsxDEV(QuestionCircleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 7\n        }, _this2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 6\n      }, _this2),\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      okButtonProps: {\n        loading: loading\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 500\n        },\n        children: \"B\\u1EA1n mu\\u1ED1n h\\u1EE7y l\\u1ECBch h\\u1EB9n test c\\u1EE7a h\\u1ECDc vi\\xEAn n\\xE0y?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 5\n      }, _this2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 4\n    }, _this2)]\n  }, void 0, true);\n};\n\n_s2(CancelTest, \"SNUl+hdwaoFhTacRs/xhCA2mnO0=\", false, function () {\n  return [useWrap];\n});\n\n_c2 = CancelTest;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ServiceAppointmentTest\");\n$RefreshReg$(_c2, \"CancelTest\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Customer/Service/ServiceAppointmentTest.tsx"],"names":["moment","router","React","useEffect","useState","branchApi","studentApi","testCustomerApi","examTopicApi","packageExaminerApi","teacherApi","FilterBase","NotiModal","SortBox","ExpandTable","TestAddExam","TestCustomerForm","LayoutBase","FilterColumn","useWrap","ExamAppointmentPoint","CloseOutlined","QuestionCircleOutlined","Modal","Tooltip","Link","pageIndex","listFieldSearch","FullNameUnicode","listFieldFilter","BranchID","UserInformationID","Status","AppointmentDate","dataOption","dataSort","sort","sortType","text","listApi","api","name","ServiceAppointmentTest","props","Branch","Student","Teacher","listDataForm","setListDataForm","dataExam","setDataExam","currentDay","setCurrentDate","isOpenNoti","setisOpenNoti","userID","setUserID","dataSource","setDataSource","showNoti","pageSize","userInformation","listTodoApi","type","status","isLoading","setIsLoading","totalPage","setTotalPage","indexRow","setIndexRow","currentPage","setCurrentPage","todoApi","setTodoApi","title","col","optionList","value","dataFilter","setDataFilter","dataTeacher","setDataTeacher","getListTeacher","getAll","selectAll","res","newData","data","map","item","TeacherName","TeacherID","console","log","message","makeNewData","BranchName","ID","setDataFunc","counselorsName","CounselorsName","getDataTolist","Object","keys","forEach","key","getDataExam","getDataAll","arrApi","index","RoleID","StatusID","Enable","getDataSource","totalRow","every","afterPost","mes","_onSubmit","dataSubmit","update","add","handleFilter","listFilter","newListFilter","keyFilter","handleSort","option","newTodoApi","checkField","valueSearch","dataIndex","newList","onSearch","clearKey","Mobile","Email","resetListFieldSearch","handleReset","getPagination","pageNumber","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","moveToTest","e","preventDefault","testDate","format","Time","push","expandedRowRender","record","fontWeight","Note","onUpdateData","columns","width","fixed","render","a","pathname","ExamTopicID","date","align","filters","onFilter","stopPropagation","layout","CancelTest","dataRow","isModalVisible","setIsModalVisible","loading","setLoading","showModal","handleOk","handleCancel"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,eAAhC,EAAiDC,YAAjD,EAA+DC,kBAA/D,EAAmFC,UAAnF,QAAqG,WAArG;AACA,OAAOC,UAAP,MAAuB,6CAAvB;AACA,OAAOC,SAAP,MAAsB,2CAAtB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,kDAAxB;AACA,OAAOC,gBAAP,MAA6B,uDAA7B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,OAAOC,oBAAP,MAAiC,4CAAjC;AACA,SAASC,aAAT,EAAwBC,sBAAxB,QAAsD,mBAAtD;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,MAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,IAAIC,SAAS,GAAG,CAAhB;AAEA,IAAIC,eAAe,GAAG;AACrBD,EAAAA,SAAS,EAAE,CADU;AAErBE,EAAAA,eAAe,EAAE;AAFI,CAAtB;AAKA,IAAIC,eAAe,GAAG;AACrBH,EAAAA,SAAS,EAAE,CADU;AAErBI,EAAAA,QAAQ,EAAE,IAFW;AAEL;AAChBC,EAAAA,iBAAiB,EAAE,IAHE;AAIrBC,EAAAA,MAAM,EAAE,IAJa;AAKrBC,EAAAA,eAAe,EAAE;AALI,CAAtB;AAQA,IAAMC,UAAU,GAAG,CAClB;AACCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADX;AAKCC,EAAAA,IAAI,EAAE;AALP,CADkB,EAQlB;AACCH,EAAAA,QAAQ,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADX;AAKCC,EAAAA,IAAI,EAAE;AALP,CARkB,EAgBlB;AACCH,EAAAA,QAAQ,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADX;AAKCC,EAAAA,IAAI,EAAE;AALP,CAhBkB,EAuBlB;AACCH,EAAAA,QAAQ,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADX;AAKCC,EAAAA,IAAI,EAAE;AALP,CAvBkB,CAAnB,C,CAgCA;;AAkBA,IAAMC,OAAO,GAAG,CACf;AACCC,EAAAA,GAAG,EAAEnC,SADN;AAECiC,EAAAA,IAAI,EAAE,WAFP;AAGCG,EAAAA,IAAI,EAAE;AAHP,CADe,EAMf;AACCD,EAAAA,GAAG,EAAElC,UADN;AAECgC,EAAAA,IAAI,EAAE,UAFP;AAGCG,EAAAA,IAAI,EAAE;AAHP,CANe,EAWf;AACCD,EAAAA,GAAG,EAAE9B,UADN;AAEC4B,EAAAA,IAAI,EAAE,WAFP;AAGCG,EAAAA,IAAI,EAAE;AAHP,CAXe,CAAhB;AAkBA,eAAe,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA;;AAAA;;AAAA,kBACbvC,QAAQ,CAAe;AAC9DwC,IAAAA,MAAM,EAAE,EADsD;AAE9DC,IAAAA,OAAO,EAAE,EAFqD;AAG9DC,IAAAA,OAAO,EAAE;AAHqD,GAAf,CADK;AAAA,MAC9CC,YAD8C;AAAA,MAChCC,eADgC;;AAAA,mBAMrB5C,QAAQ,CAAe,EAAf,CANa;AAAA,MAM9C6C,QAN8C;AAAA,MAMpCC,WANoC;;AAAA,mBAOhB9C,QAAQ,CAAC,IAAD,CAPQ;AAAA,MAO9C+C,UAP8C;AAAA,MAOlCC,cAPkC;;AAAA,mBAQjBhD,QAAQ,CAAC,KAAD,CARS;AAAA,MAQ9CiD,UAR8C;AAAA,MAQlCC,aARkC;;AAAA,mBASzBlD,QAAQ,CAAC,IAAD,CATiB;AAAA,MAS9CmD,MAT8C;AAAA,MAStCC,SATsC,kBAWrD;;;AAXqD,mBAYjBpD,QAAQ,CAAkB,EAAlB,CAZS;AAAA,MAY9CqD,UAZ8C;AAAA,MAYlCC,aAZkC;;AAAA,iBAaLvC,OAAO,EAbF;AAAA,MAa7CwC,QAb6C,YAa7CA,QAb6C;AAAA,MAanCC,QAbmC,YAanCA,QAbmC;AAAA,MAazBC,eAbyB,YAazBA,eAbyB;;AAcrD,MAAMC,WAAW,GAAG;AACnBF,IAAAA,QAAQ,EAAEA,QADS;AAEnBlC,IAAAA,SAAS,EAAEA,SAFQ;AAGnBU,IAAAA,IAAI,EAAE,IAHa;AAInBC,IAAAA,QAAQ,EAAE,IAJS;AAKnBT,IAAAA,eAAe,EAAE,IALE;AAMnBE,IAAAA,QAAQ,EAAE,IANS;AAMH;AAChBC,IAAAA,iBAAiB,EAAE,IAPA;AAQnBC,IAAAA,MAAM,EAAE,IARW;AASnBC,IAAAA,eAAe,EAAE;AATE,GAApB;;AAdqD,mBAyBnB7B,QAAQ,CAAC;AAC1C2D,IAAAA,IAAI,EAAE,EADoC;AAE1CC,IAAAA,MAAM,EAAE;AAFkC,GAAD,CAzBW;AAAA,MAyB9CC,SAzB8C;AAAA,MAyBnCC,YAzBmC;;AAAA,mBA6BnB9D,QAAQ,CAAC,IAAD,CA7BW;AAAA,MA6B9C+D,SA7B8C;AAAA,MA6BnCC,YA7BmC;;AAAA,mBA8BrBhE,QAAQ,CAAC,IAAD,CA9Ba;AAAA,MA8B9CiE,QA9B8C;AAAA,MA8BpCC,WA9BoC;;AAAA,oBA+BflE,QAAQ,CAAC,CAAD,CA/BO;AAAA,MA+B9CmE,WA/B8C;AAAA,MA+BjCC,cA/BiC;;AAAA,oBAgCvBpE,QAAQ,CAAC0D,WAAD,CAhCe;AAAA,MAgC9CW,OAhC8C;AAAA,MAgCrCC,UAhCqC,mBAkCrD;;;AAlCqD,oBAmCjBtE,QAAQ,CAAC,CAC5C;AACCqC,IAAAA,IAAI,EAAE,UADP;AAECkC,IAAAA,KAAK,EAAE,WAFR;AAGCC,IAAAA,GAAG,EAAE,kBAHN;AAICb,IAAAA,IAAI,EAAE,QAJP;AAKCc,IAAAA,UAAU,EAAE,IALb;AAKmB;AAClBC,IAAAA,KAAK,EAAE;AANR,GAD4C,EAU5C;AACCrC,IAAAA,IAAI,EAAE,QADP;AAECkC,IAAAA,KAAK,EAAE,YAFR;AAGCC,IAAAA,GAAG,EAAE,kBAHN;AAICb,IAAAA,IAAI,EAAE,QAJP;AAKCc,IAAAA,UAAU,EAAE,CACX;AACCF,MAAAA,KAAK,EAAE,WADR;AAECG,MAAAA,KAAK,EAAE;AAFR,KADW,EAKX;AACCH,MAAAA,KAAK,EAAE,oBADR;AAECG,MAAAA,KAAK,EAAE;AAFR,KALW,EASX;AACCH,MAAAA,KAAK,EAAE,uBADR;AAECG,MAAAA,KAAK,EAAE;AAFR,KATW,EAaX;AACCH,MAAAA,KAAK,EAAE,qBADR;AAECG,MAAAA,KAAK,EAAE;AAFR,KAbW,EAiBX;AACCH,MAAAA,KAAK,EAAE,iBADR;AAECG,MAAAA,KAAK,EAAE;AAFR,KAjBW,CALb;AA2BCA,IAAAA,KAAK,EAAE;AA3BR,GAV4C,EAuC5C;AACCrC,IAAAA,IAAI,EAAE,iBADP;AAECkC,IAAAA,KAAK,EAAE,eAFR;AAGCC,IAAAA,GAAG,EAAE,kBAHN;AAICb,IAAAA,IAAI,EAAE,aAJP;AAKCe,IAAAA,KAAK,EAAE;AALR,GAvC4C,EA8C5C;AACCrC,IAAAA,IAAI,EAAE,YADP;AAECkC,IAAAA,KAAK,EAAE,UAFR;AAGCC,IAAAA,GAAG,EAAE,QAHN;AAICb,IAAAA,IAAI,EAAE,YAJP;AAKCe,IAAAA,KAAK,EAAE;AALR,GA9C4C,CAAD,CAnCS;AAAA,MAmC9CC,UAnC8C;AAAA,MAmClCC,aAnCkC;;AAAA,oBA0Ff5E,QAAQ,CAAC,EAAD,CA1FO;AAAA,MA0F9C6E,WA1F8C;AAAA,MA0FjCC,cA1FiC,mBA4FrD;;;AACA,MAAMC,cAAc;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGL1E,kBAAkB,CAAC2E,MAAnB,CAA0B;AACzCC,gBAAAA,SAAS,EAAE;AAD8B,eAA1B,CAHK;;AAAA;AAGjBC,cAAAA,GAHiB;;AAOrB,kBAAIA,GAAG,CAACtB,MAAJ,KAAe,GAAnB,EAAwB;AACnBuB,gBAAAA,OADmB,GACTD,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,GAAd,CAAkB,UAACC,IAAD;AAAA,yBAAW;AAC1Cf,oBAAAA,KAAK,EAAEe,IAAI,CAACC,WAD8B;AAE1Cb,oBAAAA,KAAK,EAAEY,IAAI,CAACE;AAF8B,mBAAX;AAAA,iBAAlB,CADS;AAKvBV,gBAAAA,cAAc,CAACK,OAAD,CAAd;AACA;;AAboB;AAAA;;AAAA;AAAA;AAAA;AAerBM,cAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC,YAAMC,OAA9C;;AAfqB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdZ,cAAc;AAAA;AAAA;AAAA,KAApB;;AAqBA,MAAMa,WAAW,GAAG,SAAdA,WAAc,CAACR,IAAD,EAAO/C,IAAP,EAAgB;AACnC,QAAI8C,OAAO,GAAG,IAAd;;AACA,YAAQ9C,IAAR;AACC,WAAK,QAAL;AACC8C,QAAAA,OAAO,GAAGC,IAAI,CAACC,GAAL,CAAS,UAACC,IAAD;AAAA,iBAAW;AAC7Bf,YAAAA,KAAK,EAAEe,IAAI,CAACO,UADiB;AAE7BnB,YAAAA,KAAK,EAAEY,IAAI,CAACQ;AAFiB,WAAX;AAAA,SAAT,CAAV;AAIAC,QAAAA,WAAW,CAAC,UAAD,EAAaZ,OAAb,CAAX;AACA;;AAED,WAAK,SAAL;AACCA,QAAAA,OAAO,GAAGC,IAAI,CAACC,GAAL,CAAS,UAACC,IAAD;AAAA,iBAAW;AAC7Bf,YAAAA,KAAK,EAAEe,IAAI,CAAC9D,eADiB;AAE7BkD,YAAAA,KAAK,EAAEY,IAAI,CAAC3D,iBAFiB;AAG7BqE,YAAAA,cAAc,EAAEV,IAAI,CAACW,cAAL,IAAuB,IAAvB,GAA8B,EAA9B,GAAmCX,IAAI,CAACW;AAH3B,WAAX;AAAA,SAAT,CAAV;AAMA;;AACD,WAAK,SAAL;AACCd,QAAAA,OAAO,GAAGC,IAAI,CAACC,GAAL,CAAS,UAACC,IAAD;AAAA,iBAAW;AAC7Bf,YAAAA,KAAK,EAAEe,IAAI,CAAC9D,eADiB;AAE7BkD,YAAAA,KAAK,EAAEY,IAAI,CAAC3D;AAFiB,WAAX;AAAA,SAAT,CAAV;AAKA;;AACD;AACC;AAzBF;;AA4BA,WAAOwD,OAAP;AACA,GA/BD;;AAiCA,MAAMe,aAAa,GAAG,SAAhBA,aAAgB,CAACd,IAAD,EAAY/C,IAAZ,EAA0B;AAC/C,QAAI8C,OAAO,GAAGS,WAAW,CAACR,IAAD,EAAO/C,IAAP,CAAzB;AAEA8D,IAAAA,MAAM,CAACC,IAAP,CAAYzD,YAAZ,EAA0B0D,OAA1B,CAAkC,UAAUC,GAAV,EAAe;AAChD,UAAIA,GAAG,IAAIjE,IAAX,EAAiB;AAChBM,QAAAA,YAAY,CAAC2D,GAAD,CAAZ,GAAoBnB,OAApB;AACA;AACD,KAJD;AAKAvC,IAAAA,eAAe,mBAAMD,YAAN,EAAf;AACA,GATD,CAnJqD,CA8JrD;;;AACA,MAAM4D,WAAW;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEFnG,YAAY,CAAC4E,MAAb,CAAoB;AACnCC,gBAAAA,SAAS,EAAE,IADwB;AAEnCtB,gBAAAA,IAAI,EAAE;AAF6B,eAApB,CAFE;;AAAA;AAEduB,cAAAA,GAFc;;AAMlB,kBAAIA,GAAG,CAACtB,MAAJ,KAAe,GAAnB,EAAwB;AACvBd,gBAAAA,WAAW,CAACoC,GAAG,CAACE,IAAJ,CAASA,IAAV,CAAX;AACA;;AARiB;AAAA;;AAAA;AAAA;AAAA;AAUlBK,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,aAAMC,OAAlC;;AAVkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXY,WAAW;AAAA;AAAA;AAAA,KAAjB,CA/JqD,CA6KrD;;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAY;AAC9BA,IAAAA,MAAM,CAACJ,OAAP,CAAe,UAACf,IAAD,EAAOoB,KAAP,EAAiB;AAC/B,+DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACIxB,gBAAAA,GADJ,GACU,IADV;AAAA;;AAAA,sBAGKI,IAAI,CAACjD,IAAL,IAAa,YAHlB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIciD,IAAI,CAAClD,GAAL,CAAS4C,MAAT,CAAgB;AAC3B1D,kBAAAA,SAAS,EAAE,CADgB;AAE3BkC,kBAAAA,QAAQ,EAAE,KAFiB;AAG3BmD,kBAAAA,MAAM,EAAE,CAHmB;AAI3BC,kBAAAA,QAAQ,EAAE,CAJiB;AAK3BC,kBAAAA,MAAM,EAAE;AALmB,iBAAhB,CAJd;;AAAA;AAIE3B,gBAAAA,GAJF;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAYcI,IAAI,CAAClD,GAAL,CAAS4C,MAAT,CAAgB;AAC3B1D,kBAAAA,SAAS,EAAE,CADgB;AAE3BkC,kBAAAA,QAAQ,EAAE,KAFiB;AAG3BqD,kBAAAA,MAAM,EAAE;AAHmB,iBAAhB,CAZd;;AAAA;AAYE3B,gBAAAA,GAZF;;AAAA;AAmBCA,gBAAAA,GAAG,CAACtB,MAAJ,IAAc,GAAd,IAAqBsC,aAAa,CAAChB,GAAG,CAACE,IAAJ,CAASA,IAAV,EAAgBE,IAAI,CAACjD,IAArB,CAAlC;AAEA6C,gBAAAA,GAAG,CAACtB,MAAJ,IAAc,GAAd,IAAqB6B,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACpD,IAAL,GAAY,mBAAxB,CAArB;AArBD;AAAA;;AAAA;AAAA;AAAA;AAuBC;AACAuD,gBAAAA,OAAO,CAACC,GAAR;;AAxBD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;AA4BA,KA7BD;AA8BA,GA/BD,CA9KqD,CA+MrD;;;AACA,MAAMoB,aAAa;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBhD,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,SADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AADqB;AAAA;AAAA,qBAOJzD,eAAe,CAAC6E,MAAhB,CAAuBX,OAAvB,CAPI;;AAAA;AAOhBa,cAAAA,GAPgB;;AAQpB,kBAAIA,GAAG,CAACtB,MAAJ,IAAc,GAAlB,EAAuB;AACtBN,gBAAAA,aAAa,CAAC4B,GAAG,CAACE,IAAJ,CAASA,IAAV,CAAb;AACApB,gBAAAA,YAAY,CAACkB,GAAG,CAACE,IAAJ,CAAS2B,QAAV,CAAZ,CAFsB,CAGtB;AACA;AACA;;AACD7B,cAAAA,GAAG,CAACtB,MAAJ,IAAc,GAAd,IAAqBN,aAAa,CAAC,EAAD,CAAlC;AAdoB;AAAA;;AAAA;AAAA;AAAA;AAgBpB,2BAAMM,MAAN,IAAgB,GAAhB,GAAsBL,QAAQ,CAAC,QAAD,EAAW,iCAAX,CAA9B,GAA8EA,QAAQ,CAAC,QAAD,EAAW,aAAMoC,OAAjB,CAAtF;;AAhBoB;AAAA;AAkBpB7B,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,SADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AAlBoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbkD,aAAa;AAAA;AAAA;AAAA,KAAnB,CAhNqD,CAyOrD;;;AACA,MAAMf,WAAW,GAAG,SAAdA,WAAc,CAAC1D,IAAD,EAAO+C,IAAP,EAAgB;AACnCT,IAAAA,UAAU,CAACqC,KAAX,CAAiB,UAAC1B,IAAD,EAAOoB,KAAP,EAAiB;AACjC,UAAIpB,IAAI,CAACjD,IAAL,IAAaA,IAAjB,EAAuB;AACtBiD,QAAAA,IAAI,CAACb,UAAL,GAAkBW,IAAlB;AACA,eAAO,KAAP;AACA;;AACD,aAAO,IAAP;AACA,KAND;AAOAR,IAAAA,aAAa,oBAAKD,UAAL,EAAb;AACA,GATD,CA1OqD,CAqPrD;;;AACA,MAAMsC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAS;AAC1B;AACA5C,IAAAA,UAAU,iCACNZ,WADM;AAETpC,MAAAA,SAAS,EAAE;AAFF,OAAV;AAIA8C,IAAAA,cAAc,CAAC,CAAD,CAAd;AACA,GAPD,CAtPqD,CA+PrD;;;AACA,MAAM+C,UAAS;AAAA,yEAAG,kBAAOC,UAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjB;AACA;AACAtD,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,UADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AAKIsB,cAAAA,GARa,GAQP,IARO;AAAA;;AAAA,mBAWZkC,UAAU,CAACtB,EAXC;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAYH3F,eAAe,CAACkH,MAAhB,CAAuBD,UAAvB,CAZG;;AAAA;AAYflC,cAAAA,GAZe;;AAcf,kBAAIA,GAAG,CAACtB,MAAJ,IAAc,GAAlB,EAAuB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAU,gBAAAA,UAAU,mBAAMD,OAAN,EAAV;AACAd,gBAAAA,QAAQ,CAAC,SAAD,EAAY2B,GAAG,CAACE,IAAJ,CAASO,OAArB,CAAR;AACA;;AAzBc;AAAA;;AAAA;AAAA;AAAA,qBA2BHxF,eAAe,CAACmH,GAAhB,CAAoBF,UAApB,CA3BG;;AAAA;AA2BflC,cAAAA,GA3Be;AA4Bf,uBAAAA,GAAG,UAAH,oCAAKtB,MAAL,KAAe,GAAf,IAAsBqD,SAAS,CAAC/B,GAAG,CAACE,IAAJ,CAASO,OAAV,CAA/B;;AA5Be;AAAA;AAAA;;AAAA;AAAA;AAAA;AA+BhBF,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAnC,cAAAA,QAAQ,CAAC,QAAD,EAAW,aAAMoC,OAAjB,CAAR;;AAhCgB;AAAA;AAkChB7B,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,UADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AAlCgB;;AAAA;AAAA,gDAwCVsB,GAxCU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATiC,SAAS;AAAA;AAAA;AAAA,KAAf,CAhQqD,CA2SrD;;;AACA,MAAMI,aAAY,GAAG,SAAfA,YAAe,CAACC,UAAD,EAAgB;AACpC,QAAIC,aAAa,qBAAQhG,eAAR,CAAjB;;AACA+F,IAAAA,UAAU,CAACnB,OAAX,CAAmB,UAACf,IAAD,EAAOoB,KAAP,EAAiB;AACnC,UAAIJ,GAAG,GAAGhB,IAAI,CAACjD,IAAf;AACA8D,MAAAA,MAAM,CAACC,IAAP,CAAYqB,aAAZ,EAA2BpB,OAA3B,CAAmC,UAACqB,SAAD,EAAe;AACjD,YAAIA,SAAS,IAAIpB,GAAjB,EAAsB;AACrBmB,UAAAA,aAAa,CAACnB,GAAD,CAAb,GAAqBhB,IAAI,CAACZ,KAA1B;AACA;AACD,OAJD;AAKA,KAPD;AAQAJ,IAAAA,UAAU,+CAAMZ,WAAN,GAAsB+D,aAAtB;AAAqCnG,MAAAA,SAAS,EAAE;AAAhD,OAAV;AACA,GAXD,CA5SqD,CAyTrD;;;AACA,MAAMqG,WAAU;AAAA,yEAAG,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,cAAAA,UADc,mCAEdnE,WAFc;AAGjBpC,gBAAAA,SAAS,EAAE,CAHM;AAIjBU,gBAAAA,IAAI,EAAE4F,MAAM,CAACrD,KAAP,CAAavC,IAJF;AAKjBC,gBAAAA,QAAQ,EAAE2F,MAAM,CAACrD,KAAP,CAAatC;AALN;AAOlBmC,cAAAA,cAAc,CAAC,CAAD,CAAd,EAAmBE,UAAU,CAACuD,UAAD,CAA7B;;AAPkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVF,UAAU;AAAA;AAAA;AAAA,KAAhB,CA1TqD,CAoUrD;;;AAEA,MAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,WAAD,EAAcC,SAAd,EAA4B;AAC9C,QAAIC,OAAO,qBAAQ1G,eAAR,CAAX;;AACA4E,IAAAA,MAAM,CAACC,IAAP,CAAY6B,OAAZ,EAAqB5B,OAArB,CAA6B,UAAUC,GAAV,EAAe;AAC3C,UAAIA,GAAG,IAAI0B,SAAX,EAAsB;AACrB,YAAI1B,GAAG,IAAI,WAAX,EAAwB;AACvB2B,UAAAA,OAAO,CAAC3B,GAAD,CAAP,GAAe,IAAf;AACA;AACD,OAJD,MAIO;AACN2B,QAAAA,OAAO,CAAC3B,GAAD,CAAP,GAAeyB,WAAf;AACA;AACD,KARD;AAUA,WAAOE,OAAP;AACA,GAbD;;AAeA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACH,WAAD,EAAcC,SAAd,EAA4B;AAC5C,QAAIG,QAAQ,GACXH,SAAS,IAAI,iBAAb,GACG;AAAExG,MAAAA,eAAe,EAAEuG;AAAnB,KADH,GAEGC,SAAS,IAAI,QAAb,GACA;AAAEI,MAAAA,MAAM,EAAEL;AAAV,KADA,GAEA;AAAEM,MAAAA,KAAK,EAAEN;AAAT,KALJ;AAOAzD,IAAAA,UAAU,iCACND,OADM,GAEN8D,QAFM,EAAV;AAIA,GAZD,CArVqD,CAmWrD;;;AACA,MAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAClCnC,IAAAA,MAAM,CAACC,IAAP,CAAY7E,eAAZ,EAA6B8E,OAA7B,CAAqC,UAAUC,GAAV,EAAe;AACnD,UAAIA,GAAG,IAAI,WAAX,EAAwB;AACvB/E,QAAAA,eAAe,CAAC+E,GAAD,CAAf,GAAuB,IAAvB;AACA;AACD,KAJD;AAKA,GAND;;AAQA,MAAMiC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACzBjE,IAAAA,UAAU,iCACNZ,WADM;AAETpC,MAAAA,SAAS,EAAE;AAFF,OAAV;AAIA8C,IAAAA,cAAc,CAAC,CAAD,CAAd,EAAmBkE,oBAAoB,EAAvC;AACA,GAND,CA5WqD,CAoXrD;;;AACA,MAAME,cAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAwB;AAC7CnH,IAAAA,SAAS,GAAGmH,UAAZ;AACArE,IAAAA,cAAc,CAACqE,UAAD,CAAd;AAEAnE,IAAAA,UAAU,iCACND,OADM;AAET;AACA/C,MAAAA,SAAS,EAAEA;AAHF,OAAV;AAKA,GATD,CArXqD,CAgYrD;;;AACAvB,EAAAA,SAAS,CAAC,YAAM;AACf+G,IAAAA,aAAa;AACb,GAFQ,EAEN,CAACzC,OAAD,CAFM,CAAT;AAIAtE,EAAAA,SAAS,CAAC,YAAM;AACfyG,IAAAA,UAAU,CAACrE,OAAD,CAAV;AACAoE,IAAAA,WAAW,GAFI,CAIf;;AACA,QAAImC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACA,QAAIC,QAAQ,GACXF,WAAW,CAACG,OAAZ,KACA,GADA,IAECH,WAAW,CAACI,QAAZ,KAAyB,CAF1B,IAGA,GAHA,GAIAJ,WAAW,CAACK,WAAZ,EAJA,GAKA,GALA,GAMAL,WAAW,CAACM,QAAZ,EANA,GAOA,GAPA,GAQAN,WAAW,CAACO,UAAZ,EATD;AAWAjG,IAAAA,cAAc,CAAC4F,QAAD,CAAd;AACA,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA7I,EAAAA,SAAS,CAAC,YAAM;AACf,QAAI0D,eAAJ,EAAqB;AACpBL,MAAAA,SAAS,CAACK,eAAe,CAAC9B,iBAAjB,CAAT;AACA;AACD,GAJQ,EAIN,CAAC8B,eAAD,CAJM,CAAT;;AAMA,MAAMyF,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAI/D,IAAJ,EAAa;AAC/B+D,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,QAAQ,GAAGzJ,MAAM,CAACwF,IAAI,CAACvD,eAAN,CAAN,CAA6ByH,MAA7B,CAAoC,YAApC,IAAoD,GAApD,GAA0DlE,IAAI,CAACmE,IAA9E;AACA9D,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B2D,QAA3B;;AACA,QAAItG,UAAU,GAAGsG,QAAjB,EAA2B;AAC1BnG,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA,KAFD,MAEO;AACNrD,MAAAA,MAAM,CAAC2J,IAAP,CAAY,EAAZ;AACA;AACD,GAVD;;AAYA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBACC;AAAA,8BACC;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAV;AAA+B,QAAA,SAAS,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,eAIC;AAAA,kBAAID,MAAM,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,eAJD,eAKC,QAAC,oBAAD;AAAsB,QAAA,MAAM,EAAEF,MAAM,CAAC5D,EAArC;AAAyC,QAAA,MAAM,EAAE4D,MAAM,CAAC/H;AAAxD;AAAA;AAAA;AAAA;AAAA,eALD;AAAA,oBADD;AASA,GApBD;;AAsBA,MAAMkI,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC1BvF,IAAAA,UAAU,mBAAMD,OAAN,EAAV;AACA,GAFD;;AAIA,MAAMyF,OAAO,GAAG;AAEdC,IAAAA,KAAK,EAAE,GAFO;AAGdxF,IAAAA,KAAK,EAAE,UAHO;AAIdyD,IAAAA,SAAS,EAAE,iBAJG;AAKdgC,IAAAA,KAAK,EAAE,MALO;AAMdC,IAAAA,MAAM,EAAE,gBAACC,CAAD;AAAA,0BAAO;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA,kBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,eAAP;AAAA;AANM,KAOXpJ,YAAY,CAAC,iBAAD,EAAoBoH,QAApB,EAA8BK,WAA9B,EAA2C,MAA3C,CAPD;AAUdhE,IAAAA,KAAK,EAAE,OAVO;AAWdyD,IAAAA,SAAS,EAAE,OAXG;AAYdgC,IAAAA,KAAK,EAAE,MAZO;AAadC,IAAAA,MAAM,EAAE,gBAACC,CAAD;AAAA,0BAAO;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA,kBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,eAAP;AAAA;AAbM,KAcXpJ,YAAY,CAAC,OAAD,EAAUoH,QAAV,EAAoBK,WAApB,EAAiC,MAAjC,CAdD;AAiBdhE,IAAAA,KAAK,EAAE,KAjBO;AAkBdyD,IAAAA,SAAS,EAAE,QAlBG;AAmBdgC,IAAAA,KAAK,EAAE,MAnBO;AAoBdC,IAAAA,MAAM,EAAE,gBAACC,CAAD;AAAA,0BAAO;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA,kBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,eAAP;AAAA;AApBM,KAqBXpJ,YAAY,CAAC,QAAD,EAAWoH,QAAX,EAAqBK,WAArB,EAAkC,MAAlC,CArBD,GAuBf;AACCwB,IAAAA,KAAK,EAAE,GADR;AAECxF,IAAAA,KAAK,EAAE,WAFR;AAGCyD,IAAAA,SAAS,EAAE,YAHZ;AAKCiC,IAAAA,MAAM,EAAE,gBAACC,CAAD;AAAA,0BAAO;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA,kBAAkCA;AAAlC;AAAA;AAAA;AAAA;AAAA,eAAP;AAAA;AALT,GAvBe,EA8Bf;AACCH,IAAAA,KAAK,EAAE,GADR;AAECxF,IAAAA,KAAK,EAAE,SAFR;AAGCyD,IAAAA,SAAS,EAAE,gBAHZ;AAICiC,IAAAA,MAAM,EAAE,gBAAC/H,IAAD,EAAOkD,IAAP;AAAA,0BACP,QAAC,IAAD;AACC,QAAA,IAAI,EAAE;AACL+E,UAAAA,QAAQ,iDAA0C/E,IAAI,CAACgF,WAA/C;AADH,SADP;AAAA,+BAKC;AAAG,UAAA,IAAI,EAAC,EAAR;AAAW,UAAA,SAAS,EAAC,kBAArB;AAAA,oBACElI;AADF;AAAA;AAAA;AAAA;AAAA;AALD;AAAA;AAAA;AAAA;AAAA,eADO;AAAA;AAJT,GA9Be,EA8Cf;AACCqC,IAAAA,KAAK,EAAE,UADR;AAECyD,IAAAA,SAAS,EAAE,iBAFZ;AAGCiC,IAAAA,MAAM,EAAE,gBAACI,IAAD;AAAA,aAAezK,MAAM,CAACyK,IAAD,CAAN,CAAaf,MAAb,CAAoB,YAApB,CAAf;AAAA;AAHT,GA9Ce,EAmDf;AACCS,IAAAA,KAAK,EAAE,GADR;AAECxF,IAAAA,KAAK,EAAE,SAFR;AAGCyD,IAAAA,SAAS,EAAE,MAHZ;AAICsC,IAAAA,KAAK,EAAE;AAJR,GAnDe,EAyDf;AACCP,IAAAA,KAAK,EAAE,GADR;AAECxF,IAAAA,KAAK,EAAE,oBAFR;AAGCyD,IAAAA,SAAS,EAAE;AAHZ,GAzDe,EA8Df;AACC+B,IAAAA,KAAK,EAAE,GADR;AAECxF,IAAAA,KAAK,EAAE,aAFR;AAGCyD,IAAAA,SAAS,EAAE;AAHZ,GA9De,EAoEf;AACCzD,IAAAA,KAAK,EAAE,YADR;AAECyD,IAAAA,SAAS,EAAE,QAFZ;AAGCsC,IAAAA,KAAK,EAAE,QAHR;AAKCC,IAAAA,OAAO,EAAE,CACR;AACCrI,MAAAA,IAAI,EAAE,WADP;AAECwC,MAAAA,KAAK,EAAE;AAFR,KADQ,EAKR;AACCxC,MAAAA,IAAI,EAAE,eADP;AAECwC,MAAAA,KAAK,EAAE;AAFR,KALQ,EASR;AACCxC,MAAAA,IAAI,EAAE,sBADP;AAECwC,MAAAA,KAAK,EAAE;AAFR,KATQ,EAaR;AACCxC,MAAAA,IAAI,EAAE,qBADP;AAECwC,MAAAA,KAAK,EAAE;AAFR,KAbQ,EAiBR;AACCxC,MAAAA,IAAI,EAAE,iBADP;AAECwC,MAAAA,KAAK,EAAE;AAFR,KAjBQ,CALV;AA2BC8F,IAAAA,QAAQ,EAAE,kBAAC9F,KAAD,EAAQgF,MAAR;AAAA,aAAmBA,MAAM,CAAC9H,MAAP,KAAkB8C,KAArC;AAAA,KA3BX;AA4BCuF,IAAAA,MAAM,EAAE,gBAACrG,MAAD,EAAY;AACnB,0BACC;AAAA,mBACEA,MAAM,IAAI,CAAV,iBAAe;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADjB,EAEEA,MAAM,IAAI,CAAV,iBAAe;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFjB,EAGEA,MAAM,IAAI,CAAV,iBAAe;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHjB,EAIEA,MAAM,IAAI,CAAV,iBAAe;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJjB,EAKEA,MAAM,IAAI,CAAV,iBAAe;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALjB;AAAA,sBADD;AAgBA;AA7CF,GApEe,EAmHf;AACCW,IAAAA,KAAK,EAAE,EADR;AAEC0F,IAAAA,MAAM,EAAE,gBAAC/H,IAAD,EAAOkD,IAAP,EAAasB,KAAb;AAAA,0BACP;AAAK,QAAA,OAAO,EAAE,iBAACyC,CAAD;AAAA,iBAAOA,CAAC,CAACsB,eAAF,EAAP;AAAA,SAAd;AAAA,gCACC,QAAC,gBAAD;AACC,UAAA,QAAQ,EAAE;AAAA,mBAAMvG,WAAW,CAACwC,KAAD,CAAjB;AAAA,WADX;AAEC,UAAA,KAAK,EAAEA,KAFR;AAGC,UAAA,OAAO,EAAEtB,IAHV;AAIC,UAAA,KAAK,EAAEA,IAAI,CAACU,EAJb;AAKC,UAAA,QAAQ,EAAEnD,YALX;AAMC,UAAA,SAAS,EAAEkB,SANZ;AAOC,UAAA,SAAS,EAAE,mBAACuB,IAAD;AAAA,mBAAe+B,UAAS,CAAC/B,IAAD,CAAxB;AAAA,WAPZ;AAQC,UAAA,QAAQ,EAAEvC;AARX;AAAA;AAAA;AAAA;AAAA,iBADD,eAWC,QAAC,WAAD;AAAa,UAAA,QAAQ,EAAEA,QAAvB;AAAiC,UAAA,OAAO,EAAEuC,IAA1C;AAAgD,UAAA,WAAW,EAAE;AAAA,mBAAMd,UAAU,mBAAMD,OAAN,EAAhB;AAAA;AAA7D;AAAA;AAAA;AAAA;AAAA,iBAXD,EAYEe,IAAI,CAACxD,MAAL,IAAe,CAAf,iBAAoB,QAAC,UAAD;AAAY,UAAA,YAAY,EAAEiI,YAA1B;AAAwC,UAAA,OAAO,EAAEzE;AAAjD;AAAA;AAAA;AAAA;AAAA,iBAZtB;AAAA;AAAA;AAAA;AAAA;AAAA,eADO;AAAA;AAFT,GAnHe,CAAhB;AAwIA,sBACC;AAAA,4BACC,QAAC,SAAD;AACC,MAAA,MAAM,EAAEnC,UADT;AAEC,MAAA,QAAQ,EAAE;AAAA,eAAMC,aAAa,CAAC,KAAD,CAAnB;AAAA,OAFX;AAGC,MAAA,IAAI,EAAE;AAAA,eAAMA,aAAa,CAAC,KAAD,CAAnB;AAAA,OAHP;AAIC,MAAA,OAAO,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,YADD,eAOC,QAAC,WAAD;AACC,MAAA,WAAW,EAAEiB,WADd;AAEC,MAAA,SAAS,EAAEJ,SAAS,IAAIA,SAFzB;AAGC,MAAA,aAAa,EAAE,uBAAC0E,UAAD;AAAA,eAAwBD,cAAa,CAACC,UAAD,CAArC;AAAA,OAHhB;AAIC,MAAA,OAAO,EAAE5E,SAJV;AAKC,MAAA,QAAQ,EAAC,cALV;AAMC,MAAA,SAAS,EAAC,qCANX,CAOC;AACA;AACA;AACA;AACA;AACA;AACA;AAbD;AAcC,MAAA,UAAU,EAAER,UAdb;AAeC,MAAA,OAAO,EAAEyG,OAfV;AAgBC,MAAA,KAAK,eACJ;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACC,QAAC,UAAD;AACC,UAAA,UAAU,EAAEnF,UADb;AAEC,UAAA,YAAY,EAAE,sBAAC6C,UAAD;AAAA,mBAAqBD,aAAY,CAACC,UAAD,CAAjC;AAAA,WAFf;AAGC,UAAA,WAAW,EAAEe;AAHd;AAAA;AAAA;AAAA;AAAA,gBADD,eAMC,QAAC,OAAD;AAAS,UAAA,UAAU,EAAE,oBAAC7D,KAAD;AAAA,mBAAWiD,WAAU,CAACjD,KAAD,CAArB;AAAA,WAArB;AAAmD,UAAA,UAAU,EAAE5C;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAND;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AA0BC,MAAA,UAAU,EAAE;AAAE2H,QAAAA,iBAAiB,EAAjBA;AAAF;AA1Bb;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA,kBADD;AAsCA;;GAnnBuBnH,sB;UAayBvB,O;;;KAbzBuB,sB;AAonBxBA,sBAAsB,CAACoI,MAAvB,GAAgC7J,UAAhC;;AAEA,IAAM8J,UAAU,GAAG,SAAbA,UAAa,CAACpI,KAAD,EAAW;AAAA;;AAAA,MACrBsH,YADqB,GACKtH,KADL,CACrBsH,YADqB;AAAA,MACPe,OADO,GACKrI,KADL,CACPqI,OADO;;AAAA,oBAEe5K,QAAQ,CAAC,KAAD,CAFvB;AAAA,MAEtB6K,cAFsB;AAAA,MAENC,iBAFM;;AAAA,kBAGR/J,OAAO,EAHC;AAAA,MAGrBwC,QAHqB,aAGrBA,QAHqB;;AAAA,oBAICvD,QAAQ,CAAC,KAAD,CAJT;AAAA,MAItB+K,OAJsB;AAAA,MAIbC,UAJa;;AAM7B,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACvBH,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,GAFD;;AAIA,MAAMI,QAAQ;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ9D,cAAAA,UADY,GACC;AAChBtB,gBAAAA,EAAE,EAAE8E,OAAO,CAAC9E,EADI;AAEhBlE,gBAAAA,MAAM,EAAE;AAFQ,eADD;AAKhBoJ,cAAAA,UAAU,CAAC,IAAD,CAAV;AALgB;AAAA;AAAA,qBAQC7K,eAAe,CAACkH,MAAhB,CAAuBD,UAAvB,CARD;;AAAA;AAQXlC,cAAAA,GARW;;AASf,kBAAIA,GAAG,CAACtB,MAAJ,IAAc,GAAlB,EAAuB;AACtBL,gBAAAA,QAAQ,CAAC,SAAD,EAAY,+BAAZ,CAAR;AACAuH,gBAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAjB,gBAAAA,YAAY,IAAIA,YAAY,EAA5B;AACA;;AAbc;AAAA;;AAAA;AAAA;AAAA;AAeftG,cAAAA,QAAQ,CAAC,QAAD,EAAW,aAAMoC,OAAjB,CAAR;;AAfe;AAAA;AAiBfqF,cAAAA,UAAU,CAAC,KAAD,CAAV;AAjBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARE,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAqBA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC1BL,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA,GAFD;;AAIA,sBACC;AAAA,4BACC,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,6BAAf;AAAA,6BACC;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAEG,SAAjD;AAAA,+BACC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAMC,QAAC,KAAD;AACC,MAAA,KAAK,eACJ;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAA,+BACC,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAMC,MAAA,OAAO,EAAEJ,cANV;AAOC,MAAA,IAAI,EAAEK,QAPP;AAQC,MAAA,QAAQ,EAAEC,YARX;AASC,MAAA,aAAa,EAAE;AAAEJ,QAAAA,OAAO,EAAEA;AAAX,OAThB;AAAA,6BAWC;AAAG,QAAA,KAAK,EAAE;AAAEpB,UAAAA,UAAU,EAAE;AAAd,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXD;AAAA;AAAA;AAAA;AAAA,cAND;AAAA,kBADD;AAsBA,CAzDD;;IAAMgB,U;UAGgB5J,O;;;MAHhB4J,U","sourcesContent":["import moment from 'moment';\r\nimport router from 'next/router';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { branchApi, studentApi, testCustomerApi, examTopicApi, packageExaminerApi, teacherApi } from '~/apiBase';\r\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase';\r\nimport NotiModal from '~/components/Elements/NotiModal/NotiModal';\r\nimport SortBox from '~/components/Elements/SortBox';\r\nimport ExpandTable from '~/components/ExpandTable';\r\nimport TestAddExam from '~/components/Global/Customer/Service/TestAddExam';\r\nimport TestCustomerForm from '~/components/Global/Customer/Service/TestCustomerForm';\r\nimport LayoutBase from '~/components/LayoutBase';\r\nimport FilterColumn from '~/components/Tables/FilterColumn';\r\nimport { useWrap } from '~/context/wrap';\r\nimport TestCustomerPoint from '~/components/Global/Customer/Service/TestCustomerPoint';\r\nimport ExamAppointmentPoint from '../../ExamAppointment/ExamAppointmentPoint';\r\nimport { CloseOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { Modal, Tooltip } from 'antd';\r\nimport Link from 'next/link';\r\n\r\nlet pageIndex = 1;\r\n\r\nlet listFieldSearch = {\r\n\tpageIndex: 1,\r\n\tFullNameUnicode: null\r\n};\r\n\r\nlet listFieldFilter = {\r\n\tpageIndex: 1,\r\n\tBranchID: null, // lọc\r\n\tUserInformationID: null,\r\n\tStatus: null,\r\n\tAppointmentDate: null\r\n};\r\n\r\nconst dataOption = [\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Tên A - Z '\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Tên Z - A'\r\n\t},\r\n\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Ngày hẹn A - Z'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Ngày hẹn Z - A'\r\n\t}\r\n];\r\n\r\n// -- FOR DIFFERENT VIEW --\r\ninterface optionObj {\r\n\ttitle: string;\r\n\tvalue: number;\r\n}\r\n\r\ninterface studentObj {\r\n\ttitle: string;\r\n\tvalue: number;\r\n\tcounselorsName: string;\r\n}\r\n\r\ninterface listDataForm {\r\n\tBranch: Array<optionObj>;\r\n\tStudent: Array<studentObj>;\r\n\tTeacher: Array<optionObj>;\r\n}\r\n\r\nconst listApi = [\r\n\t{\r\n\t\tapi: branchApi,\r\n\t\ttext: 'Trung tâm',\r\n\t\tname: 'Branch'\r\n\t},\r\n\t{\r\n\t\tapi: studentApi,\r\n\t\ttext: 'Học viên',\r\n\t\tname: 'Student'\r\n\t},\r\n\t{\r\n\t\tapi: teacherApi,\r\n\t\ttext: 'Giáo viên',\r\n\t\tname: 'Teacher'\r\n\t}\r\n];\r\n\r\nexport default function ServiceAppointmentTest(props) {\r\n\tconst [listDataForm, setListDataForm] = useState<listDataForm>({\r\n\t\tBranch: [],\r\n\t\tStudent: [],\r\n\t\tTeacher: []\r\n\t});\r\n\tconst [dataExam, setDataExam] = useState<IExamTopic[]>([]);\r\n\tconst [currentDay, setCurrentDate] = useState(null);\r\n\tconst [isOpenNoti, setisOpenNoti] = useState(false);\r\n\tconst [userID, setUserID] = useState(null);\r\n\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState<ITestCustomer[]>([]);\r\n\tconst { showNoti, pageSize, userInformation } = useWrap();\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tFullNameUnicode: null,\r\n\t\tBranchID: null, // lọc\r\n\t\tUserInformationID: null,\r\n\t\tStatus: null,\r\n\t\tAppointmentDate: null\r\n\t};\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t});\r\n\tconst [totalPage, setTotalPage] = useState(null);\r\n\tconst [indexRow, setIndexRow] = useState(null);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi);\r\n\r\n\t// ------ LIST FILTER -------\r\n\tconst [dataFilter, setDataFilter] = useState([\r\n\t\t{\r\n\t\t\tname: 'BranchID',\r\n\t\t\ttitle: 'Trung tâm',\r\n\t\t\tcol: 'col-md-12 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null, // Gọi api xong trả data vào đây\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tname: 'Status',\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tcol: 'col-md-12 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Chưa test',\r\n\t\t\t\t\tvalue: 0\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Đang chấm bài test',\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Chưa đăng kí khóa học',\r\n\t\t\t\t\tvalue: 2\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Đã đăng kí khóa học',\r\n\t\t\t\t\tvalue: 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Đã hủy hẹn test',\r\n\t\t\t\t\tvalue: 4\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'AppointmentDate',\r\n\t\t\ttitle: 'Ngày hẹn test',\r\n\t\t\tcol: 'col-md-12 col-12',\r\n\t\t\ttype: 'date-single',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'date-range',\r\n\t\t\ttitle: 'Từ - đến',\r\n\t\t\tcol: 'col-12',\r\n\t\t\ttype: 'date-range',\r\n\t\t\tvalue: null\r\n\t\t}\r\n\t]);\r\n\r\n\tconst [dataTeacher, setDataTeacher] = useState([]);\r\n\r\n\t// Get list teacher\r\n\tconst getListTeacher = async () => {\r\n\t\t// setLoadingTeacher(true);\r\n\t\ttry {\r\n\t\t\tlet res = await packageExaminerApi.getAll({\r\n\t\t\t\tselectAll: true\r\n\t\t\t});\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tlet newData = res.data.data.map((item) => ({\r\n\t\t\t\t\ttitle: item.TeacherName,\r\n\t\t\t\t\tvalue: item.TeacherID\r\n\t\t\t\t}));\r\n\t\t\t\tsetDataTeacher(newData);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Error Get List Teacher: ', error.message);\r\n\t\t} finally {\r\n\t\t\t// setLoadingTeacher(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst makeNewData = (data, name) => {\r\n\t\tlet newData = null;\r\n\t\tswitch (name) {\r\n\t\t\tcase 'Branch':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.BranchName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}));\r\n\t\t\t\tsetDataFunc('BranchID', newData);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Student':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.FullNameUnicode,\r\n\t\t\t\t\tvalue: item.UserInformationID,\r\n\t\t\t\t\tcounselorsName: item.CounselorsName == null ? '' : item.CounselorsName\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Teacher':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.FullNameUnicode,\r\n\t\t\t\t\tvalue: item.UserInformationID\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn newData;\r\n\t};\r\n\r\n\tconst getDataTolist = (data: any, name: any) => {\r\n\t\tlet newData = makeNewData(data, name);\r\n\r\n\t\tObject.keys(listDataForm).forEach(function (key) {\r\n\t\t\tif (key == name) {\r\n\t\t\t\tlistDataForm[key] = newData;\r\n\t\t\t}\r\n\t\t});\r\n\t\tsetListDataForm({ ...listDataForm });\r\n\t};\r\n\r\n\t// ----------- GET DATA EXAM ------------\r\n\tconst getDataExam = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await examTopicApi.getAll({\r\n\t\t\t\tselectAll: true,\r\n\t\t\t\ttype: 1\r\n\t\t\t});\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetDataExam(res.data.data);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Error Exam: ', error.message);\r\n\t\t}\r\n\t};\r\n\r\n\t// ----------- GET DATA SOURCE ---------------\r\n\tconst getDataAll = (arrApi) => {\r\n\t\tarrApi.forEach((item, index) => {\r\n\t\t\t(async () => {\r\n\t\t\t\tlet res = null;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (item.name == 'Counselors') {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tRoleID: 6,\r\n\t\t\t\t\t\t\tStatusID: 0,\r\n\t\t\t\t\t\t\tEnable: true\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tEnable: true\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tres.status == 200 && getDataTolist(res.data.data, item.name);\r\n\r\n\t\t\t\t\tres.status == 204 && console.log(item.text + ' Không có dữ liệu');\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\t// showNoti('danger', error.message);\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t} finally {\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t});\r\n\t};\r\n\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await testCustomerApi.getAll(todoApi);\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetDataSource(res.data.data);\r\n\t\t\t\tsetTotalPage(res.data.totalRow);\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\t// setTestDate(moment(res.data.data.AppointmentDate).format('DD/MM/YYYY HH:mm'));\r\n\t\t\t}\r\n\t\t\tres.status == 204 && setDataSource([]);\r\n\t\t} catch (error) {\r\n\t\t\terror.status == 500 ? showNoti('danger', 'Đường truyền mạng không ổn định') : showNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// ------ SET DATA FUN ------\r\n\tconst setDataFunc = (name, data) => {\r\n\t\tdataFilter.every((item, index) => {\r\n\t\t\tif (item.name == name) {\r\n\t\t\t\titem.optionList = data;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tsetDataFilter([...dataFilter]);\r\n\t};\r\n\r\n\t// ---------------- AFTER SUBMIT -----------------\r\n\tconst afterPost = (mes) => {\r\n\t\t// showNoti(\"success\", mes);\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t});\r\n\t\tsetCurrentPage(1);\r\n\t};\r\n\r\n\t// ----------------- ON SUBMIT --------------------\r\n\tconst _onSubmit = async (dataSubmit: any) => {\r\n\t\t// console.log('Data submit: ', dataSubmit);\r\n\t\t// console.log('List data form: ', listDataForm);\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\r\n\t\tlet res = null;\r\n\r\n\t\ttry {\r\n\t\t\tif (dataSubmit.ID) {\r\n\t\t\t\tres = await testCustomerApi.update(dataSubmit);\r\n\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\t// let newDataSource = [...dataSource];\r\n\t\t\t\t\t// newDataSource.splice(indexRow, 1, {\r\n\t\t\t\t\t// \t...dataSubmit,\r\n\t\t\t\t\t// \tFullNameUnicode: listDataForm.Student.find((item) => item.value == dataSubmit.UserInformationID).title,\r\n\t\t\t\t\t// \tBranchName: listDataForm.Branch.find((item) => item.value == dataSubmit.BranchID).title,\r\n\t\t\t\t\t// \tTeacherName: listDataForm.Teacher.find((item) => item.value == dataSubmit.TeacherID).title\r\n\t\t\t\t\t// });\r\n\t\t\t\t\t// setDataSource(newDataSource);\r\n\t\t\t\t\tsetTodoApi({ ...todoApi });\r\n\t\t\t\t\tshowNoti('success', res.data.message);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tres = await testCustomerApi.add(dataSubmit);\r\n\t\t\t\tres?.status == 200 && afterPost(res.data.message);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error: ', error);\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t};\r\n\r\n\t// -------------- HANDLE FILTER ------------------\r\n\tconst handleFilter = (listFilter) => {\r\n\t\tlet newListFilter = { ...listFieldFilter };\r\n\t\tlistFilter.forEach((item, index) => {\r\n\t\t\tlet key = item.name;\r\n\t\t\tObject.keys(newListFilter).forEach((keyFilter) => {\r\n\t\t\t\tif (keyFilter == key) {\r\n\t\t\t\t\tnewListFilter[key] = item.value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\tsetTodoApi({ ...listTodoApi, ...newListFilter, pageIndex: 1 });\r\n\t};\r\n\r\n\t// --------------- HANDLE SORT ----------------------\r\n\tconst handleSort = async (option) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t};\r\n\t\tsetCurrentPage(1), setTodoApi(newTodoApi);\r\n\t};\r\n\r\n\t// ------------ ON SEARCH -----------------------\r\n\r\n\tconst checkField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = { ...listFieldSearch };\r\n\t\tObject.keys(newList).forEach(function (key) {\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\t\tnewList[key] = null;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewList[key] = valueSearch;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn newList;\r\n\t};\r\n\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tlet clearKey =\r\n\t\t\tdataIndex == 'FullNameUnicode'\r\n\t\t\t\t? { FullNameUnicode: valueSearch }\r\n\t\t\t\t: dataIndex == 'Mobile'\r\n\t\t\t\t? { Mobile: valueSearch }\r\n\t\t\t\t: { Email: valueSearch };\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t...clearKey\r\n\t\t});\r\n\t};\r\n\r\n\t// HANDLE RESET\r\n\tconst resetListFieldSearch = () => {\r\n\t\tObject.keys(listFieldSearch).forEach(function (key) {\r\n\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\tlistFieldSearch[key] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t});\r\n\t\tsetCurrentPage(1), resetListFieldSearch();\r\n\t};\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tpageIndex = pageNumber;\r\n\t\tsetCurrentPage(pageNumber);\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t// ...listFieldSearch,\r\n\t\t\tpageIndex: pageIndex\r\n\t\t});\r\n\t};\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tgetDataSource();\r\n\t}, [todoApi]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataAll(listApi);\r\n\t\tgetDataExam();\r\n\r\n\t\t// Get current date\r\n\t\tlet currentdate = new Date();\r\n\t\tlet datetime =\r\n\t\t\tcurrentdate.getDate() +\r\n\t\t\t'/' +\r\n\t\t\t(currentdate.getMonth() + 1) +\r\n\t\t\t'/' +\r\n\t\t\tcurrentdate.getFullYear() +\r\n\t\t\t' ' +\r\n\t\t\tcurrentdate.getHours() +\r\n\t\t\t':' +\r\n\t\t\tcurrentdate.getMinutes();\r\n\r\n\t\tsetCurrentDate(datetime);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userInformation) {\r\n\t\t\tsetUserID(userInformation.UserInformationID);\r\n\t\t}\r\n\t}, [userInformation]);\r\n\r\n\tconst moveToTest = (e, data) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tlet testDate = moment(data.AppointmentDate).format('DD/MM/YYYY') + ' ' + data.Time;\r\n\t\tconsole.log('Test DAte: ', testDate);\r\n\t\tif (currentDay < testDate) {\r\n\t\t\tsetisOpenNoti(true);\r\n\t\t} else {\r\n\t\t\trouter.push('');\r\n\t\t}\r\n\t};\r\n\r\n\tconst expandedRowRender = (record) => {\r\n\t\t// return record.Note ? record.Note : \"Không có ghi chú\";\r\n\t\t// return (\r\n\t\t// \t<>\r\n\t\t// \t\t<div className=\"box-note mt-2\">\r\n\t\t// \t\t\t<h6 className=\"d-block text-underline\">Ghi chú:</h6>\r\n\t\t// \t\t\t<p>{record.Note}</p>\r\n\t\t// \t\t</div>\r\n\t\t// \t\t<TestCustomerPoint ID={record.ID} />\r\n\t\t// \t</>\r\n\t\t// );\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<p style={{ fontWeight: 500 }} className=\"mt-3 mb-2\">\r\n\t\t\t\t\tGhi chú\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>{record.Note}</p>\r\n\t\t\t\t<ExamAppointmentPoint infoID={record.ID} userID={record.UserInformationID} />\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\tconst onUpdateData = () => {\r\n\t\tsetTodoApi({ ...todoApi });\r\n\t};\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\twidth: 200,\r\n\t\t\ttitle: 'Học viên',\r\n\t\t\tdataIndex: 'FullNameUnicode',\r\n\t\t\tfixed: 'left',\r\n\t\t\trender: (a) => <p className=\"font-weight-primary\">{a}</p>,\r\n\t\t\t...FilterColumn('FullNameUnicode', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Email',\r\n\t\t\tdataIndex: 'Email',\r\n\t\t\tfixed: 'left',\r\n\t\t\trender: (a) => <p className=\"font-weight-primary\">{a}</p>,\r\n\t\t\t...FilterColumn('Email', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'SDT',\r\n\t\t\tdataIndex: 'Mobile',\r\n\t\t\tfixed: 'left',\r\n\t\t\trender: (a) => <p className=\"font-weight-primary\">{a}</p>,\r\n\t\t\t...FilterColumn('Mobile', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 170,\r\n\t\t\ttitle: 'Trung tâm',\r\n\t\t\tdataIndex: 'BranchName',\r\n\r\n\t\t\trender: (a) => <p className=\"font-weight-black\">{a}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 170,\r\n\t\t\ttitle: 'Đề test',\r\n\t\t\tdataIndex: 'ExamTopicnName',\r\n\t\t\trender: (text, data: any) => (\r\n\t\t\t\t<Link\r\n\t\t\t\t\thref={{\r\n\t\t\t\t\t\tpathname: `/question-bank/exam-list/exam-detail/${data.ExamTopicID}`\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<a href=\"\" className=\"font-weight-link\">\r\n\t\t\t\t\t\t{text}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</Link>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày hẹn',\r\n\t\t\tdataIndex: 'AppointmentDate',\r\n\t\t\trender: (date: any) => moment(date).format('DD/MM/YYYY')\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 100,\r\n\t\t\ttitle: 'Giờ hẹn',\r\n\t\t\tdataIndex: 'Time',\r\n\t\t\talign: 'center'\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 170,\r\n\t\t\ttitle: 'Giáo viên chấm bài',\r\n\t\t\tdataIndex: 'TeacherName'\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 190,\r\n\t\t\ttitle: 'Tư vấn viên',\r\n\t\t\tdataIndex: 'CounselorsName'\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tdataIndex: 'Status',\r\n\t\t\talign: 'center',\r\n\r\n\t\t\tfilters: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Chưa test',\r\n\t\t\t\t\tvalue: 0\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Đang chấm bài',\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Chờ đăng kí khóa học',\r\n\t\t\t\t\tvalue: 2\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Đã đăng kí khóa học',\r\n\t\t\t\t\tvalue: 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Đã hủy hẹn test',\r\n\t\t\t\t\tvalue: 4\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tonFilter: (value, record) => record.Status === value,\r\n\t\t\trender: (status) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{status == 0 && <span className=\"tag red\">Chưa test</span>}\r\n\t\t\t\t\t\t{status == 1 && <span className=\"tag blue\">Đang chấm bài</span>}\r\n\t\t\t\t\t\t{status == 2 && <span className=\"tag yellow\">Chờ đăng kí khóa học</span>}\r\n\t\t\t\t\t\t{status == 3 && <span className=\"tag green\">Đã đăng kí </span>}\r\n\t\t\t\t\t\t{status == 4 && <span className=\"tag gray\">Đã hủy hẹn test</span>}\r\n\t\t\t\t\t\t{/* {apmReg == 1 ? (\r\n              <span className=\"tag blue\">Chưa đăng kí khóa học</span>\r\n            ) : apmReg == 2 ? (\r\n              <span className=\"tag green\">Đã đăng kí khóa học</span>\r\n            ) : (\r\n              <span className=\"tag red\">Chưa test</span>\r\n            )} */}\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t\trender: (text, data, index) => (\r\n\t\t\t\t<div onClick={(e) => e.stopPropagation()}>\r\n\t\t\t\t\t<TestCustomerForm\r\n\t\t\t\t\t\tgetIndex={() => setIndexRow(index)}\r\n\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\trowData={data}\r\n\t\t\t\t\t\trowID={data.ID}\r\n\t\t\t\t\t\tlistData={listDataForm}\r\n\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t_onSubmit={(data: any) => _onSubmit(data)}\r\n\t\t\t\t\t\tdataExam={dataExam}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TestAddExam dataExam={dataExam} dataRow={data} onFetchData={() => setTodoApi({ ...todoApi })} />\r\n\t\t\t\t\t{data.Status == 0 && <CancelTest onUpdateData={onUpdateData} dataRow={data} />}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<NotiModal\r\n\t\t\t\tisOpen={isOpenNoti}\r\n\t\t\t\tisCancel={() => setisOpenNoti(false)}\r\n\t\t\t\tisOk={() => setisOpenNoti(false)}\r\n\t\t\t\tcontent=\"Chưa đến giờ làm đề test\"\r\n\t\t\t/>\r\n\t\t\t<ExpandTable\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Danh sách KHÁCH HẸN TEST\"\r\n\t\t\t\t// TitleCard={\r\n\t\t\t\t//   <StudentAdviseForm\r\n\t\t\t\t//     listData={listDataForm}\r\n\t\t\t\t//     isLoading={isLoading}\r\n\t\t\t\t//     _onSubmit={(data: any) => _onSubmit(data)}\r\n\t\t\t\t//   />\r\n\t\t\t\t// }\r\n\t\t\t\tdataSource={dataSource}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t<FilterBase\r\n\t\t\t\t\t\t\tdataFilter={dataFilter}\r\n\t\t\t\t\t\t\thandleFilter={(listFilter: any) => handleFilter(listFilter)}\r\n\t\t\t\t\t\t\thandleReset={handleReset}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<SortBox handleSort={(value) => handleSort(value)} dataOption={dataOption} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\texpandable={{ expandedRowRender }}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}\r\nServiceAppointmentTest.layout = LayoutBase;\r\n\r\nconst CancelTest = (props) => {\r\n\tconst { onUpdateData, dataRow } = props;\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst { showNoti } = useWrap();\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst showModal = () => {\r\n\t\tsetIsModalVisible(true);\r\n\t};\r\n\r\n\tconst handleOk = async () => {\r\n\t\tlet dataSubmit = {\r\n\t\t\tID: dataRow.ID,\r\n\t\t\tStatus: 4\r\n\t\t};\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await testCustomerApi.update(dataSubmit);\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tshowNoti('success', 'Hủy lịch hẹn test thành công!');\r\n\t\t\t\tsetIsModalVisible(false);\r\n\t\t\t\tonUpdateData && onUpdateData();\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tooltip title=\"Hủy lịch hẹn\">\r\n\t\t\t\t<button className=\"btn btn-icon delete\" onClick={showModal}>\r\n\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t</button>\r\n\t\t\t</Tooltip>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={\r\n\t\t\t\t\t<button className=\"btn btn-icon delete\">\r\n\t\t\t\t\t\t<QuestionCircleOutlined />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t}\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\tokButtonProps={{ loading: loading }}\r\n\t\t\t>\r\n\t\t\t\t<p style={{ fontWeight: 500 }}>Bạn muốn hủy lịch hẹn test của học viên này?</p>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
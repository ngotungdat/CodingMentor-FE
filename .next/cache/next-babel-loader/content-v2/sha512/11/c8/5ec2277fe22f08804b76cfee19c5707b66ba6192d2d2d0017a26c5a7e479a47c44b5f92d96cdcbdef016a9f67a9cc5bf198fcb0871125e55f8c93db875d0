{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Option\\\\District\\\\District.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport moment from 'moment';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { areaApi, districtApi } from '~/apiBase';\nimport DeleteTableRow from '~/components/Elements/DeleteTableRow/DeleteTableRow';\nimport SortBox from '~/components/Elements/SortBox';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nimport { fmSelectArr } from '~/utils/functions';\nimport DistrictForm from './DistrictForm';\n\nconst District = () => {\n  const {\n    0: districtList,\n    1: setDistrictList\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const {\n    0: areaList,\n    1: setAreaList\n  } = useState([]);\n  const {\n    0: activeColumnSearch,\n    1: setActiveColumnSearch\n  } = useState(''); // FILTER\n\n  const listFieldInit = {\n    pageIndex: 1,\n    pageSize: pageSize,\n    sort: -1,\n    sortType: false,\n    AreaName: '',\n    AreaID: null,\n    DistrictName: ''\n  };\n  let refValue = useRef({\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false\n  });\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(listFieldInit); // SORT OPTION\n\n  const sortOptionList = [{\n    dataSort: {\n      sort: 0,\n      sortType: true\n    },\n    value: 1,\n    text: 'Tỉnh/tp tăng dần'\n  }, {\n    dataSort: {\n      sort: 0,\n      sortType: false\n    },\n    value: 2,\n    text: 'Tỉnh/tp giảm dần'\n  }, {\n    dataSort: {\n      sort: 1,\n      sortType: true\n    },\n    value: 3,\n    text: 'Quận tăng dần'\n  }, {\n    dataSort: {\n      sort: 1,\n      sortType: false\n    },\n    value: 4,\n    text: 'Quận giảm dần'\n  }]; // PAGINATION\n\n  const getPagination = (pageIndex, pageSize) => {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize,\n      pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  }; // SORT\n\n\n  const onSort = option => {\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), refValue.current));\n  }; // RESET SEARCH\n\n\n  const onResetSearch = () => {\n    setActiveColumnSearch('');\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), {}, {\n      pageSize: refValue.current.pageSize\n    }));\n  }; // ACTION SEARCH\n\n\n  const onSearch = (valueSearch, dataIndex) => {\n    setActiveColumnSearch(dataIndex);\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1,\n      [dataIndex]: valueSearch\n    }));\n  }; // GET DATA IN FIRST TIME\n\n\n  const fetchDistrictList = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await districtApi.getAll(filters);\n\n      if (res.status === 200) {\n        if (res.data.totalRow && res.data.data.length) {\n          setDistrictList(res.data.data);\n          setTotalPage(res.data.totalRow);\n        }\n      } else if (res.status === 204) {\n        showNoti('danger', 'Không tìm thấy');\n        setDistrictList([]);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchDistrictList();\n  }, [filters]);\n\n  const fetchAreaList = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await areaApi.getAll({\n        selectall: true\n      });\n\n      if (res.status === 200) {\n        const newAreaList = fmSelectArr(res.data.data, 'AreaName', 'AreaID');\n        setAreaList(newAreaList);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchAreaList();\n  }, []); // CREATE\n\n  const onCreateDistrict = async data => {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res;\n\n    try {\n      res = await districtApi.add(_objectSpread(_objectSpread({}, data), {}, {\n        Enable: true\n      }));\n      res.status === 200 && showNoti('success', res.data.message);\n      onResetSearch(); // <== khi tạo xong r trở về trang đầu tiên\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n    }\n\n    return res;\n  }; // UPDATE\n\n\n  const onUpdateDistrict = async (newObj, idx) => {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res;\n\n    try {\n      res = await districtApi.update(newObj);\n\n      if (res.status === 200) {\n        const newDistrictList = [...districtList];\n        newDistrictList.splice(idx, 1, _objectSpread(_objectSpread({}, newObj), {}, {\n          AreaName: areaList.find(a => a.value === newObj.AreaID).title\n        }));\n        setDistrictList(newDistrictList);\n        showNoti('success', res.data.message);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n    }\n\n    return res;\n  }; // DELETE\n\n\n  const onDeleteDistrict = idx => {\n    return async () => {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n\n      try {\n        const delObj = districtList[idx];\n        const res = await districtApi.delete(_objectSpread(_objectSpread({}, delObj), {}, {\n          Enable: false\n        }));\n        res.status === 200 && showNoti('success', res.data.message);\n\n        if (districtList.length === 1) {\n          filters.pageIndex === 1 ? (setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n            pageIndex: 1\n          })), setDistrictList([])) : setFilters(_objectSpread(_objectSpread(_objectSpread({}, filters), refValue.current), {}, {\n            pageIndex: filters.pageIndex - 1\n          }));\n          return;\n        }\n\n        fetchDistrictList();\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'GET_ALL',\n          status: false\n        });\n      }\n    };\n  }; // COLUMN FOR TABLE\n\n\n  const columns = [_objectSpread(_objectSpread({\n    title: 'Tên tỉnh/thành phố',\n    dataIndex: 'AreaName'\n  }, FilterColumn('AreaID', onSearch, onResetSearch, 'select', areaList)), {}, {\n    className: activeColumnSearch === 'AreaID' ? 'active-column-search' : ''\n  }), _objectSpread(_objectSpread({\n    title: 'Tên quận',\n    dataIndex: 'DistrictName'\n  }, FilterColumn('DistrictName', onSearch, onResetSearch, 'text')), {}, {\n    className: activeColumnSearch === 'DistrictName' ? 'active-column-search' : ''\n  }), {\n    title: 'Ngày khởi tạo',\n    dataIndex: 'ModifiedOn',\n    render: date => moment(date).format('DD/MM/YYYY')\n  }, {\n    title: 'Được tạo bởi',\n    dataIndex: 'ModifiedBy'\n  }, {\n    align: 'center',\n    render: (value, _, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(DistrictForm, {\n        optionAreaList: areaList,\n        isLoading: isLoading,\n        isUpdate: true,\n        updateObj: value,\n        indexUpdateObj: idx,\n        handleUpdateDistrict: onUpdateDistrict\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(DeleteTableRow, {\n        handleDelete: onDeleteDistrict(idx)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 5\n    }, this)\n  }]; // RETURN\n\n  return /*#__PURE__*/_jsxDEV(PowerTable, {\n    currentPage: filters.pageIndex,\n    totalPage: totalPage,\n    getPagination: getPagination,\n    loading: isLoading,\n    addClass: \"basic-header\",\n    TitlePage: \"Danh s\\xE1ch qu\\u1EADn - huy\\u1EC7n\",\n    TitleCard: /*#__PURE__*/_jsxDEV(DistrictForm, {\n      optionAreaList: areaList,\n      isLoading: isLoading,\n      isUpdate: false,\n      handleCreateDistrict: onCreateDistrict\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 5\n    }, this),\n    dataSource: districtList,\n    columns: columns,\n    Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extra-table\",\n      children: /*#__PURE__*/_jsxDEV(SortBox, {\n        handleSort: onSort,\n        dataOption: sortOptionList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 3\n  }, this);\n};\n\nexport default District;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Option/District/District.tsx"],"names":["moment","React","useEffect","useRef","useState","areaApi","districtApi","DeleteTableRow","SortBox","PowerTable","FilterColumn","useWrap","fmSelectArr","DistrictForm","District","districtList","setDistrictList","isLoading","setIsLoading","type","status","totalPage","setTotalPage","showNoti","pageSize","areaList","setAreaList","activeColumnSearch","setActiveColumnSearch","listFieldInit","pageIndex","sort","sortType","AreaName","AreaID","DistrictName","refValue","filters","setFilters","sortOptionList","dataSort","value","text","getPagination","current","onSort","option","title","onResetSearch","onSearch","valueSearch","dataIndex","fetchDistrictList","res","getAll","data","totalRow","length","error","message","fetchAreaList","selectall","newAreaList","onCreateDistrict","add","Enable","onUpdateDistrict","newObj","idx","update","newDistrictList","splice","find","a","onDeleteDistrict","delObj","delete","columns","className","render","date","format","align","_","e","stopPropagation"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { areaApi, districtApi } from '~/apiBase';\r\nimport DeleteTableRow from '~/components/Elements/DeleteTableRow/DeleteTableRow';\r\nimport SortBox from '~/components/Elements/SortBox';\r\nimport PowerTable from '~/components/PowerTable';\r\nimport FilterColumn from '~/components/Tables/FilterColumn';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { fmSelectArr } from '~/utils/functions';\r\nimport DistrictForm from './DistrictForm';\r\n\r\nconst District = () => {\r\n\tconst [districtList, setDistrictList] = useState<IDistrict[]>([]);\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t});\r\n\tconst [totalPage, setTotalPage] = useState(null);\r\n\tconst { showNoti, pageSize } = useWrap();\r\n\tconst [areaList, setAreaList] = useState([]);\r\n\tconst [activeColumnSearch, setActiveColumnSearch] = useState('');\r\n\t// FILTER\r\n\tconst listFieldInit = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: pageSize,\r\n\t\tsort: -1,\r\n\t\tsortType: false,\r\n\t\tAreaName: '',\r\n\t\tAreaID: null,\r\n\t\tDistrictName: ''\r\n\t};\r\n\tlet refValue = useRef({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false\r\n\t});\r\n\tconst [filters, setFilters] = useState(listFieldInit);\r\n\t// SORT OPTION\r\n\tconst sortOptionList = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 1,\r\n\t\t\ttext: 'Tỉnh/tp tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 2,\r\n\t\t\ttext: 'Tỉnh/tp giảm dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 1,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 3,\r\n\t\t\ttext: 'Quận tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 1,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 4,\r\n\t\t\ttext: 'Quận giảm dần'\r\n\t\t}\r\n\t];\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10;\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tpageSize,\r\n\t\t\tpageIndex\r\n\t\t};\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\t...refValue.current\r\n\t\t});\r\n\t};\r\n\t// SORT\r\n\tconst onSort = (option) => {\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t};\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current\r\n\t\t});\r\n\t};\r\n\t// RESET SEARCH\r\n\tconst onResetSearch = () => {\r\n\t\tsetActiveColumnSearch('');\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\tpageSize: refValue.current.pageSize\r\n\t\t});\r\n\t};\r\n\t// ACTION SEARCH\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tsetActiveColumnSearch(dataIndex);\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t[dataIndex]: valueSearch\r\n\t\t});\r\n\t};\r\n\t// GET DATA IN FIRST TIME\r\n\tconst fetchDistrictList = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tlet res = await districtApi.getAll(filters);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tif (res.data.totalRow && res.data.data.length) {\r\n\t\t\t\t\tsetDistrictList(res.data.data);\r\n\t\t\t\t\tsetTotalPage(res.data.totalRow);\r\n\t\t\t\t}\r\n\t\t\t} else if (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', 'Không tìm thấy');\r\n\t\t\t\tsetDistrictList([]);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tfetchDistrictList();\r\n\t}, [filters]);\r\n\tconst fetchAreaList = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tlet res = await areaApi.getAll({\r\n\t\t\t\tselectall: true\r\n\t\t\t});\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newAreaList = fmSelectArr(res.data.data, 'AreaName', 'AreaID');\r\n\t\t\t\tsetAreaList(newAreaList);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tfetchAreaList();\r\n\t}, []);\r\n\r\n\t// CREATE\r\n\tconst onCreateDistrict = async (data: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\tlet res;\r\n\t\ttry {\r\n\t\t\tres = await districtApi.add({\r\n\t\t\t\t...data,\r\n\t\t\t\tEnable: true\r\n\t\t\t});\r\n\t\t\tres.status === 200 && showNoti('success', res.data.message);\r\n\t\t\tonResetSearch(); // <== khi tạo xong r trở về trang đầu tiên\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn res;\r\n\t};\r\n\t// UPDATE\r\n\tconst onUpdateDistrict = async (newObj: any, idx: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\tlet res;\r\n\t\ttry {\r\n\t\t\tres = await districtApi.update(newObj);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newDistrictList = [...districtList];\r\n\t\t\t\tnewDistrictList.splice(idx, 1, {\r\n\t\t\t\t\t...newObj,\r\n\t\t\t\t\tAreaName: areaList.find((a) => a.value === newObj.AreaID).title\r\n\t\t\t\t});\r\n\t\t\t\tsetDistrictList(newDistrictList);\r\n\t\t\t\tshowNoti('success', res.data.message);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn res;\r\n\t};\r\n\t// DELETE\r\n\tconst onDeleteDistrict = (idx: number) => {\r\n\t\treturn async () => {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\ttry {\r\n\t\t\t\tconst delObj = districtList[idx];\r\n\t\t\t\tconst res = await districtApi.delete({\r\n\t\t\t\t\t...delObj,\r\n\t\t\t\t\tEnable: false\r\n\t\t\t\t});\r\n\t\t\t\tres.status === 200 && showNoti('success', res.data.message);\r\n\t\t\t\tif (districtList.length === 1) {\r\n\t\t\t\t\tfilters.pageIndex === 1\r\n\t\t\t\t\t\t? (setFilters({\r\n\t\t\t\t\t\t\t\t...listFieldInit,\r\n\t\t\t\t\t\t\t\t...refValue.current,\r\n\t\t\t\t\t\t\t\tpageIndex: 1\r\n\t\t\t\t\t\t  }),\r\n\t\t\t\t\t\t  setDistrictList([]))\r\n\t\t\t\t\t\t: setFilters({\r\n\t\t\t\t\t\t\t\t...filters,\r\n\t\t\t\t\t\t\t\t...refValue.current,\r\n\t\t\t\t\t\t\t\tpageIndex: filters.pageIndex - 1\r\n\t\t\t\t\t\t  });\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfetchDistrictList();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\t// COLUMN FOR TABLE\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Tên tỉnh/thành phố',\r\n\t\t\tdataIndex: 'AreaName',\r\n\t\t\t...FilterColumn('AreaID', onSearch, onResetSearch, 'select', areaList),\r\n\t\t\tclassName: activeColumnSearch === 'AreaID' ? 'active-column-search' : ''\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tên quận',\r\n\t\t\tdataIndex: 'DistrictName',\r\n\t\t\t...FilterColumn('DistrictName', onSearch, onResetSearch, 'text'),\r\n\t\t\tclassName: activeColumnSearch === 'DistrictName' ? 'active-column-search' : ''\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày khởi tạo',\r\n\t\t\tdataIndex: 'ModifiedOn',\r\n\t\t\trender: (date) => moment(date).format('DD/MM/YYYY')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Được tạo bởi',\r\n\t\t\tdataIndex: 'ModifiedBy'\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\talign: 'center',\r\n\t\t\trender: (value, _, idx) => (\r\n\t\t\t\t<div onClick={(e) => e.stopPropagation()}>\r\n\t\t\t\t\t<DistrictForm\r\n\t\t\t\t\t\toptionAreaList={areaList}\r\n\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\tisUpdate={true}\r\n\t\t\t\t\t\tupdateObj={value}\r\n\t\t\t\t\t\tindexUpdateObj={idx}\r\n\t\t\t\t\t\thandleUpdateDistrict={onUpdateDistrict}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<DeleteTableRow handleDelete={onDeleteDistrict(idx)} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t];\r\n\t// RETURN\r\n\treturn (\r\n\t\t<PowerTable\r\n\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\ttotalPage={totalPage}\r\n\t\t\tgetPagination={getPagination}\r\n\t\t\tloading={isLoading}\r\n\t\t\taddClass=\"basic-header\"\r\n\t\t\tTitlePage=\"Danh sách quận - huyện\"\r\n\t\t\tTitleCard={\r\n\t\t\t\t<DistrictForm optionAreaList={areaList} isLoading={isLoading} isUpdate={false} handleCreateDistrict={onCreateDistrict} />\r\n\t\t\t}\r\n\t\t\tdataSource={districtList}\r\n\t\t\tcolumns={columns}\r\n\t\t\tExtra={\r\n\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t<SortBox handleSort={onSort} dataOption={sortOptionList} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default District;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\option\\\\consultation-status\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { consultationStatusApi } from '~/apiBase/options/consultation-status';\nimport ConsultationStatusDel from '~/components/Global/Option/ConsultationStatus/ConsultationStatusDel';\nimport ConsultationStatusForm from '~/components/Global/Option/ConsultationStatus/ConsultationStatusForm';\nimport LayoutBase from '~/components/LayoutBase';\nimport PowerTable from '~/components/PowerTable';\nimport { useWrap } from '~/context/wrap';\n\nconst ConsultationStatus = () => {\n  const columns = [{\n    title: 'Tình trạng tư vấn khách hàng',\n    dataIndex: 'Name',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Người tạo',\n    dataIndex: 'ModifiedBy'\n  }, {\n    title: 'Ngày tạo',\n    dataIndex: 'ModifiedOn',\n    render: date => moment(date).format('DD/MM/YYYY')\n  }, {\n    render: data => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ConsultationStatusForm, {\n        infoDetail: data,\n        infoId: data.ID,\n        reloadData: firstPage => {\n          getDataConsultationStatus(firstPage);\n        },\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ConsultationStatusDel, {\n        infoId: data.ID,\n        reloadData: firstPage => {\n          getDataConsultationStatus(firstPage);\n        },\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }];\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const listParamsDefault = {\n    pageSize: pageSize,\n    pageIndex: currentPage\n  };\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: consultationStatus,\n    1: setConsultationStatus\n  } = useState([]);\n  const {\n    0: params,\n    1: setParams\n  } = useState(listParamsDefault);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: 'GET_ALL',\n    status: false\n  });\n\n  const getPagination = pageNumber => {\n    setCurrentPage(pageNumber);\n    setParams(_objectSpread(_objectSpread({}, params), {}, {\n      pageIndex: currentPage\n    }));\n  };\n\n  const getDataConsultationStatus = page => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    (async () => {\n      try {\n        let res = await consultationStatusApi.getPaged(_objectSpread(_objectSpread({}, params), {}, {\n          pageIndex: page\n        }));\n        res.status == 200 && setConsultationStatus(res.data.data);\n\n        if (res.status == 204) {\n          showNoti('danger', 'Không tìm thấy dữ liệu!');\n          setCurrentPage(1);\n          setConsultationStatus([]);\n          setParams(listParamsDefault);\n        } else setTotalPage(res.data.totalRow);\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'GET_ALL',\n          status: false\n        });\n      }\n    })();\n  };\n\n  useEffect(() => {\n    getDataConsultationStatus(currentPage);\n  }, [params]);\n  return /*#__PURE__*/_jsxDEV(PowerTable, {\n    currentPage: currentPage,\n    loading: isLoading,\n    totalPage: totalPage && totalPage,\n    getPagination: pageNumber => getPagination(pageNumber),\n    addClass: \"basic-header\",\n    TitlePage: \"T\\xECnh tr\\u1EA1ng t\\u01B0 v\\u1EA5n kh\\xE1ch h\\xE0ng\",\n    TitleCard: /*#__PURE__*/_jsxDEV(ConsultationStatusForm, {\n      reloadData: firstPage => {\n        setCurrentPage(1);\n        getDataConsultationStatus(firstPage);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this),\n    dataSource: consultationStatus,\n    columns: columns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 3\n  }, this);\n};\n\nConsultationStatus.layout = LayoutBase;\nexport default ConsultationStatus;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/option/consultation-status/index.tsx"],"names":["moment","React","useEffect","useState","consultationStatusApi","ConsultationStatusDel","ConsultationStatusForm","LayoutBase","PowerTable","useWrap","ConsultationStatus","columns","title","dataIndex","render","text","date","format","data","ID","firstPage","getDataConsultationStatus","currentPage","setCurrentPage","showNoti","pageSize","listParamsDefault","pageIndex","totalPage","setTotalPage","consultationStatus","setConsultationStatus","params","setParams","isLoading","setIsLoading","type","status","getPagination","pageNumber","page","res","getPaged","totalRow","error","message","layout"],"mappings":"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","sourcesContent":["import moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { consultationStatusApi } from '~/apiBase/options/consultation-status'\r\nimport ConsultationStatusDel from '~/components/Global/Option/ConsultationStatus/ConsultationStatusDel'\r\nimport ConsultationStatusForm from '~/components/Global/Option/ConsultationStatus/ConsultationStatusForm'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst ConsultationStatus = () => {\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Tình trạng tư vấn khách hàng',\r\n\t\t\tdataIndex: 'Name',\r\n\t\t\trender: (text) => <p className=\"font-weight-primary\">{text}</p>\r\n\t\t},\r\n\t\t{ title: 'Người tạo', dataIndex: 'ModifiedBy' },\r\n\t\t{\r\n\t\t\ttitle: 'Ngày tạo',\r\n\t\t\tdataIndex: 'ModifiedOn',\r\n\t\t\trender: (date) => moment(date).format('DD/MM/YYYY')\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\trender: (data) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<ConsultationStatusForm\r\n\t\t\t\t\t\tinfoDetail={data}\r\n\t\t\t\t\t\tinfoId={data.ID}\r\n\t\t\t\t\t\treloadData={(firstPage) => {\r\n\t\t\t\t\t\t\tgetDataConsultationStatus(firstPage)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<ConsultationStatusDel\r\n\t\t\t\t\t\tinfoId={data.ID}\r\n\t\t\t\t\t\treloadData={(firstPage) => {\r\n\t\t\t\t\t\t\tgetDataConsultationStatus(firstPage)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\r\n\tconst { showNoti, pageSize } = useWrap()\r\n\tconst listParamsDefault = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: currentPage\r\n\t}\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [consultationStatus, setConsultationStatus] = useState<IConsultationStatus[]>([])\r\n\tconst [params, setParams] = useState(listParamsDefault)\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: 'GET_ALL',\r\n\t\tstatus: false\r\n\t})\r\n\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetParams({\r\n\t\t\t...params,\r\n\t\t\tpageIndex: currentPage\r\n\t\t})\r\n\t}\r\n\r\n\tconst getDataConsultationStatus = (page: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\t;(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await consultationStatusApi.getPaged({\r\n\t\t\t\t\t...params,\r\n\t\t\t\t\tpageIndex: page\r\n\t\t\t\t})\r\n\t\t\t\tres.status == 200 && setConsultationStatus(res.data.data)\r\n\t\t\t\tif (res.status == 204) {\r\n\t\t\t\t\tshowNoti('danger', 'Không tìm thấy dữ liệu!')\r\n\t\t\t\t\tsetCurrentPage(1)\r\n\t\t\t\t\tsetConsultationStatus([])\r\n\t\t\t\t\tsetParams(listParamsDefault)\r\n\t\t\t\t} else setTotalPage(res.data.totalRow)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})()\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataConsultationStatus(currentPage)\r\n\t}, [params])\r\n\r\n\treturn (\r\n\t\t<PowerTable\r\n\t\t\tcurrentPage={currentPage}\r\n\t\t\tloading={isLoading}\r\n\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\taddClass=\"basic-header\"\r\n\t\t\tTitlePage=\"Tình trạng tư vấn khách hàng\"\r\n\t\t\tTitleCard={\r\n\t\t\t\t<ConsultationStatusForm\r\n\t\t\t\t\treloadData={(firstPage) => {\r\n\t\t\t\t\t\tsetCurrentPage(1)\r\n\t\t\t\t\t\tgetDataConsultationStatus(firstPage)\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t\tdataSource={consultationStatus}\r\n\t\t\tcolumns={columns}\r\n\t\t/>\r\n\t)\r\n}\r\nConsultationStatus.layout = LayoutBase\r\nexport default ConsultationStatus\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Elements\\\\NestedTable\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Table, Card } from 'antd';\nimport { useWrap } from '~/context/wrap';\nconst NestedTable = /*#__PURE__*/React.memo(props => {\n  var _props$loading, _props$loading2;\n\n  const {\n    getTitlePage\n  } = useWrap();\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    selectedRowKeys: []\n  });\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    0: activeIndex,\n    1: setActiveIndex\n  } = useState(null);\n\n  const selectRow = record => {\n    const selectedRowKeys = [];\n\n    if (selectedRowKeys.indexOf(record.key) >= 0) {\n      selectedRowKeys.splice(selectedRowKeys.indexOf(record.key), 1);\n    } else {\n      selectedRowKeys.push(record.key);\n    }\n\n    setState({\n      selectedRowKeys\n    });\n  };\n\n  const onSelectedRowKeysChange = selectedRowKeys => {\n    setState({\n      selectedRowKeys\n    });\n  };\n\n  const changePagination = pageNumber => {\n    if (typeof props.getPagination != 'undefined') {\n      props.getPagination(pageNumber);\n    } else {\n      return pageNumber;\n    }\n  };\n\n  const rowSelection = {\n    selectedRowKeys: state.selectedRowKeys,\n    onChange: onSelectedRowKeysChange,\n    hideSelectAll: true\n  };\n  useEffect(() => {\n    if (props.TitlePage) {\n      getTitlePage(props.TitlePage);\n    }\n\n    if (props.dataSource && props.dataSource.length > 0) {\n      let dataClone = [...props.dataSource];\n      dataClone.forEach((item, index) => {\n        item.key = index.toString();\n      });\n      setDataSource(dataClone);\n    }\n  }, [props.dataSource]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nested-table\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: `cardRadius mb-3 ${props.addClass && props.addClass} ${props.Size ? props.Size : '' // table-small || table-medium\n        }`,\n        title: props.Extra,\n        extra: props.TitleCard // style={{ background: '#fff7eb' }}\n        ,\n        children: [props.children, /*#__PURE__*/_jsxDEV(Table, {\n          className: props.addClass && props.addClass,\n          loading: ((_props$loading = props.loading) === null || _props$loading === void 0 ? void 0 : _props$loading.type) == 'GET_ALL' && ((_props$loading2 = props.loading) === null || _props$loading2 === void 0 ? void 0 : _props$loading2.status),\n          bordered: props.haveBorder ? props.haveBorder : false,\n          scroll: {\n            x: 'max-content'\n          },\n          columns: props.columns,\n          dataSource: dataSource,\n          size: \"middle\",\n          pagination: props.pagination != false && {\n            showTotal: () => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-weight-black\",\n              children: [\"T\\u1ED5ng c\\u1ED9ng: \", props.totalPage]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 26\n            }, this),\n            pageSize: 30,\n            pageSizeOptions: ['30'],\n            total: props.totalPage && props.totalPage,\n            onChange: pageNumber => changePagination(pageNumber),\n            current: props.currentPage && props.currentPage\n          },\n          rowClassName: (record, index) => index == activeIndex ? 'table-row-active' : index % 2 === 0 ? 'table-row-light' : 'table-row-dark',\n          onRow: (record, index) => ({\n            onClick: () => {\n              selectRow(record);\n              setActiveIndex(index);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n});\nexport default NestedTable;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Elements/NestedTable/index.tsx"],"names":["React","useEffect","useState","Table","Card","useWrap","NestedTable","memo","props","getTitlePage","state","setState","selectedRowKeys","dataSource","setDataSource","activeIndex","setActiveIndex","selectRow","record","indexOf","key","splice","push","onSelectedRowKeysChange","changePagination","pageNumber","getPagination","rowSelection","onChange","hideSelectAll","TitlePage","length","dataClone","forEach","item","index","toString","addClass","Size","Extra","TitleCard","children","loading","type","status","haveBorder","x","columns","pagination","showTotal","totalPage","pageSize","pageSizeOptions","total","current","currentPage","onClick"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Table, Card } from 'antd'\r\nimport TitlePage from '~/components/TitlePage'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst NestedTable = React.memo((props: any) => {\r\n\tconst { getTitlePage } = useWrap()\r\n\tconst [state, setState] = useState({ selectedRowKeys: [] })\r\n\tconst [dataSource, setDataSource] = useState([])\r\n\tconst [activeIndex, setActiveIndex] = useState(null)\r\n\r\n\tconst selectRow = (record) => {\r\n\t\tconst selectedRowKeys = []\r\n\r\n\t\tif (selectedRowKeys.indexOf(record.key) >= 0) {\r\n\t\t\tselectedRowKeys.splice(selectedRowKeys.indexOf(record.key), 1)\r\n\t\t} else {\r\n\t\t\tselectedRowKeys.push(record.key)\r\n\t\t}\r\n\t\tsetState({ selectedRowKeys })\r\n\t}\r\n\r\n\tconst onSelectedRowKeysChange = (selectedRowKeys) => {\r\n\t\tsetState({ selectedRowKeys })\r\n\t}\r\n\r\n\tconst changePagination = (pageNumber) => {\r\n\t\tif (typeof props.getPagination != 'undefined') {\r\n\t\t\tprops.getPagination(pageNumber)\r\n\t\t} else {\r\n\t\t\treturn pageNumber\r\n\t\t}\r\n\t}\r\n\r\n\tconst rowSelection = {\r\n\t\tselectedRowKeys: state.selectedRowKeys,\r\n\t\tonChange: onSelectedRowKeysChange,\r\n\t\thideSelectAll: true\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.TitlePage) {\r\n\t\t\tgetTitlePage(props.TitlePage)\r\n\t\t}\r\n\t\tif (props.dataSource && props.dataSource.length > 0) {\r\n\t\t\tlet dataClone = [...props.dataSource]\r\n\t\t\tdataClone.forEach((item, index) => {\r\n\t\t\t\titem.key = index.toString()\r\n\t\t\t})\r\n\r\n\t\t\tsetDataSource(dataClone)\r\n\t\t}\r\n\t}, [props.dataSource])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"nested-table\">\r\n\t\t\t\t<Card\r\n\t\t\t\t\tclassName={`cardRadius mb-3 ${props.addClass && props.addClass} ${\r\n\t\t\t\t\t\tprops.Size ? props.Size : '' // table-small || table-medium\r\n\t\t\t\t\t}`}\r\n\t\t\t\t\ttitle={props.Extra}\r\n\t\t\t\t\textra={props.TitleCard}\r\n\t\t\t\t\t// style={{ background: '#fff7eb' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tclassName={props.addClass && props.addClass}\r\n\t\t\t\t\t\tloading={props.loading?.type == 'GET_ALL' && props.loading?.status}\r\n\t\t\t\t\t\tbordered={props.haveBorder ? props.haveBorder : false}\r\n\t\t\t\t\t\tscroll={{ x: 'max-content' }}\r\n\t\t\t\t\t\tcolumns={props.columns}\r\n\t\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\t\tsize=\"middle\"\r\n\t\t\t\t\t\tpagination={\r\n\t\t\t\t\t\t\tprops.pagination != false && {\r\n\t\t\t\t\t\t\t\tshowTotal: () => <div className=\"font-weight-black\">Tổng cộng: {props.totalPage}</div>,\r\n\t\t\t\t\t\t\t\tpageSize: 30,\r\n\t\t\t\t\t\t\t\tpageSizeOptions: ['30'],\r\n\t\t\t\t\t\t\t\ttotal: props.totalPage && props.totalPage,\r\n\t\t\t\t\t\t\t\tonChange: (pageNumber) => changePagination(pageNumber),\r\n\t\t\t\t\t\t\t\tcurrent: props.currentPage && props.currentPage\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trowClassName={(record, index) =>\r\n\t\t\t\t\t\t\tindex == activeIndex ? 'table-row-active' : index % 2 === 0 ? 'table-row-light' : 'table-row-dark'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonRow={(record, index) => ({\r\n\t\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\t\tselectRow(record)\r\n\t\t\t\t\t\t\t\tsetActiveIndex(index)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n})\r\n\r\nexport default NestedTable\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\QuestionBank\\\\QuestionShow\\\\QuestionTyping.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Skeleton, Modal, Popconfirm, Form, Input, Tooltip, Spin } from 'antd';\nimport { Edit, Trash2 } from 'react-feather';\nimport ReactHtmlParser from 'react-html-parser';\nimport { exerciseGroupApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Plus } from 'react-feather';\nlet AnsID = 0;\n\nconst EditQuestion = props => {\n  var _dataForm$ExerciseAns;\n\n  const {\n    dataGroup,\n    exerciseID,\n    onEdit\n  } = props;\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: dataForm,\n    1: setDataForm\n  } = useState(dataGroup);\n  const {\n    0: indexExercise,\n    1: setIndexExercise\n  } = useState(null);\n  const {\n    0: reloadContent,\n    1: setReloadContent\n  } = useState(false);\n  const {\n    showNoti,\n    userInformation\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    let newData = JSON.parse(JSON.stringify(dataForm));\n    newData.ExerciseAnswer.forEach(item => {\n      if (item.isAdd) {\n        delete item.ID;\n      }\n    });\n    dataGroup.ExerciseList[indexExercise] = newData;\n\n    try {\n      let res = await exerciseGroupApi.update(dataGroup);\n\n      if (res.status == 200) {\n        setReloadContent(true);\n      }\n    } catch (error) {}\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  }; // ====== HANDLE ADD ANSWER ======\n\n\n  const handleAddAnswer = questionID => {\n    AnsID++;\n    dataForm.ExerciseAnswer.push({\n      ID: AnsID,\n      AnswerContent: '',\n      isTrue: true,\n      Enable: true,\n      isAdd: true\n    });\n    setDataForm(_objectSpread({}, dataForm));\n  }; // ====== HANDLE ON CHANGE ======\n\n\n  const onChange_text = (e, AnswerID, QuestionID) => {\n    let text = e.target.value;\n    let indexAnswer = dataForm.ExerciseAnswer.findIndex(item => item.ID == AnswerID);\n    dataForm.ExerciseAnswer[indexAnswer].AnswerContent = text;\n    setDataForm(_objectSpread({}, dataForm));\n  };\n\n  const deleteAnswerItem = (AnswerID, QuestionID) => {\n    let indexAnswer = dataForm.ExerciseAnswer.findIndex(item => item.ID == AnswerID);\n\n    if (dataForm.ExerciseAnswer[indexAnswer].isAdd) {\n      dataForm.ExerciseAnswer.splice(indexAnswer, 1);\n    } else {\n      dataForm.ExerciseAnswer[indexAnswer].Enable = false;\n    }\n\n    setDataForm(_objectSpread({}, dataForm));\n  };\n\n  useEffect(() => {\n    if (reloadContent) {\n      ;\n\n      (async function loadData() {\n        try {\n          let res = await exerciseGroupApi.getWithID(dataGroup.ID);\n\n          if (res.status == 200) {\n            showNoti('success', `Thành công`);\n            onEdit && onEdit(res.data.data);\n          }\n\n          res.status == 204 && showNoti('danger', 'Không thành công');\n        } catch (error) {\n          showNoti('danger', error.message);\n        } finally {\n          setReloadContent(false);\n          setIsModalVisible(false);\n          setIsLoading(false);\n          setDataForm(null);\n        }\n      })();\n    }\n  }, [reloadContent]);\n  useEffect(() => {\n    if (isModalVisible) {\n      // Make new data\n      let index = dataGroup.ExerciseList.findIndex(item => item.ID == exerciseID);\n      let data = dataGroup.ExerciseList[index];\n      setDataForm(data);\n      setIndexExercise(index); // Find max id in arr\n\n      let newArr = [];\n      data.ExerciseAnswer.forEach(item => {\n        newArr.push(parseInt(item.ID));\n      });\n      AnsID = Math.max(...newArr);\n    }\n  }, [isModalVisible]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Th\\xEAm/s\\u1EEDa \\u0111\\xE1p \\xE1n\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-icon edit\",\n        onClick: showModal,\n        children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      footer: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-light mr-2\",\n          onClick: handleCancel,\n          children: \"H\\u1EE7y t\\xE1c v\\u1EE5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => handleSubmit(),\n          children: [\"L\\u01B0u\", isLoading && /*#__PURE__*/_jsxDEV(Spin, {\n            className: \"loading-base\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 6\n      }, this),\n      title: \"S\\u1EEDa/th\\xEAm \\u0111\\xE1p \\xE1n\",\n      visible: isModalVisible,\n      onCancel: handleCancel,\n      children: [dataForm === null || dataForm === void 0 ? void 0 : (_dataForm$ExerciseAns = dataForm.ExerciseAnswer) === null || _dataForm$ExerciseAns === void 0 ? void 0 : _dataForm$ExerciseAns.map((itemAns, index) => itemAns.Enable && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 d-flex align-items-center mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            className: \"mb-0\",\n            style: {\n              width: '80%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: itemAns.AnswerContent,\n              className: \"style-input\",\n              onChange: e => onChange_text(e, itemAns.ID, dataForm.inputID)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-ans\",\n            onClick: () => deleteAnswerItem(itemAns.ID, dataForm.inputID),\n            children: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 10\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this)\n      }, void 0, false)), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Th\\xEAm \\u0111\\xE1p \\xE1n\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-add-answer mt-2\",\n          onClick: () => handleAddAnswer(dataForm.inputID),\n          children: /*#__PURE__*/_jsxDEV(Plus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nconst QuestionTyping = props => {\n  var _dataListQuestion$Exe, _dataListQuestion$Exe2, _dataListQuestion$Exe3;\n\n  const {\n    listQuestion,\n    loadingQuestion,\n    onFetchData,\n    onRemoveData,\n    isGroup,\n    onEditData,\n    listAlphabet,\n    groupID\n  } = props;\n  const [value, setValue] = React.useState(1);\n  const {\n    0: dataListQuestion,\n    1: setDataListQuestion\n  } = useState(null);\n  const {\n    showNoti,\n    userInformation\n  } = useWrap();\n  const {\n    0: visible,\n    1: setVisible\n  } = useState({\n    id: null,\n    status: false\n  });\n  const {\n    0: confirmLoading,\n    1: setConfirmLoading\n  } = useState(false);\n  const {\n    0: loadingInGroup,\n    1: setLoadingInGroup\n  } = useState(false);\n  const {\n    0: dataExercise,\n    1: setDataExercise\n  } = useState([]);\n  const {\n    0: showContent,\n    1: setShowContent\n  } = useState(false);\n\n  const onChange = e => {\n    e.preventDefault(); // setValue(e.target.value);\n  }; // ON EDIT\n\n\n  const onEdit = dataEdit => {\n    onEditData(dataEdit);\n  };\n\n  const deleteQuestionItem = quesID => {\n    !visible.status ? setVisible({\n      id: quesID,\n      status: true\n    }) : setVisible({\n      id: quesID,\n      status: false\n    });\n  }; // Chấp nhận xóa câu hỏi\n\n\n  const handleOk = async data => {\n    var _quesItem$ExerciseLis;\n\n    setConfirmLoading(true);\n    let quesItem = JSON.parse(JSON.stringify(dataListQuestion));\n    quesItem === null || quesItem === void 0 ? void 0 : (_quesItem$ExerciseLis = quesItem.ExerciseList) === null || _quesItem$ExerciseLis === void 0 ? void 0 : _quesItem$ExerciseLis.forEach(item => {\n      item.Enable = false;\n    });\n    quesItem.isDeleteExercise = true;\n    quesItem.Paragraph = '<p><br></p>';\n    quesItem.ExerciseGroupID = null;\n\n    try {\n      let res = await exerciseGroupApi.update(quesItem);\n\n      if (res.status == 200) {\n        setVisible(_objectSpread(_objectSpread({}, visible), {}, {\n          status: false\n        }));\n        onRemoveData(quesItem);\n        showNoti('success', 'Xóa thành công');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setConfirmLoading(false);\n    }\n  };\n\n  const handleCancel = quesID => {\n    setVisible({\n      id: quesID,\n      status: false\n    });\n  };\n\n  const getQuestionInGroup = async () => {\n    setLoadingInGroup(true);\n\n    try {\n      let res = await exerciseGroupApi.getWithID(isGroup.id);\n\n      if (res.status == 200) {\n        setDataListQuestion(res.data.data);\n        let filterExerciseList = res.data.data.ExerciseList.filter(item => item.Enable !== false);\n        setDataExercise([...filterExerciseList]);\n        checkShowContent(res.data.data);\n      }\n\n      res.status == 204 && setDataListQuestion([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoadingInGroup(false);\n    }\n  }; //RETURN INDEX QUESTION - Trả về thứ tự của từng câu hỏi\n\n\n  const returnIndexQuestion = itemQues => {\n    let title = '';\n    let index = dataExercise.findIndex(ex => ex.inputID == itemQues.inputID);\n    title = `Câu (${index + 1})`;\n    return title;\n  };\n\n  const checkShowContent = data => {\n    let preventLoop = false;\n    data.ExerciseList.length == 0 && setShowContent(false);\n    data.ExerciseList.forEach((item, index) => {\n      if (item.Enable) {\n        if (!preventLoop) {\n          setShowContent(true);\n          preventLoop = true;\n        }\n      }\n    });\n\n    if (!preventLoop) {\n      setShowContent(false);\n    }\n  };\n\n  useEffect(() => {\n    if (listQuestion) {\n      checkShowContent(listQuestion);\n      let filterExerciseList = listQuestion === null || listQuestion === void 0 ? void 0 : listQuestion.ExerciseList.filter(item => item.Enable !== false);\n      setDataListQuestion(listQuestion);\n      setDataExercise([...filterExerciseList]);\n    }\n  }, [listQuestion]);\n  useEffect(() => {\n    isGroup.status && setDataListQuestion([]);\n    isGroup.status && isGroup.id && isGroup.id === groupID && getQuestionInGroup();\n\n    if (!isGroup) {\n      return;\n    }\n  }, [isGroup]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail-question-typing\",\n      children: showContent && (dataListQuestion === null || dataListQuestion === void 0 ? void 0 : (_dataListQuestion$Exe = dataListQuestion.ExerciseList) === null || _dataListQuestion$Exe === void 0 ? void 0 : _dataListQuestion$Exe.length) > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paragraph mb-3\",\n          children: ReactHtmlParser(dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.Paragraph)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-action\",\n          children: userInformation && userInformation.RoleID !== 2 && /*#__PURE__*/_jsxDEV(Popconfirm, {\n            title: \"B\\u1EA1n c\\xF3 ch\\u1EAFc mu\\u1ED1n x\\xF3a?\",\n            onConfirm: () => handleOk(dataListQuestion),\n            okButtonProps: {\n              loading: confirmLoading\n            },\n            onCancel: () => handleCancel(dataListQuestion.ID),\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"X\\xF3a h\\u1EBFt c\\xE2u h\\u1ECFi\",\n              placement: \"rightTop\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-icon delete\",\n                onClick: () => deleteQuestionItem(dataListQuestion.ID),\n                children: /*#__PURE__*/_jsxDEV(Trash2, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 4\n    }, this), showContent && (dataListQuestion === null || dataListQuestion === void 0 ? void 0 : (_dataListQuestion$Exe2 = dataListQuestion.ExerciseList) === null || _dataListQuestion$Exe2 === void 0 ? void 0 : _dataListQuestion$Exe2.length) > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-question mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"C\\xE2u h\\u1ECFi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0110\\xE1p \\xE1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: dataListQuestion === null || dataListQuestion === void 0 ? void 0 : (_dataListQuestion$Exe3 = dataListQuestion.ExerciseList) === null || _dataListQuestion$Exe3 === void 0 ? void 0 : _dataListQuestion$Exe3.map((item, index) => {\n          var _item$ExerciseAnswer;\n\n          return item.Enable && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: '20%'\n              },\n              children: returnIndexQuestion(item)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_item$ExerciseAnswer = item.ExerciseAnswer) === null || _item$ExerciseAnswer === void 0 ? void 0 : _item$ExerciseAnswer.map((ans, i) => ans.Enable && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text\",\n                  children: ans.AnswerContent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 16\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 15\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: '10%'\n              },\n              children: /*#__PURE__*/_jsxDEV(EditQuestion, {\n                dataGroup: dataListQuestion,\n                exerciseID: item.ID,\n                onEdit: dataEdit => onEdit(dataEdit)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 11\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 10\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 5\n    }, this), isGroup !== null && isGroup !== void 0 && isGroup.status && loadingInGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 5\n    }, this) : !showContent && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: '#dd4667'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"Nh\\xF3m n\\xE0y ch\\u01B0a c\\xF3 c\\xE2u h\\u1ECFi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 6\n    }, this), loadingQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\nexport default QuestionTyping;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/QuestionBank/QuestionShow/QuestionTyping.tsx"],"names":["React","useEffect","useState","Skeleton","Modal","Popconfirm","Form","Input","Tooltip","Spin","Edit","Trash2","ReactHtmlParser","exerciseGroupApi","useWrap","CloseOutlined","Plus","AnsID","EditQuestion","props","dataGroup","exerciseID","onEdit","isModalVisible","setIsModalVisible","dataForm","setDataForm","indexExercise","setIndexExercise","reloadContent","setReloadContent","showNoti","userInformation","isLoading","setIsLoading","showModal","handleSubmit","newData","JSON","parse","stringify","ExerciseAnswer","forEach","item","isAdd","ID","ExerciseList","res","update","status","error","handleCancel","handleAddAnswer","questionID","push","AnswerContent","isTrue","Enable","onChange_text","e","AnswerID","QuestionID","text","target","value","indexAnswer","findIndex","deleteAnswerItem","splice","loadData","getWithID","data","message","index","newArr","parseInt","Math","max","map","itemAns","width","inputID","QuestionTyping","listQuestion","loadingQuestion","onFetchData","onRemoveData","isGroup","onEditData","listAlphabet","groupID","setValue","dataListQuestion","setDataListQuestion","visible","setVisible","id","confirmLoading","setConfirmLoading","loadingInGroup","setLoadingInGroup","dataExercise","setDataExercise","showContent","setShowContent","onChange","preventDefault","dataEdit","deleteQuestionItem","quesID","handleOk","quesItem","isDeleteExercise","Paragraph","ExerciseGroupID","getQuestionInGroup","filterExerciseList","filter","checkShowContent","returnIndexQuestion","itemQues","title","ex","preventLoop","length","RoleID","loading","ans","i","color"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,UAA1B,EAAsCC,IAAtC,EAA4CC,KAA5C,EAAmDC,OAAnD,EAA4DC,IAA5D,QAAwE,MAAxE;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,eAA7B;AACA,OAAOC,eAAP,MAAiF,mBAAjF;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,eAArB;AAGA,IAAIC,KAAK,GAAG,CAAZ;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,MAAoCH,KAA1C;AACA,QAAM;AAAA,OAACI,cAAD;AAAA,OAAiBC;AAAjB,MAAsCtB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAA,OAACuB,QAAD;AAAA,OAAWC;AAAX,MAA0BxB,QAAQ,CAACkB,SAAD,CAAxC;AACA,QAAM;AAAA,OAACO,aAAD;AAAA,OAAgBC;AAAhB,MAAoC1B,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM;AAAA,OAAC2B,aAAD;AAAA,OAAgBC;AAAhB,MAAoC5B,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAE6B,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAgClB,OAAO,EAA7C;AACA,QAAM;AAAA,OAACmB,SAAD;AAAA,OAAYC;AAAZ,MAA4BhC,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMiC,SAAS,GAAG,MAAM;AACvBX,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,GAFD;;AAIA,QAAMY,YAAY,GAAG,YAAY;AAChCF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,QAAIG,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAef,QAAf,CAAX,CAAd;AACAY,IAAAA,OAAO,CAACI,cAAR,CAAuBC,OAAvB,CAAgCC,IAAD,IAAU;AACxC,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACf,eAAOD,IAAI,CAACE,EAAZ;AACA;AACD,KAJD;AAMAzB,IAAAA,SAAS,CAAC0B,YAAV,CAAuBnB,aAAvB,IAAwCU,OAAxC;;AAEA,QAAI;AACH,UAAIU,GAAG,GAAG,MAAMlC,gBAAgB,CAACmC,MAAjB,CAAwB5B,SAAxB,CAAhB;;AACA,UAAI2B,GAAG,CAACE,MAAJ,IAAc,GAAlB,EAAuB;AACtBnB,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA;AACD,KALD,CAKE,OAAOoB,KAAP,EAAc,CAAE;AAClB,GAlBD;;AAoBA,QAAMC,YAAY,GAAG,MAAM;AAC1B3B,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA,GAFD,CAjC+B,CAqC/B;;;AACA,QAAM4B,eAAe,GAAIC,UAAD,IAAwB;AAC/CpC,IAAAA,KAAK;AACLQ,IAAAA,QAAQ,CAACgB,cAAT,CAAwBa,IAAxB,CAA6B;AAC5BT,MAAAA,EAAE,EAAE5B,KADwB;AAE5BsC,MAAAA,aAAa,EAAE,EAFa;AAG5BC,MAAAA,MAAM,EAAE,IAHoB;AAI5BC,MAAAA,MAAM,EAAE,IAJoB;AAK5Bb,MAAAA,KAAK,EAAE;AALqB,KAA7B;AAQAlB,IAAAA,WAAW,mBAAMD,QAAN,EAAX;AACA,GAXD,CAtC+B,CAmD/B;;;AACA,QAAMiC,aAAa,GAAG,CAACC,CAAD,EAASC,QAAT,EAA2BC,UAA3B,KAA0C;AAC/D,QAAIC,IAAI,GAAGH,CAAC,CAACI,MAAF,CAASC,KAApB;AACA,QAAIC,WAAW,GAAGxC,QAAQ,CAACgB,cAAT,CAAwByB,SAAxB,CAAmCvB,IAAD,IAAUA,IAAI,CAACE,EAAL,IAAWe,QAAvD,CAAlB;AACAnC,IAAAA,QAAQ,CAACgB,cAAT,CAAwBwB,WAAxB,EAAqCV,aAArC,GAAqDO,IAArD;AACApC,IAAAA,WAAW,mBAAMD,QAAN,EAAX;AACA,GALD;;AAOA,QAAM0C,gBAAgB,GAAG,CAACP,QAAD,EAAmBC,UAAnB,KAAkC;AAC1D,QAAII,WAAW,GAAGxC,QAAQ,CAACgB,cAAT,CAAwByB,SAAxB,CAAmCvB,IAAD,IAAUA,IAAI,CAACE,EAAL,IAAWe,QAAvD,CAAlB;;AACA,QAAInC,QAAQ,CAACgB,cAAT,CAAwBwB,WAAxB,EAAqCrB,KAAzC,EAAgD;AAC/CnB,MAAAA,QAAQ,CAACgB,cAAT,CAAwB2B,MAAxB,CAA+BH,WAA/B,EAA4C,CAA5C;AACA,KAFD,MAEO;AACNxC,MAAAA,QAAQ,CAACgB,cAAT,CAAwBwB,WAAxB,EAAqCR,MAArC,GAA8C,KAA9C;AACA;;AAED/B,IAAAA,WAAW,mBAAMD,QAAN,EAAX;AACA,GATD;;AAWAxB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI4B,aAAJ,EAAmB;AAClB;;AAAC,OAAC,eAAewC,QAAf,GAA0B;AAC3B,YAAI;AACH,cAAItB,GAAG,GAAG,MAAMlC,gBAAgB,CAACyD,SAAjB,CAA2BlD,SAAS,CAACyB,EAArC,CAAhB;;AAEA,cAAIE,GAAG,CAACE,MAAJ,IAAc,GAAlB,EAAuB;AACtBlB,YAAAA,QAAQ,CAAC,SAAD,EAAa,YAAb,CAAR;AAEAT,YAAAA,MAAM,IAAIA,MAAM,CAACyB,GAAG,CAACwB,IAAJ,CAASA,IAAV,CAAhB;AACA;;AAEDxB,UAAAA,GAAG,CAACE,MAAJ,IAAc,GAAd,IAAqBlB,QAAQ,CAAC,QAAD,EAAW,kBAAX,CAA7B;AACA,SAVD,CAUE,OAAOmB,KAAP,EAAc;AACfnB,UAAAA,QAAQ,CAAC,QAAD,EAAWmB,KAAK,CAACsB,OAAjB,CAAR;AACA,SAZD,SAYU;AACT1C,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAN,UAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAU,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAR,UAAAA,WAAW,CAAC,IAAD,CAAX;AACA;AACD,OAnBA;AAoBD;AACD,GAvBQ,EAuBN,CAACG,aAAD,CAvBM,CAAT;AAyBA5B,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIsB,cAAJ,EAAoB;AACnB;AACA,UAAIkD,KAAK,GAAGrD,SAAS,CAAC0B,YAAV,CAAuBoB,SAAvB,CAAkCvB,IAAD,IAAUA,IAAI,CAACE,EAAL,IAAWxB,UAAtD,CAAZ;AAEA,UAAIkD,IAAI,GAAGnD,SAAS,CAAC0B,YAAV,CAAuB2B,KAAvB,CAAX;AACA/C,MAAAA,WAAW,CAAC6C,IAAD,CAAX;AACA3C,MAAAA,gBAAgB,CAAC6C,KAAD,CAAhB,CANmB,CAQnB;;AACA,UAAIC,MAAM,GAAG,EAAb;AACAH,MAAAA,IAAI,CAAC9B,cAAL,CAAoBC,OAApB,CAA6BC,IAAD,IAAU;AACrC+B,QAAAA,MAAM,CAACpB,IAAP,CAAYqB,QAAQ,CAAChC,IAAI,CAACE,EAAN,CAApB;AACA,OAFD;AAGA5B,MAAAA,KAAK,GAAG2D,IAAI,CAACC,GAAL,CAAS,GAAGH,MAAZ,CAAR;AACA;AACD,GAhBQ,EAgBN,CAACnD,cAAD,CAhBM,CAAT;AAkBA,sBACC;AAAA,4BACC,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,oCAAf;AAAA,6BACC;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAEY,SAA/C;AAAA,+BACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAMC,QAAC,KAAD;AACC,MAAA,MAAM,eACL;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACC;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAuC,UAAA,OAAO,EAAEgB,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAE,MAAMf,YAAY,EAA/D;AAAA,iCAEEH,SAAS,iBAAI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAFf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAYC,MAAA,KAAK,EAAC,oCAZP;AAaC,MAAA,OAAO,EAAEV,cAbV;AAcC,MAAA,QAAQ,EAAE4B,YAdX;AAAA,iBAgBE1B,QAhBF,aAgBEA,QAhBF,gDAgBEA,QAAQ,CAAEgB,cAhBZ,0DAgBE,sBAA0BqC,GAA1B,CACA,CAACC,OAAD,EAAUN,KAAV,KACCM,OAAO,CAACtB,MAAR,iBACC;AAAA,+BACC;AAAK,UAAA,SAAS,EAAC,sCAAf;AAAA,kCACC,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,SAAS,EAAC,MAArB;AAA4B,YAAA,KAAK,EAAE;AAAEuB,cAAAA,KAAK,EAAE;AAAT,aAAnC;AAAA,mCACC,QAAC,KAAD;AACC,cAAA,KAAK,EAAED,OAAO,CAACxB,aADhB;AAEC,cAAA,SAAS,EAAC,aAFX;AAGC,cAAA,QAAQ,EAAGI,CAAD,IAAOD,aAAa,CAACC,CAAD,EAAIoB,OAAO,CAAClC,EAAZ,EAAgBpB,QAAQ,CAACwD,OAAzB;AAH/B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBADD,eAQC;AAAQ,YAAA,SAAS,EAAC,YAAlB;AAA+B,YAAA,OAAO,EAAE,MAAMd,gBAAgB,CAACY,OAAO,CAAClC,EAAT,EAAapB,QAAQ,CAACwD,OAAtB,CAA9D;AAAA,mCACC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBARD;AAAA,WAA2DR,KAA3D;AAAA;AAAA;AAAA;AAAA;AADD,uBAHF,CAhBF,eAmCC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,2BAAf;AAAA,+BACC;AAAQ,UAAA,SAAS,EAAC,qBAAlB;AAAwC,UAAA,OAAO,EAAE,MAAMrB,eAAe,CAAC3B,QAAQ,CAACwD,OAAV,CAAtE;AAAA,iCACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAnCD;AAAA;AAAA;AAAA;AAAA;AAAA,YAND;AAAA,kBADD;AAkDA,CAnKD;;AAqKA,MAAMC,cAAc,GAAI/D,KAAD,IAAgB;AAAA;;AACtC,QAAM;AAAEgE,IAAAA,YAAF;AAAgBC,IAAAA,eAAhB;AAAiCC,IAAAA,WAAjC;AAA8CC,IAAAA,YAA9C;AAA4DC,IAAAA,OAA5D;AAAqEC,IAAAA,UAArE;AAAiFC,IAAAA,YAAjF;AAA+FC,IAAAA;AAA/F,MAA2GvE,KAAjH;AACA,QAAM,CAAC6C,KAAD,EAAQ2B,QAAR,IAAoB3F,KAAK,CAACE,QAAN,CAAe,CAAf,CAA1B;AACA,QAAM;AAAA,OAAC0F,gBAAD;AAAA,OAAmBC;AAAnB,MAA0C3F,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM;AAAE6B,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAgClB,OAAO,EAA7C;AACA,QAAM;AAAA,OAACgF,OAAD;AAAA,OAAUC;AAAV,MAAwB7F,QAAQ,CAAC;AACtC8F,IAAAA,EAAE,EAAE,IADkC;AAEtC/C,IAAAA,MAAM,EAAE;AAF8B,GAAD,CAAtC;AAIA,QAAM;AAAA,OAACgD,cAAD;AAAA,OAAiBC;AAAjB,MAAsChG,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAA,OAACiG,cAAD;AAAA,OAAiBC;AAAjB,MAAsClG,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAA,OAACmG,YAAD;AAAA,OAAeC;AAAf,MAAkCpG,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACqG,WAAD;AAAA,OAAcC;AAAd,MAAgCtG,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMuG,QAAQ,GAAI9C,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAAC+C,cAAF,GADuB,CAEvB;AACA,GAHD,CAdsC,CAmBtC;;;AACA,QAAMpF,MAAM,GAAIqF,QAAD,IAAc;AAC5BnB,IAAAA,UAAU,CAACmB,QAAD,CAAV;AACA,GAFD;;AAIA,QAAMC,kBAAkB,GAAIC,MAAD,IAAY;AACtC,KAACf,OAAO,CAAC7C,MAAT,GACG8C,UAAU,CAAC;AACXC,MAAAA,EAAE,EAAEa,MADO;AAEX5D,MAAAA,MAAM,EAAE;AAFG,KAAD,CADb,GAKG8C,UAAU,CAAC;AACXC,MAAAA,EAAE,EAAEa,MADO;AAEX5D,MAAAA,MAAM,EAAE;AAFG,KAAD,CALb;AASA,GAVD,CAxBsC,CAoCtC;;;AACA,QAAM6D,QAAQ,GAAG,MAAOvC,IAAP,IAAgB;AAAA;;AAChC2B,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AAEA,QAAIa,QAAQ,GAAGzE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeoD,gBAAf,CAAX,CAAf;AAEAmB,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,qCAAAA,QAAQ,CAAEjE,YAAV,gFAAwBJ,OAAxB,CAAiCC,IAAD,IAAU;AACzCA,MAAAA,IAAI,CAACc,MAAL,GAAc,KAAd;AACA,KAFD;AAGAsD,IAAAA,QAAQ,CAACC,gBAAT,GAA4B,IAA5B;AACAD,IAAAA,QAAQ,CAACE,SAAT,GAAqB,aAArB;AACAF,IAAAA,QAAQ,CAACG,eAAT,GAA2B,IAA3B;;AAEA,QAAI;AACH,UAAInE,GAAG,GAAG,MAAMlC,gBAAgB,CAACmC,MAAjB,CAAwB+D,QAAxB,CAAhB;;AACA,UAAIhE,GAAG,CAACE,MAAJ,IAAc,GAAlB,EAAuB;AACtB8C,QAAAA,UAAU,iCACND,OADM;AAET7C,UAAAA,MAAM,EAAE;AAFC,WAAV;AAIAqC,QAAAA,YAAY,CAACyB,QAAD,CAAZ;AACAhF,QAAAA,QAAQ,CAAC,SAAD,EAAY,gBAAZ,CAAR;AACA;AACD,KAVD,CAUE,OAAOmB,KAAP,EAAc;AACfnB,MAAAA,QAAQ,CAAC,QAAD,EAAWmB,KAAK,CAACsB,OAAjB,CAAR;AACA,KAZD,SAYU;AACT0B,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA;AACD,GA3BD;;AA6BA,QAAM/C,YAAY,GAAI0D,MAAD,IAAY;AAChCd,IAAAA,UAAU,CAAC;AACVC,MAAAA,EAAE,EAAEa,MADM;AAEV5D,MAAAA,MAAM,EAAE;AAFE,KAAD,CAAV;AAIA,GALD;;AAOA,QAAMkE,kBAAkB,GAAG,YAAY;AACtCf,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;;AAEA,QAAI;AACH,UAAIrD,GAAG,GAAG,MAAMlC,gBAAgB,CAACyD,SAAjB,CAA2BiB,OAAO,CAACS,EAAnC,CAAhB;;AACA,UAAIjD,GAAG,CAACE,MAAJ,IAAc,GAAlB,EAAuB;AACtB4C,QAAAA,mBAAmB,CAAC9C,GAAG,CAACwB,IAAJ,CAASA,IAAV,CAAnB;AACA,YAAI6C,kBAAkB,GAAGrE,GAAG,CAACwB,IAAJ,CAASA,IAAT,CAAczB,YAAd,CAA2BuE,MAA3B,CAAmC1E,IAAD,IAAUA,IAAI,CAACc,MAAL,KAAgB,KAA5D,CAAzB;AACA6C,QAAAA,eAAe,CAAC,CAAC,GAAGc,kBAAJ,CAAD,CAAf;AACAE,QAAAA,gBAAgB,CAACvE,GAAG,CAACwB,IAAJ,CAASA,IAAV,CAAhB;AACA;;AAEDxB,MAAAA,GAAG,CAACE,MAAJ,IAAc,GAAd,IAAqB4C,mBAAmB,CAAC,EAAD,CAAxC;AACA,KAVD,CAUE,OAAO3C,KAAP,EAAc;AACfnB,MAAAA,QAAQ,CAAC,QAAD,EAAWmB,KAAK,CAACsB,OAAjB,CAAR;AACA,KAZD,SAYU;AACT4B,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA;AACD,GAlBD,CAzEsC,CA6FtC;;;AACA,QAAMmB,mBAAmB,GAAIC,QAAD,IAAc;AACzC,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIhD,KAAK,GAAG4B,YAAY,CAACnC,SAAb,CAAwBwD,EAAD,IAAQA,EAAE,CAACzC,OAAH,IAAcuC,QAAQ,CAACvC,OAAtD,CAAZ;AACAwC,IAAAA,KAAK,GAAI,QAAOhD,KAAK,GAAG,CAAE,GAA1B;AACA,WAAOgD,KAAP;AACA,GALD;;AAOA,QAAMH,gBAAgB,GAAI/C,IAAD,IAAU;AAClC,QAAIoD,WAAW,GAAG,KAAlB;AACApD,IAAAA,IAAI,CAACzB,YAAL,CAAkB8E,MAAlB,IAA4B,CAA5B,IAAiCpB,cAAc,CAAC,KAAD,CAA/C;AACAjC,IAAAA,IAAI,CAACzB,YAAL,CAAkBJ,OAAlB,CAA0B,CAACC,IAAD,EAAO8B,KAAP,KAAiB;AAC1C,UAAI9B,IAAI,CAACc,MAAT,EAAiB;AAChB,YAAI,CAACkE,WAAL,EAAkB;AACjBnB,UAAAA,cAAc,CAAC,IAAD,CAAd;AACAmB,UAAAA,WAAW,GAAG,IAAd;AACA;AACD;AACD,KAPD;;AASA,QAAI,CAACA,WAAL,EAAkB;AACjBnB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA;AACD,GAfD;;AAiBAvG,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIkF,YAAJ,EAAkB;AACjBmC,MAAAA,gBAAgB,CAACnC,YAAD,CAAhB;AACA,UAAIiC,kBAAkB,GAAGjC,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAErC,YAAd,CAA2BuE,MAA3B,CAAmC1E,IAAD,IAAUA,IAAI,CAACc,MAAL,KAAgB,KAA5D,CAAzB;AACAoC,MAAAA,mBAAmB,CAACV,YAAD,CAAnB;AACAmB,MAAAA,eAAe,CAAC,CAAC,GAAGc,kBAAJ,CAAD,CAAf;AACA;AACD,GAPQ,EAON,CAACjC,YAAD,CAPM,CAAT;AASAlF,EAAAA,SAAS,CAAC,MAAM;AACfsF,IAAAA,OAAO,CAACtC,MAAR,IAAkB4C,mBAAmB,CAAC,EAAD,CAArC;AACAN,IAAAA,OAAO,CAACtC,MAAR,IAAkBsC,OAAO,CAACS,EAA1B,IAAgCT,OAAO,CAACS,EAAR,KAAeN,OAA/C,IAA0DyB,kBAAkB,EAA5E;;AACA,QAAI,CAAC5B,OAAL,EAAc;AACb;AACA;AACD,GANQ,EAMN,CAACA,OAAD,CANM,CAAT;AAQA,sBACC;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,gBACEgB,WAAW,IAAI,CAAAX,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,qCAAAA,gBAAgB,CAAE9C,YAAlB,gFAAgC8E,MAAhC,IAAyC,CAAxD,iBACA;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBAAiChH,eAAe,CAACgF,gBAAD,aAACA,gBAAD,uBAACA,gBAAgB,CAAEqB,SAAnB;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAOEjF,eAAe,IAAIA,eAAe,CAAC6F,MAAhB,KAA2B,CAA9C,iBACA,QAAC,UAAD;AACC,YAAA,KAAK,EAAC,4CADP;AAEC,YAAA,SAAS,EAAE,MAAMf,QAAQ,CAAClB,gBAAD,CAF1B;AAGC,YAAA,aAAa,EAAE;AAAEkC,cAAAA,OAAO,EAAE7B;AAAX,aAHhB;AAIC,YAAA,QAAQ,EAAE,MAAM9C,YAAY,CAACyC,gBAAgB,CAAC/C,EAAlB,CAJ7B;AAAA,mCAMC,QAAC,OAAD;AAAS,cAAA,KAAK,EAAC,iCAAf;AAAiC,cAAA,SAAS,EAAC,UAA3C;AAAA,qCACC;AAAQ,gBAAA,SAAS,EAAC,qBAAlB;AAAwC,gBAAA,OAAO,EAAE,MAAM+D,kBAAkB,CAAChB,gBAAgB,CAAC/C,EAAlB,CAAzE;AAAA,uCACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAND;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADD,EA+BE0D,WAAW,IAAI,CAAAX,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,sCAAAA,gBAAgB,CAAE9C,YAAlB,kFAAgC8E,MAAhC,IAAyC,CAAxD,iBACA;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA,8BACC;AAAA,+BACC;AAAA,kCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC;AAAA;AAAA;AAAA;AAAA,kBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAQC;AAAA,kBACEhC,gBADF,aACEA,gBADF,iDACEA,gBAAgB,CAAE9C,YADpB,2DACE,uBAAgCgC,GAAhC,CACA,CAACnC,IAAD,EAAO8B,KAAP;AAAA;;AAAA,iBACC9B,IAAI,CAACc,MAAL,iBACC;AAAA,oCACC;AAAI,cAAA,KAAK,EAAE;AAAEuB,gBAAAA,KAAK,EAAE;AAAT,eAAX;AAAA,wBACEuC,mBAAmB,CAAC5E,IAAD;AADrB;AAAA;AAAA;AAAA;AAAA,oBADD,eAKC;AAAA,gDACEA,IAAI,CAACF,cADP,yDACE,qBAAqBqC,GAArB,CACA,CAACiD,GAAD,EAAMC,CAAN,KACCD,GAAG,CAACtE,MAAJ,iBACC;AAAA,uCAEC;AAAM,kBAAA,SAAS,EAAC,MAAhB;AAAA,4BAAwBsE,GAAG,CAACxE;AAA5B;AAAA;AAAA;AAAA;AAAA;AAFD,iBAAUyE,CAAV;AAAA;AAAA;AAAA;AAAA,sBAHF;AADF;AAAA;AAAA;AAAA;AAAA,oBALD,eAgBC;AAAI,cAAA,KAAK,EAAE;AAAEhD,gBAAAA,KAAK,EAAE;AAAT,eAAX;AAAA,qCACE,QAAC,YAAD;AAAc,gBAAA,SAAS,EAAEY,gBAAzB;AAA2C,gBAAA,UAAU,EAAEjD,IAAI,CAACE,EAA5D;AAAgE,gBAAA,MAAM,EAAG8D,QAAD,IAAcrF,MAAM,CAACqF,QAAD;AAA5F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAhBD;AAAA,aAASlC,KAAT;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,SADA;AADF;AAAA;AAAA;AAAA;AAAA,cARD;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCF,EAsEEc,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAEtC,MAAT,IAAmBkD,cAAnB,gBACA;AAAA,6BACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADA,GAKA,CAACI,WAAD,iBACC;AAAG,MAAA,KAAK,EAAE;AAAE0B,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YA5EH,EAiFE7C,eAAe,iBACf;AAAA,6BACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAlFF;AAAA,kBADD;AAyFA,CAhOD;;AAkOA,eAAeF,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Skeleton, Modal, Popconfirm, Form, Input, Tooltip, Spin } from 'antd'\r\nimport { Edit, Trash2 } from 'react-feather'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser'\r\nimport { exerciseGroupApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { CloseOutlined } from '@ant-design/icons'\r\nimport { Plus } from 'react-feather'\r\nimport { data } from '~/lib/customer-student/data'\r\n\r\nlet AnsID = 0\r\n\r\nconst EditQuestion = (props) => {\r\n\tconst { dataGroup, exerciseID, onEdit } = props\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst [dataForm, setDataForm] = useState(dataGroup)\r\n\tconst [indexExercise, setIndexExercise] = useState(null)\r\n\tconst [reloadContent, setReloadContent] = useState(false)\r\n\tconst { showNoti, userInformation } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\r\n\tconst showModal = () => {\r\n\t\tsetIsModalVisible(true)\r\n\t}\r\n\r\n\tconst handleSubmit = async () => {\r\n\t\tsetIsLoading(true)\r\n\r\n\t\tlet newData = JSON.parse(JSON.stringify(dataForm))\r\n\t\tnewData.ExerciseAnswer.forEach((item) => {\r\n\t\t\tif (item.isAdd) {\r\n\t\t\t\tdelete item.ID\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tdataGroup.ExerciseList[indexExercise] = newData\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseGroupApi.update(dataGroup)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetReloadContent(true)\r\n\t\t\t}\r\n\t\t} catch (error) {}\r\n\t}\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false)\r\n\t}\r\n\r\n\t// ====== HANDLE ADD ANSWER ======\r\n\tconst handleAddAnswer = (questionID: number) => {\r\n\t\tAnsID++\r\n\t\tdataForm.ExerciseAnswer.push({\r\n\t\t\tID: AnsID,\r\n\t\t\tAnswerContent: '',\r\n\t\t\tisTrue: true,\r\n\t\t\tEnable: true,\r\n\t\t\tisAdd: true\r\n\t\t})\r\n\r\n\t\tsetDataForm({ ...dataForm })\r\n\t}\r\n\r\n\t// ====== HANDLE ON CHANGE ======\r\n\tconst onChange_text = (e: any, AnswerID: number, QuestionID) => {\r\n\t\tlet text = e.target.value\r\n\t\tlet indexAnswer = dataForm.ExerciseAnswer.findIndex((item) => item.ID == AnswerID)\r\n\t\tdataForm.ExerciseAnswer[indexAnswer].AnswerContent = text\r\n\t\tsetDataForm({ ...dataForm })\r\n\t}\r\n\r\n\tconst deleteAnswerItem = (AnswerID: number, QuestionID) => {\r\n\t\tlet indexAnswer = dataForm.ExerciseAnswer.findIndex((item) => item.ID == AnswerID)\r\n\t\tif (dataForm.ExerciseAnswer[indexAnswer].isAdd) {\r\n\t\t\tdataForm.ExerciseAnswer.splice(indexAnswer, 1)\r\n\t\t} else {\r\n\t\t\tdataForm.ExerciseAnswer[indexAnswer].Enable = false\r\n\t\t}\r\n\r\n\t\tsetDataForm({ ...dataForm })\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (reloadContent) {\r\n\t\t\t;(async function loadData() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet res = await exerciseGroupApi.getWithID(dataGroup.ID)\r\n\r\n\t\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\t\tshowNoti('success', `Thành công`)\r\n\r\n\t\t\t\t\t\tonEdit && onEdit(res.data.data)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tres.status == 204 && showNoti('danger', 'Không thành công')\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tsetReloadContent(false)\r\n\t\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\t\tsetIsLoading(false)\r\n\t\t\t\t\tsetDataForm(null)\r\n\t\t\t\t}\r\n\t\t\t})()\r\n\t\t}\r\n\t}, [reloadContent])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isModalVisible) {\r\n\t\t\t// Make new data\r\n\t\t\tlet index = dataGroup.ExerciseList.findIndex((item) => item.ID == exerciseID)\r\n\r\n\t\t\tlet data = dataGroup.ExerciseList[index]\r\n\t\t\tsetDataForm(data)\r\n\t\t\tsetIndexExercise(index)\r\n\r\n\t\t\t// Find max id in arr\r\n\t\t\tlet newArr = []\r\n\t\t\tdata.ExerciseAnswer.forEach((item) => {\r\n\t\t\t\tnewArr.push(parseInt(item.ID))\r\n\t\t\t})\r\n\t\t\tAnsID = Math.max(...newArr)\r\n\t\t}\r\n\t}, [isModalVisible])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tooltip title=\"Thêm/sửa đáp án\">\r\n\t\t\t\t<button className=\"btn btn-icon edit\" onClick={showModal}>\r\n\t\t\t\t\t<Edit />\r\n\t\t\t\t</button>\r\n\t\t\t</Tooltip>\r\n\t\t\t<Modal\r\n\t\t\t\tfooter={\r\n\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t<button className=\"btn btn-light mr-2\" onClick={handleCancel}>\r\n\t\t\t\t\t\t\tHủy tác vụ\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={() => handleSubmit()}>\r\n\t\t\t\t\t\t\tLưu\r\n\t\t\t\t\t\t\t{isLoading && <Spin className=\"loading-base\" />}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\ttitle=\"Sửa/thêm đáp án\"\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t>\r\n\t\t\t\t{dataForm?.ExerciseAnswer?.map(\r\n\t\t\t\t\t(itemAns, index) =>\r\n\t\t\t\t\t\titemAns.Enable && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<div className=\"w-100 d-flex align-items-center mt-2\" key={index}>\r\n\t\t\t\t\t\t\t\t\t<Form.Item className=\"mb-0\" style={{ width: '80%' }}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={itemAns.AnswerContent}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => onChange_text(e, itemAns.ID, dataForm.inputID)}\r\n\t\t\t\t\t\t\t\t\t\t></Input>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t<button className=\"delete-ans\" onClick={() => deleteAnswerItem(itemAns.ID, dataForm.inputID)}>\r\n\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t\t<Tooltip title=\"Thêm đáp án\">\r\n\t\t\t\t\t<button className=\"btn-add-answer mt-2\" onClick={() => handleAddAnswer(dataForm.inputID)}>\r\n\t\t\t\t\t\t<Plus />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst QuestionTyping = (props: any) => {\r\n\tconst { listQuestion, loadingQuestion, onFetchData, onRemoveData, isGroup, onEditData, listAlphabet, groupID } = props\r\n\tconst [value, setValue] = React.useState(1)\r\n\tconst [dataListQuestion, setDataListQuestion] = useState(null)\r\n\tconst { showNoti, userInformation } = useWrap()\r\n\tconst [visible, setVisible] = useState({\r\n\t\tid: null,\r\n\t\tstatus: false\r\n\t})\r\n\tconst [confirmLoading, setConfirmLoading] = useState(false)\r\n\tconst [loadingInGroup, setLoadingInGroup] = useState(false)\r\n\tconst [dataExercise, setDataExercise] = useState([])\r\n\tconst [showContent, setShowContent] = useState(false)\r\n\r\n\tconst onChange = (e) => {\r\n\t\te.preventDefault()\r\n\t\t// setValue(e.target.value);\r\n\t}\r\n\r\n\t// ON EDIT\r\n\tconst onEdit = (dataEdit) => {\r\n\t\tonEditData(dataEdit)\r\n\t}\r\n\r\n\tconst deleteQuestionItem = (quesID) => {\r\n\t\t!visible.status\r\n\t\t\t? setVisible({\r\n\t\t\t\t\tid: quesID,\r\n\t\t\t\t\tstatus: true\r\n\t\t\t  })\r\n\t\t\t: setVisible({\r\n\t\t\t\t\tid: quesID,\r\n\t\t\t\t\tstatus: false\r\n\t\t\t  })\r\n\t}\r\n\r\n\t// Chấp nhận xóa câu hỏi\r\n\tconst handleOk = async (data) => {\r\n\t\tsetConfirmLoading(true)\r\n\r\n\t\tlet quesItem = JSON.parse(JSON.stringify(dataListQuestion))\r\n\r\n\t\tquesItem?.ExerciseList?.forEach((item) => {\r\n\t\t\titem.Enable = false\r\n\t\t})\r\n\t\tquesItem.isDeleteExercise = true\r\n\t\tquesItem.Paragraph = '<p><br></p>'\r\n\t\tquesItem.ExerciseGroupID = null\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseGroupApi.update(quesItem)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetVisible({\r\n\t\t\t\t\t...visible,\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t\tonRemoveData(quesItem)\r\n\t\t\t\tshowNoti('success', 'Xóa thành công')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetConfirmLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleCancel = (quesID) => {\r\n\t\tsetVisible({\r\n\t\t\tid: quesID,\r\n\t\t\tstatus: false\r\n\t\t})\r\n\t}\r\n\r\n\tconst getQuestionInGroup = async () => {\r\n\t\tsetLoadingInGroup(true)\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseGroupApi.getWithID(isGroup.id)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetDataListQuestion(res.data.data)\r\n\t\t\t\tlet filterExerciseList = res.data.data.ExerciseList.filter((item) => item.Enable !== false)\r\n\t\t\t\tsetDataExercise([...filterExerciseList])\r\n\t\t\t\tcheckShowContent(res.data.data)\r\n\t\t\t}\r\n\r\n\t\t\tres.status == 204 && setDataListQuestion([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingInGroup(false)\r\n\t\t}\r\n\t}\r\n\r\n\t//RETURN INDEX QUESTION - Trả về thứ tự của từng câu hỏi\r\n\tconst returnIndexQuestion = (itemQues) => {\r\n\t\tlet title = ''\r\n\t\tlet index = dataExercise.findIndex((ex) => ex.inputID == itemQues.inputID)\r\n\t\ttitle = `Câu (${index + 1})`\r\n\t\treturn title\r\n\t}\r\n\r\n\tconst checkShowContent = (data) => {\r\n\t\tlet preventLoop = false\r\n\t\tdata.ExerciseList.length == 0 && setShowContent(false)\r\n\t\tdata.ExerciseList.forEach((item, index) => {\r\n\t\t\tif (item.Enable) {\r\n\t\t\t\tif (!preventLoop) {\r\n\t\t\t\t\tsetShowContent(true)\r\n\t\t\t\t\tpreventLoop = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (!preventLoop) {\r\n\t\t\tsetShowContent(false)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (listQuestion) {\r\n\t\t\tcheckShowContent(listQuestion)\r\n\t\t\tlet filterExerciseList = listQuestion?.ExerciseList.filter((item) => item.Enable !== false)\r\n\t\t\tsetDataListQuestion(listQuestion)\r\n\t\t\tsetDataExercise([...filterExerciseList])\r\n\t\t}\r\n\t}, [listQuestion])\r\n\r\n\tuseEffect(() => {\r\n\t\tisGroup.status && setDataListQuestion([])\r\n\t\tisGroup.status && isGroup.id && isGroup.id === groupID && getQuestionInGroup()\r\n\t\tif (!isGroup) {\r\n\t\t\treturn\r\n\t\t}\r\n\t}, [isGroup])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"detail-question-typing\">\r\n\t\t\t\t{showContent && dataListQuestion?.ExerciseList?.length > 0 && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"paragraph mb-3\">{ReactHtmlParser(dataListQuestion?.Paragraph)}</div>\r\n\t\t\t\t\t\t<div className=\"box-action\">\r\n\t\t\t\t\t\t\t{/* <CreateQuestionForm\r\n                isGroup={{ status: false, id: dataListQuestion?.ID }}\r\n                questionData={dataListQuestion}\r\n                onFetchData={onFetchData}\r\n                onEditData={(data) => onEditData(data)}\r\n              /> */}\r\n\t\t\t\t\t\t\t{userInformation && userInformation.RoleID !== 2 && (\r\n\t\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\t\ttitle=\"Bạn có chắc muốn xóa?\"\r\n\t\t\t\t\t\t\t\t\tonConfirm={() => handleOk(dataListQuestion)}\r\n\t\t\t\t\t\t\t\t\tokButtonProps={{ loading: confirmLoading }}\r\n\t\t\t\t\t\t\t\t\tonCancel={() => handleCancel(dataListQuestion.ID)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip title=\"Xóa hết câu hỏi\" placement=\"rightTop\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-icon delete\" onClick={() => deleteQuestionItem(dataListQuestion.ID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Trash2 />\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t{showContent && dataListQuestion?.ExerciseList?.length > 0 && (\r\n\t\t\t\t<table className=\"table-question mt-3\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Câu hỏi</th>\r\n\t\t\t\t\t\t\t<th>Đáp án</th>\r\n\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{dataListQuestion?.ExerciseList?.map(\r\n\t\t\t\t\t\t\t(item, index) =>\r\n\t\t\t\t\t\t\t\titem.Enable && (\r\n\t\t\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<td style={{ width: '20%' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{returnIndexQuestion(item)}\r\n\t\t\t\t\t\t\t\t\t\t\t{/* {`Câu (${index + 1})`} */}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.ExerciseAnswer?.map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(ans, i) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tans.Enable && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span className=\"tick\">- </span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text\">{ans.AnswerContent}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td style={{ width: '10%' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{<EditQuestion dataGroup={dataListQuestion} exerciseID={item.ID} onEdit={(dataEdit) => onEdit(dataEdit)} />}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t)}\r\n\r\n\t\t\t{isGroup?.status && loadingInGroup ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Skeleton />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t!showContent && (\r\n\t\t\t\t\t<p style={{ color: '#dd4667' }}>\r\n\t\t\t\t\t\t<i>Nhóm này chưa có câu hỏi</i>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t\t{loadingQuestion && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Skeleton />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default QuestionTyping\r\n"]},"metadata":{},"sourceType":"module"}
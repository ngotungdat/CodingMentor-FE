{"ast":null,"code":"import _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\FormControl\\\\CheckboxField\\\\index.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Form } from 'antd';\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Controller } from 'react-hook-form';\n\nvar CheckboxField = function CheckboxField(props) {\n  var _errors$name;\n\n  var form = props.form,\n      name = props.name,\n      label = props.label,\n      text = props.text,\n      disabled = props.disabled,\n      handleChangeCheckbox = props.handleChangeCheckbox,\n      style = props.style,\n      className = props.className;\n  var errors = form.formState.errors;\n  var hasError = errors[name];\n\n  var checkHandleChangeCheckbox = function checkHandleChangeCheckbox(value) {\n    if (!handleChangeCheckbox) return;\n    handleChangeCheckbox(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form.Item, {\n    style: style,\n    label: label,\n    className: \"\".concat(className, \" \").concat(hasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''),\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      name: name,\n      control: form.control,\n      render: function render(_ref) {\n        var field = _ref.field;\n        return /*#__PURE__*/_jsxDEV(Checkbox, _objectSpread(_objectSpread({}, field), {}, {\n          disabled: disabled,\n          checked: field.value,\n          onChange: function onChange(e) {\n            checkHandleChangeCheckbox(e.target.checked);\n            field.onChange(e.target.checked);\n          },\n          children: text\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, _this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ant-form-item-explain ant-form-item-explain-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = CheckboxField;\nCheckboxField.propTypes = {\n  form: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  text: PropTypes.string,\n  disabled: PropTypes.bool,\n  handleChangeCheckbox: PropTypes.func,\n  style: PropTypes.shape({}),\n  className: PropTypes.string\n};\nCheckboxField.defaultProps = {\n  label: '',\n  text: '',\n  disabled: false,\n  handleChangeCheckbox: null,\n  style: {},\n  className: ''\n};\nexport default CheckboxField;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxField\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/FormControl/CheckboxField/index.tsx"],"names":["Form","Checkbox","PropTypes","React","Controller","CheckboxField","props","form","name","label","text","disabled","handleChangeCheckbox","style","className","errors","formState","hasError","checkHandleChangeCheckbox","value","control","field","e","target","checked","onChange","message","propTypes","object","isRequired","string","bool","func","shape","defaultProps"],"mappings":"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","sourcesContent":["import {Form} from 'antd';\r\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {Controller} from 'react-hook-form';\r\n\r\nconst CheckboxField = (props) => {\r\n\tconst {\r\n\t\tform,\r\n\t\tname,\r\n\t\tlabel,\r\n\t\ttext,\r\n\t\tdisabled,\r\n\t\thandleChangeCheckbox,\r\n\t\tstyle,\r\n\t\tclassName,\r\n\t} = props;\r\n\r\n\tconst {errors} = form.formState;\r\n\tconst hasError = errors[name];\r\n\r\n\tconst checkHandleChangeCheckbox = (value) => {\r\n\t\tif (!handleChangeCheckbox) return;\r\n\t\thandleChangeCheckbox(value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form.Item\r\n\t\t\tstyle={style}\r\n\t\t\tlabel={label}\r\n\t\t\tclassName={`${className} ${\r\n\t\t\t\thasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''\r\n\t\t\t}`}\r\n\t\t>\r\n\t\t\t<Controller\r\n\t\t\t\tname={name}\r\n\t\t\t\tcontrol={form.control}\r\n\t\t\t\trender={({field}) => (\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t\tchecked={field.value}\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tcheckHandleChangeCheckbox(e.target.checked);\r\n\t\t\t\t\t\t\tfield.onChange(e.target.checked);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{text}\r\n\t\t\t\t\t</Checkbox>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t\t{hasError && (\r\n\t\t\t\t<div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n\t\t\t\t\t<div role=\"alert\">{errors[name]?.message}</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Form.Item>\r\n\t);\r\n};\r\nCheckboxField.propTypes = {\r\n\tform: PropTypes.object.isRequired,\r\n\tname: PropTypes.string.isRequired,\r\n\tlabel: PropTypes.string,\r\n\ttext: PropTypes.string,\r\n\tdisabled: PropTypes.bool,\r\n\thandleChangeCheckbox: PropTypes.func,\r\n\tstyle: PropTypes.shape({}),\r\n\tclassName: PropTypes.string,\r\n};\r\nCheckboxField.defaultProps = {\r\n\tlabel: '',\r\n\ttext: '',\r\n\tdisabled: false,\r\n\thandleChangeCheckbox: null,\r\n\tstyle: {},\r\n\tclassName: '',\r\n};\r\nexport default CheckboxField;\r\n"]},"metadata":{},"sourceType":"module"}
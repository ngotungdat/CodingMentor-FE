{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Option\\\\ConfigVoucherInvoice\\\\VourcherInvoice.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { configApi } from '~/apiBase';\nimport ConfigVoucherInvoiceForm from '~/components/Global/Option/ConfigVoucherInvoice/ConfigVoucherInvoiceForm';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nimport ReactHtmlParser from 'react-html-parser';\nimport ExpandTable from '~/components/ExpandTable';\nimport TitlePage from '~/components/TitlePage';\n\nconst ConfigVoucherInvoice = () => {\n  const {\n    0: dataTable,\n    1: setDataTable\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: activeColumnSearch,\n    1: setActiveColumnSearch\n  } = useState(''); // FILTER\n\n  const listFieldInit = {\n    pageIndex: 1,\n    pageSize: pageSize,\n    Type: null\n  };\n  let refValue = useRef({\n    pageIndex: 1,\n    pageSize: 10\n  });\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(listFieldInit);\n  const optionFormList = [{\n    title: 'Phiếu chi',\n    value: 1\n  }, {\n    title: 'Phiếu thu',\n    value: 2\n  }, {\n    title: 'Mẫu mail sắp tới giờ học',\n    value: 3\n  }, {\n    title: 'Mẫu mail được thêm vào khóa học mới',\n    value: 5\n  }, {\n    title: 'Mẫu mail lịch học thay đổi',\n    value: 6\n  }, {\n    title: 'Mẫu mail bài tập đã chấm',\n    value: 7\n  }, {\n    title: 'Mẫu mail sắp tới lịch dạy',\n    value: 8\n  }, {\n    title: 'Mẫu mail được chỉ định dạy khóa mới',\n    value: 9\n  }, {\n    title: 'Mẫu mail có bài tập cần chấm',\n    value: 10\n  }, {\n    title: 'Mẫu mail tạo được tài khoản mới',\n    value: 11\n  }]; // PAGINATION\n\n  const getPagination = (pageIndex, pageSize) => {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize,\n      pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  }; // RESET SEARCH\n\n\n  const onResetSearch = () => {\n    setActiveColumnSearch('');\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), {}, {\n      pageSize: refValue.current.pageSize\n    }));\n  }; // ACTION SEARCH\n\n\n  const onSearch = (valueSearch, dataIndex) => {\n    setActiveColumnSearch(dataIndex);\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1,\n      [dataIndex]: valueSearch\n    }));\n  };\n\n  const getDataTable = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await configApi.getAll(filters);\n\n      if (res.status === 200) {\n        setDataTable(res.data.data);\n      }\n\n      if (res.status === 204) {\n        setDataTable([]);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    getDataTable();\n  }, [filters]); // CREATE\n\n  const onCreate = async data => {\n    try {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: true\n      });\n      const res = await configApi.add(data);\n\n      if (res.status === 200) {\n        const newDataTable = [res.data.data, ...dataTable];\n        setDataTable(newDataTable);\n        showNoti('success', res.data.message);\n        return true;\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n    }\n  }; // UPDATE\n\n\n  const onUpdate = idx => {\n    return async data => {\n      try {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: true\n        });\n        const dataUpdate = {\n          ID: dataTable[idx].ID,\n          ConfigContent: data.ConfigContent\n        };\n        const res = await configApi.update(dataUpdate);\n\n        if (res.status === 200) {\n          const newDataTable = [...dataTable];\n          newDataTable.splice(idx, 1, _objectSpread(_objectSpread({}, dataTable[idx]), data));\n          setDataTable(newDataTable);\n          showNoti('success', res.data.message);\n          return true;\n        }\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: false\n        });\n      }\n    };\n  };\n\n  const columns = [_objectSpread(_objectSpread({\n    title: 'Loại phiếu',\n    dataIndex: 'TypeName'\n  }, FilterColumn('Type', onSearch, onResetSearch, 'select', optionFormList)), {}, {\n    // render: (type: number) => optionFormList.find((o) => o.value === type).title,\n    className: activeColumnSearch === 'AreaID' ? 'active-column-search' : ''\n  }), {\n    width: 100,\n    align: 'center',\n    render: (record, _, idx) => /*#__PURE__*/_jsxDEV(ConfigVoucherInvoiceForm, {\n      isLoading: isLoading,\n      isUpdate: true,\n      updateObj: record,\n      handleSubmit: onUpdate(idx),\n      optionFormList: optionFormList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }, this)\n  }];\n\n  const expandedRowRender = text => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"invoice-content pt-5\",\n      children: ReactHtmlParser(text.ConfigContent)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 10\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TitlePage, {\n      title: \"M\\u1EABu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ExpandTable, {\n      loading: isLoading,\n      dataSource: dataTable,\n      columns: columns,\n      currentPage: filters.pageIndex,\n      totalPage: totalPage,\n      getPagination: getPagination,\n      TitleCard: /*#__PURE__*/_jsxDEV(ConfigVoucherInvoiceForm, {\n        isLoading: isLoading,\n        handleSubmit: onCreate,\n        optionFormList: optionFormList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 16\n      }, this),\n      expandable: {\n        expandedRowRender\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport default ConfigVoucherInvoice;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Option/ConfigVoucherInvoice/VourcherInvoice.tsx"],"names":["React","useEffect","useRef","useState","configApi","ConfigVoucherInvoiceForm","FilterColumn","useWrap","ReactHtmlParser","ExpandTable","TitlePage","ConfigVoucherInvoice","dataTable","setDataTable","isLoading","setIsLoading","type","status","showNoti","pageSize","totalPage","setTotalPage","activeColumnSearch","setActiveColumnSearch","listFieldInit","pageIndex","Type","refValue","filters","setFilters","optionFormList","title","value","getPagination","current","onResetSearch","onSearch","valueSearch","dataIndex","getDataTable","res","getAll","data","error","message","onCreate","add","newDataTable","onUpdate","idx","dataUpdate","ID","ConfigContent","update","splice","columns","className","width","align","render","record","_","expandedRowRender","text"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { configApi } from '~/apiBase';\r\nimport ConfigVoucherInvoiceForm from '~/components/Global/Option/ConfigVoucherInvoice/ConfigVoucherInvoiceForm';\r\nimport PowerTable from '~/components/PowerTable';\r\nimport FilterColumn from '~/components/Tables/FilterColumn';\r\nimport { useWrap } from '~/context/wrap';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport ExpandTable from '~/components/ExpandTable';\r\nimport TitlePage from '~/components/TitlePage';\r\n\r\nconst ConfigVoucherInvoice = () => {\r\n\tconst [dataTable, setDataTable] = useState<IConfig[]>([]);\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t});\r\n\tconst { showNoti, pageSize } = useWrap();\r\n\tconst [totalPage, setTotalPage] = useState(null);\r\n\tconst [activeColumnSearch, setActiveColumnSearch] = useState('');\r\n\t// FILTER\r\n\tconst listFieldInit = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: pageSize,\r\n\r\n\t\tType: null\r\n\t};\r\n\tlet refValue = useRef({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10\r\n\t});\r\n\tconst [filters, setFilters] = useState(listFieldInit);\r\n\tconst optionFormList = [\r\n\t\t{ title: 'Phiếu chi', value: 1 },\r\n\t\t{ title: 'Phiếu thu', value: 2 },\r\n\t\t{ title: 'Mẫu mail sắp tới giờ học', value: 3 },\r\n\t\t{ title: 'Mẫu mail được thêm vào khóa học mới', value: 5 },\r\n\t\t{ title: 'Mẫu mail lịch học thay đổi', value: 6 },\r\n\t\t{ title: 'Mẫu mail bài tập đã chấm', value: 7 },\r\n\t\t{ title: 'Mẫu mail sắp tới lịch dạy', value: 8 },\r\n\t\t{ title: 'Mẫu mail được chỉ định dạy khóa mới', value: 9 },\r\n\t\t{ title: 'Mẫu mail có bài tập cần chấm', value: 10 },\r\n\t\t{ title: 'Mẫu mail tạo được tài khoản mới', value: 11 }\r\n\t];\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10;\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tpageSize,\r\n\t\t\tpageIndex\r\n\t\t};\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\t...refValue.current\r\n\t\t});\r\n\t};\r\n\t// RESET SEARCH\r\n\tconst onResetSearch = () => {\r\n\t\tsetActiveColumnSearch('');\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\tpageSize: refValue.current.pageSize\r\n\t\t});\r\n\t};\r\n\t// ACTION SEARCH\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tsetActiveColumnSearch(dataIndex);\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t[dataIndex]: valueSearch\r\n\t\t});\r\n\t};\r\n\tconst getDataTable = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tlet res = await configApi.getAll(filters);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetDataTable(res.data.data);\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetDataTable([]);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataTable();\r\n\t}, [filters]);\r\n\r\n\t// CREATE\r\n\tconst onCreate = async (data: { ConfigContent: string; Type: number }) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\tconst res = await configApi.add(data);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newDataTable = [res.data.data, ...dataTable];\r\n\t\t\t\tsetDataTable(newDataTable);\r\n\t\t\t\tshowNoti('success', res.data.message);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// UPDATE\r\n\tconst onUpdate = (idx: number) => {\r\n\t\treturn async (data: { ConfigContent: string; Type: number }) => {\r\n\t\t\ttry {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t\tconst dataUpdate = {\r\n\t\t\t\t\tID: dataTable[idx].ID,\r\n\t\t\t\t\tConfigContent: data.ConfigContent\r\n\t\t\t\t};\r\n\t\t\t\tconst res = await configApi.update(dataUpdate);\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tconst newDataTable = [...dataTable];\r\n\t\t\t\t\tnewDataTable.splice(idx, 1, { ...dataTable[idx], ...data });\r\n\t\t\t\t\tsetDataTable(newDataTable);\r\n\t\t\t\t\tshowNoti('success', res.data.message);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Loại phiếu',\r\n\t\t\tdataIndex: 'TypeName',\r\n\t\t\t...FilterColumn('Type', onSearch, onResetSearch, 'select', optionFormList),\r\n\t\t\t// render: (type: number) => optionFormList.find((o) => o.value === type).title,\r\n\t\t\tclassName: activeColumnSearch === 'AreaID' ? 'active-column-search' : ''\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 100,\r\n\t\t\talign: 'center',\r\n\t\t\trender: (record: IConfig, _, idx: number) => (\r\n\t\t\t\t<ConfigVoucherInvoiceForm\r\n\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\tisUpdate={true}\r\n\t\t\t\t\tupdateObj={record}\r\n\t\t\t\t\thandleSubmit={onUpdate(idx)}\r\n\t\t\t\t\toptionFormList={optionFormList}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t}\r\n\t];\r\n\r\n\tconst expandedRowRender = (text) => {\r\n\t\treturn <p className=\"invoice-content pt-5\">{ReactHtmlParser(text.ConfigContent)}</p>;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TitlePage title=\"Mẫu\" />\r\n\t\t\t<ExpandTable\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\tdataSource={dataTable}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\t\ttotalPage={totalPage}\r\n\t\t\t\tgetPagination={getPagination}\r\n\t\t\t\tTitleCard={<ConfigVoucherInvoiceForm isLoading={isLoading} handleSubmit={onCreate} optionFormList={optionFormList} />}\r\n\t\t\t\texpandable={{ expandedRowRender }}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default ConfigVoucherInvoice;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\DoingTest\\\\ListQuestion.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ChoiceList from '~/components/Global/ExamList/ExamShow/ChoiceList';\nimport MultipleList from '~/components/Global/ExamList/ExamShow/MultipleList';\nimport MapList from '~/components/Global/ExamList/ExamShow/MapList';\nimport DragList from '~/components/Global/ExamList/ExamShow/DragList';\nimport TypingList from '~/components/Global/ExamList/ExamShow/TypingList';\nimport WrittingList from '~/components/Global/ExamList/ExamShow/WrittingList';\nimport { ListAlphabet } from '~/lib/list-alphabet/ListAlphabet';\nimport SpeakingList from '../ExamList/ExamShow/Speaking';\nimport { useDoneTest } from '~/context/useDoneTest';\n\nvar ListQuestion = function ListQuestion(props) {\n  _s();\n\n  var dataQuestion = props.dataQuestion,\n      listQuestionID = props.listQuestionID,\n      isMarked = props.isMarked,\n      showScore = props.showScore,\n      setChild = props.setChild,\n      openPagi = props.openPagi;\n\n  var _useDoneTest = useDoneTest(),\n      doneTestData = _useDoneTest.doneTestData; // RETURN QUESTION TYPE\n\n\n  var returnQuestionType = function returnQuestionType(dataQuestion) {\n    var type = dataQuestion.Type;\n\n    switch (type) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(ChoiceList, {\n          showScore: showScore,\n          isDoingTest: doneTestData ? false : true,\n          listQuestionID: listQuestionID,\n          dataQuestion: dataQuestion,\n          listAlphabet: ListAlphabet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 6\n        }, _this);\n        break;\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(DragList, {\n          isDoingTest: doneTestData ? false : true,\n          listQuestionID: listQuestionID,\n          dataQuestion: dataQuestion,\n          listAlphabet: ListAlphabet,\n          setChild: setChild,\n          openPagi: openPagi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }, _this);\n        break;\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(TypingList, {\n          isDoingTest: doneTestData ? false : true,\n          listQuestionID: listQuestionID,\n          dataQuestion: dataQuestion,\n          listAlphabet: ListAlphabet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, _this);\n        break;\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(MultipleList, {\n          isDoingTest: doneTestData ? false : true,\n          listQuestionID: listQuestionID,\n          dataQuestion: dataQuestion,\n          listAlphabet: ListAlphabet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, _this);\n        break;\n\n      case 5:\n        return /*#__PURE__*/_jsxDEV(MapList, {\n          isDoingTest: doneTestData ? false : true,\n          listQuestionID: listQuestionID,\n          dataQuestion: dataQuestion,\n          listAlphabet: ListAlphabet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, _this);\n        break;\n\n      case 6:\n        return /*#__PURE__*/_jsxDEV(WrittingList, {\n          hideScore: !showScore,\n          isDoingTest: doneTestData ? false : true,\n          listQuestionID: listQuestionID,\n          dataQuestion: dataQuestion,\n          listAlphabet: ListAlphabet,\n          isMarked: isMarked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, _this);\n        break;\n\n      case 7:\n        return /*#__PURE__*/_jsxDEV(SpeakingList, {\n          hideScore: !showScore,\n          isDoingTest: doneTestData ? false : true,\n          listQuestionID: listQuestionID,\n          dataQuestion: dataQuestion,\n          listAlphabet: ListAlphabet,\n          isMarked: isMarked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }, _this);\n        break;\n\n      default:\n        return;\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-create\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-detail-exam card-detail-question\",\n      style: {\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        style: {\n          height: '100%'\n        },\n        children: returnQuestionType(dataQuestion)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(ListQuestion, \"jqLkCAmfDObhflEWdfrFIBQOheg=\", false, function () {\n  return [useDoneTest];\n});\n\n_c = ListQuestion;\nexport default ListQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListQuestion\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/DoingTest/ListQuestion.tsx"],"names":["React","ChoiceList","MultipleList","MapList","DragList","TypingList","WrittingList","ListAlphabet","SpeakingList","useDoneTest","ListQuestion","props","dataQuestion","listQuestionID","isMarked","showScore","setChild","openPagi","doneTestData","returnQuestionType","type","Type","height"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ChoiceList from '~/components/Global/ExamList/ExamShow/ChoiceList'\r\nimport MultipleList from '~/components/Global/ExamList/ExamShow/MultipleList'\r\nimport MapList from '~/components/Global/ExamList/ExamShow/MapList'\r\nimport DragList from '~/components/Global/ExamList/ExamShow/DragList'\r\nimport TypingList from '~/components/Global/ExamList/ExamShow/TypingList'\r\nimport WrittingList from '~/components/Global/ExamList/ExamShow/WrittingList'\r\nimport { ListAlphabet } from '~/lib/list-alphabet/ListAlphabet'\r\nimport SpeakingList from '../ExamList/ExamShow/Speaking'\r\nimport { useDoneTest } from '~/context/useDoneTest'\r\n\r\nconst ListQuestion = (props) => {\r\n\tconst { dataQuestion, listQuestionID, isMarked, showScore, setChild, openPagi } = props\r\n\tconst { doneTestData } = useDoneTest()\r\n\r\n\t// RETURN QUESTION TYPE\r\n\tconst returnQuestionType = (dataQuestion) => {\r\n\t\tconst type = dataQuestion.Type\r\n\t\tswitch (type) {\r\n\t\t\tcase 1:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ChoiceList\r\n\t\t\t\t\t\tshowScore={showScore}\r\n\t\t\t\t\t\tisDoingTest={doneTestData ? false : true}\r\n\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\tlistAlphabet={ListAlphabet}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t\tbreak\r\n\t\t\tcase 2:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<DragList\r\n\t\t\t\t\t\tisDoingTest={doneTestData ? false : true}\r\n\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\tlistAlphabet={ListAlphabet}\r\n\t\t\t\t\t\tsetChild={setChild}\r\n\t\t\t\t\t\topenPagi={openPagi}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t\tbreak\r\n\t\t\tcase 3:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<TypingList\r\n\t\t\t\t\t\tisDoingTest={doneTestData ? false : true}\r\n\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\tlistAlphabet={ListAlphabet}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t\tbreak\r\n\t\t\tcase 4:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MultipleList\r\n\t\t\t\t\t\tisDoingTest={doneTestData ? false : true}\r\n\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\tlistAlphabet={ListAlphabet}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t\tbreak\r\n\t\t\tcase 5:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MapList\r\n\t\t\t\t\t\tisDoingTest={doneTestData ? false : true}\r\n\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\tlistAlphabet={ListAlphabet}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t\tbreak\r\n\t\t\tcase 6:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<WrittingList\r\n\t\t\t\t\t\thideScore={!showScore}\r\n\t\t\t\t\t\tisDoingTest={doneTestData ? false : true}\r\n\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\tlistAlphabet={ListAlphabet}\r\n\t\t\t\t\t\tisMarked={isMarked}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t\tbreak\r\n\t\t\tcase 7:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<SpeakingList\r\n\t\t\t\t\t\thideScore={!showScore}\r\n\t\t\t\t\t\tisDoingTest={doneTestData ? false : true}\r\n\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\tlistAlphabet={ListAlphabet}\r\n\t\t\t\t\t\tisMarked={isMarked}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\treturn\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"question-create\">\r\n\t\t\t<div className=\"card-detail-exam card-detail-question\" style={{ height: '100%' }}>\r\n\t\t\t\t<div className=\"question-list\" style={{ height: '100%' }}>\r\n\t\t\t\t\t{returnQuestionType(dataQuestion)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ListQuestion\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\FormControl\\\\TextAreaField\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form } from 'antd';\nimport TextArea from 'antd/lib/input/TextArea';\nimport React, { useState } from 'react';\nimport { Controller } from 'react-hook-form';\nimport PropTypes from 'prop-types';\n\nconst TextAreaField = props => {\n  var _errors$name;\n\n  const {\n    form,\n    name,\n    rows,\n    label,\n    placeholder,\n    disabled,\n    style,\n    className,\n    allowClear,\n    autoSize,\n    maxLength\n  } = props;\n  const {\n    errors\n  } = form.formState;\n  const hasError = errors[name];\n  const {\n    0: isChange,\n    1: setIsChange\n  } = useState(false);\n\n  const onChange = e => {\n    if (e.target.value === '') {\n      setIsChange(false);\n    } else {\n      setIsChange(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form.Item, {\n    style: style,\n    label: label,\n    className: `${className} ${hasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      name: name,\n      control: form.control,\n      render: ({\n        field\n      }) => {\n        return /*#__PURE__*/_jsxDEV(TextArea, _objectSpread(_objectSpread({}, field), {}, {\n          rows: rows // className={`${!field.value && !isChange ? 'style-input' : ''}`}\n          ,\n          allowClear: allowClear,\n          placeholder: placeholder,\n          disabled: disabled,\n          autoSize: autoSize,\n          maxLength: maxLength,\n          onChange: e => (onChange(e), field.onChange(e.target.value))\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ant-form-item-explain ant-form-item-explain-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n\nTextAreaField.propTypes = {\n  form: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  rows: PropTypes.number,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  style: PropTypes.shape({}),\n  className: PropTypes.string,\n  allowClear: PropTypes.bool,\n  autoSize: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  maxLength: PropTypes.number\n};\nTextAreaField.defaultProps = {\n  rows: 2,\n  label: '',\n  placeholder: '',\n  disabled: false,\n  style: {},\n  className: '',\n  allowClear: true,\n  autoSize: false,\n  maxLength: null\n};\nexport default TextAreaField;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/FormControl/TextAreaField/index.tsx"],"names":["Form","TextArea","React","useState","Controller","PropTypes","TextAreaField","props","form","name","rows","label","placeholder","disabled","style","className","allowClear","autoSize","maxLength","errors","formState","hasError","isChange","setIsChange","onChange","e","target","value","control","field","message","propTypes","object","isRequired","string","number","bool","shape","oneOfType","defaultProps"],"mappings":"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","sourcesContent":["import { Form } from 'antd'\r\nimport TextArea from 'antd/lib/input/TextArea'\r\nimport React, { useState } from 'react'\r\nimport { Controller } from 'react-hook-form'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TextAreaField = (props) => {\r\n\tconst { form, name, rows, label, placeholder, disabled, style, className, allowClear, autoSize, maxLength } = props\r\n\tconst { errors } = form.formState\r\n\tconst hasError = errors[name]\r\n\tconst [isChange, setIsChange] = useState(false)\r\n\r\n\tconst onChange = (e) => {\r\n\t\tif (e.target.value === '') {\r\n\t\t\tsetIsChange(false)\r\n\t\t} else {\r\n\t\t\tsetIsChange(true)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form.Item style={style} label={label} className={`${className} ${hasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''}`}>\r\n\t\t\t<Controller\r\n\t\t\t\tname={name}\r\n\t\t\t\tcontrol={form.control}\r\n\t\t\t\trender={({ field }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\trows={rows}\r\n\t\t\t\t\t\t\t// className={`${!field.value && !isChange ? 'style-input' : ''}`}\r\n\t\t\t\t\t\t\tallowClear={allowClear}\r\n\t\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t\t\tautoSize={autoSize}\r\n\t\t\t\t\t\t\tmaxLength={maxLength}\r\n\t\t\t\t\t\t\tonChange={(e) => (onChange(e), field.onChange(e.target.value))}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{hasError && (\r\n\t\t\t\t<div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n\t\t\t\t\t<div role=\"alert\">{errors[name]?.message}</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Form.Item>\r\n\t)\r\n}\r\nTextAreaField.propTypes = {\r\n\tform: PropTypes.object.isRequired,\r\n\tname: PropTypes.string.isRequired,\r\n\trows: PropTypes.number,\r\n\tlabel: PropTypes.string,\r\n\tplaceholder: PropTypes.string,\r\n\tdisabled: PropTypes.bool,\r\n\tstyle: PropTypes.shape({}),\r\n\tclassName: PropTypes.string,\r\n\tallowClear: PropTypes.bool,\r\n\tautoSize: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\r\n\tmaxLength: PropTypes.number\r\n}\r\nTextAreaField.defaultProps = {\r\n\trows: 2,\r\n\tlabel: '',\r\n\tplaceholder: '',\r\n\tdisabled: false,\r\n\tstyle: {},\r\n\tclassName: '',\r\n\tallowClear: true,\r\n\tautoSize: false,\r\n\tmaxLength: null\r\n}\r\nexport default TextAreaField\r\n"]},"metadata":{},"sourceType":"module"}
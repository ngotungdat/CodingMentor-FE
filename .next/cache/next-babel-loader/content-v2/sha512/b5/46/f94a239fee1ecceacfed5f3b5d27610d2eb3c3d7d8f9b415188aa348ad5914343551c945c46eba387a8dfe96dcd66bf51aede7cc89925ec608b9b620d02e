{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\ExamAppointment\\\\ExamAppointmentPoint.tsx\";\n//@ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport NestedTable from '~/components/Elements/NestedTable';\nimport { useWrap } from '~/context/wrap';\nimport { examAppointmentResultApi } from '~/apiBase';\nimport { homeworkResultApi } from '~/apiBase/course-detail/home-work-result';\n\nconst ExamAppointmentPoint = props => {\n  var _detail$;\n\n  const {\n    infoID,\n    userID,\n    isExercise,\n    visible\n  } = props;\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: detail,\n    1: setDetail\n  } = useState([]);\n  const {\n    showNoti,\n    userInformation\n  } = useWrap();\n  const {\n    0: isDone,\n    1: setIsDone\n  } = useState(false);\n\n  const fetchDetailInfo = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await examAppointmentResultApi.getAll({\n        selectAll: true,\n        UserInformationID: userID,\n        ExamAppointmentID: infoID\n      });\n\n      if (res.status == 200) {\n        setIsDone(res.data.data[0].isDone);\n        let arr = [];\n        arr.push(res.data.data[0]);\n        setDetail(arr);\n      }\n    } catch (err) {\n      showNoti('danger', err.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  const fetchDetailExercise = async () => {\n    if (visible == true) {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n\n      try {\n        let res = await homeworkResultApi.getAll({\n          selectAll: true,\n          UserInformationID: userID,\n          HomeworkID: infoID\n        });\n\n        if (res.status == 200) {\n          setIsDone(res.data.data[0].isDone);\n          let arr = [];\n          arr.push(res.data.data[0]);\n          setDetail(arr);\n        }\n      } catch (err) {\n        showNoti('danger', err.message);\n      } finally {\n        setIsLoading({\n          type: 'GET_ALL',\n          status: false\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    isExercise ? fetchDetailExercise() : fetchDetailInfo();\n  }, []);\n  const columns = [{\n    title: 'Tổng câu hỏi',\n    dataIndex: 'NumberExercise',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Điểm từng môn',\n    align: 'center',\n    children: [{\n      title: 'Nghe',\n      align: 'center',\n      dataIndex: 'ListeningPoint'\n    }, {\n      title: 'Nói',\n      align: 'center',\n      dataIndex: 'SpeakingPoint'\n    }, {\n      title: 'Đọc',\n      align: 'center',\n      dataIndex: 'ReadingPoint'\n    }, {\n      title: 'Viết',\n      align: 'center',\n      dataIndex: 'WritingPoint'\n    }]\n  }, {\n    title: 'Tổng điểm',\n    align: 'center',\n    dataIndex: 'PointTotal',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Ghi chú',\n    dataIndex: 'Note'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (isDone || (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) == 1 || (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) == 2) && /*#__PURE__*/_jsxDEV(NestedTable, {\n      loading: isLoading,\n      addClass: \"basic-header\",\n      dataSource: (_detail$ = detail[0]) !== null && _detail$ !== void 0 && _detail$.isDone ? detail : {},\n      columns: columns,\n      haveBorder: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\nexport default ExamAppointmentPoint;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/ExamAppointment/ExamAppointmentPoint.tsx"],"names":["React","useEffect","useState","NestedTable","useWrap","examAppointmentResultApi","homeworkResultApi","ExamAppointmentPoint","props","infoID","userID","isExercise","visible","isLoading","setIsLoading","type","status","detail","setDetail","showNoti","userInformation","isDone","setIsDone","fetchDetailInfo","res","getAll","selectAll","UserInformationID","ExamAppointmentID","data","arr","push","err","message","fetchDetailExercise","HomeworkID","columns","title","dataIndex","render","text","align","children","RoleID"],"mappings":"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","sourcesContent":["//@ts-nocheck\r\nimport React, { useEffect, useState } from 'react';\r\nimport NestedTable from '~/components/Elements/NestedTable';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { examAppointmentResultApi } from '~/apiBase';\r\nimport { homeworkResultApi } from '~/apiBase/course-detail/home-work-result';\r\n\r\nconst ExamAppointmentPoint = (props) => {\r\n\tconst { infoID, userID, isExercise, visible } = props;\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t});\r\n\tconst [detail, setDetail] = useState<IExamAppointmentResult>([]);\r\n\tconst { showNoti, userInformation } = useWrap();\r\n\tconst [isDone, setIsDone] = useState(false);\r\n\r\n\tconst fetchDetailInfo = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tlet res = await examAppointmentResultApi.getAll({\r\n\t\t\t\tselectAll: true,\r\n\t\t\t\tUserInformationID: userID,\r\n\t\t\t\tExamAppointmentID: infoID\r\n\t\t\t});\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetIsDone(res.data.data[0].isDone);\r\n\t\t\t\tlet arr = [];\r\n\t\t\t\tarr.push(res.data.data[0]);\r\n\t\t\t\tsetDetail(arr);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tshowNoti('danger', err.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst fetchDetailExercise = async () => {\r\n\t\tif (visible == true) {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await homeworkResultApi.getAll({\r\n\t\t\t\t\tselectAll: true,\r\n\t\t\t\t\tUserInformationID: userID,\r\n\t\t\t\t\tHomeworkID: infoID\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tsetIsDone(res.data.data[0].isDone);\r\n\t\t\t\t\tlet arr = [];\r\n\t\t\t\t\tarr.push(res.data.data[0]);\r\n\t\t\t\t\tsetDetail(arr);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tshowNoti('danger', err.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tisExercise ? fetchDetailExercise() : fetchDetailInfo();\r\n\t}, []);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Tổng câu hỏi',\r\n\t\t\tdataIndex: 'NumberExercise',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Điểm từng môn',\r\n\t\t\talign: 'center',\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Nghe',\r\n\t\t\t\t\talign: 'center',\r\n\t\t\t\t\tdataIndex: 'ListeningPoint'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Nói',\r\n\t\t\t\t\talign: 'center',\r\n\t\t\t\t\tdataIndex: 'SpeakingPoint'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Đọc',\r\n\t\t\t\t\talign: 'center',\r\n\t\t\t\t\tdataIndex: 'ReadingPoint'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Viết',\r\n\t\t\t\t\talign: 'center',\r\n\t\t\t\t\tdataIndex: 'WritingPoint'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tổng điểm',\r\n\t\t\talign: 'center',\r\n\t\t\tdataIndex: 'PointTotal',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ghi chú',\r\n\t\t\tdataIndex: 'Note'\r\n\t\t}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{(isDone || userInformation?.RoleID == 1 || userInformation?.RoleID == 2) && (\r\n\t\t\t\t<NestedTable\r\n\t\t\t\t\tloading={isLoading}\r\n\t\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\t\tdataSource={detail[0]?.isDone ? detail : {}}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\thaveBorder={true}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ExamAppointmentPoint;\r\n"]},"metadata":{},"sourceType":"module"}
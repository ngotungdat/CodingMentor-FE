{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Profile\\\\ProfileCustomer\\\\InfoPaymentCard\\\\PaymentCourseTable.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { useEffect, useRef, useState } from 'react';\nimport { invoiceApi } from '~/apiBase';\nimport { billCourseApi } from '~/apiBase/course/bill-course';\nimport { ExpandPaymentRow } from '~/components/Elements/ExpandBox';\nimport ExpandTable from '~/components/ExpandTable';\nimport { useWrap } from '~/context/wrap';\nimport { numberWithCommas } from '~/utils/functions';\nPaymentCourseTable.propTypes = {\n  studentID: PropTypes.number\n};\nPaymentCourseTable.defaultProps = {\n  studentID: 0\n};\n\nfunction PaymentCourseTable(props) {\n  const {\n    studentID\n  } = props;\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: null,\n    status: false\n  });\n  const {\n    0: paymentHistoryList,\n    1: setPaymentHistoryList\n  } = useState([]);\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: infoInvoiceList,\n    1: setInfoInvoiceList\n  } = useState([]);\n  const listFieldInit = {\n    pageIndex: 1,\n    pageSize: 10,\n    StudentID: studentID\n  };\n  let refValue = useRef({\n    pageIndex: 1,\n    pageSize: 10\n  });\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(listFieldInit); // PAGINATION\n\n  const getPagination = (pageIndex, pageSize) => {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize,\n      pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  };\n\n  const getCourseOfStudentPrice = async () => {\n    try {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n      const res = await billCourseApi.getAll(filters);\n\n      if (res.status === 200) {\n        setPaymentHistoryList(res.data.data);\n        setTotalPage(res.data.totalRow);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    getCourseOfStudentPrice();\n  }, [filters]);\n  const columns = [{\n    title: 'Ngày tạo',\n    dataIndex: 'CreatedOn',\n    render: date => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: moment(date).format('DD/MM/YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Tổng thanh toán',\n    dataIndex: 'Price',\n    render: price => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: numberWithCommas(price)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    title: 'Giảm giá',\n    dataIndex: 'Reduced',\n    render: price => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: numberWithCommas(price)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    title: '\tĐã thanh toán',\n    dataIndex: 'Paid',\n    render: price => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: numberWithCommas(price)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    title: 'Số tiền còn lại',\n    dataIndex: 'MoneyInDebt',\n    render: price => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-primary\",\n        children: numberWithCommas(price)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    title: 'Hình thức',\n    dataIndex: 'PaymentMethodsName'\n  }, {\n    title: 'Ngày hẹn trả',\n    dataIndex: 'PayDate',\n    render: date => date ? moment(date).format('DD/MM/YYYY') : ''\n  }]; //\n\n  const fetchInfoInvoice = async ID => {\n    try {\n      setIsLoading({\n        type: 'FETCH_INFO_INVOICE',\n        status: true\n      });\n      const res = await invoiceApi.getAll({\n        PayID: ID,\n        StyleID: 1\n      });\n\n      if (res.status === 200) {\n        setInfoInvoiceList(res.data.data);\n      }\n\n      if (res.status === 204) {\n        setInfoInvoiceList(null);\n      }\n    } catch (error) {\n      console.log(fetchInfoInvoice, error.message);\n    } finally {\n      setIsLoading({\n        type: 'FETCH_INFO_INVOICE',\n        status: false\n      });\n    }\n  };\n\n  const expandableObj = {\n    expandedRowRender: record => /*#__PURE__*/_jsxDEV(ExpandPaymentRow, {\n      isLoading: isLoading,\n      dataRow: record,\n      infoInvoiceList: infoInvoiceList\n    }, record.ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 4\n    }, this),\n    onExpand: (expanded, record) => {\n      if (expanded) {\n        fetchInfoInvoice(record.ID);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ExpandTable, {\n    loading: isLoading,\n    currentPage: filters.pageIndex,\n    totalPage: totalPage,\n    getPagination: getPagination,\n    noScroll: true,\n    dataSource: paymentHistoryList,\n    columns: columns,\n    Extra: /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"L\\u1ECBch s\\u1EED thanh to\\xE1n kh\\xF3a h\\u1ECDc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }, this),\n    expandable: expandableObj\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 3\n  }, this);\n}\n\nexport default PaymentCourseTable;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Profile/ProfileCustomer/InfoPaymentCard/PaymentCourseTable.tsx"],"names":["moment","PropTypes","useEffect","useRef","useState","invoiceApi","billCourseApi","ExpandPaymentRow","ExpandTable","useWrap","numberWithCommas","PaymentCourseTable","propTypes","studentID","number","defaultProps","props","showNoti","isLoading","setIsLoading","type","status","paymentHistoryList","setPaymentHistoryList","totalPage","setTotalPage","infoInvoiceList","setInfoInvoiceList","listFieldInit","pageIndex","pageSize","StudentID","refValue","filters","setFilters","getPagination","current","getCourseOfStudentPrice","res","getAll","data","totalRow","error","message","columns","title","dataIndex","render","date","format","price","fetchInfoInvoice","ID","PayID","StyleID","console","log","expandableObj","expandedRowRender","record","onExpand","expanded"],"mappings":"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","sourcesContent":["import moment from 'moment'\r\nimport PropTypes from 'prop-types'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport { invoiceApi } from '~/apiBase'\r\nimport { billCourseApi } from '~/apiBase/course/bill-course'\r\nimport { ExpandPaymentRow } from '~/components/Elements/ExpandBox'\r\nimport ExpandTable from '~/components/ExpandTable'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { numberWithCommas } from '~/utils/functions'\r\n\r\nPaymentCourseTable.propTypes = {\r\n\tstudentID: PropTypes.number\r\n}\r\nPaymentCourseTable.defaultProps = {\r\n\tstudentID: 0\r\n}\r\n\r\nfunction PaymentCourseTable(props) {\r\n\tconst { studentID } = props\r\n\tconst { showNoti } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: null,\r\n\t\tstatus: false\r\n\t})\r\n\tconst [paymentHistoryList, setPaymentHistoryList] = useState<ICourseOfStudentPrice[]>([])\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [infoInvoiceList, setInfoInvoiceList] = useState<IInvoice[]>([])\r\n\r\n\tconst listFieldInit = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\r\n\t\tStudentID: studentID\r\n\t}\r\n\tlet refValue = useRef({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10\r\n\t})\r\n\tconst [filters, setFilters] = useState(listFieldInit)\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tpageSize,\r\n\t\t\tpageIndex\r\n\t\t}\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\t...refValue.current\r\n\t\t})\r\n\t}\r\n\r\n\tconst getCourseOfStudentPrice = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t})\r\n\t\t\tconst res = await billCourseApi.getAll(filters)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetPaymentHistoryList(res.data.data)\r\n\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetCourseOfStudentPrice()\r\n\t}, [filters])\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Ngày tạo',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\trender: (date) => <p className=\"font-weight-black\">{moment(date).format('DD/MM/YYYY')}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tổng thanh toán',\r\n\t\t\tdataIndex: 'Price',\r\n\t\t\trender: (price) => {\r\n\t\t\t\treturn <p>{numberWithCommas(price)}</p>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Giảm giá',\r\n\t\t\tdataIndex: 'Reduced',\r\n\t\t\trender: (price) => {\r\n\t\t\t\treturn <p>{numberWithCommas(price)}</p>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '\tĐã thanh toán',\r\n\t\t\tdataIndex: 'Paid',\r\n\t\t\trender: (price) => {\r\n\t\t\t\treturn <p>{numberWithCommas(price)}</p>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Số tiền còn lại',\r\n\t\t\tdataIndex: 'MoneyInDebt',\r\n\t\t\trender: (price) => {\r\n\t\t\t\treturn <p className=\"font-weight-primary\">{numberWithCommas(price)}</p>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Hình thức',\r\n\t\t\tdataIndex: 'PaymentMethodsName'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày hẹn trả',\r\n\t\t\tdataIndex: 'PayDate',\r\n\t\t\trender: (date) => (date ? moment(date).format('DD/MM/YYYY') : '')\r\n\t\t}\r\n\t]\r\n\t//\r\n\tconst fetchInfoInvoice = async (ID: number) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_INFO_INVOICE',\r\n\t\t\t\tstatus: true\r\n\t\t\t})\r\n\t\t\tconst res = await invoiceApi.getAll({\r\n\t\t\t\tPayID: ID,\r\n\t\t\t\tStyleID: 1\r\n\t\t\t})\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetInfoInvoiceList(res.data.data)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetInfoInvoiceList(null)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(fetchInfoInvoice, error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_INFO_INVOICE',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst expandableObj = {\r\n\t\texpandedRowRender: (record) => (\r\n\t\t\t<ExpandPaymentRow isLoading={isLoading} key={record.ID} dataRow={record} infoInvoiceList={infoInvoiceList} />\r\n\t\t),\r\n\t\tonExpand: (expanded, record) => {\r\n\t\t\tif (expanded) {\r\n\t\t\t\tfetchInfoInvoice(record.ID)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<ExpandTable\r\n\t\t\tloading={isLoading}\r\n\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\ttotalPage={totalPage}\r\n\t\t\tgetPagination={getPagination}\r\n\t\t\tnoScroll\r\n\t\t\tdataSource={paymentHistoryList}\r\n\t\t\tcolumns={columns}\r\n\t\t\tExtra={<h5>Lịch sử thanh toán khóa học</h5>}\r\n\t\t\texpandable={expandableObj}\r\n\t\t/>\r\n\t)\r\n}\r\nexport default PaymentCourseTable\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\FormControl\\\\InputPreventText\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form, Input } from 'antd';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Controller } from 'react-hook-form';\n\nconst InputPreventText = props => {\n  const {\n    form,\n    name,\n    label,\n    placeholder,\n    disabled,\n    handleChange,\n    style,\n    className,\n    allowClear,\n    handleFormatCurrency,\n    isDynamicField,\n    isRequired\n  } = props;\n  const {\n    errors\n  } = form.formState;\n  let hasError;\n  let errorMessage;\n\n  if (isDynamicField) {\n    // NAME.INDEX.KEY;\n    const nameSlice = name.slice(0, name.indexOf('.'));\n    const index = name.slice(name.indexOf('.') + 1, name.lastIndexOf('.'));\n    const key = name.slice(name.lastIndexOf('.') + 1); // IF HAVE NAME SLICE\n\n    if (errors[nameSlice] && errors[nameSlice][index]) {\n      var _errors$nameSlice$ind;\n\n      hasError = errors[nameSlice][index][key];\n      errorMessage = (_errors$nameSlice$ind = errors[nameSlice][index][key]) === null || _errors$nameSlice$ind === void 0 ? void 0 : _errors$nameSlice$ind.message;\n    }\n  } else {\n    var _errors$name;\n\n    hasError = errors[name];\n    errorMessage = (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message;\n  }\n\n  const checkHandleChange = value => {\n    if (!handleChange) return;\n    handleChange(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form.Item, {\n    style: style,\n    label: label,\n    className: `${className} ${hasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''}`,\n    required: isRequired,\n    colon: true,\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      name: name,\n      control: form.control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), {}, {\n        className: \"style-input hide-icon\",\n        allowClear: allowClear,\n        placeholder: placeholder,\n        disabled: disabled,\n        type: \"number\",\n        onChange: e => {\n          checkHandleChange(e.target.value);\n\n          if (handleFormatCurrency) {\n            field.onChange(handleFormatCurrency(e.target.value));\n          } else {\n            field.onChange(e.target.value);\n          }\n        }\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ant-form-item-explain ant-form-item-explain-error font-color-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\nInputPreventText.propTypes = {\n  form: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  handleChange: PropTypes.func,\n  handleFormatCurrency: PropTypes.func,\n  style: PropTypes.shape({}),\n  className: PropTypes.string,\n  allowClear: PropTypes.bool,\n  isDynamicField: PropTypes.bool,\n  isRequired: PropTypes.bool\n};\nInputPreventText.defaultProps = {\n  label: '',\n  placeholder: '',\n  disabled: false,\n  handleChange: null,\n  handleFormatCurrency: null,\n  style: {},\n  className: '',\n  allowClear: true,\n  isDynamicField: false,\n  isRequired: false\n};\nexport default InputPreventText;","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/FormControl/InputPreventText/index.tsx"],"names":["Form","Input","PropTypes","React","Controller","InputPreventText","props","form","name","label","placeholder","disabled","handleChange","style","className","allowClear","handleFormatCurrency","isDynamicField","isRequired","errors","formState","hasError","errorMessage","nameSlice","slice","indexOf","index","lastIndexOf","key","message","checkHandleChange","value","control","field","e","target","onChange","propTypes","object","string","bool","func","shape","defaultProps"],"mappings":";;;;;;;;;AAAA,SAASA,IAAT,EAAeC,KAAf,QAA4B,MAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AACnC,QAAM;AACLC,IAAAA,IADK;AAELC,IAAAA,IAFK;AAGLC,IAAAA,KAHK;AAILC,IAAAA,WAJK;AAKLC,IAAAA,QALK;AAMLC,IAAAA,YANK;AAOLC,IAAAA,KAPK;AAQLC,IAAAA,SARK;AASLC,IAAAA,UATK;AAULC,IAAAA,oBAVK;AAWLC,IAAAA,cAXK;AAYLC,IAAAA;AAZK,MAaFZ,KAbJ;AAeA,QAAM;AAAEa,IAAAA;AAAF,MAAaZ,IAAI,CAACa,SAAxB;AACA,MAAIC,QAAJ;AACA,MAAIC,YAAJ;;AACA,MAAIL,cAAJ,EAAoB;AACnB;AACA,UAAMM,SAAS,GAAGf,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAchB,IAAI,CAACiB,OAAL,CAAa,GAAb,CAAd,CAAlB;AACA,UAAMC,KAAK,GAAGlB,IAAI,CAACgB,KAAL,CAAWhB,IAAI,CAACiB,OAAL,CAAa,GAAb,IAAoB,CAA/B,EAAkCjB,IAAI,CAACmB,WAAL,CAAiB,GAAjB,CAAlC,CAAd;AACA,UAAMC,GAAG,GAAGpB,IAAI,CAACgB,KAAL,CAAWhB,IAAI,CAACmB,WAAL,CAAiB,GAAjB,IAAwB,CAAnC,CAAZ,CAJmB,CAKnB;;AACA,QAAIR,MAAM,CAACI,SAAD,CAAN,IAAqBJ,MAAM,CAACI,SAAD,CAAN,CAAkBG,KAAlB,CAAzB,EAAmD;AAAA;;AAClDL,MAAAA,QAAQ,GAAGF,MAAM,CAACI,SAAD,CAAN,CAAkBG,KAAlB,EAAyBE,GAAzB,CAAX;AACAN,MAAAA,YAAY,4BAAGH,MAAM,CAACI,SAAD,CAAN,CAAkBG,KAAlB,EAAyBE,GAAzB,CAAH,0DAAG,sBAA+BC,OAA9C;AACA;AACD,GAVD,MAUO;AAAA;;AACNR,IAAAA,QAAQ,GAAGF,MAAM,CAACX,IAAD,CAAjB;AACAc,IAAAA,YAAY,mBAAGH,MAAM,CAACX,IAAD,CAAT,iDAAG,aAAcqB,OAA7B;AACA;;AAED,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACpC,QAAI,CAACnB,YAAL,EAAmB;AACnBA,IAAAA,YAAY,CAACmB,KAAD,CAAZ;AACA,GAHD;;AAKA,sBACC,QAAC,IAAD,CAAM,IAAN;AACC,IAAA,KAAK,EAAElB,KADR;AAEC,IAAA,KAAK,EAAEJ,KAFR;AAGC,IAAA,SAAS,EAAG,GAAEK,SAAU,IAAGO,QAAQ,GAAG,iDAAH,GAAuD,EAAG,EAH9F;AAIC,IAAA,QAAQ,EAAEH,UAJX;AAKC,IAAA,KAAK,MALN;AAAA,4BAOC,QAAC,UAAD;AACC,MAAA,IAAI,EAAEV,IADP;AAEC,MAAA,OAAO,EAAED,IAAI,CAACyB,OAFf;AAGC,MAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBACP,QAAC,KAAD,kCACKA,KADL;AAEC,QAAA,SAAS,EAAC,uBAFX;AAGC,QAAA,UAAU,EAAElB,UAHb;AAIC,QAAA,WAAW,EAAEL,WAJd;AAKC,QAAA,QAAQ,EAAEC,QALX;AAMC,QAAA,IAAI,EAAC,QANN;AAOC,QAAA,QAAQ,EAAGuB,CAAD,IAAO;AAChBJ,UAAAA,iBAAiB,CAACI,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAjB;;AACA,cAAIf,oBAAJ,EAA0B;AACzBiB,YAAAA,KAAK,CAACG,QAAN,CAAepB,oBAAoB,CAACkB,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAnC;AACA,WAFD,MAEO;AACNE,YAAAA,KAAK,CAACG,QAAN,CAAeF,CAAC,CAACC,MAAF,CAASJ,KAAxB;AACA;AACD;AAdF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAPD,EA6BEV,QAAQ,iBACR;AAAK,MAAA,SAAS,EAAC,oEAAf;AAAA,6BACC;AAAK,QAAA,IAAI,EAAC,OAAV;AAAA,kBAAmBC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAqCA,CA5ED;;AA6EAjB,gBAAgB,CAACgC,SAAjB,GAA6B;AAC5B9B,EAAAA,IAAI,EAAEL,SAAS,CAACoC,MAAV,CAAiBpB,UADK;AAE5BV,EAAAA,IAAI,EAAEN,SAAS,CAACqC,MAAV,CAAiBrB,UAFK;AAG5BT,EAAAA,KAAK,EAAEP,SAAS,CAACqC,MAHW;AAI5B7B,EAAAA,WAAW,EAAER,SAAS,CAACqC,MAJK;AAK5B5B,EAAAA,QAAQ,EAAET,SAAS,CAACsC,IALQ;AAM5B5B,EAAAA,YAAY,EAAEV,SAAS,CAACuC,IANI;AAO5BzB,EAAAA,oBAAoB,EAAEd,SAAS,CAACuC,IAPJ;AAQ5B5B,EAAAA,KAAK,EAAEX,SAAS,CAACwC,KAAV,CAAgB,EAAhB,CARqB;AAS5B5B,EAAAA,SAAS,EAAEZ,SAAS,CAACqC,MATO;AAU5BxB,EAAAA,UAAU,EAAEb,SAAS,CAACsC,IAVM;AAW5BvB,EAAAA,cAAc,EAAEf,SAAS,CAACsC,IAXE;AAY5BtB,EAAAA,UAAU,EAAEhB,SAAS,CAACsC;AAZM,CAA7B;AAcAnC,gBAAgB,CAACsC,YAAjB,GAAgC;AAC/BlC,EAAAA,KAAK,EAAE,EADwB;AAE/BC,EAAAA,WAAW,EAAE,EAFkB;AAG/BC,EAAAA,QAAQ,EAAE,KAHqB;AAI/BC,EAAAA,YAAY,EAAE,IAJiB;AAK/BI,EAAAA,oBAAoB,EAAE,IALS;AAM/BH,EAAAA,KAAK,EAAE,EANwB;AAO/BC,EAAAA,SAAS,EAAE,EAPoB;AAQ/BC,EAAAA,UAAU,EAAE,IARmB;AAS/BE,EAAAA,cAAc,EAAE,KATe;AAU/BC,EAAAA,UAAU,EAAE;AAVmB,CAAhC;AAYA,eAAeb,gBAAf","sourcesContent":["import { Form, Input } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { Controller } from 'react-hook-form'\r\n\r\nconst InputPreventText = (props) => {\r\n\tconst {\r\n\t\tform,\r\n\t\tname,\r\n\t\tlabel,\r\n\t\tplaceholder,\r\n\t\tdisabled,\r\n\t\thandleChange,\r\n\t\tstyle,\r\n\t\tclassName,\r\n\t\tallowClear,\r\n\t\thandleFormatCurrency,\r\n\t\tisDynamicField,\r\n\t\tisRequired\r\n\t} = props\r\n\r\n\tconst { errors } = form.formState\r\n\tlet hasError\r\n\tlet errorMessage\r\n\tif (isDynamicField) {\r\n\t\t// NAME.INDEX.KEY;\r\n\t\tconst nameSlice = name.slice(0, name.indexOf('.'))\r\n\t\tconst index = name.slice(name.indexOf('.') + 1, name.lastIndexOf('.'))\r\n\t\tconst key = name.slice(name.lastIndexOf('.') + 1)\r\n\t\t// IF HAVE NAME SLICE\r\n\t\tif (errors[nameSlice] && errors[nameSlice][index]) {\r\n\t\t\thasError = errors[nameSlice][index][key]\r\n\t\t\terrorMessage = errors[nameSlice][index][key]?.message\r\n\t\t}\r\n\t} else {\r\n\t\thasError = errors[name]\r\n\t\terrorMessage = errors[name]?.message\r\n\t}\r\n\r\n\tconst checkHandleChange = (value) => {\r\n\t\tif (!handleChange) return\r\n\t\thandleChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form.Item\r\n\t\t\tstyle={style}\r\n\t\t\tlabel={label}\r\n\t\t\tclassName={`${className} ${hasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''}`}\r\n\t\t\trequired={isRequired}\r\n\t\t\tcolon\r\n\t\t>\r\n\t\t\t<Controller\r\n\t\t\t\tname={name}\r\n\t\t\t\tcontrol={form.control}\r\n\t\t\t\trender={({ field }) => (\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\tclassName=\"style-input hide-icon\"\r\n\t\t\t\t\t\tallowClear={allowClear}\r\n\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tcheckHandleChange(e.target.value)\r\n\t\t\t\t\t\t\tif (handleFormatCurrency) {\r\n\t\t\t\t\t\t\t\tfield.onChange(handleFormatCurrency(e.target.value))\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tfield.onChange(e.target.value)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t\t{hasError && (\r\n\t\t\t\t<div className=\"ant-form-item-explain ant-form-item-explain-error font-color-error\">\r\n\t\t\t\t\t<div role=\"alert\">{errorMessage}</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Form.Item>\r\n\t)\r\n}\r\nInputPreventText.propTypes = {\r\n\tform: PropTypes.object.isRequired,\r\n\tname: PropTypes.string.isRequired,\r\n\tlabel: PropTypes.string,\r\n\tplaceholder: PropTypes.string,\r\n\tdisabled: PropTypes.bool,\r\n\thandleChange: PropTypes.func,\r\n\thandleFormatCurrency: PropTypes.func,\r\n\tstyle: PropTypes.shape({}),\r\n\tclassName: PropTypes.string,\r\n\tallowClear: PropTypes.bool,\r\n\tisDynamicField: PropTypes.bool,\r\n\tisRequired: PropTypes.bool\r\n}\r\nInputPreventText.defaultProps = {\r\n\tlabel: '',\r\n\tplaceholder: '',\r\n\tdisabled: false,\r\n\thandleChange: null,\r\n\thandleFormatCurrency: null,\r\n\tstyle: {},\r\n\tclassName: '',\r\n\tallowClear: true,\r\n\tisDynamicField: false,\r\n\tisRequired: false\r\n}\r\nexport default InputPreventText\r\n"]},"metadata":{},"sourceType":"module"}
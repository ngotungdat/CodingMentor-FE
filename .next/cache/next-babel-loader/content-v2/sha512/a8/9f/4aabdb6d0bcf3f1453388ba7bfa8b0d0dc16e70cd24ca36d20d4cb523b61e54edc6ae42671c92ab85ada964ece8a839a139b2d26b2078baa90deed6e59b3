{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\NewsFeed\\\\NewsFeedItemComponents\\\\CommentForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Form } from 'antd';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport InputTextField from '~/components/FormControl/InputTextField';\nCommentForm.propTypes = {\n  isLoading: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    status: PropTypes.bool.isRequired\n  }),\n  handleComment: PropTypes.func,\n  userComment: PropTypes.object,\n  newsFeedID: PropTypes.number,\n  newsFeedCommentID: PropTypes.number,\n  isReplay: PropTypes.bool\n};\nCommentForm.defaultProps = {\n  isLoading: {\n    type: '',\n    status: false\n  },\n  handleComment: null,\n  userComment: {},\n  newsFeedID: 0,\n  newsFeedCommentID: 0,\n  isReply: false\n};\n\nfunction CommentForm(props) {\n  const {\n    isLoading,\n    dataUser,\n    handleComment,\n    newsFeedID,\n    isReplay,\n    newsFeedCommentID\n  } = props;\n  const schema = yup.object().shape({\n    CommentContent: yup.string().required('Bạn không được bỏ trống')\n  });\n  const defaultValuesInit = {\n    CommentContent: ''\n  };\n  const form = useForm({\n    defaultValues: defaultValuesInit,\n    resolver: yupResolver(schema)\n  });\n\n  const checkHandleComment = data => {\n    if (!handleComment) return;\n    const newData = isReplay ? {\n      ReplyContent: data.CommentContent,\n      NewsFeedCommentID: newsFeedCommentID\n    } : _objectSpread(_objectSpread({}, data), {}, {\n      NewsFeedID: newsFeedID\n    });\n    handleComment(newData).then(res => res && form.reset(_objectSpread({}, defaultValuesInit)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info-current-user user-comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: (dataUser === null || dataUser === void 0 ? void 0 : dataUser.Avatar) || '/images/user.png',\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-comments\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        onFinish: form.handleSubmit(checkHandleComment),\n        children: [/*#__PURE__*/_jsxDEV(InputTextField, {\n          form: form,\n          name: \"CommentContent\",\n          allowClear: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"input-btn btn\",\n          disabled: isLoading.type === 'ADD_COMMENT' && isLoading.status,\n          children: \"G\\u1EEDi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n}\n\nexport default CommentForm;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/NewsFeed/NewsFeedItemComponents/CommentForm.tsx"],"names":["yupResolver","Form","PropTypes","React","useForm","yup","InputTextField","CommentForm","propTypes","isLoading","shape","type","string","isRequired","status","bool","handleComment","func","userComment","object","newsFeedID","number","newsFeedCommentID","isReplay","defaultProps","isReply","props","dataUser","schema","CommentContent","required","defaultValuesInit","form","defaultValues","resolver","checkHandleComment","data","newData","ReplyContent","NewsFeedCommentID","NewsFeedID","then","res","reset","Avatar","handleSubmit"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\r\nimport { Form } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport InputTextField from '~/components/FormControl/InputTextField';\r\n\r\nCommentForm.propTypes = {\r\n\tisLoading: PropTypes.shape({\r\n\t\ttype: PropTypes.string.isRequired,\r\n\t\tstatus: PropTypes.bool.isRequired\r\n\t}),\r\n\thandleComment: PropTypes.func,\r\n\tuserComment: PropTypes.object,\r\n\tnewsFeedID: PropTypes.number,\r\n\tnewsFeedCommentID: PropTypes.number,\r\n\tisReplay: PropTypes.bool\r\n};\r\nCommentForm.defaultProps = {\r\n\tisLoading: { type: '', status: false },\r\n\thandleComment: null,\r\n\tuserComment: {},\r\n\tnewsFeedID: 0,\r\n\tnewsFeedCommentID: 0,\r\n\tisReply: false\r\n};\r\n\r\nfunction CommentForm(props) {\r\n\tconst { isLoading, dataUser, handleComment, newsFeedID, isReplay, newsFeedCommentID } = props;\r\n\r\n\tconst schema = yup.object().shape({\r\n\t\tCommentContent: yup.string().required('Bạn không được bỏ trống')\r\n\t});\r\n\r\n\tconst defaultValuesInit = {\r\n\t\tCommentContent: ''\r\n\t};\r\n\r\n\tconst form = useForm({\r\n\t\tdefaultValues: defaultValuesInit,\r\n\t\tresolver: yupResolver(schema)\r\n\t});\r\n\r\n\tconst checkHandleComment = (data: { CommentContent: string }) => {\r\n\t\tif (!handleComment) return;\r\n\t\tconst newData = isReplay\r\n\t\t\t? {\r\n\t\t\t\t\tReplyContent: data.CommentContent,\r\n\t\t\t\t\tNewsFeedCommentID: newsFeedCommentID\r\n\t\t\t  }\r\n\t\t\t: { ...data, NewsFeedID: newsFeedID };\r\n\t\thandleComment(newData).then((res) => res && form.reset({ ...defaultValuesInit }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"info-current-user user-comment\">\r\n\t\t\t<div className=\"avatar\">\r\n\t\t\t\t<img src={dataUser?.Avatar || '/images/user.png'} alt=\"\" />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"input-comments\">\r\n\t\t\t\t<Form layout=\"vertical\" onFinish={form.handleSubmit(checkHandleComment)}>\r\n\t\t\t\t\t<InputTextField form={form} name=\"CommentContent\" allowClear={false} />\r\n\t\t\t\t\t<button type=\"submit\" className=\"input-btn btn\" disabled={isLoading.type === 'ADD_COMMENT' && isLoading.status}>\r\n\t\t\t\t\t\tGửi\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}
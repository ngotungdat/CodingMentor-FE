{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\Elements\\\\UploadFile\\\\UploadFile.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { lessonDetailApi } from '~/apiBase/options/lesson-detail';\nimport { Upload, Button } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { useWrap } from '~/context/wrap';\n\nconst UploadFile = props => {\n  const {\n    getFile\n  } = props;\n  const {\n    showNoti\n  } = useWrap();\n  const propsFile = {\n    async onChange(info) {\n      if (info.file.status === 'uploading') {\n        return;\n      }\n\n      if (info.file.status !== 'removed') {\n        try {\n          let res = await lessonDetailApi.UploadDocument(info.file.originFileObj);\n\n          if (res.status === 200) {\n            getFile(res.data.data);\n            showNoti('success', 'Tải file thành công!');\n          } else {\n            showNoti('danger', 'Mạng đang không ổn định!');\n          }\n        } catch (error) {\n          showNoti('danger', error.message);\n        }\n      }\n    },\n\n    progress: {\n      strokeColor: {\n        '0%': '#108ee9',\n        '100%': '#87d068'\n      },\n      strokeWidth: 3,\n      format: percent => `${parseFloat(percent.toFixed(2))}%`\n    }\n  }; // const onChange = async (info) => {\n  // \tif (info.file.status === 'uploading') {\n  // \t\treturn;\n  // \t}\n  // \ttry {\n  // \t\tlet res = await lessonDetailApi.UploadDocument(info.file.originFileObj);\n  // \t\tif (res.status === 200) {\n  // \t\t\tgetFile(res.data.data);\n  // \t\t\tshowNoti('success', 'Tải file thành công!');\n  // \t\t} else {\n  // \t\t\tshowNoti('danger', 'Mạng đang không ổn định!');\n  // \t\t}\n  // \t} catch (error) {\n  // \t\tshowNoti('danger', error.message);\n  // \t}\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Upload, _objectSpread(_objectSpread({}, propsFile), {}, {\n      className: \"file-100\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this),\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n\nexport default UploadFile;","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/Elements/UploadFile/UploadFile.tsx"],"names":["React","lessonDetailApi","Upload","Button","UploadOutlined","useWrap","UploadFile","props","getFile","showNoti","propsFile","onChange","info","file","status","res","UploadDocument","originFileObj","data","error","message","progress","strokeColor","strokeWidth","format","percent","parseFloat","toFixed"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,MAA/B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeJ,OAAO,EAA5B;AAEA,QAAMK,SAAS,GAAG;AACjB,UAAMC,QAAN,CAAeC,IAAf,EAAqB;AACpB,UAAIA,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,WAAzB,EAAsC;AACrC;AACA;;AAED,UAAIF,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,SAAzB,EAAoC;AACnC,YAAI;AACH,cAAIC,GAAG,GAAG,MAAMd,eAAe,CAACe,cAAhB,CAA+BJ,IAAI,CAACC,IAAL,CAAUI,aAAzC,CAAhB;;AACA,cAAIF,GAAG,CAACD,MAAJ,KAAe,GAAnB,EAAwB;AACvBN,YAAAA,OAAO,CAACO,GAAG,CAACG,IAAJ,CAASA,IAAV,CAAP;AACAT,YAAAA,QAAQ,CAAC,SAAD,EAAY,sBAAZ,CAAR;AACA,WAHD,MAGO;AACNA,YAAAA,QAAQ,CAAC,QAAD,EAAW,0BAAX,CAAR;AACA;AACD,SARD,CAQE,OAAOU,KAAP,EAAc;AACfV,UAAAA,QAAQ,CAAC,QAAD,EAAWU,KAAK,CAACC,OAAjB,CAAR;AACA;AACD;AACD,KAnBgB;;AAoBjBC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,WAAW,EAAE;AACZ,cAAM,SADM;AAEZ,gBAAQ;AAFI,OADJ;AAKTC,MAAAA,WAAW,EAAE,CALJ;AAMTC,MAAAA,MAAM,EAAGC,OAAD,IAAc,GAAEC,UAAU,CAACD,OAAO,CAACE,OAAR,CAAgB,CAAhB,CAAD,CAAqB;AAN9C;AApBO,GAAlB,CAJ6B,CAkC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACC;AAAA,2BACC,QAAC,MAAD,kCAAYjB,SAAZ;AAAuB,MAAA,SAAS,EAAC,UAAjC;AAAA,6BACC,QAAC,MAAD;AAAQ,QAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CA1DD;;AA4DA,eAAeJ,UAAf","sourcesContent":["import React from 'react'\r\nimport { lessonDetailApi } from '~/apiBase/options/lesson-detail'\r\nimport { Upload, Button } from 'antd'\r\nimport { UploadOutlined } from '@ant-design/icons'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst UploadFile = (props) => {\r\n\tconst { getFile } = props\r\n\tconst { showNoti } = useWrap()\r\n\r\n\tconst propsFile = {\r\n\t\tasync onChange(info) {\r\n\t\t\tif (info.file.status === 'uploading') {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif (info.file.status !== 'removed') {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet res = await lessonDetailApi.UploadDocument(info.file.originFileObj)\r\n\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\tgetFile(res.data.data)\r\n\t\t\t\t\t\tshowNoti('success', 'Tải file thành công!')\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tshowNoti('danger', 'Mạng đang không ổn định!')\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tprogress: {\r\n\t\t\tstrokeColor: {\r\n\t\t\t\t'0%': '#108ee9',\r\n\t\t\t\t'100%': '#87d068'\r\n\t\t\t},\r\n\t\t\tstrokeWidth: 3,\r\n\t\t\tformat: (percent) => `${parseFloat(percent.toFixed(2))}%`\r\n\t\t}\r\n\t}\r\n\r\n\t// const onChange = async (info) => {\r\n\t// \tif (info.file.status === 'uploading') {\r\n\t// \t\treturn;\r\n\t// \t}\r\n\t// \ttry {\r\n\t// \t\tlet res = await lessonDetailApi.UploadDocument(info.file.originFileObj);\r\n\t// \t\tif (res.status === 200) {\r\n\t// \t\t\tgetFile(res.data.data);\r\n\t// \t\t\tshowNoti('success', 'Tải file thành công!');\r\n\t// \t\t} else {\r\n\t// \t\t\tshowNoti('danger', 'Mạng đang không ổn định!');\r\n\t// \t\t}\r\n\t// \t} catch (error) {\r\n\t// \t\tshowNoti('danger', error.message);\r\n\t// \t}\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Upload {...propsFile} className=\"file-100\">\r\n\t\t\t\t<Button icon={<UploadOutlined />}>Upload</Button>\r\n\t\t\t</Upload>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default UploadFile\r\n"]},"metadata":{},"sourceType":"module"}
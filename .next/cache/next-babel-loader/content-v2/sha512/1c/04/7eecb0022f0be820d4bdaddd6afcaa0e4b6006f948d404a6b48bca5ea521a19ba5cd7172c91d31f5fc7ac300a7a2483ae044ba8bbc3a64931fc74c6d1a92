{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Sales\\\\SalerList\\\\SalerList.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport moment from 'moment';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { areaApi, branchApi, districtApi, staffApi, wardApi } from '~/apiBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nimport { fmSelectArr } from '~/utils/functions';\nimport TeacherFilterForm from '../../Teacher/Teacher/TeacherFilterForm';\nimport SalerListForm from './SalerListForm';\n\nconst SalerList = () => {\n  const {\n    0: salerList,\n    1: setSalerList\n  } = useState([]);\n  const {\n    0: optionAreaSystemList,\n    1: setOptionAreaSystemList\n  } = useState({\n    areaList: [],\n    districtList: [],\n    wardList: []\n  });\n  const {\n    0: branchList,\n    1: setBranchList\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const {\n    0: activeColumnSearch,\n    1: setActiveColumnSearch\n  } = useState(''); // FILTER\n\n  const listFieldInit = {\n    pageIndex: 1,\n    pageSize: pageSize,\n    sort: 1,\n    sortType: false,\n    AreaID: '',\n    FullNameUnicode: '',\n    fromDate: '',\n    toDate: '',\n    StatusID: null,\n    RoleID: 6\n  };\n  let refValue = useRef({\n    pageIndex: 1,\n    pageSize: pageSize,\n    sort: 1,\n    sortType: false\n  });\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(listFieldInit);\n  const optionGenderList = [{\n    title: 'Nữ',\n    value: 0\n  }, {\n    title: 'Nam',\n    value: 1\n  }, {\n    title: 'Khác',\n    value: 2\n  }];\n  const optionStatusList = [{\n    title: 'Hoạt động',\n    value: 0\n  }, {\n    title: 'Khóa',\n    value: 1\n  }]; // SORT OPTION\n\n  const sortOptionList = [{\n    dataSort: {\n      sort: 0,\n      sortType: true\n    },\n    value: 1,\n    text: 'Tên tăng dần'\n  }, {\n    dataSort: {\n      sort: 0,\n      sortType: false\n    },\n    value: 2,\n    text: 'Tên giảm dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: true\n    },\n    value: 3,\n    text: 'Ngày nhận việc tăng dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: false\n    },\n    value: 4,\n    text: 'Ngày nhận việc giảm dần'\n  }]; // FILTER\n\n  const onFilter = obj => {\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1,\n      fromDate: moment(obj.fromDate).format('YYYY/MM/DD'),\n      toDate: moment(obj.toDate).format('YYYY/MM/DD')\n    }));\n  }; // PAGINATION\n\n\n  const getPagination = (pageIndex, pageSize) => {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize,\n      pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  }; // SORT\n\n\n  const onSort = option => {\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), refValue.current));\n  }; // RESET SEARCH\n\n\n  const onResetSearch = () => {\n    setActiveColumnSearch('');\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), {}, {\n      pageSize: refValue.current.pageSize\n    }));\n  }; // ACTION SEARCH\n\n\n  const onSearch = (valueSearch, dataIndex) => {\n    setActiveColumnSearch(dataIndex);\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1,\n      [dataIndex]: valueSearch\n    }));\n  }; // GET AREA\n\n\n  const fetchAreaList = async () => {\n    try {\n      const res = await areaApi.getAll({\n        selectAll: true\n      });\n\n      if (res.status === 200 && res.data.totalRow && res.data.data.length) {\n        const newAreaList = fmSelectArr(res.data.data, 'AreaName', 'AreaID');\n        setOptionAreaSystemList(_objectSpread(_objectSpread({}, optionAreaSystemList), {}, {\n          areaList: newAreaList\n        }));\n      }\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    fetchAreaList();\n  }, []); // DISTRICT BY AREA\n\n  const fetchDistrictByAreaID = async id => {\n    try {\n      const res = await districtApi.getAll({\n        AreaID: id\n      });\n\n      if (res.status === 200 && res.data.totalRow && res.data.data.length) {\n        const newDistrictList = fmSelectArr(res.data.data, 'DistrictName', 'ID');\n        setOptionAreaSystemList(_objectSpread(_objectSpread({}, optionAreaSystemList), {}, {\n          districtList: newDistrictList,\n          wardList: []\n        }));\n      }\n    } catch (error) {}\n  }; // WARD BY DISTRICT\n\n\n  const fetchWardByDistrictID = async id => {\n    setIsLoading({\n      type: 'FETCH_WARD_BY_DISTRICT',\n      status: true\n    });\n\n    try {\n      const res = await wardApi.getAll({\n        DistrictID: id\n      });\n\n      if (res.status === 200 && res.data.totalRow && res.data.data.length) {\n        const newWardList = fmSelectArr(res.data.data, 'WardName', 'ID');\n        setOptionAreaSystemList(_objectSpread(_objectSpread({}, optionAreaSystemList), {}, {\n          wardList: newWardList\n        }));\n      }\n    } catch (error) {} finally {\n      setIsLoading({\n        type: 'FETCH_WARD_BY_DISTRICT',\n        status: false\n      });\n    }\n  }; // BRANCH BY AREA\n\n\n  const fetchBranch = async id => {\n    setIsLoading({\n      type: 'FETCH_DATA_BY_AREA',\n      status: true\n    });\n\n    try {\n      let res = await branchApi.getAll({\n        pageIndex: 1,\n        pageSize: pageSize\n      });\n\n      if (res.status === 200 && res.data.totalRow) {\n        const newBranchList = fmSelectArr(res.data.data, 'BranchName', 'ID');\n        setBranchList(newBranchList);\n      }\n\n      if (res.status === 204) {\n        setBranchList([]);\n      }\n    } catch (error) {// showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'FETCH_DATA_BY_AREA',\n        status: false\n      });\n    }\n  }; // GET DATA IN FIRST TIME\n\n\n  const fetchSalerList = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await staffApi.getAll(filters);\n\n      if (res.status === 200) {\n        if (res.data.totalRow && res.data.data.length) {\n          setSalerList(res.data.data);\n          setTotalPage(res.data.totalRow);\n        }\n      }\n\n      if (res.status === 204) {\n        setSalerList([]);\n        setTotalPage(0);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchSalerList();\n  }, [filters]); // CREATE\n\n  const onCreateTeacher = async data => {\n    try {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: true\n      });\n\n      const newSaler = _objectSpread(_objectSpread({}, data), {}, {\n        Branch: data.Branch.join(','),\n        RoleID: 6\n      });\n\n      const res = await staffApi.add(newSaler);\n\n      if (res.status === 200) {\n        showNoti('success', res.data.message);\n        onResetSearch(); // <== khi tạo xong r reset search để trở về trang đầu tiên\n\n        return true;\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n    }\n  }; // UPDATE\n\n\n  const onUpdateTeacher = async (newObj, idx) => {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res;\n\n    try {\n      const newSalerAPI = _objectSpread(_objectSpread({}, newObj), {}, {\n        Branch: newObj.Branch.join(',')\n      });\n\n      res = await staffApi.update(newSalerAPI);\n\n      if (res.status === 200) {\n        const newSalerList = [...salerList];\n        const newBranch = branchList.filter(ob => newObj.Branch.some(nb => nb === ob.value)).map(b => ({\n          ID: b.value,\n          BranchName: b.title\n        }));\n        newSalerList.splice(idx, 1, _objectSpread(_objectSpread({}, newObj), {}, {\n          Branch: newBranch\n        }));\n        setSalerList(newSalerList);\n        showNoti('success', res.data.message);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n      return res;\n    }\n  };\n\n  const columns = [_objectSpread(_objectSpread({\n    title: 'Họ và tên',\n    dataIndex: 'FullNameUnicode'\n  }, FilterColumn('FullNameUnicode', onSearch, onResetSearch, 'text')), {}, {\n    className: activeColumnSearch === 'FullNameUnicode' ? 'active-column-search' : '',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 22\n    }, this)\n  }), _objectSpread(_objectSpread({\n    title: 'Tỉnh/Thành phố',\n    dataIndex: 'AreaName'\n  }, FilterColumn('AreaID', onSearch, onResetSearch, 'select', optionAreaSystemList.areaList)), {}, {\n    className: activeColumnSearch === 'AreaID' ? 'active-column-search' : '',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 22\n    }, this)\n  }), {\n    title: 'Giới tính',\n    dataIndex: 'Gender',\n    render: genderID => optionGenderList.find(o => o.value === genderID).title\n  }, {\n    title: 'SĐT',\n    dataIndex: 'Mobile'\n  }, {\n    title: 'Email',\n    dataIndex: 'Email'\n  }, {\n    title: 'Ngày nhận việc',\n    dataIndex: 'Jobdate',\n    render: date => date && moment(date).format('DD/MM/YYYY')\n  }, _objectSpread(_objectSpread({\n    title: 'Trạng thái',\n    dataIndex: 'StatusID',\n    width: 140\n  }, FilterColumn('StatusID', onSearch, onResetSearch, 'select', optionStatusList)), {}, {\n    render: status => status ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tag gray\",\n      children: \"Kh\\xF3a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tag green\",\n      children: \"Ho\\u1EA1t \\u0111\\u1ED9ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 75\n    }, this)\n  }), {\n    align: 'center',\n    render: (value, _, idx) => /*#__PURE__*/_jsxDEV(SalerListForm, {\n      isLoading: isLoading,\n      isUpdate: true,\n      updateObj: value,\n      optionStatusList: optionStatusList,\n      optionGenderList: optionGenderList,\n      optionAreaSystemList: optionAreaSystemList,\n      handleFetchDistrict: fetchDistrictByAreaID,\n      handleFetchWard: fetchWardByDistrictID,\n      optionBranchList: branchList,\n      handleFetchBranch: fetchBranch,\n      handleSubmit: onUpdateTeacher\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 5\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PowerTable, {\n      currentPage: filters.pageIndex,\n      totalPage: totalPage,\n      getPagination: getPagination,\n      loading: isLoading,\n      addClass: \"basic-header\",\n      columns: columns,\n      dataSource: salerList,\n      TitlePage: \"Danh s\\xE1ch t\\u01B0 v\\u1EA5n vi\\xEAn\",\n      TitleCard: /*#__PURE__*/_jsxDEV(SalerListForm, {\n        isLoading: isLoading,\n        optionStatusList: optionStatusList,\n        optionGenderList: optionGenderList,\n        optionAreaSystemList: optionAreaSystemList,\n        handleFetchDistrict: fetchDistrictByAreaID,\n        handleFetchWard: fetchWardByDistrictID,\n        optionBranchList: branchList,\n        handleFetchBranch: fetchBranch,\n        handleSubmit: onCreateTeacher\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 6\n      }, this),\n      Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: [/*#__PURE__*/_jsxDEV(TeacherFilterForm, {\n          handleFilter: onFilter,\n          handleResetFilter: onResetSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(SortBox, {\n          width: 190,\n          handleSort: onSort,\n          dataOption: sortOptionList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nexport default SalerList;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Sales/SalerList/SalerList.tsx"],"names":["moment","React","useEffect","useRef","useState","areaApi","branchApi","districtApi","staffApi","wardApi","SortBox","PowerTable","FilterColumn","useWrap","fmSelectArr","TeacherFilterForm","SalerListForm","SalerList","salerList","setSalerList","optionAreaSystemList","setOptionAreaSystemList","areaList","districtList","wardList","branchList","setBranchList","isLoading","setIsLoading","type","status","totalPage","setTotalPage","showNoti","pageSize","activeColumnSearch","setActiveColumnSearch","listFieldInit","pageIndex","sort","sortType","AreaID","FullNameUnicode","fromDate","toDate","StatusID","RoleID","refValue","filters","setFilters","optionGenderList","title","value","optionStatusList","sortOptionList","dataSort","text","onFilter","obj","current","format","getPagination","onSort","option","onResetSearch","onSearch","valueSearch","dataIndex","fetchAreaList","res","getAll","selectAll","data","totalRow","length","newAreaList","error","fetchDistrictByAreaID","id","newDistrictList","fetchWardByDistrictID","DistrictID","newWardList","fetchBranch","newBranchList","fetchSalerList","message","onCreateTeacher","newSaler","Branch","join","add","onUpdateTeacher","newObj","idx","newSalerAPI","update","newSalerList","newBranch","filter","ob","some","nb","map","b","ID","BranchName","splice","columns","className","render","genderID","find","o","date","width","align","_"],"mappings":"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","sourcesContent":["import moment from 'moment'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { areaApi, branchApi, districtApi, staffApi, wardApi } from '~/apiBase'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { fmSelectArr } from '~/utils/functions'\r\nimport TeacherFilterForm from '../../Teacher/Teacher/TeacherFilterForm'\r\nimport SalerListForm from './SalerListForm'\r\n\r\nconst SalerList = () => {\r\n\tconst [salerList, setSalerList] = useState<IStaff[]>([])\r\n\tconst [optionAreaSystemList, setOptionAreaSystemList] = useState<{\r\n\t\tareaList: IOptionCommon[]\r\n\t\tdistrictList: IOptionCommon[]\r\n\t\twardList: IOptionCommon[]\r\n\t}>({\r\n\t\tareaList: [],\r\n\t\tdistrictList: [],\r\n\t\twardList: []\r\n\t})\r\n\tconst [branchList, setBranchList] = useState([])\r\n\tconst [isLoading, setIsLoading] = useState({ type: '', status: false })\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst { showNoti, pageSize } = useWrap()\r\n\tconst [activeColumnSearch, setActiveColumnSearch] = useState('')\r\n\t// FILTER\r\n\tconst listFieldInit = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: pageSize,\r\n\t\tsort: 1,\r\n\t\tsortType: false,\r\n\t\tAreaID: '',\r\n\t\tFullNameUnicode: '',\r\n\t\tfromDate: '',\r\n\t\ttoDate: '',\r\n\t\tStatusID: null,\r\n\t\tRoleID: 6\r\n\t}\r\n\tlet refValue = useRef({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: pageSize,\r\n\t\tsort: 1,\r\n\t\tsortType: false\r\n\t})\r\n\tconst [filters, setFilters] = useState(listFieldInit)\r\n\r\n\tconst optionGenderList = [\r\n\t\t{ title: 'Nữ', value: 0 },\r\n\t\t{ title: 'Nam', value: 1 },\r\n\t\t{ title: 'Khác', value: 2 }\r\n\t]\r\n\r\n\tconst optionStatusList = [\r\n\t\t{ title: 'Hoạt động', value: 0 },\r\n\t\t{ title: 'Khóa', value: 1 }\r\n\t]\r\n\r\n\t// SORT OPTION\r\n\tconst sortOptionList = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 1,\r\n\t\t\ttext: 'Tên tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 2,\r\n\t\t\ttext: 'Tên giảm dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 3,\r\n\t\t\ttext: 'Ngày nhận việc tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 4,\r\n\t\t\ttext: 'Ngày nhận việc giảm dần'\r\n\t\t}\r\n\t]\r\n\r\n\t// FILTER\r\n\tconst onFilter = (obj) => {\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tfromDate: moment(obj.fromDate).format('YYYY/MM/DD'),\r\n\t\t\ttoDate: moment(obj.toDate).format('YYYY/MM/DD')\r\n\t\t})\r\n\t}\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tpageSize,\r\n\t\t\tpageIndex\r\n\t\t}\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\t...refValue.current\r\n\t\t})\r\n\t}\r\n\r\n\t// SORT\r\n\tconst onSort = (option) => {\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current\r\n\t\t})\r\n\t}\r\n\r\n\t// RESET SEARCH\r\n\tconst onResetSearch = () => {\r\n\t\tsetActiveColumnSearch('')\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\tpageSize: refValue.current.pageSize\r\n\t\t})\r\n\t}\r\n\r\n\t// ACTION SEARCH\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tsetActiveColumnSearch(dataIndex)\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t[dataIndex]: valueSearch\r\n\t\t})\r\n\t}\r\n\r\n\t// GET AREA\r\n\tconst fetchAreaList = async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await areaApi.getAll({\r\n\t\t\t\tselectAll: true\r\n\t\t\t})\r\n\t\t\tif (res.status === 200 && res.data.totalRow && res.data.data.length) {\r\n\t\t\t\tconst newAreaList = fmSelectArr(res.data.data, 'AreaName', 'AreaID')\r\n\t\t\t\tsetOptionAreaSystemList({\r\n\t\t\t\t\t...optionAreaSystemList,\r\n\t\t\t\t\tareaList: newAreaList\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchAreaList()\r\n\t}, [])\r\n\r\n\t// DISTRICT BY AREA\r\n\tconst fetchDistrictByAreaID = async (id: number) => {\r\n\t\ttry {\r\n\t\t\tconst res = await districtApi.getAll({\r\n\t\t\t\tAreaID: id\r\n\t\t\t})\r\n\t\t\tif (res.status === 200 && res.data.totalRow && res.data.data.length) {\r\n\t\t\t\tconst newDistrictList = fmSelectArr(res.data.data, 'DistrictName', 'ID')\r\n\t\t\t\tsetOptionAreaSystemList({\r\n\t\t\t\t\t...optionAreaSystemList,\r\n\t\t\t\t\tdistrictList: newDistrictList,\r\n\t\t\t\t\twardList: []\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {}\r\n\t}\r\n\r\n\t// WARD BY DISTRICT\r\n\tconst fetchWardByDistrictID = async (id: number) => {\r\n\t\tsetIsLoading({ type: 'FETCH_WARD_BY_DISTRICT', status: true })\r\n\t\ttry {\r\n\t\t\tconst res = await wardApi.getAll({\r\n\t\t\t\tDistrictID: id\r\n\t\t\t})\r\n\t\t\tif (res.status === 200 && res.data.totalRow && res.data.data.length) {\r\n\t\t\t\tconst newWardList = fmSelectArr(res.data.data, 'WardName', 'ID')\r\n\t\t\t\tsetOptionAreaSystemList({\r\n\t\t\t\t\t...optionAreaSystemList,\r\n\t\t\t\t\twardList: newWardList\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'FETCH_WARD_BY_DISTRICT', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\t// BRANCH BY AREA\r\n\tconst fetchBranch = async (id: number) => {\r\n\t\tsetIsLoading({ type: 'FETCH_DATA_BY_AREA', status: true })\r\n\t\ttry {\r\n\t\t\tlet res = await branchApi.getAll({\r\n\t\t\t\tpageIndex: 1,\r\n\t\t\t\tpageSize: pageSize\r\n\t\t\t})\r\n\t\t\tif (res.status === 200 && res.data.totalRow) {\r\n\t\t\t\tconst newBranchList = fmSelectArr(res.data.data, 'BranchName', 'ID')\r\n\t\t\t\tsetBranchList(newBranchList)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetBranchList([])\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\t// showNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'FETCH_DATA_BY_AREA', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\t// GET DATA IN FIRST TIME\r\n\tconst fetchSalerList = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tlet res = await staffApi.getAll(filters)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tif (res.data.totalRow && res.data.data.length) {\r\n\t\t\t\t\tsetSalerList(res.data.data)\r\n\t\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetSalerList([])\r\n\t\t\t\tsetTotalPage(0)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchSalerList()\r\n\t}, [filters])\r\n\r\n\t// CREATE\r\n\tconst onCreateTeacher = async (data) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: true\r\n\t\t\t})\r\n\t\t\tconst newSaler = {\r\n\t\t\t\t...data,\r\n\t\t\t\tBranch: data.Branch.join(','),\r\n\t\t\t\tRoleID: 6\r\n\t\t\t}\r\n\t\t\tconst res = await staffApi.add(newSaler)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\tonResetSearch() // <== khi tạo xong r reset search để trở về trang đầu tiên\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// UPDATE\r\n\tconst onUpdateTeacher = async (newObj: any, idx: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\tlet res\r\n\t\ttry {\r\n\t\t\tconst newSalerAPI = {\r\n\t\t\t\t...newObj,\r\n\t\t\t\tBranch: newObj.Branch.join(',')\r\n\t\t\t}\r\n\t\t\tres = await staffApi.update(newSalerAPI)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newSalerList = [...salerList]\r\n\t\t\t\tconst newBranch = branchList\r\n\t\t\t\t\t.filter((ob) => newObj.Branch.some((nb) => nb === ob.value))\r\n\t\t\t\t\t.map((b) => ({\r\n\t\t\t\t\t\tID: b.value,\r\n\t\t\t\t\t\tBranchName: b.title\r\n\t\t\t\t\t}))\r\n\t\t\t\tnewSalerList.splice(idx, 1, {\r\n\t\t\t\t\t...newObj,\r\n\t\t\t\t\tBranch: newBranch\r\n\t\t\t\t})\r\n\t\t\t\tsetSalerList(newSalerList)\r\n\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t\treturn res\r\n\t\t}\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Họ và tên',\r\n\t\t\tdataIndex: 'FullNameUnicode',\r\n\t\t\t...FilterColumn('FullNameUnicode', onSearch, onResetSearch, 'text'),\r\n\t\t\tclassName: activeColumnSearch === 'FullNameUnicode' ? 'active-column-search' : '',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tỉnh/Thành phố',\r\n\t\t\tdataIndex: 'AreaName',\r\n\t\t\t...FilterColumn('AreaID', onSearch, onResetSearch, 'select', optionAreaSystemList.areaList),\r\n\t\t\tclassName: activeColumnSearch === 'AreaID' ? 'active-column-search' : '',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Giới tính',\r\n\t\t\tdataIndex: 'Gender',\r\n\t\t\trender: (genderID) => optionGenderList.find((o) => o.value === genderID).title\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'SĐT',\r\n\t\t\tdataIndex: 'Mobile'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Email',\r\n\t\t\tdataIndex: 'Email'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày nhận việc',\r\n\t\t\tdataIndex: 'Jobdate',\r\n\t\t\trender: (date) => date && moment(date).format('DD/MM/YYYY')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tdataIndex: 'StatusID',\r\n\t\t\twidth: 140,\r\n\t\t\t...FilterColumn('StatusID', onSearch, onResetSearch, 'select', optionStatusList),\r\n\t\t\trender: (status) => (status ? <span className=\"tag gray\">Khóa</span> : <span className=\"tag green\">Hoạt động</span>)\r\n\t\t},\r\n\t\t{\r\n\t\t\talign: 'center',\r\n\t\t\trender: (value, _, idx) => (\r\n\t\t\t\t<SalerListForm\r\n\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\tisUpdate={true}\r\n\t\t\t\t\tupdateObj={value}\r\n\t\t\t\t\toptionStatusList={optionStatusList}\r\n\t\t\t\t\toptionGenderList={optionGenderList}\r\n\t\t\t\t\toptionAreaSystemList={optionAreaSystemList}\r\n\t\t\t\t\thandleFetchDistrict={fetchDistrictByAreaID}\r\n\t\t\t\t\thandleFetchWard={fetchWardByDistrictID}\r\n\t\t\t\t\toptionBranchList={branchList}\r\n\t\t\t\t\thandleFetchBranch={fetchBranch}\r\n\t\t\t\t\thandleSubmit={onUpdateTeacher}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PowerTable\r\n\t\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\t\ttotalPage={totalPage}\r\n\t\t\t\tgetPagination={getPagination}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdataSource={salerList}\r\n\t\t\t\tTitlePage=\"Danh sách tư vấn viên\"\r\n\t\t\t\tTitleCard={\r\n\t\t\t\t\t<SalerListForm\r\n\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\toptionStatusList={optionStatusList}\r\n\t\t\t\t\t\toptionGenderList={optionGenderList}\r\n\t\t\t\t\t\toptionAreaSystemList={optionAreaSystemList}\r\n\t\t\t\t\t\thandleFetchDistrict={fetchDistrictByAreaID}\r\n\t\t\t\t\t\thandleFetchWard={fetchWardByDistrictID}\r\n\t\t\t\t\t\toptionBranchList={branchList}\r\n\t\t\t\t\t\thandleFetchBranch={fetchBranch}\r\n\t\t\t\t\t\thandleSubmit={onCreateTeacher}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t<TeacherFilterForm handleFilter={onFilter} handleResetFilter={onResetSearch} />\r\n\t\t\t\t\t\t<SortBox width={190} handleSort={onSort} dataOption={sortOptionList} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SalerList\r\n"]},"metadata":{},"sourceType":"module"}
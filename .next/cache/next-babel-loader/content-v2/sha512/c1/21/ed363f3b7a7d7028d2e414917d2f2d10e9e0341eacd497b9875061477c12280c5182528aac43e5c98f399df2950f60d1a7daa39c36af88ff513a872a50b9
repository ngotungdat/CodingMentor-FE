{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\QuestionBank\\\\QuestionFormType\\\\GroupForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Form } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { exerciseGroupApi } from '~/apiBase/';\nimport EditorSimple from '~/components/Elements/EditorSimple';\nimport UploadAudio from '~/components/Elements/UploadAudio';\nimport { useWrap } from '~/context/wrap';\n\nvar GroupForm = function GroupForm(props) {\n  _s();\n\n  var isSubmit = props.isSubmit,\n      questionData = props.questionData,\n      changeIsSubmit = props.changeIsSubmit,\n      visible = props.visible,\n      changeData = props.changeData;\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      _useForm$formState = _useForm.formState,\n      isSubmitting = _useForm$formState.isSubmitting,\n      errors = _useForm$formState.errors,\n      isSubmitted = _useForm$formState.isSubmitted;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState(questionData),\n      questionDataForm = _useState[0],\n      setQuestionDataForm = _useState[1];\n\n  var _useState2 = useState(false),\n      isResetEditor = _useState2[0],\n      setIsResetEditor = _useState2[1];\n\n  var _useState3 = useState(true),\n      loadAtFirst = _useState3[0],\n      setLoadAtFirst = _useState3[1];\n\n  console.log('question data Form: ', questionDataForm);\n  console.log('Question Data: ', questionData); // GET INTRODUCE EDITOR\n\n  var getIntroduceEditor = function getIntroduceEditor(dataEditor) {\n    if (questionDataForm) {\n      questionDataForm.Introduce = dataEditor;\n    }\n\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // GET VALUE IN EDITOR\n\n\n  var getDataEditor = function getDataEditor(dataEditor) {\n    if (questionDataForm) {\n      console.log('Data content: ', dataEditor);\n      questionDataForm.Content = dataEditor;\n    }\n\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // Reset value in form\n\n\n  var resetForm = function resetForm() {\n    questionDataForm.Content = '';\n    questionDataForm.ExerciseAnswer.forEach(function (item) {\n      item.AnswerContent = '';\n      item.isTrue = false;\n    });\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // SUBMIT FORM\n\n\n  var handleSubmitQuestion = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, newData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              res = null;\n              newData = {\n                Content: questionDataForm.Content,\n                CurriculumID: questionDataForm.CurriculumID,\n                Level: questionDataForm.Level,\n                Type: questionDataForm.Type,\n                LinkAudio: questionDataForm.LinkAudio,\n                Introduce: questionDataForm.Introduce,\n                SkillID: questionDataForm.SkillID\n              };\n              console.log('Data submit is: ', newData);\n              _context.prev = 3;\n\n              if (!questionDataForm.ID) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 7;\n              return exerciseGroupApi.update(_objectSpread(_objectSpread({}, newData), {}, {\n                ID: questionDataForm.ID\n              }));\n\n            case 7:\n              res = _context.sent;\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.next = 12;\n              return exerciseGroupApi.add(newData);\n\n            case 12:\n              res = _context.sent;\n\n            case 13:\n              if (res.status == 200) {\n                changeIsSubmit(questionDataForm.ID ? questionDataForm : res.data.data);\n                showNoti('success', \"\".concat(questionDataForm.ID ? 'Cập nhật' : 'Thêm', \" Th\\xE0nh c\\xF4ng\"));\n\n                if (!questionDataForm.ID) {\n                  resetForm();\n                }\n\n                setIsResetEditor(true);\n                setTimeout(function () {\n                  setIsResetEditor(false);\n                }, 500);\n              }\n\n              _context.next = 18;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](3);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 16]]);\n    }));\n\n    return function handleSubmitQuestion() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    isSubmit && handleSubmitQuestion();\n  }, [isSubmit]);\n  useEffect(function () {\n    if (visible) {\n      if (!questionData.ID) {\n        questionData.Content = '';\n        questionData.Introduce = '';\n        questionData.LinkAudio = '';\n      }\n\n      setQuestionDataForm(questionData);\n    } else {\n      setQuestionDataForm(null);\n      setLoadAtFirst(true);\n    }\n  }, [visible]);\n  useEffect(function () {\n    console.log('chạy vô');\n\n    if (questionDataForm) {\n      if (!loadAtFirst) {\n        if (questionDataForm.Content !== '' || questionDataForm.Introduce !== '' || questionDataForm.LinkAudio !== '') {\n          changeData && changeData();\n        }\n      }\n\n      setLoadAtFirst(false);\n    }\n  }, [questionDataForm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-create-question\",\n    children: visible && questionDataForm && /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      layout: \"vertical\",\n      onFinish: handleSubmitQuestion,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"Question\",\n              label: \"Gi\\u1EDBi thi\\u1EC7u\",\n              children: /*#__PURE__*/_jsxDEV(EditorSimple, {\n                handleChange: function handleChange(value) {\n                  return getIntroduceEditor(value);\n                },\n                isReset: isResetEditor,\n                questionContent: questionDataForm === null || questionDataForm === void 0 ? void 0 : questionDataForm.Introduce,\n                questionData: questionDataForm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"Question\",\n              label: \"N\\u1ED9i dung\",\n              children: /*#__PURE__*/_jsxDEV(EditorSimple, {\n                isTranslate: true,\n                handleChange: function handleChange(value) {\n                  return getDataEditor(value);\n                },\n                isReset: isResetEditor,\n                questionContent: questionDataForm === null || questionDataForm === void 0 ? void 0 : questionDataForm.Content,\n                questionData: questionDataForm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"T\\u1EA3i l\\xEAn link Audio\",\n              children: /*#__PURE__*/_jsxDEV(UploadAudio, {\n                getFile: function getFile(file) {\n                  questionDataForm.LinkAudio = file;\n                  setQuestionDataForm(_objectSpread({}, questionDataForm));\n                },\n                valueFile: questionDataForm === null || questionDataForm === void 0 ? void 0 : questionDataForm.LinkAudio\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 9\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(GroupForm, \"H3ybmTLMaLlbjab47ujR1esa3HA=\", false, function () {\n  return [useWrap, useForm, Form.useForm];\n});\n\n_c = GroupForm;\nexport default GroupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupForm\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/QuestionBank/QuestionFormType/GroupForm.tsx"],"names":["Form","React","useEffect","useState","useForm","exerciseGroupApi","EditorSimple","UploadAudio","useWrap","GroupForm","props","isSubmit","questionData","changeIsSubmit","visible","changeData","showNoti","handleSubmit","formState","isSubmitting","errors","isSubmitted","form","questionDataForm","setQuestionDataForm","isResetEditor","setIsResetEditor","loadAtFirst","setLoadAtFirst","console","log","getIntroduceEditor","dataEditor","Introduce","getDataEditor","Content","resetForm","ExerciseAnswer","forEach","item","AnswerContent","isTrue","handleSubmitQuestion","res","newData","CurriculumID","Level","Type","LinkAudio","SkillID","ID","update","add","status","data","setTimeout","value","file"],"mappings":"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","sourcesContent":["import { Form } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { exerciseGroupApi } from '~/apiBase/'\r\nimport EditorSimple from '~/components/Elements/EditorSimple'\r\nimport UploadAudio from '~/components/Elements/UploadAudio'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst GroupForm = (props) => {\r\n\tconst { isSubmit, questionData, changeIsSubmit, visible, changeData } = props\r\n\tconst { showNoti } = useWrap()\r\n\tconst {\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, errors, isSubmitted }\r\n\t} = useForm()\r\n\tconst [form] = Form.useForm()\r\n\tconst [questionDataForm, setQuestionDataForm] = useState(questionData)\r\n\tconst [isResetEditor, setIsResetEditor] = useState(false)\r\n\tconst [loadAtFirst, setLoadAtFirst] = useState(true)\r\n\r\n\tconsole.log('question data Form: ', questionDataForm)\r\n\tconsole.log('Question Data: ', questionData)\r\n\r\n\t// GET INTRODUCE EDITOR\r\n\tconst getIntroduceEditor = (dataEditor: any) => {\r\n\t\tif (questionDataForm) {\r\n\t\t\tquestionDataForm.Introduce = dataEditor\r\n\t\t}\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// GET VALUE IN EDITOR\r\n\tconst getDataEditor = (dataEditor: any) => {\r\n\t\tif (questionDataForm) {\r\n\t\t\tconsole.log('Data content: ', dataEditor)\r\n\t\t\tquestionDataForm.Content = dataEditor\r\n\t\t}\r\n\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// Reset value in form\r\n\tconst resetForm = () => {\r\n\t\tquestionDataForm.Content = ''\r\n\t\tquestionDataForm.ExerciseAnswer.forEach((item) => {\r\n\t\t\titem.AnswerContent = ''\r\n\t\t\titem.isTrue = false\r\n\t\t})\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// SUBMIT FORM\r\n\tconst handleSubmitQuestion = async () => {\r\n\t\tlet res = null\r\n\t\tlet newData = {\r\n\t\t\tContent: questionDataForm.Content,\r\n\t\t\tCurriculumID: questionDataForm.CurriculumID,\r\n\t\t\tLevel: questionDataForm.Level,\r\n\t\t\tType: questionDataForm.Type,\r\n\t\t\tLinkAudio: questionDataForm.LinkAudio,\r\n\t\t\tIntroduce: questionDataForm.Introduce,\r\n\t\t\tSkillID: questionDataForm.SkillID\r\n\t\t}\r\n\r\n\t\tconsole.log('Data submit is: ', newData)\r\n\r\n\t\ttry {\r\n\t\t\tif (questionDataForm.ID) {\r\n\t\t\t\tres = await exerciseGroupApi.update({\r\n\t\t\t\t\t...newData,\r\n\t\t\t\t\tID: questionDataForm.ID\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tres = await exerciseGroupApi.add(newData)\r\n\t\t\t}\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tchangeIsSubmit(questionDataForm.ID ? questionDataForm : res.data.data)\r\n\t\t\t\tshowNoti('success', `${questionDataForm.ID ? 'Cập nhật' : 'Thêm'} Thành công`)\r\n\t\t\t\tif (!questionDataForm.ID) {\r\n\t\t\t\t\tresetForm()\r\n\t\t\t\t}\r\n\t\t\t\tsetIsResetEditor(true)\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetIsResetEditor(false)\r\n\t\t\t\t}, 500)\r\n\t\t\t}\r\n\t\t} catch (error) {}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tisSubmit && handleSubmitQuestion()\r\n\t}, [isSubmit])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (visible) {\r\n\t\t\tif (!questionData.ID) {\r\n\t\t\t\tquestionData.Content = ''\r\n\t\t\t\tquestionData.Introduce = ''\r\n\t\t\t\tquestionData.LinkAudio = ''\r\n\t\t\t}\r\n\r\n\t\t\tsetQuestionDataForm(questionData)\r\n\t\t} else {\r\n\t\t\tsetQuestionDataForm(null)\r\n\t\t\tsetLoadAtFirst(true)\r\n\t\t}\r\n\t}, [visible])\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('chạy vô')\r\n\t\tif (questionDataForm) {\r\n\t\t\tif (!loadAtFirst) {\r\n\t\t\t\tif (questionDataForm.Content !== '' || questionDataForm.Introduce !== '' || questionDataForm.LinkAudio !== '') {\r\n\t\t\t\t\tchangeData && changeData()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetLoadAtFirst(false)\r\n\t\t}\r\n\t}, [questionDataForm])\r\n\r\n\treturn (\r\n\t\t<div className=\"form-create-question\">\r\n\t\t\t{visible && questionDataForm && (\r\n\t\t\t\t<Form form={form} layout=\"vertical\" onFinish={handleSubmitQuestion}>\r\n\t\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t<Form.Item name=\"Question\" label=\"Giới thiệu\">\r\n\t\t\t\t\t\t\t\t\t<EditorSimple\r\n\t\t\t\t\t\t\t\t\t\thandleChange={(value) => getIntroduceEditor(value)}\r\n\t\t\t\t\t\t\t\t\t\tisReset={isResetEditor}\r\n\t\t\t\t\t\t\t\t\t\tquestionContent={questionDataForm?.Introduce}\r\n\t\t\t\t\t\t\t\t\t\tquestionData={questionDataForm}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t<Form.Item name=\"Question\" label=\"Nội dung\">\r\n\t\t\t\t\t\t\t\t\t<EditorSimple\r\n\t\t\t\t\t\t\t\t\t\tisTranslate={true}\r\n\t\t\t\t\t\t\t\t\t\thandleChange={(value) => getDataEditor(value)}\r\n\t\t\t\t\t\t\t\t\t\tisReset={isResetEditor}\r\n\t\t\t\t\t\t\t\t\t\tquestionContent={questionDataForm?.Content}\r\n\t\t\t\t\t\t\t\t\t\tquestionData={questionDataForm}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t<Form.Item label=\"Tải lên link Audio\">\r\n\t\t\t\t\t\t\t\t\t<UploadAudio\r\n\t\t\t\t\t\t\t\t\t\tgetFile={(file) => {\r\n\t\t\t\t\t\t\t\t\t\t\tquestionDataForm.LinkAudio = file\r\n\t\t\t\t\t\t\t\t\t\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tvalueFile={questionDataForm?.LinkAudio}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default GroupForm\r\n"]},"metadata":{},"sourceType":"module"}
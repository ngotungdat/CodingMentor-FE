{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\CreateCourse\\\\CreateCourse.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Card } from 'antd';\nimport moment from 'moment';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { branchApi, checkRoomApi, checkTeacherApi, courseApi, curriculumApi, gradeApi, lessonApi, programApi, roomApi, staffApi, studyDayApi, studyTimeApi } from '~/apiBase';\nimport CreateCourseForm from '~/components/Global/CreateCourse/CreateCourseForm/CreateCourseForm';\nimport SaveCreateCourse from '~/components/Global/CreateCourse/SaveCreateCourse';\nimport TitlePage from '~/components/TitlePage';\nimport { useDebounce } from '~/context/useDebounce';\nimport { useWrap } from '~/context/wrap';\nimport { fmArrayToObjectWithSpecialKey, fmSelectArr } from '~/utils/functions';\nimport CreateCourseCalendar from './Calendar/CreateCourseCalendar';\nimport Schedule from './Schedule/Schedule';\nimport ScheduleItem from './Schedule/ScheduleItem';\nimport ScheduleList from './Schedule/ScheduleList'; // ------------ MAIN COMPONENT ------------------\n\nvar dayOfWeek = [{\n  title: 'Thứ 2',\n  value: 1\n}, {\n  title: 'Thứ 3',\n  value: 2\n}, {\n  title: 'Thứ 4',\n  value: 3\n}, {\n  title: 'Thứ 5',\n  value: 4\n}, {\n  title: 'Thứ 6',\n  value: 5\n}, {\n  title: 'Thứ 7',\n  value: 6\n}, {\n  title: 'Chủ nhật',\n  value: 0\n}];\n\nvar CreateCourse = function CreateCourse() {\n  _s();\n\n  var router = useRouter(); // -----------STATE-----------\n  // FORM\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var _useState = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState({\n    branchList: [],\n    studyTimeList: [],\n    gradeList: [],\n    programList: [],\n    dayOfWeek: dayOfWeek,\n    curriculumList: [],\n    userInformationList: [],\n    roomList: []\n  }),\n      optionListForForm = _useState2[0],\n      setOptionListForForm = _useState2[1];\n\n  var stoneStudyTimeList = useRef(optionListForForm.studyTimeList);\n\n  var _useState3 = useState({\n    StudyTimeID: null,\n    ProgramID: null\n  }),\n      dataToFetchCurriculum = _useState3[0],\n      setDataToFetchCurriculum = _useState3[1]; //Lesson\n\n\n  var _useState4 = useState({\n    available: [],\n    unavailable: [],\n    endDate: ''\n  }),\n      scheduleList = _useState4[0],\n      setScheduleList = _useState4[1];\n\n  var _useState5 = useState({\n    optionStudyTimeList: [],\n    list: [{\n      optionRoomList: [],\n      optionTeacherList: []\n    }]\n  }),\n      optionListForADay = _useState5[0],\n      setOptionListForADay = _useState5[1]; //StudyDay\n\n\n  var _useState6 = useState([]),\n      calendarList = _useState6[0],\n      setCalendarList = _useState6[1]; // SAVE\n\n\n  var _useState7 = useState(false),\n      isSave = _useState7[0],\n      setIsSave = _useState7[1];\n\n  var _useState8 = useState({}),\n      scheduleShow = _useState8[0],\n      setScheduleShow = _useState8[1];\n\n  var stoneDataToSave = useRef({\n    CourseName: '',\n    AcademicUID: 0,\n    BranchID: 0,\n    RoomID: '',\n    CurriculumID: 0,\n    ProgramID: 0,\n    StartDay: '',\n    GradeID: 0,\n    DaySelected: '',\n    StudyTimeID: ''\n  });\n\n  var _useState9 = useState({\n    CourseName: '',\n    AcademicUID: 0,\n    BranchID: 0,\n    BranchName: '',\n    GradeID: 0,\n    RoomID: '',\n    RoomName: '',\n    StudyTimeID: '',\n    StudyTimeName: '',\n    ProgramID: 0,\n    ProgramName: '',\n    CurriculumID: 0,\n    CurriculumName: '',\n    StartDay: '',\n    EndDay: '',\n    DaySelected: '',\n    DaySelectedName: '',\n    TypeCourse: 1,\n    Schedule: []\n  }),\n      saveCourseInfo = _useState9[0],\n      setSaveCourseInfo = _useState9[1]; // CALENDAR MODAL\n\n\n  var _useState10 = useState({\n    dateString: '',\n    limit: 0,\n    scheduleInDay: 0,\n    scheduleList: []\n  }),\n      dataModalCalendar = _useState10[0],\n      setDataModalCalendar = _useState10[1]; // -----------CREATE COURSE FORM-----------\n  // FETCH BRANCH, STUDY TIME, GRADE IN THE FIRST TIME\n\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$Promise$all, _yield$Promise$all2, branch, studyTime, grade, newBranchList, newStudyTimeList, newGradeList;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading({\n                type: 'FETCH_DATA',\n                status: true\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return Promise.all([branchApi.getAll({\n                pageIndex: 1,\n                pageSize: 9999\n              }), studyTimeApi.getAll({\n                selectAll: true\n              }), gradeApi.getAll({\n                selectAll: true\n              })]);\n\n            case 4:\n              _yield$Promise$all = _context.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3);\n              branch = _yield$Promise$all2[0];\n              studyTime = _yield$Promise$all2[1];\n              grade = _yield$Promise$all2[2];\n              // BRANCH\n              newBranchList = fmSelectArr(branch.data.data, 'BranchName', 'ID'); // STUDY TIME\n\n              newStudyTimeList = fmSelectArr(studyTime.data.data, 'Name', 'ID', ['Time', 'TimeStart', 'TimeEnd']);\n              stoneStudyTimeList.current = newStudyTimeList; // GRADE\n\n              newGradeList = fmSelectArr(grade.data.data, 'GradeName', 'ID');\n              setOptionListForForm(_objectSpread(_objectSpread({}, optionListForForm), {}, {\n                branchList: newBranchList,\n                studyTimeList: newStudyTimeList,\n                gradeList: newGradeList\n              }));\n              _context.next = 20;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](1);\n              console.log('fetchData - PromiseAll:', _context.t0);\n              showNoti('danger', _context.t0.message);\n\n            case 20:\n              _context.prev = 20;\n              setIsLoading({\n                type: 'FETCH_DATA',\n                status: false\n              });\n              return _context.finish(20);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 16, 20, 23]]);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchData();\n  }, []); // FETCH ROOM AND USER INFORMATION\n\n  var fetchDataByBranch = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var params, _yield$Promise$all3, _yield$Promise$all4, user, room, rs, newUserInformationList, newRoomList, newRoomListFmName;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsLoading({\n                type: 'BranchID',\n                status: true\n              });\n              _context2.prev = 1;\n              params = {\n                BranchID: id\n              };\n              _context2.next = 5;\n              return Promise.all([staffApi.getAll(_objectSpread(_objectSpread({}, params), {}, {\n                RoleID: 7\n              })), roomApi.getAll(params)]);\n\n            case 5:\n              _yield$Promise$all3 = _context2.sent;\n              _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 2);\n              user = _yield$Promise$all4[0];\n              room = _yield$Promise$all4[1];\n              // USER INFORMATION\n              rs = {\n                userInformationList: [],\n                roomList: []\n              };\n\n              if (user.status === 200) {\n                newUserInformationList = fmSelectArr(user.data.data, 'FullNameUnicode', 'UserInformationID');\n                rs.userInformationList = newUserInformationList;\n              }\n\n              if (user.status === 204) {\n                rs.userInformationList = [];\n              } // ROOM\n\n\n              if (room.status === 200) {\n                newRoomList = fmSelectArr(room.data.data, 'RoomName', 'RoomID', ['RoomCode']);\n                newRoomListFmName = newRoomList.map(function (r) {\n                  return _objectSpread(_objectSpread({}, r), {}, {\n                    title: \"\".concat(r.options.RoomCode, \" - \").concat(r.title)\n                  });\n                });\n                rs.roomList = newRoomListFmName;\n              }\n\n              if (room.status === 204) {\n                rs.roomList = [];\n              }\n\n              setOptionListForForm(function (preState) {\n                return _objectSpread(_objectSpread({}, preState), rs);\n              });\n              _context2.next = 21;\n              break;\n\n            case 17:\n              _context2.prev = 17;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log('FetchDataByBranch - PromiseAll:', _context2.t0);\n              showNoti('danger', _context2.t0.message);\n\n            case 21:\n              _context2.prev = 21;\n              setIsLoading({\n                type: 'BranchID',\n                status: false\n              });\n              return _context2.finish(21);\n\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 17, 21, 24]]);\n    }));\n\n    return function fetchDataByBranch(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // PROGRAM\n\n\n  var fetchProgramByGrade = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n      var res, newProgramList;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsLoading({\n                type: 'GradeID',\n                status: true\n              });\n              _context3.prev = 1;\n              _context3.next = 4;\n              return programApi.getAll({\n                GradeID: id\n              });\n\n            case 4:\n              res = _context3.sent;\n\n              if (res.status === 200) {\n                newProgramList = fmSelectArr(res.data.data, 'ProgramName', 'ID');\n                setOptionListForForm(_objectSpread(_objectSpread({}, optionListForForm), {}, {\n                  programList: newProgramList\n                }));\n              }\n\n              if (res.status === 204) {\n                setOptionListForForm(_objectSpread(_objectSpread({}, optionListForForm), {}, {\n                  programList: []\n                }));\n              }\n\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](1);\n              showNoti('danger', _context3.t0.message);\n\n            case 12:\n              _context3.prev = 12;\n              setIsLoading({\n                type: 'GradeID',\n                status: false\n              });\n              return _context3.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function fetchProgramByGrade(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // CURRICULUM\n\n\n  var checkStudyTime = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(value) {\n      var newStudyTimeList, rs, studyTimeSelected, _loop, i;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (value !== null && value !== void 0 && value.length) {\n                _context4.next = 3;\n                break;\n              }\n\n              setOptionListForForm(_objectSpread(_objectSpread({}, optionListForForm), {}, {\n                studyTimeList: stoneStudyTimeList.current\n              }));\n              return _context4.abrupt(\"return\");\n\n            case 3:\n              newStudyTimeList = _toConsumableArray(optionListForForm.studyTimeList);\n              studyTimeSelected = [];\n\n              _loop = function _loop(i) {\n                var timeObjBase = newStudyTimeList.find(function (s) {\n                  return s.value === value[i];\n                });\n                var s1 = +timeObjBase.options.TimeStart.replace(':', '');\n                var e1 = +timeObjBase.options.TimeEnd.replace(':', '');\n                var t1 = +timeObjBase.options.Time;\n                rs = newStudyTimeList.filter(function (st) {\n                  var s2 = +st.options.TimeStart.replace(':', '');\n                  var e2 = +st.options.TimeEnd.replace(':', '');\n                  var t2 = +st.options.Time;\n\n                  if (timeObjBase.value === st.value) {\n                    studyTimeSelected.push(st);\n                    return st;\n                  }\n\n                  if ( // KIỂM TRA MỖI CA HỌC KHÔNG CÓ THỜI GIAN TRÙNG LÊN NHAU\n                  !(s1 < s2 && e1 > e2 && s1 < e2 || s1 > s2 && e1 > e2 && s1 < e2 || s1 < s2 && e1 < e2 && e1 > s2 || s1 > s2 && e1 < e2) && t1 === t2) {\n                    return st;\n                  }\n                });\n              };\n\n              for (i = 0; i < value.length; i++) {\n                _loop(i);\n              }\n\n              setOptionListForForm(_objectSpread(_objectSpread({}, optionListForForm), {}, {\n                studyTimeList: rs\n              }));\n              setOptionListForADay(_objectSpread(_objectSpread({}, optionListForADay), {}, {\n                optionStudyTimeList: studyTimeSelected\n              }));\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function checkStudyTime(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // GET ENOUGH 2 VALUE TO GET CURRICULUM - NEED PROGRAM ID - STUDY TIME ID\n\n\n  var getValueBeforeFetchCurriculum = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(key, value) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              setDataToFetchCurriculum(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, key, value));\n              });\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getValueBeforeFetchCurriculum(_x4, _x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var fetchCurriculum = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var res, newCurriculum;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              setIsLoading({\n                type: 'ProgramID',\n                status: true\n              });\n              _context6.prev = 1;\n              _context6.next = 4;\n              return curriculumApi.getAll({\n                StudyTimeID: dataToFetchCurriculum.StudyTimeID.join(','),\n                ProgramID: dataToFetchCurriculum.ProgramID\n              });\n\n            case 4:\n              res = _context6.sent;\n\n              if (res.status === 200) {\n                newCurriculum = fmSelectArr(res.data.data, 'CurriculumName', 'ID');\n                setOptionListForForm(_objectSpread(_objectSpread({}, optionListForForm), {}, {\n                  curriculumList: newCurriculum\n                }));\n              }\n\n              if (res.status === 204) {\n                setOptionListForForm(_objectSpread(_objectSpread({}, optionListForForm), {}, {\n                  curriculumList: []\n                }));\n              }\n\n              _context6.next = 12;\n              break;\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](1);\n              showNoti('danger', _context6.t0.message);\n\n            case 12:\n              _context6.prev = 12;\n              setIsLoading({\n                type: 'ProgramID',\n                status: false\n              });\n              return _context6.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function fetchCurriculum() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (dataToFetchCurriculum.ProgramID && dataToFetchCurriculum.StudyTimeID) {\n      fetchCurriculum();\n    }\n  }, [dataToFetchCurriculum]); // GET COURSE\n\n  var getCourse = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(object) {\n      var RoomID, BranchID, CurriculumID, StartDate, StudyTimeID, DaySelected, ProgramID, GradeID, CourseName, UserInformationID, lessonParams, studyDayParams, arrRes;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              _context7.prev = 1;\n              RoomID = object.RoomID, BranchID = object.BranchID, CurriculumID = object.CurriculumID, StartDate = object.StartDay, StudyTimeID = object.StudyTimeID, DaySelected = object.DaySelected, ProgramID = object.ProgramID, GradeID = object.GradeID, CourseName = object.CourseName, UserInformationID = object.UserInformationID;\n              stoneDataToSave.current = {\n                CourseName: CourseName,\n                AcademicUID: UserInformationID,\n                BranchID: BranchID,\n                RoomID: RoomID.join(','),\n                CurriculumID: CurriculumID,\n                ProgramID: ProgramID,\n                GradeID: GradeID,\n                StartDay: StartDate,\n                DaySelected: DaySelected.join(','),\n                StudyTimeID: StudyTimeID.join(',')\n              };\n              lessonParams = {\n                CurriculumnID: CurriculumID,\n                StartDate: StartDate,\n                StudyTimeID: StudyTimeID.join(','),\n                RoomID: RoomID.join(','),\n                BranchID: BranchID,\n                DaySelected: DaySelected.join(',')\n              };\n              studyDayParams = {\n                BranchID: BranchID,\n                StudyTimeID: StudyTimeID.join(','),\n                StartDate: StartDate,\n                DaySelected: DaySelected.join(','),\n                RoomID: RoomID.join(',')\n              };\n              _context7.next = 8;\n              return Promise.all([lessonApi.getAll(lessonParams), studyDayApi.getAll(studyDayParams)]).then(function (_ref8) {\n                var _ref9 = _slicedToArray(_ref8, 2),\n                    lessonList = _ref9[0],\n                    studyDayList = _ref9[1];\n\n                if (lessonList.status === 200) {\n                  setScheduleList({\n                    endDate: '',\n                    available: [],\n                    unavailable: lessonList.data.schedule\n                  });\n                }\n\n                studyDayList.status === 200 && setCalendarList(studyDayList.data.data);\n\n                if (lessonList.status === 200 && studyDayList.status === 200) {\n                  setIsSave(true);\n                  checkStudyTime(null);\n                  showNoti('success', 'Thành công');\n                  return true;\n                }\n              })[\"catch\"](function (error) {\n                error.status === 400 && showNoti('danger', error.message);\n              });\n\n            case 8:\n              arrRes = _context7.sent;\n              return _context7.abrupt(\"return\", arrRes);\n\n            case 12:\n              _context7.prev = 12;\n              _context7.t0 = _context7[\"catch\"](1);\n              showNoti('error', _context7.t0.message);\n\n            case 15:\n              _context7.prev = 15;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context7.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[1, 12, 15, 18]]);\n    }));\n\n    return function getCourse(_x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }(); // -----------SCHEDULE-----------\n  // FETCH DATA FOR SELECT SCHEDULE\n\n\n  var fetchInfoAvailableSchedule = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(arrSchedule) {\n      var _stoneDataToSave$curr, BranchID, RoomID, paramsArr, promises;\n\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _stoneDataToSave$curr = stoneDataToSave.current, BranchID = _stoneDataToSave$curr.BranchID, RoomID = _stoneDataToSave$curr.RoomID; // SPLIT SCHEDULE TO 2 OBJECT TO CALL 2 API\n              // paramsArr = [ {Schedule-*: [{params teacher}, {params room}]} ]\n\n              paramsArr = arrSchedule.map(function (_ref11, idx) {\n                var CaID = _ref11.CaID,\n                    Tiet = _ref11.Tiet;\n                var dateFm = moment(dataModalCalendar.dateString).format('YYYY/MM/DD');\n                var SubjectID = Tiet.SubjectID;\n                return _defineProperty({}, \"Schedule-\".concat(idx + 1), [// TEACHER\n                {\n                  BranchID: BranchID,\n                  SubjectID: SubjectID,\n                  StudyTimeID: CaID,\n                  Date: dateFm\n                }, // ROOM\n                {\n                  BranchID: BranchID,\n                  Rooms: RoomID,\n                  StudyTimeID: CaID,\n                  Date: dateFm\n                }]);\n              });\n              _context8.prev = 2;\n\n              if (paramsArr.length) {\n                _context8.next = 5;\n                break;\n              }\n\n              return _context8.abrupt(\"return\");\n\n            case 5:\n              // promises = [ {checkTeacher promise}, {checkRoom promise} ]\n              promises = paramsArr.map(function (obj, idx1) {\n                return obj[\"Schedule-\".concat(idx1 + 1)].map(function (p, idx2) {\n                  return idx2 % 2 === 0 ? checkTeacherApi.getAll(p) : checkRoomApi.getAll(p);\n                });\n              }).flat(1);\n              _context8.next = 8;\n              return Promise.all(promises).then(function (res) {\n                //res = [ {data teacher}, {data room} ]\n                //newRes = [ [{data teacher}, {data room}] ]\n                var newRes = [];\n\n                for (var i = 0, len = res.length; i < len; i += 2) {\n                  newRes.push([res[i], res[i + 1]]);\n                } // newOptionForSchedule = [ {optionRoomList:[], optionTeacherList:[]} ]\n\n\n                var newOptionForSchedule = newRes.map(function (r) {\n                  var teacherList = r[0];\n                  var roomList = r[1];\n                  var rs = {\n                    optionRoomList: [{\n                      title: '---Chọn phòng---',\n                      value: 0\n                    }],\n                    optionTeacherList: [{\n                      title: '---Chọn giáo viên---',\n                      value: 0\n                    }]\n                  };\n\n                  if (teacherList.status === 200) {\n                    rs.optionTeacherList = [].concat(_toConsumableArray(rs.optionTeacherList), _toConsumableArray(fmSelectArr(teacherList.data.data, 'name', 'id', ['name'])));\n                  }\n\n                  if (roomList.status === 200) {\n                    rs.optionRoomList = [].concat(_toConsumableArray(rs.optionRoomList), _toConsumableArray(fmSelectArr(roomList.data.data, 'name', 'id', ['name'])));\n                  }\n\n                  return rs;\n                });\n                setOptionListForADay(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    list: newOptionForSchedule\n                  });\n                });\n              })[\"catch\"](function (err) {\n                return console.log('fetchInfoAvailableSchedule - PromiseAll:', err);\n              });\n\n            case 8:\n              _context8.next = 13;\n              break;\n\n            case 10:\n              _context8.prev = 10;\n              _context8.t0 = _context8[\"catch\"](2);\n              showNoti('danger', _context8.t0.message);\n\n            case 13:\n              _context8.prev = 13;\n              setIsLoading({\n                type: 'CHECK_SCHEDULE',\n                status: false\n              });\n              return _context8.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[2, 10, 13, 16]]);\n    }));\n\n    return function fetchInfoAvailableSchedule(_x7) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  var onDebounceFetch = useDebounce(fetchInfoAvailableSchedule, 300, []);\n\n  var onDebounceFetchInfoAvailableSchedule = function onDebounceFetchInfoAvailableSchedule(params) {\n    setIsLoading({\n      type: 'CHECK_SCHEDULE',\n      status: true\n    });\n    onDebounceFetch(params);\n  };\n\n  var checkDuplicateStudyTimeInDay = function checkDuplicateStudyTimeInDay(arr, vl) {\n    var scheduleSameStudyTime = arr.filter(function (s) {\n      return s.CaID === vl;\n    });\n\n    if (scheduleSameStudyTime.length > 1) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var getNewValueForSchedule = function getNewValueForSchedule(key, vl, pos) {\n    var _optionListForADay$op, _optionTeacherList$fi, _optionRoomList$find;\n\n    var _optionListForADay$li = optionListForADay.list[pos],\n        optionRoomList = _optionListForADay$li.optionRoomList,\n        optionTeacherList = _optionListForADay$li.optionTeacherList;\n\n    switch (key) {\n      case 'CaID':\n        var CaName = (_optionListForADay$op = optionListForADay.optionStudyTimeList.find(function (o) {\n          return o.value === vl;\n        })) === null || _optionListForADay$op === void 0 ? void 0 : _optionListForADay$op.title;\n        return _defineProperty({\n          RoomID: 0,\n          TeacherID: 0,\n          TeacherName: 'Giáo viên trống',\n          RoomName: 'Phòng trống',\n          CaName: CaName\n        }, key, vl);\n\n      case 'TeacherID':\n        var TeacherName = (_optionTeacherList$fi = optionTeacherList.find(function (o) {\n          return o.value === vl;\n        })) === null || _optionTeacherList$fi === void 0 ? void 0 : _optionTeacherList$fi.title;\n        return _defineProperty({\n          TeacherName: vl ? TeacherName : 'Giáo viên trống'\n        }, key, vl);\n        break;\n\n      case 'RoomID':\n        var RoomName = (_optionRoomList$find = optionRoomList.find(function (o) {\n          return o.value === vl;\n        })) === null || _optionRoomList$find === void 0 ? void 0 : _optionRoomList$find.title;\n        return _defineProperty({\n          RoomName: vl ? RoomName : 'Phòng trống'\n        }, key, vl);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var getNewUnavailableScheduleList = function getNewUnavailableScheduleList(uid, key, vl, pos) {\n    var unavailable = scheduleList.unavailable; // DATE TO CHECK DUPLICATE VALUE\n\n    var date;\n    var rs = unavailable.map(function (s) {\n      if (s.ID === uid) {\n        var newVl = getNewValueForSchedule(key, vl, pos);\n        date = s.date;\n        return _objectSpread(_objectSpread({}, s), newVl);\n      } else {\n        return s;\n      }\n    });\n    return {\n      date: date,\n      rs: rs\n    };\n  };\n\n  var changeValueSchedule = function changeValueSchedule(uid, key, vl, pos) {\n    var _getNewUnavailableSch = getNewUnavailableScheduleList(uid, key, vl, pos),\n        newUnavailableScheduleList = _getNewUnavailableSch.rs,\n        date = _getNewUnavailableSch.date;\n\n    if (key === 'CaID') {\n      var _scheduleList = newUnavailableScheduleList.filter(function (s) {\n        return s.date === date;\n      });\n\n      if (checkDuplicateStudyTimeInDay(_scheduleList, vl)) {\n        showNoti('danger', 'Dữ liệu trùng lập');\n      } else {\n        setDataModalCalendar(_objectSpread(_objectSpread({}, dataModalCalendar), {}, {\n          scheduleList: _scheduleList\n        }));\n      }\n    }\n\n    setScheduleList(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        unavailable: newUnavailableScheduleList\n      });\n    });\n  };\n\n  var changeStatusSchedule = function changeStatusSchedule(sch) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n    var newScheduleUnavailableList = _toConsumableArray(scheduleList.unavailable);\n\n    var newScheduleAvailableList = _toConsumableArray(scheduleList.available);\n\n    var fmDate = moment(dataModalCalendar.dateString).format('YYYY-MM-DD');\n    var fmScheduleUnavailableToObject = fmArrayToObjectWithSpecialKey(newScheduleUnavailableList, 'date'); // type = 2 => unavailable to available\n\n    if (type === 2) {\n      var idx = newScheduleUnavailableList.findIndex(function (s) {\n        return s.ID === sch.ID;\n      });\n\n      var newScheduleObj = _objectSpread(_objectSpread({}, newScheduleUnavailableList[idx]), {}, {\n        date: fmDate\n      });\n\n      newScheduleUnavailableList.splice(idx, 1);\n      newScheduleAvailableList.push(newScheduleObj);\n    } // type = 1 => available to unavailable\n\n\n    if (type === 1) {\n      var _fmScheduleUnavailabl;\n\n      var limit = calendarList.find(function (c) {\n        return c.Day === dataModalCalendar.dateString;\n      }).Limit;\n\n      if (((_fmScheduleUnavailabl = fmScheduleUnavailableToObject[fmDate]) === null || _fmScheduleUnavailabl === void 0 ? void 0 : _fmScheduleUnavailabl.length) >= limit) {\n        showNoti('danger', 'Số ca đạt giới hạn');\n        return false;\n      }\n\n      var _idx = newScheduleAvailableList.findIndex(function (s) {\n        return s.ID === sch.ID;\n      });\n\n      var _newScheduleObj = _objectSpread(_objectSpread({}, newScheduleAvailableList[_idx]), {}, {\n        date: fmDate\n      });\n\n      newScheduleAvailableList.splice(_idx, 1);\n      newScheduleUnavailableList.push(_newScheduleObj);\n    }\n\n    setScheduleList(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        available: newScheduleAvailableList,\n        unavailable: newScheduleUnavailableList\n      });\n    });\n    return true;\n  }; // -----------CALENDAR-----------\n\n\n  var calendarDateFormat = function calendarDateFormat(calendarArr) {\n    var unavailable = scheduleList.unavailable;\n    var fmScheduleUnavailableToObject = fmArrayToObjectWithSpecialKey(unavailable, 'date');\n    var rs = calendarArr.map(function (c, idx) {\n      var _fmScheduleUnavailabl2;\n\n      var isValid = true;\n      var limit = c.Limit;\n      var scheduleListForADay = [];\n      var title = \"S\\u1ED1 bu\\u1ED5i tr\\u1ED1ng: \".concat(limit);\n      var calendarHadSchedule = (_fmScheduleUnavailabl2 = fmScheduleUnavailableToObject[c.Day.slice(0, 10)]) === null || _fmScheduleUnavailabl2 === void 0 ? void 0 : _fmScheduleUnavailabl2.length;\n\n      if (calendarHadSchedule) {\n        limit = c.Limit - calendarHadSchedule;\n        scheduleListForADay = fmScheduleUnavailableToObject[c.Day.slice(0, 10)];\n        title = 'Click để xem chi tiết';\n      }\n\n      if (!limit) {\n        isValid = false;\n      }\n\n      return {\n        id: idx + 1,\n        title: title,\n        start: moment(c.Day).toDate(),\n        end: moment(c.Day).toDate(),\n        resource: {\n          dateString: c.Day,\n          valid: isValid,\n          limit: c.Limit,\n          scheduleList: scheduleListForADay\n        }\n      };\n    });\n    return rs;\n  };\n\n  var onToggleSchedule = function onToggleSchedule(sch, type) {\n    if (changeStatusSchedule(sch, type)) {\n      var newScheduleList = _toConsumableArray(dataModalCalendar.scheduleList);\n\n      var idx = newScheduleList.findIndex(function (s) {\n        return s.ID === sch.ID;\n      });\n\n      if (idx >= 0) {\n        newScheduleList.splice(idx, 1);\n      } else {\n        newScheduleList.push(sch);\n      }\n\n      setDataModalCalendar(_objectSpread(_objectSpread({}, dataModalCalendar), {}, {\n        scheduleInDay: newScheduleList.length,\n        scheduleList: newScheduleList\n      }));\n    }\n  };\n\n  useEffect(function () {\n    var scheduleList = dataModalCalendar.scheduleList;\n\n    if (scheduleList.length) {\n      onDebounceFetchInfoAvailableSchedule(scheduleList);\n    }\n  }, [dataModalCalendar]); // -----------SAVE COURSE-----------\n\n  var getTitle = function getTitle(arr, vl) {\n    return arr.find(function (p) {\n      return p.value === vl;\n    }).title;\n  };\n\n  var getMultiTitle = function getMultiTitle(arrList, arrVl) {\n    var rs = [];\n\n    var _iterator = _createForOfIteratorHelper(arrVl.split(',')),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var r1 = _step.value;\n\n        var _iterator2 = _createForOfIteratorHelper(arrList),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var r2 = _step2.value;\n\n            if (+r1 === r2.value) {\n              rs.push(r2.title);\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return rs.join(', ');\n  };\n\n  var onValidateDateToSave = function onValidateDateToSave() {\n    var unavailable = scheduleList.unavailable;\n    var rs = {\n      show: [],\n      save: [],\n      endDate: 0\n    };\n\n    for (var i = 0, len = unavailable.length; i < len; i++) {\n      var s = unavailable[i]; // get end date of course\n\n      var checkEndDay = moment(s.date).valueOf();\n\n      if (rs.endDate < checkEndDay) {\n        rs.endDate = checkEndDay;\n      }\n\n      var dayArr = ['Chủ Nhật', 'Thứ 2', 'Thứ 3', 'Thứ 4', 'Thứ 5', 'Thứ 6', 'Thứ 7'];\n      var dayOffWeek = dayArr[moment(s.date).day()];\n      var isValid = !s.RoomID || !s.TeacherID;\n\n      for (var i2 = 0; i2 < len; i2++) {\n        var s2 = scheduleList.unavailable[i2];\n\n        if (i !== i2 && s.date === s2.date && s.CaID === s2.CaID) {\n          isValid = true;\n        }\n      }\n\n      rs.show.push({\n        date: s.date,\n        dayOffWeek: dayOffWeek,\n        studyTimeName: s.CaName,\n        roomName: s.RoomName,\n        teacherName: s.TeacherName,\n        StudyTimeID: s.CaID,\n        isValid: isValid\n      });\n      rs.save.push({\n        CurriculumsDetailID: s.Tiet.CurriculumsDetailID,\n        Date: s.date,\n        StudyTimeID: s.CaID,\n        RoomID: s.RoomID,\n        TeacherID: s.TeacherID,\n        SubjectID: s.Tiet.SubjectID\n      });\n    }\n\n    return rs;\n  };\n\n  var onFetchDataToSave = function onFetchDataToSave() {\n    var branchList = optionListForForm.branchList,\n        programList = optionListForForm.programList,\n        curriculumList = optionListForForm.curriculumList,\n        studyTimeList = optionListForForm.studyTimeList,\n        roomList = optionListForForm.roomList;\n\n    var _onValidateDateToSave = onValidateDateToSave(),\n        show = _onValidateDateToSave.show,\n        save = _onValidateDateToSave.save,\n        endDate = _onValidateDateToSave.endDate;\n\n    var scheduleListSorted = show.sort(function (a, b) {\n      return moment(a.date).valueOf() - moment(b.date).valueOf();\n    });\n    var fmScheduleShowToObject = fmArrayToObjectWithSpecialKey(scheduleListSorted, 'date');\n    var _stoneDataToSave$curr2 = stoneDataToSave.current,\n        BranchID = _stoneDataToSave$curr2.BranchID,\n        RoomID = _stoneDataToSave$curr2.RoomID,\n        ProgramID = _stoneDataToSave$curr2.ProgramID,\n        CurriculumID = _stoneDataToSave$curr2.CurriculumID,\n        DaySelected = _stoneDataToSave$curr2.DaySelected,\n        StudyTimeID = _stoneDataToSave$curr2.StudyTimeID,\n        StartDay = _stoneDataToSave$curr2.StartDay,\n        CourseName = _stoneDataToSave$curr2.CourseName;\n    var BranchName = getTitle(branchList, BranchID);\n    var ProgramName = getTitle(programList, ProgramID);\n    var CurriculumName = getTitle(curriculumList, CurriculumID);\n    var RoomName = getMultiTitle(roomList, RoomID);\n    var DaySelectedName = getMultiTitle(dayOfWeek, DaySelected);\n    var StudyTimeName = getMultiTitle(studyTimeList, StudyTimeID);\n    var CourseNameFinal = CourseName ? CourseName : \"[\".concat(BranchName, \"][\").concat(ProgramName, \"][\").concat(CurriculumName, \"][\").concat(StudyTimeName, \"] - \").concat(moment(StartDay).format('DD/MM/YYYY'));\n    setScheduleShow(fmScheduleShowToObject);\n    setSaveCourseInfo(_objectSpread(_objectSpread(_objectSpread({}, saveCourseInfo), stoneDataToSave.current), {}, {\n      CourseName: CourseNameFinal,\n      BranchName: BranchName,\n      RoomName: RoomName,\n      ProgramName: ProgramName,\n      CurriculumName: CurriculumName,\n      DaySelectedName: DaySelectedName,\n      StudyTimeName: StudyTimeName,\n      EndDay: moment(endDate).format('YYYY/MM/DD'),\n      Schedule: save\n    }));\n  };\n\n  var onSaveCourse = /*#__PURE__*/function () {\n    var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n      var res, haveErrors;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              setIsLoading({\n                type: 'SAVE_COURSE',\n                status: true\n              });\n              _context9.prev = 1;\n              haveErrors = Object.keys(scheduleShow).find(function (date, idx) {\n                return scheduleShow[date].find(function (s) {\n                  return s.isValid;\n                });\n              });\n\n              if (!haveErrors) {\n                _context9.next = 6;\n                break;\n              }\n\n              showNoti('danger', 'Đã xảy ra lỗi. Xin kiểm tra lại');\n              return _context9.abrupt(\"return\");\n\n            case 6:\n              _context9.next = 8;\n              return courseApi.add(saveCourseInfo);\n\n            case 8:\n              res = _context9.sent;\n\n              if (res.status === 200) {\n                showNoti('success', res.data.message);\n                router.push('/course/course-list/');\n              }\n\n              _context9.next = 15;\n              break;\n\n            case 12:\n              _context9.prev = 12;\n              _context9.t0 = _context9[\"catch\"](1);\n              showNoti('error', _context9.t0.message);\n\n            case 15:\n              _context9.prev = 15;\n              setIsLoading({\n                type: 'SAVE_COURSE',\n                status: false\n              });\n              return _context9.finish(15);\n\n            case 18:\n              return _context9.abrupt(\"return\", res);\n\n            case 19:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[1, 12, 15, 18]]);\n    }));\n\n    return function onSaveCourse() {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-course\",\n    children: [/*#__PURE__*/_jsxDEV(TitlePage, {\n      title: \"T\\u1EA1o kh\\xF3a h\\u1ECDc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 col-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"S\\u1EAFp x\\u1EBFp l\\u1ECBch h\\u1ECDc\",\n          extra: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-page-course\",\n            children: [/*#__PURE__*/_jsxDEV(CreateCourseForm, {\n              isLoading: isLoading,\n              isUpdate: false //\n              ,\n              optionListForForm: optionListForForm //\n              ,\n              handleGetCourse: getCourse,\n              handleCheckStudyTime: checkStudyTime,\n              handleFetchDataByBranch: fetchDataByBranch,\n              handleFetchProgramByGrade: fetchProgramByGrade,\n              handleGetValueBeforeFetchCurriculum: getValueBeforeFetchCurriculum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 9\n            }, _this), isSave && /*#__PURE__*/_jsxDEV(SaveCreateCourse, {\n              isLoading: isLoading,\n              saveInfo: saveCourseInfo,\n              scheduleShow: scheduleShow,\n              handleSaveCourse: onSaveCourse,\n              handleFetchDataToSave: onFetchDataToSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 10\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 8\n          }, _this),\n          children: /*#__PURE__*/_jsxDEV(CreateCourseCalendar, {\n            eventList: calendarDateFormat(calendarList),\n            isLoaded: true //\n            ,\n            handleSetDataModalCalendar: setDataModalCalendar,\n            dataModalCalendar: dataModalCalendar,\n            children: /*#__PURE__*/_jsxDEV(ScheduleList, {\n              panelActiveListInModal: dataModalCalendar.scheduleList.map(function (_, idx) {\n                return idx;\n              }),\n              children: dataModalCalendar.scheduleList.map(function (s, idx) {\n                return /*#__PURE__*/_jsxDEV(ScheduleItem, {\n                  isUpdate: true,\n                  scheduleObj: s,\n                  isLoading: isLoading,\n                  handleChangeValueSchedule: function handleChangeValueSchedule(uid, key, vl) {\n                    return changeValueSchedule(uid, key, vl, idx);\n                  },\n                  handleChangeStatusSchedule: onToggleSchedule,\n                  optionRoomAndTeacherForADay: optionListForADay.list[idx],\n                  optionStudyTime: optionListForADay.optionStudyTimeList\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 932,\n                  columnNumber: 10\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 8\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 col-12\",\n        children: /*#__PURE__*/_jsxDEV(Schedule, {\n          children: /*#__PURE__*/_jsxDEV(ScheduleList, {\n            children: scheduleList.available.map(function (s, idx) {\n              return /*#__PURE__*/_jsxDEV(ScheduleItem, {\n                scheduleObj: s,\n                handleChangeStatusSchedule: onToggleSchedule,\n                isUpdate: false\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 951,\n                columnNumber: 9\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 891,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(CreateCourse, \"8JC2sB5ZORHzrv3vs9SBPvI/Be0=\", false, function () {\n  return [useRouter, useWrap, useDebounce];\n});\n\n_c = CreateCourse;\nexport default CreateCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCourse\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/CreateCourse/CreateCourse.tsx"],"names":["Card","moment","useRouter","React","useEffect","useRef","useState","branchApi","checkRoomApi","checkTeacherApi","courseApi","curriculumApi","gradeApi","lessonApi","programApi","roomApi","staffApi","studyDayApi","studyTimeApi","CreateCourseForm","SaveCreateCourse","TitlePage","useDebounce","useWrap","fmArrayToObjectWithSpecialKey","fmSelectArr","CreateCourseCalendar","Schedule","ScheduleItem","ScheduleList","dayOfWeek","title","value","CreateCourse","router","showNoti","type","status","isLoading","setIsLoading","branchList","studyTimeList","gradeList","programList","curriculumList","userInformationList","roomList","optionListForForm","setOptionListForForm","stoneStudyTimeList","StudyTimeID","ProgramID","dataToFetchCurriculum","setDataToFetchCurriculum","available","unavailable","endDate","scheduleList","setScheduleList","optionStudyTimeList","list","optionRoomList","optionTeacherList","optionListForADay","setOptionListForADay","calendarList","setCalendarList","isSave","setIsSave","scheduleShow","setScheduleShow","stoneDataToSave","CourseName","AcademicUID","BranchID","RoomID","CurriculumID","StartDay","GradeID","DaySelected","BranchName","RoomName","StudyTimeName","ProgramName","CurriculumName","EndDay","DaySelectedName","TypeCourse","saveCourseInfo","setSaveCourseInfo","dateString","limit","scheduleInDay","dataModalCalendar","setDataModalCalendar","fetchData","Promise","all","getAll","pageIndex","pageSize","selectAll","branch","studyTime","grade","newBranchList","data","newStudyTimeList","current","newGradeList","console","log","message","fetchDataByBranch","id","params","RoleID","user","room","rs","newUserInformationList","newRoomList","newRoomListFmName","map","r","options","RoomCode","preState","fetchProgramByGrade","res","newProgramList","checkStudyTime","length","studyTimeSelected","i","timeObjBase","find","s","s1","TimeStart","replace","e1","TimeEnd","t1","Time","filter","st","s2","e2","t2","push","getValueBeforeFetchCurriculum","key","prevState","fetchCurriculum","join","newCurriculum","getCourse","object","StartDate","UserInformationID","lessonParams","CurriculumnID","studyDayParams","then","lessonList","studyDayList","schedule","error","arrRes","fetchInfoAvailableSchedule","arrSchedule","paramsArr","idx","CaID","Tiet","dateFm","format","SubjectID","Date","Rooms","promises","obj","idx1","p","idx2","flat","newRes","len","newOptionForSchedule","teacherList","err","onDebounceFetch","onDebounceFetchInfoAvailableSchedule","checkDuplicateStudyTimeInDay","arr","vl","scheduleSameStudyTime","getNewValueForSchedule","pos","CaName","o","TeacherID","TeacherName","getNewUnavailableScheduleList","uid","date","ID","newVl","changeValueSchedule","newUnavailableScheduleList","changeStatusSchedule","sch","newScheduleUnavailableList","newScheduleAvailableList","fmDate","fmScheduleUnavailableToObject","findIndex","newScheduleObj","splice","c","Day","Limit","calendarDateFormat","calendarArr","isValid","scheduleListForADay","calendarHadSchedule","slice","start","toDate","end","resource","valid","onToggleSchedule","newScheduleList","getTitle","getMultiTitle","arrList","arrVl","split","r1","r2","onValidateDateToSave","show","save","checkEndDay","valueOf","dayArr","dayOffWeek","day","i2","studyTimeName","roomName","teacherName","CurriculumsDetailID","onFetchDataToSave","scheduleListSorted","sort","a","b","fmScheduleShowToObject","CourseNameFinal","onSaveCourse","haveErrors","Object","keys","add","_"],"mappings":"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","sourcesContent":["import { Card } from 'antd';\r\nimport moment from 'moment';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n\tbranchApi,\r\n\tcheckRoomApi,\r\n\tcheckTeacherApi,\r\n\tcourseApi,\r\n\tcurriculumApi,\r\n\tgradeApi,\r\n\tlessonApi,\r\n\tprogramApi,\r\n\troomApi,\r\n\tstaffApi,\r\n\tstudyDayApi,\r\n\tstudyTimeApi\r\n} from '~/apiBase';\r\nimport CreateCourseForm from '~/components/Global/CreateCourse/CreateCourseForm/CreateCourseForm';\r\nimport SaveCreateCourse from '~/components/Global/CreateCourse/SaveCreateCourse';\r\nimport TitlePage from '~/components/TitlePage';\r\nimport { useDebounce } from '~/context/useDebounce';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { fmArrayToObjectWithSpecialKey, fmSelectArr } from '~/utils/functions';\r\nimport CreateCourseCalendar from './Calendar/CreateCourseCalendar';\r\nimport Schedule from './Schedule/Schedule';\r\nimport ScheduleItem from './Schedule/ScheduleItem';\r\nimport ScheduleList from './Schedule/ScheduleList';\r\n\r\n// ------------ MAIN COMPONENT ------------------\r\ntype IOptionListForForm = {\r\n\tbranchList: IOptionCommon[];\r\n\tstudyTimeList: IOptionCommon[];\r\n\tgradeList: IOptionCommon[];\r\n\tprogramList: IOptionCommon[];\r\n\tdayOfWeek: IOptionCommon[];\r\n\tcurriculumList: IOptionCommon[];\r\n\tuserInformationList: IOptionCommon[];\r\n\troomList: IOptionCommon[];\r\n};\r\ntype IOptionListForADay = {\r\n\toptionStudyTimeList: IOptionCommon[];\r\n\tlist: Array<{\r\n\t\toptionRoomList: IOptionCommon[];\r\n\t\toptionTeacherList: IOptionCommon[];\r\n\t}>;\r\n};\r\n\r\ntype ICreateCourseScheduleList = {\r\n\tavailable: ISchedule[];\r\n\tunavailable: ISchedule[];\r\n\tendDate: string;\r\n};\r\ntype ICreateCourseScheduleShowList = {\r\n\t[k: string]: ISchedule[];\r\n};\r\ntype IDataModal = {\r\n\tdateString: string;\r\n\tlimit: number;\r\n\tscheduleInDay: number;\r\n\tscheduleList: ISchedule[];\r\n};\r\ntype IScheduleListToSave = {\r\n\tCurriculumsDetailID?: number | string;\r\n\tDate: string;\r\n\tStudyTimeID: number;\r\n\tRoomID: number;\r\n\tTeacherID: number;\r\n\tSubjectID: number;\r\n};\r\ntype ISaveCourseInfo = {\r\n\tCourseName: string;\r\n\tAcademicUID: number;\r\n\tBranchID: number;\r\n\tBranchName: string;\r\n\tGradeID: number;\r\n\tRoomID: string;\r\n\tRoomName: string;\r\n\tStudyTimeID: string;\r\n\tStudyTimeName: string;\r\n\tProgramID: number;\r\n\tProgramName: string;\r\n\tCurriculumID: number;\r\n\tCurriculumName: string;\r\n\tStartDay: string;\r\n\tEndDay: string;\r\n\tDaySelected: string;\r\n\tDaySelectedName: string;\r\n\tTypeCourse: number;\r\n\tSchedule: IScheduleListToSave[];\r\n};\r\nconst dayOfWeek = [\r\n\t{\r\n\t\ttitle: 'Thứ 2',\r\n\t\tvalue: 1\r\n\t},\r\n\t{\r\n\t\ttitle: 'Thứ 3',\r\n\t\tvalue: 2\r\n\t},\r\n\t{\r\n\t\ttitle: 'Thứ 4',\r\n\t\tvalue: 3\r\n\t},\r\n\t{\r\n\t\ttitle: 'Thứ 5',\r\n\t\tvalue: 4\r\n\t},\r\n\t{\r\n\t\ttitle: 'Thứ 6',\r\n\t\tvalue: 5\r\n\t},\r\n\t{\r\n\t\ttitle: 'Thứ 7',\r\n\t\tvalue: 6\r\n\t},\r\n\t{\r\n\t\ttitle: 'Chủ nhật',\r\n\t\tvalue: 0\r\n\t}\r\n];\r\nconst CreateCourse = () => {\r\n\tconst router = useRouter();\r\n\t// -----------STATE-----------\r\n\t// FORM\r\n\tconst { showNoti } = useWrap();\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t});\r\n\tconst [optionListForForm, setOptionListForForm] = useState<IOptionListForForm>({\r\n\t\tbranchList: [],\r\n\t\tstudyTimeList: [],\r\n\t\tgradeList: [],\r\n\t\tprogramList: [],\r\n\t\tdayOfWeek,\r\n\t\tcurriculumList: [],\r\n\t\tuserInformationList: [],\r\n\t\troomList: []\r\n\t});\r\n\tconst stoneStudyTimeList = useRef(optionListForForm.studyTimeList);\r\n\tconst [dataToFetchCurriculum, setDataToFetchCurriculum] = useState<{\r\n\t\tStudyTimeID: number[];\r\n\t\tProgramID: number;\r\n\t}>({\r\n\t\tStudyTimeID: null,\r\n\t\tProgramID: null\r\n\t});\r\n\t//Lesson\r\n\tconst [scheduleList, setScheduleList] = useState<ICreateCourseScheduleList>({\r\n\t\tavailable: [],\r\n\t\tunavailable: [],\r\n\t\tendDate: ''\r\n\t});\r\n\tconst [optionListForADay, setOptionListForADay] = useState<IOptionListForADay>({\r\n\t\toptionStudyTimeList: [],\r\n\t\tlist: [\r\n\t\t\t{\r\n\t\t\t\toptionRoomList: [],\r\n\t\t\t\toptionTeacherList: []\r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n\t//StudyDay\r\n\tconst [calendarList, setCalendarList] = useState<IStudyDay[]>([]);\r\n\t// SAVE\r\n\tconst [isSave, setIsSave] = useState(false);\r\n\tconst [scheduleShow, setScheduleShow] = useState<ICreateCourseScheduleShowList>({});\r\n\tconst stoneDataToSave = useRef({\r\n\t\tCourseName: '',\r\n\t\tAcademicUID: 0,\r\n\t\tBranchID: 0,\r\n\t\tRoomID: '',\r\n\t\tCurriculumID: 0,\r\n\t\tProgramID: 0,\r\n\t\tStartDay: '',\r\n\t\tGradeID: 0,\r\n\t\tDaySelected: '',\r\n\t\tStudyTimeID: ''\r\n\t});\r\n\tconst [saveCourseInfo, setSaveCourseInfo] = useState<ISaveCourseInfo>({\r\n\t\tCourseName: '',\r\n\t\tAcademicUID: 0,\r\n\t\tBranchID: 0,\r\n\t\tBranchName: '',\r\n\t\tGradeID: 0,\r\n\t\tRoomID: '',\r\n\t\tRoomName: '',\r\n\t\tStudyTimeID: '',\r\n\t\tStudyTimeName: '',\r\n\t\tProgramID: 0,\r\n\t\tProgramName: '',\r\n\t\tCurriculumID: 0,\r\n\t\tCurriculumName: '',\r\n\t\tStartDay: '',\r\n\t\tEndDay: '',\r\n\t\tDaySelected: '',\r\n\t\tDaySelectedName: '',\r\n\t\tTypeCourse: 1,\r\n\t\tSchedule: []\r\n\t});\r\n\t// CALENDAR MODAL\r\n\tconst [dataModalCalendar, setDataModalCalendar] = useState<IDataModal>({\r\n\t\tdateString: '',\r\n\t\tlimit: 0,\r\n\t\tscheduleInDay: 0,\r\n\t\tscheduleList: []\r\n\t});\r\n\t// -----------CREATE COURSE FORM-----------\r\n\t// FETCH BRANCH, STUDY TIME, GRADE IN THE FIRST TIME\r\n\tconst fetchData = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'FETCH_DATA',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tconst [branch, studyTime, grade] = await Promise.all([\r\n\t\t\t\tbranchApi.getAll({ pageIndex: 1, pageSize: 9999 }),\r\n\t\t\t\tstudyTimeApi.getAll({ selectAll: true }),\r\n\t\t\t\tgradeApi.getAll({ selectAll: true })\r\n\t\t\t]);\r\n\t\t\t// BRANCH\r\n\t\t\tconst newBranchList = fmSelectArr(branch.data.data, 'BranchName', 'ID');\r\n\t\t\t// STUDY TIME\r\n\t\t\tconst newStudyTimeList = fmSelectArr(studyTime.data.data, 'Name', 'ID', ['Time', 'TimeStart', 'TimeEnd']);\r\n\t\t\tstoneStudyTimeList.current = newStudyTimeList;\r\n\t\t\t// GRADE\r\n\t\t\tconst newGradeList = fmSelectArr(grade.data.data, 'GradeName', 'ID');\r\n\t\t\tsetOptionListForForm({\r\n\t\t\t\t...optionListForForm,\r\n\t\t\t\tbranchList: newBranchList,\r\n\t\t\t\tstudyTimeList: newStudyTimeList,\r\n\t\t\t\tgradeList: newGradeList\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('fetchData - PromiseAll:', error);\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tfetchData();\r\n\t}, []);\r\n\t// FETCH ROOM AND USER INFORMATION\r\n\tconst fetchDataByBranch = async (id: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'BranchID',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst params = {\r\n\t\t\t\tBranchID: id\r\n\t\t\t};\r\n\t\t\tconst [user, room] = await Promise.all([staffApi.getAll({ ...params, RoleID: 7 }), roomApi.getAll(params)]);\r\n\t\t\t// USER INFORMATION\r\n\t\t\tconst rs = {\r\n\t\t\t\tuserInformationList: [],\r\n\t\t\t\troomList: []\r\n\t\t\t};\r\n\t\t\tif (user.status === 200) {\r\n\t\t\t\tconst newUserInformationList = fmSelectArr(user.data.data, 'FullNameUnicode', 'UserInformationID');\r\n\t\t\t\trs.userInformationList = newUserInformationList;\r\n\t\t\t}\r\n\t\t\tif (user.status === 204) {\r\n\t\t\t\trs.userInformationList = [];\r\n\t\t\t}\r\n\t\t\t// ROOM\r\n\t\t\tif (room.status === 200) {\r\n\t\t\t\tconst newRoomList = fmSelectArr(room.data.data, 'RoomName', 'RoomID', ['RoomCode']);\r\n\t\t\t\tconst newRoomListFmName = newRoomList.map((r) => ({\r\n\t\t\t\t\t...r,\r\n\t\t\t\t\ttitle: `${r.options.RoomCode} - ${r.title}`\r\n\t\t\t\t}));\r\n\t\t\t\trs.roomList = newRoomListFmName;\r\n\t\t\t}\r\n\t\t\tif (room.status === 204) {\r\n\t\t\t\trs.roomList = [];\r\n\t\t\t}\r\n\t\t\tsetOptionListForForm((preState) => ({\r\n\t\t\t\t...preState,\r\n\t\t\t\t...rs\r\n\t\t\t}));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('FetchDataByBranch - PromiseAll:', error);\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'BranchID',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\t// PROGRAM\r\n\tconst fetchProgramByGrade = async (id: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GradeID',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await programApi.getAll({\r\n\t\t\t\tGradeID: id\r\n\t\t\t});\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newProgramList = fmSelectArr(res.data.data, 'ProgramName', 'ID');\r\n\t\t\t\tsetOptionListForForm({\r\n\t\t\t\t\t...optionListForForm,\r\n\t\t\t\t\tprogramList: newProgramList\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetOptionListForForm({\r\n\t\t\t\t\t...optionListForForm,\r\n\t\t\t\t\tprogramList: []\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GradeID',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\t// CURRICULUM\r\n\tconst checkStudyTime = async (value: [number]) => {\r\n\t\tif (!value?.length) {\r\n\t\t\tsetOptionListForForm({\r\n\t\t\t\t...optionListForForm,\r\n\t\t\t\tstudyTimeList: stoneStudyTimeList.current\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst newStudyTimeList = [...optionListForForm.studyTimeList];\r\n\t\tlet rs;\r\n\t\tconst studyTimeSelected = [];\r\n\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\tconst timeObjBase = newStudyTimeList.find((s) => s.value === value[i]);\r\n\t\t\tconst s1 = +timeObjBase.options.TimeStart.replace(':', '');\r\n\t\t\tconst e1 = +timeObjBase.options.TimeEnd.replace(':', '');\r\n\t\t\tconst t1 = +timeObjBase.options.Time;\r\n\t\t\trs = newStudyTimeList.filter((st) => {\r\n\t\t\t\tconst s2 = +st.options.TimeStart.replace(':', '');\r\n\t\t\t\tconst e2 = +st.options.TimeEnd.replace(':', '');\r\n\t\t\t\tconst t2 = +st.options.Time;\r\n\t\t\t\tif (timeObjBase.value === st.value) {\r\n\t\t\t\t\tstudyTimeSelected.push(st);\r\n\t\t\t\t\treturn st;\r\n\t\t\t\t}\r\n\t\t\t\tif (\r\n\t\t\t\t\t// KIỂM TRA MỖI CA HỌC KHÔNG CÓ THỜI GIAN TRÙNG LÊN NHAU\r\n\t\t\t\t\t!(\r\n\t\t\t\t\t\t(s1 < s2 && e1 > e2 && s1 < e2) ||\r\n\t\t\t\t\t\t(s1 > s2 && e1 > e2 && s1 < e2) ||\r\n\t\t\t\t\t\t(s1 < s2 && e1 < e2 && e1 > s2) ||\r\n\t\t\t\t\t\t(s1 > s2 && e1 < e2)\r\n\t\t\t\t\t) &&\r\n\t\t\t\t\tt1 === t2\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn st;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetOptionListForForm({\r\n\t\t\t...optionListForForm,\r\n\t\t\tstudyTimeList: rs\r\n\t\t});\r\n\t\tsetOptionListForADay({\r\n\t\t\t...optionListForADay,\r\n\t\t\toptionStudyTimeList: studyTimeSelected\r\n\t\t});\r\n\t};\r\n\t// GET ENOUGH 2 VALUE TO GET CURRICULUM - NEED PROGRAM ID - STUDY TIME ID\r\n\tconst getValueBeforeFetchCurriculum = async (key: string, value: number) => {\r\n\t\tsetDataToFetchCurriculum((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\t[key]: value\r\n\t\t}));\r\n\t};\r\n\tconst fetchCurriculum = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ProgramID',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await curriculumApi.getAll({\r\n\t\t\t\tStudyTimeID: dataToFetchCurriculum.StudyTimeID.join(','),\r\n\t\t\t\tProgramID: dataToFetchCurriculum.ProgramID\r\n\t\t\t});\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newCurriculum = fmSelectArr(res.data.data, 'CurriculumName', 'ID');\r\n\t\t\t\tsetOptionListForForm({\r\n\t\t\t\t\t...optionListForForm,\r\n\t\t\t\t\tcurriculumList: newCurriculum\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetOptionListForForm({\r\n\t\t\t\t\t...optionListForForm,\r\n\t\t\t\t\tcurriculumList: []\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ProgramID',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tif (dataToFetchCurriculum.ProgramID && dataToFetchCurriculum.StudyTimeID) {\r\n\t\t\tfetchCurriculum();\r\n\t\t}\r\n\t}, [dataToFetchCurriculum]);\r\n\t// GET COURSE\r\n\tconst getCourse = async (object) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tRoomID,\r\n\t\t\t\tBranchID,\r\n\t\t\t\tCurriculumID,\r\n\t\t\t\tStartDay: StartDate,\r\n\t\t\t\tStudyTimeID,\r\n\t\t\t\tDaySelected,\r\n\t\t\t\tProgramID,\r\n\t\t\t\tGradeID,\r\n\t\t\t\tCourseName,\r\n\t\t\t\tUserInformationID\r\n\t\t\t} = object;\r\n\t\t\tstoneDataToSave.current = {\r\n\t\t\t\tCourseName,\r\n\t\t\t\tAcademicUID: UserInformationID,\r\n\t\t\t\tBranchID,\r\n\t\t\t\tRoomID: RoomID.join(','),\r\n\t\t\t\tCurriculumID,\r\n\t\t\t\tProgramID,\r\n\t\t\t\tGradeID,\r\n\t\t\t\tStartDay: StartDate,\r\n\t\t\t\tDaySelected: DaySelected.join(','),\r\n\t\t\t\tStudyTimeID: StudyTimeID.join(',')\r\n\t\t\t};\r\n\t\t\tconst lessonParams = {\r\n\t\t\t\tCurriculumnID: CurriculumID,\r\n\t\t\t\tStartDate,\r\n\t\t\t\tStudyTimeID: StudyTimeID.join(','),\r\n\t\t\t\tRoomID: RoomID.join(','),\r\n\t\t\t\tBranchID,\r\n\t\t\t\tDaySelected: DaySelected.join(',')\r\n\t\t\t};\r\n\t\t\tconst studyDayParams = {\r\n\t\t\t\tBranchID,\r\n\t\t\t\tStudyTimeID: StudyTimeID.join(','),\r\n\t\t\t\tStartDate,\r\n\t\t\t\tDaySelected: DaySelected.join(','),\r\n\t\t\t\tRoomID: RoomID.join(',')\r\n\t\t\t};\r\n\t\t\tconst arrRes = await Promise.all([lessonApi.getAll(lessonParams), studyDayApi.getAll(studyDayParams)])\r\n\t\t\t\t.then(([lessonList, studyDayList]) => {\r\n\t\t\t\t\tif (lessonList.status === 200) {\r\n\t\t\t\t\t\tsetScheduleList({\r\n\t\t\t\t\t\t\tendDate: '',\r\n\t\t\t\t\t\t\tavailable: [],\r\n\t\t\t\t\t\t\tunavailable: lessonList.data.schedule\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstudyDayList.status === 200 && setCalendarList(studyDayList.data.data);\r\n\t\t\t\t\tif (lessonList.status === 200 && studyDayList.status === 200) {\r\n\t\t\t\t\t\tsetIsSave(true);\r\n\t\t\t\t\t\tcheckStudyTime(null);\r\n\t\t\t\t\t\tshowNoti('success', 'Thành công');\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\terror.status === 400 && showNoti('danger', error.message);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn arrRes;\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('error', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\t// -----------SCHEDULE-----------\r\n\t// FETCH DATA FOR SELECT SCHEDULE\r\n\tconst fetchInfoAvailableSchedule = async (arrSchedule: ISchedule[]) => {\r\n\t\tconst { BranchID, RoomID } = stoneDataToSave.current;\r\n\t\t// SPLIT SCHEDULE TO 2 OBJECT TO CALL 2 API\r\n\t\t// paramsArr = [ {Schedule-*: [{params teacher}, {params room}]} ]\r\n\t\tconst paramsArr = arrSchedule.map(({ CaID, Tiet }, idx) => {\r\n\t\t\tconst dateFm = moment(dataModalCalendar.dateString).format('YYYY/MM/DD');\r\n\t\t\tconst { SubjectID } = Tiet;\r\n\t\t\treturn {\r\n\t\t\t\t[`Schedule-${idx + 1}`]: [\r\n\t\t\t\t\t// TEACHER\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tBranchID,\r\n\t\t\t\t\t\tSubjectID,\r\n\t\t\t\t\t\tStudyTimeID: CaID,\r\n\t\t\t\t\t\tDate: dateFm\r\n\t\t\t\t\t},\r\n\t\t\t\t\t// ROOM\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tBranchID,\r\n\t\t\t\t\t\tRooms: RoomID,\r\n\t\t\t\t\t\tStudyTimeID: CaID,\r\n\t\t\t\t\t\tDate: dateFm\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tif (!paramsArr.length) return;\r\n\t\t\t// promises = [ {checkTeacher promise}, {checkRoom promise} ]\r\n\t\t\tconst promises = paramsArr\r\n\t\t\t\t.map((obj, idx1) => {\r\n\t\t\t\t\treturn obj[`Schedule-${idx1 + 1}`].map((p, idx2) =>\r\n\t\t\t\t\t\tidx2 % 2 === 0 ? checkTeacherApi.getAll(p) : checkRoomApi.getAll(p)\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t\t.flat(1);\r\n\t\t\tawait Promise.all(promises)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t//res = [ {data teacher}, {data room} ]\r\n\t\t\t\t\t//newRes = [ [{data teacher}, {data room}] ]\r\n\t\t\t\t\tconst newRes = [];\r\n\t\t\t\t\tfor (let i = 0, len = res.length; i < len; i += 2) {\r\n\t\t\t\t\t\tnewRes.push([res[i], res[i + 1]]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// newOptionForSchedule = [ {optionRoomList:[], optionTeacherList:[]} ]\r\n\t\t\t\t\tconst newOptionForSchedule = newRes.map((r) => {\r\n\t\t\t\t\t\tconst teacherList = r[0];\r\n\t\t\t\t\t\tconst roomList = r[1];\r\n\t\t\t\t\t\tconst rs = {\r\n\t\t\t\t\t\t\toptionRoomList: [{ title: '---Chọn phòng---', value: 0 }],\r\n\t\t\t\t\t\t\toptionTeacherList: [{ title: '---Chọn giáo viên---', value: 0 }]\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tif (teacherList.status === 200) {\r\n\t\t\t\t\t\t\trs.optionTeacherList = [...rs.optionTeacherList, ...fmSelectArr(teacherList.data.data, 'name', 'id', ['name'])];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (roomList.status === 200) {\r\n\t\t\t\t\t\t\trs.optionRoomList = [...rs.optionRoomList, ...fmSelectArr(roomList.data.data, 'name', 'id', ['name'])];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn rs;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetOptionListForADay((prevState) => ({\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\tlist: newOptionForSchedule\r\n\t\t\t\t\t}));\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => console.log('fetchInfoAvailableSchedule - PromiseAll:', err));\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'CHECK_SCHEDULE',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tconst onDebounceFetch = useDebounce(fetchInfoAvailableSchedule, 300, []);\r\n\tconst onDebounceFetchInfoAvailableSchedule = (params: ISchedule[]) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'CHECK_SCHEDULE',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\tonDebounceFetch(params);\r\n\t};\r\n\tconst checkDuplicateStudyTimeInDay = (arr: ISchedule[], vl) => {\r\n\t\tconst scheduleSameStudyTime = arr.filter((s) => s.CaID === vl);\r\n\t\tif (scheduleSameStudyTime.length > 1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\tconst getNewValueForSchedule = (key, vl, pos) => {\r\n\t\tconst { optionRoomList, optionTeacherList } = optionListForADay.list[pos];\r\n\t\tswitch (key) {\r\n\t\t\tcase 'CaID':\r\n\t\t\t\tconst CaName = optionListForADay.optionStudyTimeList.find((o) => o.value === vl)?.title;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tRoomID: 0,\r\n\t\t\t\t\tTeacherID: 0,\r\n\t\t\t\t\tTeacherName: 'Giáo viên trống',\r\n\t\t\t\t\tRoomName: 'Phòng trống',\r\n\t\t\t\t\tCaName,\r\n\t\t\t\t\t[key]: vl\r\n\t\t\t\t};\r\n\t\t\tcase 'TeacherID':\r\n\t\t\t\tconst TeacherName = optionTeacherList.find((o) => o.value === vl)?.title;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tTeacherName: vl ? TeacherName : 'Giáo viên trống',\r\n\t\t\t\t\t[key]: vl\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'RoomID':\r\n\t\t\t\tconst RoomName = optionRoomList.find((o) => o.value === vl)?.title;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tRoomName: vl ? RoomName : 'Phòng trống',\r\n\t\t\t\t\t[key]: vl\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\tconst getNewUnavailableScheduleList = (uid, key, vl, pos) => {\r\n\t\tconst { unavailable } = scheduleList;\r\n\t\t// DATE TO CHECK DUPLICATE VALUE\r\n\t\tlet date;\r\n\t\tconst rs = unavailable.map((s) => {\r\n\t\t\tif (s.ID === uid) {\r\n\t\t\t\tconst newVl = getNewValueForSchedule(key, vl, pos);\r\n\t\t\t\tdate = s.date;\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...s,\r\n\t\t\t\t\t...newVl\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn s;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn { date, rs };\r\n\t};\r\n\tconst changeValueSchedule = (uid: number, key: 'CaID' | 'TeacherID' | 'RoomID', vl: number | string, pos: number) => {\r\n\t\tconst { rs: newUnavailableScheduleList, date } = getNewUnavailableScheduleList(uid, key, vl, pos);\r\n\r\n\t\tif (key === 'CaID') {\r\n\t\t\tconst scheduleList = newUnavailableScheduleList.filter((s) => s.date === date);\r\n\t\t\tif (checkDuplicateStudyTimeInDay(scheduleList, vl)) {\r\n\t\t\t\tshowNoti('danger', 'Dữ liệu trùng lập');\r\n\t\t\t} else {\r\n\t\t\t\tsetDataModalCalendar({\r\n\t\t\t\t\t...dataModalCalendar,\r\n\t\t\t\t\tscheduleList: scheduleList\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetScheduleList((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\tunavailable: newUnavailableScheduleList\r\n\t\t}));\r\n\t};\r\n\tconst changeStatusSchedule = (sch: ISchedule, type: number = 1) => {\r\n\t\tconst newScheduleUnavailableList = [...scheduleList.unavailable];\r\n\t\tconst newScheduleAvailableList = [...scheduleList.available];\r\n\r\n\t\tconst fmDate = moment(dataModalCalendar.dateString).format('YYYY-MM-DD');\r\n\t\tconst fmScheduleUnavailableToObject = fmArrayToObjectWithSpecialKey(newScheduleUnavailableList, 'date');\r\n\t\t// type = 2 => unavailable to available\r\n\t\tif (type === 2) {\r\n\t\t\tconst idx = newScheduleUnavailableList.findIndex((s) => s.ID === sch.ID);\r\n\t\t\tconst newScheduleObj = {\r\n\t\t\t\t...newScheduleUnavailableList[idx],\r\n\t\t\t\tdate: fmDate\r\n\t\t\t};\r\n\t\t\tnewScheduleUnavailableList.splice(idx, 1);\r\n\t\t\tnewScheduleAvailableList.push(newScheduleObj);\r\n\t\t}\r\n\t\t// type = 1 => available to unavailable\r\n\t\tif (type === 1) {\r\n\t\t\tconst limit = calendarList.find((c) => c.Day === dataModalCalendar.dateString).Limit;\r\n\t\t\tif (fmScheduleUnavailableToObject[fmDate]?.length >= limit) {\r\n\t\t\t\tshowNoti('danger', 'Số ca đạt giới hạn');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tconst idx = newScheduleAvailableList.findIndex((s) => s.ID === sch.ID);\r\n\t\t\tconst newScheduleObj = {\r\n\t\t\t\t...newScheduleAvailableList[idx],\r\n\t\t\t\tdate: fmDate\r\n\t\t\t};\r\n\t\t\tnewScheduleAvailableList.splice(idx, 1);\r\n\t\t\tnewScheduleUnavailableList.push(newScheduleObj);\r\n\t\t}\r\n\t\tsetScheduleList((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\tavailable: newScheduleAvailableList,\r\n\t\t\tunavailable: newScheduleUnavailableList\r\n\t\t}));\r\n\t\treturn true;\r\n\t};\r\n\t// -----------CALENDAR-----------\r\n\tconst calendarDateFormat = (calendarArr: IStudyDay[]) => {\r\n\t\tconst { unavailable } = scheduleList;\r\n\t\tconst fmScheduleUnavailableToObject = fmArrayToObjectWithSpecialKey(unavailable, 'date');\r\n\t\tconst rs = calendarArr.map((c, idx) => {\r\n\t\t\tlet isValid = true;\r\n\t\t\tlet limit = c.Limit;\r\n\t\t\tlet scheduleListForADay = [];\r\n\t\t\tlet title = `Số buổi trống: ${limit}`;\r\n\r\n\t\t\tconst calendarHadSchedule = fmScheduleUnavailableToObject[c.Day.slice(0, 10)]?.length;\r\n\r\n\t\t\tif (calendarHadSchedule) {\r\n\t\t\t\tlimit = c.Limit - calendarHadSchedule;\r\n\t\t\t\tscheduleListForADay = fmScheduleUnavailableToObject[c.Day.slice(0, 10)];\r\n\t\t\t\ttitle = 'Click để xem chi tiết';\r\n\t\t\t}\r\n\r\n\t\t\tif (!limit) {\r\n\t\t\t\tisValid = false;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tid: idx + 1,\r\n\t\t\t\ttitle: title,\r\n\t\t\t\tstart: moment(c.Day).toDate(),\r\n\t\t\t\tend: moment(c.Day).toDate(),\r\n\t\t\t\tresource: {\r\n\t\t\t\t\tdateString: c.Day,\r\n\t\t\t\t\tvalid: isValid,\r\n\t\t\t\t\tlimit: c.Limit,\r\n\t\t\t\t\tscheduleList: scheduleListForADay\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn rs;\r\n\t};\r\n\tconst onToggleSchedule = (sch: ISchedule, type: number) => {\r\n\t\tif (changeStatusSchedule(sch, type)) {\r\n\t\t\tconst newScheduleList = [...dataModalCalendar.scheduleList];\r\n\t\t\tconst idx = newScheduleList.findIndex((s) => s.ID === sch.ID);\r\n\t\t\tif (idx >= 0) {\r\n\t\t\t\tnewScheduleList.splice(idx, 1);\r\n\t\t\t} else {\r\n\t\t\t\tnewScheduleList.push(sch);\r\n\t\t\t}\r\n\t\t\tsetDataModalCalendar({\r\n\t\t\t\t...dataModalCalendar,\r\n\t\t\t\tscheduleInDay: newScheduleList.length,\r\n\t\t\t\tscheduleList: newScheduleList\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tconst { scheduleList } = dataModalCalendar;\r\n\t\tif (scheduleList.length) {\r\n\t\t\tonDebounceFetchInfoAvailableSchedule(scheduleList);\r\n\t\t}\r\n\t}, [dataModalCalendar]);\r\n\t// -----------SAVE COURSE-----------\r\n\tconst getTitle = (arr: IOptionCommon[], vl) => arr.find((p) => p.value === vl).title;\r\n\tconst getMultiTitle = (arrList: IOptionCommon[], arrVl: string) => {\r\n\t\tconst rs = [];\r\n\t\tfor (const r1 of arrVl.split(',')) {\r\n\t\t\tfor (const r2 of arrList) {\r\n\t\t\t\tif (+r1 === r2.value) {\r\n\t\t\t\t\trs.push(r2.title);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rs.join(', ');\r\n\t};\r\n\tconst onValidateDateToSave = () => {\r\n\t\tconst { unavailable } = scheduleList;\r\n\t\tconst rs: {\r\n\t\t\tshow: {\r\n\t\t\t\tdate: string;\r\n\t\t\t\tdayOffWeek: string;\r\n\t\t\t\tstudyTimeName: string;\r\n\t\t\t\troomName: string;\r\n\t\t\t\tteacherName: string;\r\n\t\t\t\tStudyTimeID: number;\r\n\t\t\t\tisValid: boolean;\r\n\t\t\t}[];\r\n\t\t\tsave: IScheduleListToSave[];\r\n\t\t\tendDate: number;\r\n\t\t} = {\r\n\t\t\tshow: [],\r\n\t\t\tsave: [],\r\n\t\t\tendDate: 0\r\n\t\t};\r\n\t\tfor (let i = 0, len = unavailable.length; i < len; i++) {\r\n\t\t\tconst s = unavailable[i];\r\n\t\t\t// get end date of course\r\n\t\t\tconst checkEndDay = moment(s.date).valueOf();\r\n\t\t\tif (rs.endDate < checkEndDay) {\r\n\t\t\t\trs.endDate = checkEndDay;\r\n\t\t\t}\r\n\t\t\tconst dayArr = ['Chủ Nhật', 'Thứ 2', 'Thứ 3', 'Thứ 4', 'Thứ 5', 'Thứ 6', 'Thứ 7'];\r\n\t\t\tconst dayOffWeek = dayArr[moment(s.date).day()];\r\n\t\t\tlet isValid = !s.RoomID || !s.TeacherID;\r\n\t\t\tfor (let i2 = 0; i2 < len; i2++) {\r\n\t\t\t\tconst s2 = scheduleList.unavailable[i2];\r\n\t\t\t\tif (i !== i2 && s.date === s2.date && s.CaID === s2.CaID) {\r\n\t\t\t\t\tisValid = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\trs.show.push({\r\n\t\t\t\tdate: s.date,\r\n\t\t\t\tdayOffWeek,\r\n\t\t\t\tstudyTimeName: s.CaName,\r\n\t\t\t\troomName: s.RoomName,\r\n\t\t\t\tteacherName: s.TeacherName,\r\n\t\t\t\tStudyTimeID: s.CaID,\r\n\t\t\t\tisValid\r\n\t\t\t});\r\n\t\t\trs.save.push({\r\n\t\t\t\tCurriculumsDetailID: s.Tiet.CurriculumsDetailID,\r\n\t\t\t\tDate: s.date,\r\n\t\t\t\tStudyTimeID: s.CaID,\r\n\t\t\t\tRoomID: s.RoomID,\r\n\t\t\t\tTeacherID: s.TeacherID,\r\n\t\t\t\tSubjectID: s.Tiet.SubjectID\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn rs;\r\n\t};\r\n\tconst onFetchDataToSave = () => {\r\n\t\tconst { branchList, programList, curriculumList, studyTimeList, roomList } = optionListForForm;\r\n\t\tconst { show, save, endDate } = onValidateDateToSave();\r\n\r\n\t\tconst scheduleListSorted = show.sort((a, b) => moment(a.date).valueOf() - moment(b.date).valueOf());\r\n\r\n\t\tconst fmScheduleShowToObject = fmArrayToObjectWithSpecialKey(scheduleListSorted, 'date');\r\n\r\n\t\tconst { BranchID, RoomID, ProgramID, CurriculumID, DaySelected, StudyTimeID, StartDay, CourseName } = stoneDataToSave.current;\r\n\r\n\t\tconst BranchName = getTitle(branchList, BranchID);\r\n\t\tconst ProgramName = getTitle(programList, ProgramID);\r\n\t\tconst CurriculumName = getTitle(curriculumList, CurriculumID);\r\n\t\tconst RoomName = getMultiTitle(roomList, RoomID);\r\n\t\tconst DaySelectedName = getMultiTitle(dayOfWeek, DaySelected);\r\n\t\tconst StudyTimeName = getMultiTitle(studyTimeList, StudyTimeID);\r\n\t\tconst CourseNameFinal = CourseName\r\n\t\t\t? CourseName\r\n\t\t\t: `[${BranchName}][${ProgramName}][${CurriculumName}][${StudyTimeName}] - ${moment(StartDay).format('DD/MM/YYYY')}`;\r\n\r\n\t\tsetScheduleShow(fmScheduleShowToObject);\r\n\t\tsetSaveCourseInfo({\r\n\t\t\t...saveCourseInfo,\r\n\t\t\t...stoneDataToSave.current,\r\n\t\t\tCourseName: CourseNameFinal,\r\n\t\t\tBranchName,\r\n\t\t\tRoomName,\r\n\t\t\tProgramName,\r\n\t\t\tCurriculumName,\r\n\t\t\tDaySelectedName,\r\n\t\t\tStudyTimeName,\r\n\t\t\tEndDay: moment(endDate).format('YYYY/MM/DD'),\r\n\t\t\tSchedule: save\r\n\t\t});\r\n\t};\r\n\tconst onSaveCourse = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'SAVE_COURSE',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\tlet res;\r\n\r\n\t\ttry {\r\n\t\t\tconst haveErrors = Object.keys(scheduleShow).find((date, idx) => scheduleShow[date].find((s) => s.isValid));\r\n\t\t\tif (haveErrors) {\r\n\t\t\t\tshowNoti('danger', 'Đã xảy ra lỗi. Xin kiểm tra lại');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tres = await courseApi.add(saveCourseInfo);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tshowNoti('success', res.data.message);\r\n\t\t\t\trouter.push('/course/course-list/');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('error', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'SAVE_COURSE',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn res;\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"create-course\">\r\n\t\t\t<TitlePage title=\"Tạo khóa học\" />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-8 col-12\">\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\ttitle=\"Sắp xếp lịch học\"\r\n\t\t\t\t\t\textra={\r\n\t\t\t\t\t\t\t<div className=\"btn-page-course\">\r\n\t\t\t\t\t\t\t\t<CreateCourseForm\r\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\tisUpdate={false}\r\n\t\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\t\toptionListForForm={optionListForForm}\r\n\t\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\t\thandleGetCourse={getCourse}\r\n\t\t\t\t\t\t\t\t\thandleCheckStudyTime={checkStudyTime}\r\n\t\t\t\t\t\t\t\t\thandleFetchDataByBranch={fetchDataByBranch}\r\n\t\t\t\t\t\t\t\t\thandleFetchProgramByGrade={fetchProgramByGrade}\r\n\t\t\t\t\t\t\t\t\thandleGetValueBeforeFetchCurriculum={getValueBeforeFetchCurriculum}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{isSave && (\r\n\t\t\t\t\t\t\t\t\t<SaveCreateCourse\r\n\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\t\tsaveInfo={saveCourseInfo}\r\n\t\t\t\t\t\t\t\t\t\tscheduleShow={scheduleShow}\r\n\t\t\t\t\t\t\t\t\t\thandleSaveCourse={onSaveCourse}\r\n\t\t\t\t\t\t\t\t\t\thandleFetchDataToSave={onFetchDataToSave}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CreateCourseCalendar\r\n\t\t\t\t\t\t\teventList={calendarDateFormat(calendarList)}\r\n\t\t\t\t\t\t\tisLoaded={true}\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\thandleSetDataModalCalendar={setDataModalCalendar}\r\n\t\t\t\t\t\t\tdataModalCalendar={dataModalCalendar}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ScheduleList panelActiveListInModal={dataModalCalendar.scheduleList.map((_, idx) => idx)}>\r\n\t\t\t\t\t\t\t\t{dataModalCalendar.scheduleList.map((s, idx) => (\r\n\t\t\t\t\t\t\t\t\t<ScheduleItem\r\n\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\tisUpdate={true}\r\n\t\t\t\t\t\t\t\t\t\tscheduleObj={s}\r\n\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\t\thandleChangeValueSchedule={(uid, key, vl) => changeValueSchedule(uid, key, vl, idx)}\r\n\t\t\t\t\t\t\t\t\t\thandleChangeStatusSchedule={onToggleSchedule}\r\n\t\t\t\t\t\t\t\t\t\toptionRoomAndTeacherForADay={optionListForADay.list[idx]}\r\n\t\t\t\t\t\t\t\t\t\toptionStudyTime={optionListForADay.optionStudyTimeList}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</ScheduleList>\r\n\t\t\t\t\t\t</CreateCourseCalendar>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-4 col-12\">\r\n\t\t\t\t\t<Schedule>\r\n\t\t\t\t\t\t<ScheduleList>\r\n\t\t\t\t\t\t\t{scheduleList.available.map((s, idx) => (\r\n\t\t\t\t\t\t\t\t<ScheduleItem key={idx} scheduleObj={s} handleChangeStatusSchedule={onToggleSchedule} isUpdate={false} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ScheduleList>\r\n\t\t\t\t\t</Schedule>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CreateCourse;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\ScheduleStudy\\\\ScheduleStudy.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Card, Spin } from 'antd';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { branchApi, checkBranchScheduleStudy, checkTeacherScheduleStudy, courseDetailApi, roomApi, studyTimeApi, teacherApi } from '~/apiBase';\nimport TitlePage from '~/components/TitlePage';\nimport { useWrap } from '~/context/wrap';\nimport { fmSelectArr } from '~/utils/functions';\nimport CDCalendar from '../CourseList/CourseListDetail/CourseDetailCalendar/Calendar';\nimport CheckBranch from './Form/CheckBranch';\nimport CheckOneTeacher from './Form/CheckOneTeacher';\nimport CheckManyEmptyTeacher from './Form/ManyTeacher';\nimport ScheduleStudyList from './List/List';\n\nvar ScheduleStudy = function ScheduleStudy() {\n  _s();\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var _useState = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState({\n    branchList: [],\n    studyTimeList: [],\n    roomList: [],\n    teacherList: []\n  }),\n      optionList = _useState2[0],\n      setOptionList = _useState2[1];\n\n  var _useState3 = useState({\n    list: [],\n    type: ''\n  }),\n      dataList = _useState3[0],\n      setDataList = _useState3[1];\n\n  var _useState4 = useState(null),\n      infoSearch = _useState4[0],\n      setInfoSearch = _useState4[1];\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading({\n                type: 'FETCH_DATA',\n                status: true\n              });\n\n              try {\n                Promise.all([branchApi.getAll({\n                  pageSize: 99999,\n                  pageIndex: 1\n                }), studyTimeApi.getAll({\n                  selectAll: true\n                })]).then(function (res) {\n                  var _res$map = res.map(function (r) {\n                    return r.status === 200 ? r.data.data : [];\n                  }),\n                      _res$map2 = _slicedToArray(_res$map, 2),\n                      branchList = _res$map2[0],\n                      studyTimeList = _res$map2[1];\n\n                  if (branchList.length) {\n                    setOptionList(function (preState) {\n                      return _objectSpread(_objectSpread({}, preState), {}, {\n                        branchList: fmSelectArr(branchList, 'BranchName', 'ID')\n                      });\n                    });\n                  }\n\n                  if (studyTimeList.length) {\n                    setOptionList(function (preState) {\n                      return _objectSpread(_objectSpread({}, preState), {}, {\n                        studyTimeList: fmSelectArr(studyTimeList, 'Name', 'ID')\n                      });\n                    });\n                  }\n                });\n              } catch (error) {\n                showNoti('danger', error.message);\n              } finally {\n                setIsLoading({\n                  type: 'FETCH_DATA',\n                  status: false\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n\n  var fetchRoomByBranchID = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ID) {\n      var res, fmRoomList;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsLoading({\n                type: 'FETCH_ROOM',\n                status: true\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return roomApi.getAll({\n                BranchID: ID,\n                pageSize: 99999\n              });\n\n            case 4:\n              res = _context2.sent;\n\n              if (res.status === 200) {\n                fmRoomList = fmSelectArr(res.data.data, 'RoomName', 'RoomID');\n                setOptionList(_objectSpread(_objectSpread({}, optionList), {}, {\n                  roomList: fmRoomList\n                }));\n              }\n\n              if (res.status === 204) {\n                setOptionList(_objectSpread(_objectSpread({}, optionList), {}, {\n                  roomList: []\n                }));\n              }\n\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              showNoti('danger', _context2.t0.message);\n\n            case 12:\n              _context2.prev = 12;\n              setIsLoading({\n                type: 'FETCH_ROOM',\n                status: false\n              });\n              return _context2.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function fetchRoomByBranchID(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var fetchTeacherByBranchID = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(ID) {\n      var res, fmTeacherList;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsLoading({\n                type: 'FETCH_TEACHER',\n                status: true\n              });\n              _context3.prev = 1;\n              _context3.next = 4;\n              return teacherApi.getAll({\n                BranchID: ID,\n                pageSize: 99999\n              });\n\n            case 4:\n              res = _context3.sent;\n\n              if (res.status === 200) {\n                fmTeacherList = fmSelectArr(res.data.data, 'FullNameUnicode', 'UserInformationID');\n                setOptionList(_objectSpread(_objectSpread({}, optionList), {}, {\n                  teacherList: fmTeacherList\n                }));\n              }\n\n              if (res.status === 204) {\n                setOptionList(_objectSpread(_objectSpread({}, optionList), {}, {\n                  teacherList: []\n                }));\n              }\n\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](1);\n              showNoti('danger', _context3.t0.message);\n\n            case 12:\n              _context3.prev = 12;\n              setIsLoading({\n                type: 'FETCH_TEACHER',\n                status: false\n              });\n              return _context3.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function fetchTeacherByBranchID(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // Room\n\n\n  var onCheckRoom = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(value) {\n      var res, RoomID, StartTime, EndTime, BranchID, fmObj, _optionList$branchLis, _optionList$roomList$;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              _context4.prev = 1;\n              RoomID = value.RoomID, StartTime = value.StartTime, EndTime = value.EndTime, BranchID = value.BranchID;\n              fmObj = {\n                RoomID: RoomID,\n                StartTime: moment(StartTime).format('YYYY/MM/DD'),\n                EndTime: moment(EndTime).format('YYYY/MM/DD')\n              };\n              _context4.next = 6;\n              return courseDetailApi.getAll(fmObj);\n\n            case 6:\n              res = _context4.sent;\n\n              if (res.status === 200) {\n                setInfoSearch({\n                  title: 'Kiểm tra phòng',\n                  branchName: ((_optionList$branchLis = optionList.branchList.find(function (b) {\n                    return b.value === BranchID;\n                  })) === null || _optionList$branchLis === void 0 ? void 0 : _optionList$branchLis.title) || '',\n                  roomName: ((_optionList$roomList$ = optionList.roomList.find(function (b) {\n                    return b.value === RoomID;\n                  })) === null || _optionList$roomList$ === void 0 ? void 0 : _optionList$roomList$.title) || '',\n                  fromDate: moment(StartTime).format('DD/MM/YYYY'),\n                  toDate: moment(EndTime).format('DD/MM/YYYY')\n                });\n                setDataList({\n                  list: res.data.data,\n                  type: ''\n                });\n                showNoti('success', res.data.message);\n              }\n\n              if (res.status === 204) {\n                showNoti('danger', 'Không tìm thấy');\n              }\n\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](1);\n              showNoti('danger', _context4.t0.message);\n\n            case 14:\n              _context4.prev = 14;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context4.finish(14);\n\n            case 17:\n              return _context4.abrupt(\"return\", res);\n\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 11, 14, 17]]);\n    }));\n\n    return function onCheckRoom(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // OneTeacher\n\n\n  var onCheckOneTeacher = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(value) {\n      var res, TeacherID, StartTime, EndTime, BranchID, fmObj, _optionList$teacherLi, _optionList$branchLis2;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              _context5.prev = 1;\n              TeacherID = value.TeacherID, StartTime = value.StartTime, EndTime = value.EndTime, BranchID = value.BranchID;\n              fmObj = {\n                TeacherID: +TeacherID.toString(),\n                StartTime: moment(StartTime).format('YYYY/MM/DD'),\n                EndTime: moment(EndTime).format('YYYY/MM/DD')\n              };\n              _context5.next = 6;\n              return courseDetailApi.getAll(fmObj);\n\n            case 6:\n              res = _context5.sent;\n\n              if (res.status === 200) {\n                setInfoSearch({\n                  title: 'Lịch giáo viên',\n                  teacherName: ((_optionList$teacherLi = optionList.teacherList.find(function (b) {\n                    return b.value === TeacherID;\n                  })) === null || _optionList$teacherLi === void 0 ? void 0 : _optionList$teacherLi.title) || '',\n                  branchName: ((_optionList$branchLis2 = optionList.branchList.find(function (b) {\n                    return b.value === BranchID;\n                  })) === null || _optionList$branchLis2 === void 0 ? void 0 : _optionList$branchLis2.title) || '',\n                  fromDate: moment(StartTime).format('DD/MM/YYYY'),\n                  toDate: moment(EndTime).format('DD/MM/YYYY')\n                });\n                setDataList({\n                  list: res.data.data,\n                  type: ''\n                });\n                showNoti('success', res.data.message);\n              }\n\n              if (res.status === 204) {\n                showNoti('danger', 'Không tìm thấy');\n              }\n\n              _context5.next = 14;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](1);\n              showNoti('danger', _context5.t0.message);\n\n            case 14:\n              _context5.prev = 14;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context5.finish(14);\n\n            case 17:\n              return _context5.abrupt(\"return\", res);\n\n            case 18:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 11, 14, 17]]);\n    }));\n\n    return function onCheckOneTeacher(_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); // CALENDAR FORMAT\n\n\n  var calendarFm = function calendarFm(calendarArr) {\n    var rs = calendarArr.map(function (c, idx) {\n      var ID = c.ID,\n          CourseID = c.CourseID,\n          CourseName = c.CourseName,\n          RoomName = c.RoomName,\n          BranchName = c.BranchName,\n          TeacherName = c.TeacherName,\n          SubjectName = c.SubjectName,\n          StartTime = c.StartTime,\n          EndTime = c.EndTime,\n          LinkDocument = c.LinkDocument;\n      var studyTimeStart = moment(StartTime).format('HH:mm');\n      var studyTimeEnd = moment(EndTime).format('HH:mm');\n      var studyTime = \"\".concat(studyTimeStart, \" - \").concat(studyTimeEnd);\n      return {\n        id: +ID,\n        title: '',\n        start: moment(StartTime).toDate(),\n        end: moment(EndTime).toDate(),\n        resource: {\n          ID: ID,\n          CourseID: CourseID,\n          CourseName: CourseName,\n          RoomName: RoomName,\n          BranchName: BranchName,\n          TeacherName: TeacherName,\n          SubjectName: SubjectName,\n          LinkDocument: LinkDocument,\n          //\n          StudyTimeName: studyTime\n        }\n      };\n    });\n    return rs;\n  }; // OTHER VIEW\n  // ManyTeacher\n\n\n  var onCheckEmptyManyTeacher = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(value) {\n      var res, TeacherID, StudyTimeID, StartTime, EndTime, BranchID, fmObj, _optionList$branchLis3;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              _context6.prev = 1;\n              TeacherID = value.TeacherID, StudyTimeID = value.StudyTimeID, StartTime = value.StartTime, EndTime = value.EndTime, BranchID = value.BranchID;\n              fmObj = {\n                TeacherID: TeacherID.toString(),\n                StudyTimeID: StudyTimeID.join(','),\n                StartTime: moment(StartTime).format('YYYY/MM/DD'),\n                EndTime: moment(EndTime).format('YYYY/MM/DD')\n              };\n              _context6.next = 6;\n              return checkTeacherScheduleStudy.getAll(fmObj);\n\n            case 6:\n              res = _context6.sent;\n\n              if (res.status === 200) {\n                setDataList({\n                  list: res.data.data,\n                  type: 'CheckManyTeacher'\n                });\n                setInfoSearch({\n                  title: 'Lịch nhiều giáo viên',\n                  branchName: ((_optionList$branchLis3 = optionList.branchList.find(function (b) {\n                    return b.value === BranchID;\n                  })) === null || _optionList$branchLis3 === void 0 ? void 0 : _optionList$branchLis3.title) || '',\n                  fromDate: moment(StartTime).format('DD/MM/YYYY'),\n                  toDate: moment(EndTime).format('DD/MM/YYYY')\n                });\n                showNoti('success', res.data.message);\n              }\n\n              if (res.status === 204) {\n                showNoti('danger', 'Không tìm thấy');\n              }\n\n              _context6.next = 14;\n              break;\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](1);\n              showNoti('danger', _context6.t0.message);\n\n            case 14:\n              _context6.prev = 14;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context6.finish(14);\n\n            case 17:\n              return _context6.abrupt(\"return\", res);\n\n            case 18:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 11, 14, 17]]);\n    }));\n\n    return function onCheckEmptyManyTeacher(_x5) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var fmListOfEmptyTeacher = function fmListOfEmptyTeacher(calendarArr) {\n    // rs = {\n    //     \"2021/08/11\": {\n    //         \"21-Ca 08:00 - 10:00\": [\n    //             {\n    //                 \"TeacherID\": 1236,\n    //                 \"TeacherName\": \"Kim Bảo 98\",\n    //                 \"StudyTimeID\": 21,\n    //                 \"StudyTimeName\": \"Ca 08:00 - 10:00\",\n    //                 \"Date\": \"2021-08-11T00:00:00\",\n    //                 \"StartTime\": \"2021-08-11T08:00:00\",\n    //                 \"EndTime\": \"2021-08-11T10:00:00\"\n    //             },\n    //         ],\n    //     }\n    // }\n    var rs = {};\n\n    var newCalendarArr = _toConsumableArray(calendarArr);\n\n    for (var i = 0; i < newCalendarArr.length; i++) {\n      var c = newCalendarArr[i];\n      var _Date = c.Date,\n          StudyTimeID = c.StudyTimeID,\n          StudyTimeName = c.StudyTimeName,\n          StartTime = c.StartTime;\n      var fmDateTimeStamp = moment(StartTime).format('X');\n      var fmDate = moment(_Date).format('YYYY/MM/DD');\n      var fmStudyTime = \"\".concat(StudyTimeID, \"-\").concat(StudyTimeName, \"-\").concat(fmDateTimeStamp);\n\n      if (rs[fmDate]) {\n        if (rs[fmDate][fmStudyTime]) {\n          rs[fmDate][fmStudyTime].push(c);\n        } else {\n          rs[fmDate][fmStudyTime] = [c];\n        }\n      } else {\n        rs[fmDate] = {};\n        newCalendarArr.push(c);\n      }\n    }\n\n    return rs;\n  }; // ============================================================================\n  // ============================================================================\n  // ============================================================================\n  // ============================================================================\n  // ============================================================================\n  // ============================================================================\n  //Branch\n\n\n  var onCheckScheduleOfBranch = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(value) {\n      var res, BranchID, StartTime, EndTime, fmObj, _optionList$branchLis4;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              _context7.prev = 1;\n              BranchID = value.BranchID, StartTime = value.StartTime, EndTime = value.EndTime;\n              fmObj = {\n                branchId: BranchID,\n                from: moment(StartTime).format('YYYY/MM/DD'),\n                to: moment(EndTime).format('YYYY/MM/DD')\n              };\n              _context7.next = 6;\n              return checkBranchScheduleStudy.getAll(fmObj);\n\n            case 6:\n              res = _context7.sent;\n\n              if (res.status === 200) {\n                setDataList({\n                  list: res.data.data,\n                  type: 'CheckBranch'\n                });\n                setInfoSearch({\n                  title: 'Lịch trung tâm',\n                  branchName: ((_optionList$branchLis4 = optionList.branchList.find(function (b) {\n                    return b.value === BranchID;\n                  })) === null || _optionList$branchLis4 === void 0 ? void 0 : _optionList$branchLis4.title) || '',\n                  fromDate: moment(StartTime).format('DD/MM/YYYY'),\n                  toDate: moment(EndTime).format('DD/MM/YYYY')\n                });\n                showNoti('success', res.data.message);\n              }\n\n              if (res.status === 204) {\n                showNoti('danger', 'Lịch trống');\n              }\n\n              _context7.next = 14;\n              break;\n\n            case 11:\n              _context7.prev = 11;\n              _context7.t0 = _context7[\"catch\"](1);\n              showNoti('danger', _context7.t0.message);\n\n            case 14:\n              _context7.prev = 14;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context7.finish(14);\n\n            case 17:\n              return _context7.abrupt(\"return\", res);\n\n            case 18:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[1, 11, 14, 17]]);\n    }));\n\n    return function onCheckScheduleOfBranch(_x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (optionList.branchList.length) {\n      onCheckScheduleOfBranch({\n        BranchID: parseInt(optionList.branchList[0].value.toString()),\n        StartTime: moment().format('YYYY/MM/DD'),\n        EndTime: moment().add(1, 'months').format('YYYY/MM/DD')\n      });\n    }\n  }, [optionList.branchList]);\n\n  var fmListOfBranch = function fmListOfBranch(calendarArr) {\n    // rs = {\n    // \t\t'2021/08/13': {\n    // \t\t\t'31-Phòng 1-31': [\n    // \t\t\t\t{\n    // \t\t\t\t\tRoomID: 31,\n    // \t\t\t\t\tRoomName: 'Phòng 1',\n    // \t\t\t\t\tStudyTimeID: 21,\n    // \t\t\t\t\tStudyTimeName: 'Ca 08:00 - 10:00',\n    // \t\t\t\t\tStartTime: '2021-08-13T08:00:00',\n    // \t\t\t\t\tEndTime: '2021-08-13T10:00:00',\n    // \t\t\t\t},\n    // \t\t\t],\n    // \t\t\t'32-Phòng 2-32': [\n    // \t\t\t\t{\n    // \t\t\t\t\tRoomID: 32,\n    // \t\t\t\t\tRoomName: 'Phòng 2',\n    // \t\t\t\t\tStudyTimeID: 27,\n    // \t\t\t\t\tStudyTimeName: 'Ca 14:00 - 16:00',\n    // \t\t\t\t\tStartTime: '2021-08-13T14:00:00',\n    // \t\t\t\t\tEndTime: '2021-08-13T16:00:00',\n    // \t\t\t\t},\n    // \t\t\t],\n    // \t\t},\n    // \t};\n    var rs = {};\n\n    var newCalendarArr = _toConsumableArray(calendarArr);\n\n    for (var i = 0; i < newCalendarArr.length; i++) {\n      var c = newCalendarArr[i];\n      var StartTime = c.StartTime,\n          StudyTimeID = c.StudyTimeID,\n          RoomName = c.RoomName,\n          RoomID = c.RoomID,\n          StudyTimeName = c.StudyTimeName;\n      var fmDate = moment(StartTime).format('YYYY/MM/DD');\n      var fmRoomName = \"\".concat(RoomID, \"-\").concat(RoomName, \"-\").concat(RoomID);\n\n      if (rs[fmDate]) {\n        if (rs[fmDate][fmRoomName]) {\n          rs[fmDate][fmRoomName].push(c);\n        } else {\n          rs[fmDate][fmRoomName] = [c];\n        }\n      } else {\n        rs[fmDate] = {};\n        newCalendarArr.push(c);\n      }\n    }\n\n    return rs;\n  };\n\n  var fmList = function fmList(type, arr) {\n    switch (type) {\n      case 'CheckBranch':\n        return fmListOfBranch(arr);\n\n      case 'CheckManyTeacher':\n        return fmListOfEmptyTeacher(arr);\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(TitlePage, {\n      title: \"Ki\\u1EC3m tra l\\u1ECBch h\\u1ECDc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        extra: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-list-btn\",\n          children: [/*#__PURE__*/_jsxDEV(CheckBranch, {\n            isLoading: isLoading,\n            optionList: optionList,\n            handleSubmit: onCheckScheduleOfBranch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 8\n          }, _this), /*#__PURE__*/_jsxDEV(CheckOneTeacher, {\n            isLoading: isLoading,\n            optionList: optionList,\n            handleFetchTeacher: fetchTeacherByBranchID,\n            handleSubmit: onCheckOneTeacher\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 8\n          }, _this), /*#__PURE__*/_jsxDEV(CheckManyEmptyTeacher, {\n            isLoading: isLoading,\n            optionList: optionList,\n            handleFetchTeacher: fetchTeacherByBranchID,\n            handleSubmit: onCheckEmptyManyTeacher\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 8\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 7\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          size: \"large\",\n          spinning: isLoading.type === 'ADD_DATA' && isLoading.status,\n          children: [infoSearch && /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-weight-black mb-3\",\n            children: [infoSearch.title && \"[\".concat(infoSearch.title, \"]\"), infoSearch.branchName && \"[\".concat(infoSearch.branchName, \"]\"), infoSearch.teacherName && \"[\".concat(infoSearch.teacherName, \"]\"), infoSearch.roomName && \"[\".concat(infoSearch.roomName, \"]\"), \" | \", infoSearch.fromDate, \" - \", infoSearch.toDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 8\n          }, _this), dataList.type === 'CheckBranch' || dataList.type === 'CheckManyTeacher' ? /*#__PURE__*/_jsxDEV(ScheduleStudyList, {\n            dataSource: fmList(dataList.type, dataList.list)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 8\n          }, _this) : /*#__PURE__*/_jsxDEV(CDCalendar, {\n            isLoaded: true,\n            isGetRecordList: true,\n            eventList: calendarFm(dataList.list)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 8\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 455,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(ScheduleStudy, \"iSPBqXp8oAvSxcPI+xZrxR12/b0=\", false, function () {\n  return [useWrap];\n});\n\n_c = ScheduleStudy;\nexport default ScheduleStudy;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScheduleStudy\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/ScheduleStudy/ScheduleStudy.tsx"],"names":["Card","Spin","moment","React","useEffect","useState","branchApi","checkBranchScheduleStudy","checkTeacherScheduleStudy","courseDetailApi","roomApi","studyTimeApi","teacherApi","TitlePage","useWrap","fmSelectArr","CDCalendar","CheckBranch","CheckOneTeacher","CheckManyEmptyTeacher","ScheduleStudyList","ScheduleStudy","showNoti","type","status","isLoading","setIsLoading","branchList","studyTimeList","roomList","teacherList","optionList","setOptionList","list","dataList","setDataList","infoSearch","setInfoSearch","fetchData","Promise","all","getAll","pageSize","pageIndex","selectAll","then","res","map","r","data","length","preState","error","message","fetchRoomByBranchID","ID","BranchID","fmRoomList","fetchTeacherByBranchID","fmTeacherList","onCheckRoom","value","RoomID","StartTime","EndTime","fmObj","format","title","branchName","find","b","roomName","fromDate","toDate","onCheckOneTeacher","TeacherID","toString","teacherName","calendarFm","calendarArr","rs","c","idx","CourseID","CourseName","RoomName","BranchName","TeacherName","SubjectName","LinkDocument","studyTimeStart","studyTimeEnd","studyTime","id","start","end","resource","StudyTimeName","onCheckEmptyManyTeacher","StudyTimeID","join","fmListOfEmptyTeacher","newCalendarArr","i","Date","fmDateTimeStamp","fmDate","fmStudyTime","push","onCheckScheduleOfBranch","branchId","from","to","parseInt","add","fmListOfBranch","fmRoomName","fmList","arr"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,MAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACCC,SADD,EAECC,wBAFD,EAGCC,yBAHD,EAICC,eAJD,EAKCC,OALD,EAMCC,YAND,EAOCC,UAPD,QAQO,WARP;AASA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,8DAAvB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAOC,qBAAP,MAAkC,oBAAlC;AACA,OAAOC,iBAAP,MAA8B,aAA9B;;AAqBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,iBACNP,OAAO,EADD;AAAA,MACnBQ,QADmB,YACnBA,QADmB;;AAAA,kBAEOjB,QAAQ,CAAC;AAC1CkB,IAAAA,IAAI,EAAE,EADoC;AAE1CC,IAAAA,MAAM,EAAE;AAFkC,GAAD,CAFf;AAAA,MAEpBC,SAFoB;AAAA,MAETC,YAFS;;AAAA,mBAMSrB,QAAQ,CAAc;AACzDsB,IAAAA,UAAU,EAAE,EAD6C;AAEzDC,IAAAA,aAAa,EAAE,EAF0C;AAGzDC,IAAAA,QAAQ,EAAE,EAH+C;AAIzDC,IAAAA,WAAW,EAAE;AAJ4C,GAAd,CANjB;AAAA,MAMpBC,UANoB;AAAA,MAMRC,aANQ;;AAAA,mBAYK3B,QAAQ,CAAY;AACnD4B,IAAAA,IAAI,EAAE,EAD6C;AAEnDV,IAAAA,IAAI,EAAE;AAF6C,GAAZ,CAZb;AAAA,MAYpBW,QAZoB;AAAA,MAYVC,WAZU;;AAAA,mBAgBS9B,QAAQ,CAAa,IAAb,CAhBjB;AAAA,MAgBpB+B,UAhBoB;AAAA,MAgBRC,aAhBQ;;AAiB3B,MAAMC,SAAS;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AACjBZ,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,YADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;;AAIA,kBAAI;AACHe,gBAAAA,OAAO,CAACC,GAAR,CAAY,CAAClC,SAAS,CAACmC,MAAV,CAAiB;AAAEC,kBAAAA,QAAQ,EAAE,KAAZ;AAAmBC,kBAAAA,SAAS,EAAE;AAA9B,iBAAjB,CAAD,EAAsDhC,YAAY,CAAC8B,MAAb,CAAoB;AAAEG,kBAAAA,SAAS,EAAE;AAAb,iBAApB,CAAtD,CAAZ,EAA6GC,IAA7G,CAAkH,UAACC,GAAD,EAAS;AAAA,iCACtFA,GAAG,CAACC,GAAJ,CAAQ,UAACC,CAAD;AAAA,2BAAQA,CAAC,CAACxB,MAAF,KAAa,GAAb,GAAmBwB,CAAC,CAACC,IAAF,CAAOA,IAA1B,GAAiC,EAAzC;AAAA,mBAAR,CADsF;AAAA;AAAA,sBACnHtB,UADmH;AAAA,sBACvGC,aADuG;;AAE1H,sBAAID,UAAU,CAACuB,MAAf,EAAuB;AACtBlB,oBAAAA,aAAa,CAAC,UAACmB,QAAD;AAAA,6DACVA,QADU;AAEbxB,wBAAAA,UAAU,EAAEZ,WAAW,CAACY,UAAD,EAAa,YAAb,EAA2B,IAA3B;AAFV;AAAA,qBAAD,CAAb;AAIA;;AACD,sBAAIC,aAAa,CAACsB,MAAlB,EAA0B;AACzBlB,oBAAAA,aAAa,CAAC,UAACmB,QAAD;AAAA,6DACVA,QADU;AAEbvB,wBAAAA,aAAa,EAAEb,WAAW,CAACa,aAAD,EAAgB,MAAhB,EAAwB,IAAxB;AAFb;AAAA,qBAAD,CAAb;AAIA;AACD,iBAdD;AAeA,eAhBD,CAgBE,OAAOwB,KAAP,EAAc;AACf9B,gBAAAA,QAAQ,CAAC,QAAD,EAAW8B,KAAK,CAACC,OAAjB,CAAR;AACA,eAlBD,SAkBU;AACT3B,gBAAAA,YAAY,CAAC;AACZH,kBAAAA,IAAI,EAAE,YADM;AAEZC,kBAAAA,MAAM,EAAE;AAFI,iBAAD,CAAZ;AAIA;;AA5BgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATc,SAAS;AAAA;AAAA;AAAA,KAAf;;AA8BAlC,EAAAA,SAAS,CAAC,YAAM;AACfkC,IAAAA,SAAS;AACT,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMgB,mBAAmB;AAAA,yEAAG,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3B7B,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,YADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AAD2B;AAAA;AAAA,qBAMRd,OAAO,CAAC+B,MAAR,CAAe;AAAEe,gBAAAA,QAAQ,EAAED,EAAZ;AAAgBb,gBAAAA,QAAQ,EAAE;AAA1B,eAAf,CANQ;;AAAA;AAMpBI,cAAAA,GANoB;;AAO1B,kBAAIA,GAAG,CAACtB,MAAJ,KAAe,GAAnB,EAAwB;AACjBiC,gBAAAA,UADiB,GACJ1C,WAAW,CAAC+B,GAAG,CAACG,IAAJ,CAASA,IAAV,EAAgB,UAAhB,EAA4B,QAA5B,CADP;AAEvBjB,gBAAAA,aAAa,iCACTD,UADS;AAEZF,kBAAAA,QAAQ,EAAE4B;AAFE,mBAAb;AAIA;;AACD,kBAAIX,GAAG,CAACtB,MAAJ,KAAe,GAAnB,EAAwB;AACvBQ,gBAAAA,aAAa,iCACTD,UADS;AAEZF,kBAAAA,QAAQ,EAAE;AAFE,mBAAb;AAIA;;AAnByB;AAAA;;AAAA;AAAA;AAAA;AAqB1BP,cAAAA,QAAQ,CAAC,QAAD,EAAW,aAAM+B,OAAjB,CAAR;;AArB0B;AAAA;AAuB1B3B,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,YADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AAvB0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnB8B,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AA6BA,MAAMI,sBAAsB;AAAA,yEAAG,kBAAOH,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9B7B,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,eADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AAD8B;AAAA;AAAA,qBAMXZ,UAAU,CAAC6B,MAAX,CAAkB;AAAEe,gBAAAA,QAAQ,EAAED,EAAZ;AAAgBb,gBAAAA,QAAQ,EAAE;AAA1B,eAAlB,CANW;;AAAA;AAMvBI,cAAAA,GANuB;;AAO7B,kBAAIA,GAAG,CAACtB,MAAJ,KAAe,GAAnB,EAAwB;AACjBmC,gBAAAA,aADiB,GACD5C,WAAW,CAAC+B,GAAG,CAACG,IAAJ,CAASA,IAAV,EAAgB,iBAAhB,EAAmC,mBAAnC,CADV;AAEvBjB,gBAAAA,aAAa,iCACTD,UADS;AAEZD,kBAAAA,WAAW,EAAE6B;AAFD,mBAAb;AAIA;;AACD,kBAAIb,GAAG,CAACtB,MAAJ,KAAe,GAAnB,EAAwB;AACvBQ,gBAAAA,aAAa,iCACTD,UADS;AAEZD,kBAAAA,WAAW,EAAE;AAFD,mBAAb;AAIA;;AAnB4B;AAAA;;AAAA;AAAA;AAAA;AAqB7BR,cAAAA,QAAQ,CAAC,QAAD,EAAW,aAAM+B,OAAjB,CAAR;;AArB6B;AAAA;AAuB7B3B,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,eADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AAvB6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAtBkC,sBAAsB;AAAA;AAAA;AAAA,KAA5B,CAhF2B,CA8G3B;;;AACA,MAAME,WAAW;AAAA,yEAAG,kBAAOC,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBnC,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,UADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AADmB;AAOVsC,cAAAA,MAPU,GAO+BD,KAP/B,CAOVC,MAPU,EAOFC,SAPE,GAO+BF,KAP/B,CAOFE,SAPE,EAOSC,OAPT,GAO+BH,KAP/B,CAOSG,OAPT,EAOkBR,QAPlB,GAO+BK,KAP/B,CAOkBL,QAPlB;AAQZS,cAAAA,KARY,GAQJ;AACbH,gBAAAA,MAAM,EAANA,MADa;AAEbC,gBAAAA,SAAS,EAAE7D,MAAM,CAAC6D,SAAD,CAAN,CAAkBG,MAAlB,CAAyB,YAAzB,CAFE;AAGbF,gBAAAA,OAAO,EAAE9D,MAAM,CAAC8D,OAAD,CAAN,CAAgBE,MAAhB,CAAuB,YAAvB;AAHI,eARI;AAAA;AAAA,qBAaNzD,eAAe,CAACgC,MAAhB,CAAuBwB,KAAvB,CAbM;;AAAA;AAalBnB,cAAAA,GAbkB;;AAclB,kBAAIA,GAAG,CAACtB,MAAJ,KAAe,GAAnB,EAAwB;AACvBa,gBAAAA,aAAa,CAAC;AACb8B,kBAAAA,KAAK,EAAE,gBADM;AAEbC,kBAAAA,UAAU,EAAE,0BAAArC,UAAU,CAACJ,UAAX,CAAsB0C,IAAtB,CAA2B,UAACC,CAAD;AAAA,2BAAOA,CAAC,CAACT,KAAF,KAAYL,QAAnB;AAAA,mBAA3B,iFAAyDW,KAAzD,KAAkE,EAFjE;AAGbI,kBAAAA,QAAQ,EAAE,0BAAAxC,UAAU,CAACF,QAAX,CAAoBwC,IAApB,CAAyB,UAACC,CAAD;AAAA,2BAAOA,CAAC,CAACT,KAAF,KAAYC,MAAnB;AAAA,mBAAzB,iFAAqDK,KAArD,KAA8D,EAH3D;AAIbK,kBAAAA,QAAQ,EAAEtE,MAAM,CAAC6D,SAAD,CAAN,CAAkBG,MAAlB,CAAyB,YAAzB,CAJG;AAKbO,kBAAAA,MAAM,EAAEvE,MAAM,CAAC8D,OAAD,CAAN,CAAgBE,MAAhB,CAAuB,YAAvB;AALK,iBAAD,CAAb;AAOA/B,gBAAAA,WAAW,CAAC;AAAEF,kBAAAA,IAAI,EAAEa,GAAG,CAACG,IAAJ,CAASA,IAAjB;AAAuB1B,kBAAAA,IAAI,EAAE;AAA7B,iBAAD,CAAX;AACAD,gBAAAA,QAAQ,CAAC,SAAD,EAAYwB,GAAG,CAACG,IAAJ,CAASI,OAArB,CAAR;AACA;;AACD,kBAAIP,GAAG,CAACtB,MAAJ,KAAe,GAAnB,EAAwB;AACvBF,gBAAAA,QAAQ,CAAC,QAAD,EAAW,gBAAX,CAAR;AACA;;AA3BiB;AAAA;;AAAA;AAAA;AAAA;AA6BlBA,cAAAA,QAAQ,CAAC,QAAD,EAAW,aAAM+B,OAAjB,CAAR;;AA7BkB;AAAA;AA+BlB3B,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,UADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AA/BkB;;AAAA;AAAA,gDAoCZsB,GApCY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXc,WAAW;AAAA;AAAA;AAAA,KAAjB,CA/G2B,CAqJ3B;;;AAQA,MAAMc,iBAAiB;AAAA,yEAAG,kBAAOb,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACzBnC,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,UADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AADyB;AAOhBmD,cAAAA,SAPgB,GAO4Bd,KAP5B,CAOhBc,SAPgB,EAOLZ,SAPK,GAO4BF,KAP5B,CAOLE,SAPK,EAOMC,OAPN,GAO4BH,KAP5B,CAOMG,OAPN,EAOeR,QAPf,GAO4BK,KAP5B,CAOeL,QAPf;AAQlBS,cAAAA,KARkB,GAQV;AACbU,gBAAAA,SAAS,EAAE,CAACA,SAAS,CAACC,QAAV,EADC;AAEbb,gBAAAA,SAAS,EAAE7D,MAAM,CAAC6D,SAAD,CAAN,CAAkBG,MAAlB,CAAyB,YAAzB,CAFE;AAGbF,gBAAAA,OAAO,EAAE9D,MAAM,CAAC8D,OAAD,CAAN,CAAgBE,MAAhB,CAAuB,YAAvB;AAHI,eARU;AAAA;AAAA,qBAaZzD,eAAe,CAACgC,MAAhB,CAAuBwB,KAAvB,CAbY;;AAAA;AAaxBnB,cAAAA,GAbwB;;AAcxB,kBAAIA,GAAG,CAACtB,MAAJ,KAAe,GAAnB,EAAwB;AACvBa,gBAAAA,aAAa,CAAC;AACb8B,kBAAAA,KAAK,EAAE,gBADM;AAEbU,kBAAAA,WAAW,EAAE,0BAAA9C,UAAU,CAACD,WAAX,CAAuBuC,IAAvB,CAA4B,UAACC,CAAD;AAAA,2BAAOA,CAAC,CAACT,KAAF,KAAYc,SAAnB;AAAA,mBAA5B,iFAA2DR,KAA3D,KAAoE,EAFpE;AAGbC,kBAAAA,UAAU,EAAE,2BAAArC,UAAU,CAACJ,UAAX,CAAsB0C,IAAtB,CAA2B,UAACC,CAAD;AAAA,2BAAOA,CAAC,CAACT,KAAF,KAAYL,QAAnB;AAAA,mBAA3B,mFAAyDW,KAAzD,KAAkE,EAHjE;AAIbK,kBAAAA,QAAQ,EAAEtE,MAAM,CAAC6D,SAAD,CAAN,CAAkBG,MAAlB,CAAyB,YAAzB,CAJG;AAKbO,kBAAAA,MAAM,EAAEvE,MAAM,CAAC8D,OAAD,CAAN,CAAgBE,MAAhB,CAAuB,YAAvB;AALK,iBAAD,CAAb;AAOA/B,gBAAAA,WAAW,CAAC;AAAEF,kBAAAA,IAAI,EAAEa,GAAG,CAACG,IAAJ,CAASA,IAAjB;AAAuB1B,kBAAAA,IAAI,EAAE;AAA7B,iBAAD,CAAX;AACAD,gBAAAA,QAAQ,CAAC,SAAD,EAAYwB,GAAG,CAACG,IAAJ,CAASI,OAArB,CAAR;AACA;;AACD,kBAAIP,GAAG,CAACtB,MAAJ,KAAe,GAAnB,EAAwB;AACvBF,gBAAAA,QAAQ,CAAC,QAAD,EAAW,gBAAX,CAAR;AACA;;AA3BuB;AAAA;;AAAA;AAAA;AAAA;AA6BxBA,cAAAA,QAAQ,CAAC,QAAD,EAAW,aAAM+B,OAAjB,CAAR;;AA7BwB;AAAA;AA+BxB3B,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,UADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AA/BwB;;AAAA;AAAA,gDAoClBsB,GApCkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjB4B,iBAAiB;AAAA;AAAA;AAAA,KAAvB,CA7J2B,CAmM3B;;;AACA,MAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,WAAD,EAA0C;AAC5D,QAAMC,EAAE,GAAGD,WAAW,CAAChC,GAAZ,CAAgB,UAACkC,CAAD,EAAIC,GAAJ,EAAY;AAAA,UAC9B3B,EAD8B,GACiF0B,CADjF,CAC9B1B,EAD8B;AAAA,UAC1B4B,QAD0B,GACiFF,CADjF,CAC1BE,QAD0B;AAAA,UAChBC,UADgB,GACiFH,CADjF,CAChBG,UADgB;AAAA,UACJC,QADI,GACiFJ,CADjF,CACJI,QADI;AAAA,UACMC,UADN,GACiFL,CADjF,CACMK,UADN;AAAA,UACkBC,WADlB,GACiFN,CADjF,CACkBM,WADlB;AAAA,UAC+BC,WAD/B,GACiFP,CADjF,CAC+BO,WAD/B;AAAA,UAC4CzB,SAD5C,GACiFkB,CADjF,CAC4ClB,SAD5C;AAAA,UACuDC,OADvD,GACiFiB,CADjF,CACuDjB,OADvD;AAAA,UACgEyB,YADhE,GACiFR,CADjF,CACgEQ,YADhE;AAEtC,UAAMC,cAAc,GAAGxF,MAAM,CAAC6D,SAAD,CAAN,CAAkBG,MAAlB,CAAyB,OAAzB,CAAvB;AACA,UAAMyB,YAAY,GAAGzF,MAAM,CAAC8D,OAAD,CAAN,CAAgBE,MAAhB,CAAuB,OAAvB,CAArB;AACA,UAAM0B,SAAS,aAAMF,cAAN,gBAA0BC,YAA1B,CAAf;AAEA,aAAO;AACNE,QAAAA,EAAE,EAAE,CAACtC,EADC;AAENY,QAAAA,KAAK,EAAE,EAFD;AAGN2B,QAAAA,KAAK,EAAE5F,MAAM,CAAC6D,SAAD,CAAN,CAAkBU,MAAlB,EAHD;AAINsB,QAAAA,GAAG,EAAE7F,MAAM,CAAC8D,OAAD,CAAN,CAAgBS,MAAhB,EAJC;AAKNuB,QAAAA,QAAQ,EAAE;AACTzC,UAAAA,EAAE,EAAFA,EADS;AAET4B,UAAAA,QAAQ,EAARA,QAFS;AAGTC,UAAAA,UAAU,EAAVA,UAHS;AAITC,UAAAA,QAAQ,EAARA,QAJS;AAKTC,UAAAA,UAAU,EAAVA,UALS;AAMTC,UAAAA,WAAW,EAAXA,WANS;AAOTC,UAAAA,WAAW,EAAXA,WAPS;AAQTC,UAAAA,YAAY,EAAZA,YARS;AAST;AACAQ,UAAAA,aAAa,EAAEL;AAVN;AALJ,OAAP;AAkBA,KAxBU,CAAX;AAyBA,WAAOZ,EAAP;AACA,GA3BD,CApM2B,CAiO3B;AACA;;;AACA,MAAMkB,uBAAuB;AAAA,yEAAG,kBAAOrC,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC/BnC,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,UADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AAD+B;AAOtBmD,cAAAA,SAPsB,GAOmCd,KAPnC,CAOtBc,SAPsB,EAOXwB,WAPW,GAOmCtC,KAPnC,CAOXsC,WAPW,EAOEpC,SAPF,GAOmCF,KAPnC,CAOEE,SAPF,EAOaC,OAPb,GAOmCH,KAPnC,CAOaG,OAPb,EAOsBR,QAPtB,GAOmCK,KAPnC,CAOsBL,QAPtB;AAQxBS,cAAAA,KARwB,GAQhB;AACbU,gBAAAA,SAAS,EAAEA,SAAS,CAACC,QAAV,EADE;AAEbuB,gBAAAA,WAAW,EAAEA,WAAW,CAACC,IAAZ,CAAiB,GAAjB,CAFA;AAGbrC,gBAAAA,SAAS,EAAE7D,MAAM,CAAC6D,SAAD,CAAN,CAAkBG,MAAlB,CAAyB,YAAzB,CAHE;AAIbF,gBAAAA,OAAO,EAAE9D,MAAM,CAAC8D,OAAD,CAAN,CAAgBE,MAAhB,CAAuB,YAAvB;AAJI,eARgB;AAAA;AAAA,qBAclB1D,yBAAyB,CAACiC,MAA1B,CAAiCwB,KAAjC,CAdkB;;AAAA;AAc9BnB,cAAAA,GAd8B;;AAe9B,kBAAIA,GAAG,CAACtB,MAAJ,KAAe,GAAnB,EAAwB;AACvBW,gBAAAA,WAAW,CAAC;AAAEF,kBAAAA,IAAI,EAAEa,GAAG,CAACG,IAAJ,CAASA,IAAjB;AAAuB1B,kBAAAA,IAAI,EAAE;AAA7B,iBAAD,CAAX;AACAc,gBAAAA,aAAa,CAAC;AACb8B,kBAAAA,KAAK,EAAE,sBADM;AAEbC,kBAAAA,UAAU,EAAE,2BAAArC,UAAU,CAACJ,UAAX,CAAsB0C,IAAtB,CAA2B,UAACC,CAAD;AAAA,2BAAOA,CAAC,CAACT,KAAF,KAAYL,QAAnB;AAAA,mBAA3B,mFAAyDW,KAAzD,KAAkE,EAFjE;AAGbK,kBAAAA,QAAQ,EAAEtE,MAAM,CAAC6D,SAAD,CAAN,CAAkBG,MAAlB,CAAyB,YAAzB,CAHG;AAIbO,kBAAAA,MAAM,EAAEvE,MAAM,CAAC8D,OAAD,CAAN,CAAgBE,MAAhB,CAAuB,YAAvB;AAJK,iBAAD,CAAb;AAMA5C,gBAAAA,QAAQ,CAAC,SAAD,EAAYwB,GAAG,CAACG,IAAJ,CAASI,OAArB,CAAR;AACA;;AACD,kBAAIP,GAAG,CAACtB,MAAJ,KAAe,GAAnB,EAAwB;AACvBF,gBAAAA,QAAQ,CAAC,QAAD,EAAW,gBAAX,CAAR;AACA;;AA3B6B;AAAA;;AAAA;AAAA;AAAA;AA6B9BA,cAAAA,QAAQ,CAAC,QAAD,EAAW,aAAM+B,OAAjB,CAAR;;AA7B8B;AAAA;AA+B9B3B,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,UADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AA/B8B;;AAAA;AAAA,gDAoCxBsB,GApCwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAvBoD,uBAAuB;AAAA;AAAA;AAAA,KAA7B;;AAsCA,MAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACtB,WAAD,EAA+C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,EAAE,GAAG,EAAX;;AACA,QAAMsB,cAAc,sBAAOvB,WAAP,CAApB;;AACA,SAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,cAAc,CAACpD,MAAnC,EAA2CqD,CAAC,EAA5C,EAAgD;AAC/C,UAAMtB,CAAC,GAAGqB,cAAc,CAACC,CAAD,CAAxB;AAD+C,UAEvCC,KAFuC,GAESvB,CAFT,CAEvCuB,IAFuC;AAAA,UAEjCL,WAFiC,GAESlB,CAFT,CAEjCkB,WAFiC;AAAA,UAEpBF,aAFoB,GAEShB,CAFT,CAEpBgB,aAFoB;AAAA,UAELlC,SAFK,GAESkB,CAFT,CAELlB,SAFK;AAG/C,UAAM0C,eAAe,GAAGvG,MAAM,CAAC6D,SAAD,CAAN,CAAkBG,MAAlB,CAAyB,GAAzB,CAAxB;AACA,UAAMwC,MAAM,GAAGxG,MAAM,CAACsG,KAAD,CAAN,CAAatC,MAAb,CAAoB,YAApB,CAAf;AACA,UAAMyC,WAAW,aAAMR,WAAN,cAAqBF,aAArB,cAAsCQ,eAAtC,CAAjB;;AACA,UAAIzB,EAAE,CAAC0B,MAAD,CAAN,EAAgB;AACf,YAAI1B,EAAE,CAAC0B,MAAD,CAAF,CAAWC,WAAX,CAAJ,EAA6B;AAC5B3B,UAAAA,EAAE,CAAC0B,MAAD,CAAF,CAAWC,WAAX,EAAwBC,IAAxB,CAA6B3B,CAA7B;AACA,SAFD,MAEO;AACND,UAAAA,EAAE,CAAC0B,MAAD,CAAF,CAAWC,WAAX,IAA0B,CAAC1B,CAAD,CAA1B;AACA;AACD,OAND,MAMO;AACND,QAAAA,EAAE,CAAC0B,MAAD,CAAF,GAAa,EAAb;AACAJ,QAAAA,cAAc,CAACM,IAAf,CAAoB3B,CAApB;AACA;AACD;;AACD,WAAOD,EAAP;AACA,GApCD,CAzQ2B,CA+S3B;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,MAAM6B,uBAAuB;AAAA,yEAAG,kBAAOhD,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC/BnC,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,UADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AAD+B;AAOtBgC,cAAAA,QAPsB,GAOWK,KAPX,CAOtBL,QAPsB,EAOZO,SAPY,GAOWF,KAPX,CAOZE,SAPY,EAODC,OAPC,GAOWH,KAPX,CAODG,OAPC;AAQxBC,cAAAA,KARwB,GAQhB;AACb6C,gBAAAA,QAAQ,EAAEtD,QADG;AAEbuD,gBAAAA,IAAI,EAAE7G,MAAM,CAAC6D,SAAD,CAAN,CAAkBG,MAAlB,CAAyB,YAAzB,CAFO;AAGb8C,gBAAAA,EAAE,EAAE9G,MAAM,CAAC8D,OAAD,CAAN,CAAgBE,MAAhB,CAAuB,YAAvB;AAHS,eARgB;AAAA;AAAA,qBAalB3D,wBAAwB,CAACkC,MAAzB,CAAgCwB,KAAhC,CAbkB;;AAAA;AAa9BnB,cAAAA,GAb8B;;AAc9B,kBAAIA,GAAG,CAACtB,MAAJ,KAAe,GAAnB,EAAwB;AACvBW,gBAAAA,WAAW,CAAC;AAAEF,kBAAAA,IAAI,EAAEa,GAAG,CAACG,IAAJ,CAASA,IAAjB;AAAuB1B,kBAAAA,IAAI,EAAE;AAA7B,iBAAD,CAAX;AACAc,gBAAAA,aAAa,CAAC;AACb8B,kBAAAA,KAAK,EAAE,gBADM;AAEbC,kBAAAA,UAAU,EAAE,2BAAArC,UAAU,CAACJ,UAAX,CAAsB0C,IAAtB,CAA2B,UAACC,CAAD;AAAA,2BAAOA,CAAC,CAACT,KAAF,KAAYL,QAAnB;AAAA,mBAA3B,mFAAyDW,KAAzD,KAAkE,EAFjE;AAGbK,kBAAAA,QAAQ,EAAEtE,MAAM,CAAC6D,SAAD,CAAN,CAAkBG,MAAlB,CAAyB,YAAzB,CAHG;AAIbO,kBAAAA,MAAM,EAAEvE,MAAM,CAAC8D,OAAD,CAAN,CAAgBE,MAAhB,CAAuB,YAAvB;AAJK,iBAAD,CAAb;AAMA5C,gBAAAA,QAAQ,CAAC,SAAD,EAAYwB,GAAG,CAACG,IAAJ,CAASI,OAArB,CAAR;AACA;;AACD,kBAAIP,GAAG,CAACtB,MAAJ,KAAe,GAAnB,EAAwB;AACvBF,gBAAAA,QAAQ,CAAC,QAAD,EAAW,YAAX,CAAR;AACA;;AA1B6B;AAAA;;AAAA;AAAA;AAAA;AA4B9BA,cAAAA,QAAQ,CAAC,QAAD,EAAW,aAAM+B,OAAjB,CAAR;;AA5B8B;AAAA;AA8B9B3B,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,UADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AA9B8B;;AAAA;AAAA,gDAmCxBsB,GAnCwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAvB+D,uBAAuB;AAAA;AAAA;AAAA,KAA7B;;AAqCAzG,EAAAA,SAAS,CAAC,YAAM;AACf,QAAI2B,UAAU,CAACJ,UAAX,CAAsBuB,MAA1B,EAAkC;AACjC2D,MAAAA,uBAAuB,CAAC;AACvBrD,QAAAA,QAAQ,EAAEyD,QAAQ,CAAClF,UAAU,CAACJ,UAAX,CAAsB,CAAtB,EAAyBkC,KAAzB,CAA+Be,QAA/B,EAAD,CADK;AAEvBb,QAAAA,SAAS,EAAE7D,MAAM,GAAGgE,MAAT,CAAgB,YAAhB,CAFY;AAGvBF,QAAAA,OAAO,EAAE9D,MAAM,GAAGgH,GAAT,CAAa,CAAb,EAAgB,QAAhB,EAA0BhD,MAA1B,CAAiC,YAAjC;AAHc,OAAD,CAAvB;AAKA;AACD,GARQ,EAQN,CAACnC,UAAU,CAACJ,UAAZ,CARM,CAAT;;AASA,MAAMwF,cAAc,GAAG,SAAjBA,cAAiB,CAACpC,WAAD,EAAkD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,EAAE,GAAG,EAAX;;AACA,QAAMsB,cAAc,sBAAOvB,WAAP,CAApB;;AACA,SAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,cAAc,CAACpD,MAAnC,EAA2CqD,CAAC,EAA5C,EAAgD;AAC/C,UAAMtB,CAAC,GAAGqB,cAAc,CAACC,CAAD,CAAxB;AAD+C,UAEvCxC,SAFuC,GAEqBkB,CAFrB,CAEvClB,SAFuC;AAAA,UAE5BoC,WAF4B,GAEqBlB,CAFrB,CAE5BkB,WAF4B;AAAA,UAEfd,QAFe,GAEqBJ,CAFrB,CAEfI,QAFe;AAAA,UAELvB,MAFK,GAEqBmB,CAFrB,CAELnB,MAFK;AAAA,UAEGmC,aAFH,GAEqBhB,CAFrB,CAEGgB,aAFH;AAG/C,UAAMS,MAAM,GAAGxG,MAAM,CAAC6D,SAAD,CAAN,CAAkBG,MAAlB,CAAyB,YAAzB,CAAf;AACA,UAAMkD,UAAU,aAAMtD,MAAN,cAAgBuB,QAAhB,cAA4BvB,MAA5B,CAAhB;;AACA,UAAIkB,EAAE,CAAC0B,MAAD,CAAN,EAAgB;AACf,YAAI1B,EAAE,CAAC0B,MAAD,CAAF,CAAWU,UAAX,CAAJ,EAA4B;AAC3BpC,UAAAA,EAAE,CAAC0B,MAAD,CAAF,CAAWU,UAAX,EAAuBR,IAAvB,CAA4B3B,CAA5B;AACA,SAFD,MAEO;AACND,UAAAA,EAAE,CAAC0B,MAAD,CAAF,CAAWU,UAAX,IAAyB,CAACnC,CAAD,CAAzB;AACA;AACD,OAND,MAMO;AACND,QAAAA,EAAE,CAAC0B,MAAD,CAAF,GAAa,EAAb;AACAJ,QAAAA,cAAc,CAACM,IAAf,CAAoB3B,CAApB;AACA;AACD;;AACD,WAAOD,EAAP;AACA,GA5CD;;AA8CA,MAAMqC,MAAM,GAAG,SAATA,MAAS,CAAC9F,IAAD,EAAO+F,GAAP,EAAe;AAC7B,YAAQ/F,IAAR;AACC,WAAK,aAAL;AACC,eAAO4F,cAAc,CAACG,GAAD,CAArB;;AACD,WAAK,kBAAL;AACC,eAAOjB,oBAAoB,CAACiB,GAAD,CAA3B;;AACD;AACC;AANF;AAQA,GATD;;AAUA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,aADD,eAEC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACC,QAAC,IAAD;AACC,QAAA,KAAK,eACJ;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACC,QAAC,WAAD;AAAa,YAAA,SAAS,EAAE7F,SAAxB;AAAmC,YAAA,UAAU,EAAEM,UAA/C;AAA2D,YAAA,YAAY,EAAE8E;AAAzE;AAAA;AAAA;AAAA;AAAA,mBADD,eASC,QAAC,eAAD;AACC,YAAA,SAAS,EAAEpF,SADZ;AAEC,YAAA,UAAU,EAAEM,UAFb;AAGC,YAAA,kBAAkB,EAAE2B,sBAHrB;AAIC,YAAA,YAAY,EAAEgB;AAJf;AAAA;AAAA;AAAA;AAAA,mBATD,eAgBC,QAAC,qBAAD;AACC,YAAA,SAAS,EAAEjD,SADZ;AAEC,YAAA,UAAU,EAAEM,UAFb;AAGC,YAAA,kBAAkB,EAAE2B,sBAHrB;AAIC,YAAA,YAAY,EAAEwC;AAJf;AAAA;AAAA;AAAA;AAAA,mBAhBD;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA,+BA2BC,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,OAAX;AAAmB,UAAA,QAAQ,EAAEzE,SAAS,CAACF,IAAV,KAAmB,UAAnB,IAAiCE,SAAS,CAACD,MAAxE;AAAA,qBACEY,UAAU,iBACV;AAAI,YAAA,SAAS,EAAC,wBAAd;AAAA,uBACEA,UAAU,CAAC+B,KAAX,eAAwB/B,UAAU,CAAC+B,KAAnC,MADF,EAEE/B,UAAU,CAACgC,UAAX,eAA6BhC,UAAU,CAACgC,UAAxC,MAFF,EAGEhC,UAAU,CAACyC,WAAX,eAA8BzC,UAAU,CAACyC,WAAzC,MAHF,EAIEzC,UAAU,CAACmC,QAAX,eAA2BnC,UAAU,CAACmC,QAAtC,MAJF,SAIwDnC,UAAU,CAACoC,QAJnE,SAIgFpC,UAAU,CAACqC,MAJ3F;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EASEvC,QAAQ,CAACX,IAAT,KAAkB,aAAlB,IAAmCW,QAAQ,CAACX,IAAT,KAAkB,kBAArD,gBACA,QAAC,iBAAD;AAAmB,YAAA,UAAU,EAAE8F,MAAM,CAACnF,QAAQ,CAACX,IAAV,EAAgBW,QAAQ,CAACD,IAAzB;AAArC;AAAA;AAAA;AAAA;AAAA,mBADA,gBAGA,QAAC,UAAD;AAAY,YAAA,QAAQ,EAAE,IAAtB;AAA4B,YAAA,eAAe,EAAE,IAA7C;AAAmD,YAAA,SAAS,EAAE6C,UAAU,CAAC5C,QAAQ,CAACD,IAAV;AAAxE;AAAA;AAAA;AAAA;AAAA,mBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,aAFD;AAAA;AAAA;AAAA;AAAA;AAAA,WADD;AAkDA,CA/cD;;GAAMZ,a;UACgBP,O;;;KADhBO,a;AAgdN,eAAeA,aAAf","sourcesContent":["import { Card, Spin } from 'antd'\r\nimport moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport {\r\n\tbranchApi,\r\n\tcheckBranchScheduleStudy,\r\n\tcheckTeacherScheduleStudy,\r\n\tcourseDetailApi,\r\n\troomApi,\r\n\tstudyTimeApi,\r\n\tteacherApi\r\n} from '~/apiBase'\r\nimport TitlePage from '~/components/TitlePage'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { fmSelectArr } from '~/utils/functions'\r\nimport CDCalendar from '../CourseList/CourseListDetail/CourseDetailCalendar/Calendar'\r\nimport CheckBranch from './Form/CheckBranch'\r\nimport CheckOneTeacher from './Form/CheckOneTeacher'\r\nimport CheckManyEmptyTeacher from './Form/ManyTeacher'\r\nimport ScheduleStudyList from './List/List'\r\n\r\ntype IOptionList = {\r\n\tbranchList: IOptionCommon[]\r\n\tstudyTimeList: IOptionCommon[]\r\n\troomList: IOptionCommon[]\r\n\tteacherList: IOptionCommon[]\r\n}\r\ntype IDataList = {\r\n\tlist: ICourseDetailSchedule[]\r\n\ttype: string\r\n}\r\ntype infoSearch = {\r\n\ttitle: string\r\n\tbranchName?: string\r\n\troomName?: string\r\n\tteacherName?: string\r\n\tstudyTimeName?: string\r\n\tfromDate: string\r\n\ttoDate: string\r\n}\r\nconst ScheduleStudy = () => {\r\n\tconst { showNoti } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [optionList, setOptionList] = useState<IOptionList>({\r\n\t\tbranchList: [],\r\n\t\tstudyTimeList: [],\r\n\t\troomList: [],\r\n\t\tteacherList: []\r\n\t})\r\n\tconst [dataList, setDataList] = useState<IDataList>({\r\n\t\tlist: [],\r\n\t\ttype: ''\r\n\t})\r\n\tconst [infoSearch, setInfoSearch] = useState<infoSearch>(null)\r\n\tconst fetchData = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'FETCH_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tPromise.all([branchApi.getAll({ pageSize: 99999, pageIndex: 1 }), studyTimeApi.getAll({ selectAll: true })]).then((res) => {\r\n\t\t\t\tconst [branchList, studyTimeList] = res.map((r) => (r.status === 200 ? r.data.data : []))\r\n\t\t\t\tif (branchList.length) {\r\n\t\t\t\t\tsetOptionList((preState) => ({\r\n\t\t\t\t\t\t...preState,\r\n\t\t\t\t\t\tbranchList: fmSelectArr(branchList, 'BranchName', 'ID')\r\n\t\t\t\t\t}))\r\n\t\t\t\t}\r\n\t\t\t\tif (studyTimeList.length) {\r\n\t\t\t\t\tsetOptionList((preState) => ({\r\n\t\t\t\t\t\t...preState,\r\n\t\t\t\t\t\tstudyTimeList: fmSelectArr(studyTimeList, 'Name', 'ID')\r\n\t\t\t\t\t}))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchData()\r\n\t}, [])\r\n\r\n\tconst fetchRoomByBranchID = async (ID: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'FETCH_ROOM',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tconst res = await roomApi.getAll({ BranchID: ID, pageSize: 99999 })\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst fmRoomList = fmSelectArr(res.data.data, 'RoomName', 'RoomID')\r\n\t\t\t\tsetOptionList({\r\n\t\t\t\t\t...optionList,\r\n\t\t\t\t\troomList: fmRoomList\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetOptionList({\r\n\t\t\t\t\t...optionList,\r\n\t\t\t\t\troomList: []\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_ROOM',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tconst fetchTeacherByBranchID = async (ID: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'FETCH_TEACHER',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tconst res = await teacherApi.getAll({ BranchID: ID, pageSize: 99999 })\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst fmTeacherList = fmSelectArr(res.data.data, 'FullNameUnicode', 'UserInformationID')\r\n\t\t\t\tsetOptionList({\r\n\t\t\t\t\t...optionList,\r\n\t\t\t\t\tteacherList: fmTeacherList\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetOptionList({\r\n\t\t\t\t\t...optionList,\r\n\t\t\t\t\tteacherList: []\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_TEACHER',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// Room\r\n\tconst onCheckRoom = async (value: { BranchID: number; RoomID: number; StartTime: string; EndTime: string }) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\tlet res\r\n\t\ttry {\r\n\t\t\tconst { RoomID, StartTime, EndTime, BranchID } = value\r\n\t\t\tconst fmObj = {\r\n\t\t\t\tRoomID,\r\n\t\t\t\tStartTime: moment(StartTime).format('YYYY/MM/DD'),\r\n\t\t\t\tEndTime: moment(EndTime).format('YYYY/MM/DD')\r\n\t\t\t}\r\n\t\t\tres = await courseDetailApi.getAll(fmObj)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetInfoSearch({\r\n\t\t\t\t\ttitle: 'Kiểm tra phòng',\r\n\t\t\t\t\tbranchName: optionList.branchList.find((b) => b.value === BranchID)?.title || '',\r\n\t\t\t\t\troomName: optionList.roomList.find((b) => b.value === RoomID)?.title || '',\r\n\t\t\t\t\tfromDate: moment(StartTime).format('DD/MM/YYYY'),\r\n\t\t\t\t\ttoDate: moment(EndTime).format('DD/MM/YYYY')\r\n\t\t\t\t})\r\n\t\t\t\tsetDataList({ list: res.data.data, type: '' })\r\n\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', 'Không tìm thấy')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn res\r\n\t}\r\n\t// OneTeacher\r\n\ttype IGetTeacher = {\r\n\t\tBranchID: number\r\n\t\tTeacherID: number | Array<number>\r\n\t\tStudyTimeID: Array<number>\r\n\t\tStartTime: string\r\n\t\tEndTime: string\r\n\t}\r\n\tconst onCheckOneTeacher = async (value: IGetTeacher) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\tlet res\r\n\t\ttry {\r\n\t\t\tconst { TeacherID, StartTime, EndTime, BranchID } = value\r\n\t\t\tconst fmObj = {\r\n\t\t\t\tTeacherID: +TeacherID.toString(),\r\n\t\t\t\tStartTime: moment(StartTime).format('YYYY/MM/DD'),\r\n\t\t\t\tEndTime: moment(EndTime).format('YYYY/MM/DD')\r\n\t\t\t}\r\n\t\t\tres = await courseDetailApi.getAll(fmObj)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetInfoSearch({\r\n\t\t\t\t\ttitle: 'Lịch giáo viên',\r\n\t\t\t\t\tteacherName: optionList.teacherList.find((b) => b.value === TeacherID)?.title || '',\r\n\t\t\t\t\tbranchName: optionList.branchList.find((b) => b.value === BranchID)?.title || '',\r\n\t\t\t\t\tfromDate: moment(StartTime).format('DD/MM/YYYY'),\r\n\t\t\t\t\ttoDate: moment(EndTime).format('DD/MM/YYYY')\r\n\t\t\t\t})\r\n\t\t\t\tsetDataList({ list: res.data.data, type: '' })\r\n\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', 'Không tìm thấy')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn res\r\n\t}\r\n\t// CALENDAR FORMAT\r\n\tconst calendarFm = (calendarArr: ICourseDetailSchedule[]) => {\r\n\t\tconst rs = calendarArr.map((c, idx) => {\r\n\t\t\tconst { ID, CourseID, CourseName, RoomName, BranchName, TeacherName, SubjectName, StartTime, EndTime, LinkDocument } = c\r\n\t\t\tconst studyTimeStart = moment(StartTime).format('HH:mm')\r\n\t\t\tconst studyTimeEnd = moment(EndTime).format('HH:mm')\r\n\t\t\tconst studyTime = `${studyTimeStart} - ${studyTimeEnd}`\r\n\r\n\t\t\treturn {\r\n\t\t\t\tid: +ID,\r\n\t\t\t\ttitle: '',\r\n\t\t\t\tstart: moment(StartTime).toDate(),\r\n\t\t\t\tend: moment(EndTime).toDate(),\r\n\t\t\t\tresource: {\r\n\t\t\t\t\tID,\r\n\t\t\t\t\tCourseID,\r\n\t\t\t\t\tCourseName,\r\n\t\t\t\t\tRoomName,\r\n\t\t\t\t\tBranchName,\r\n\t\t\t\t\tTeacherName,\r\n\t\t\t\t\tSubjectName,\r\n\t\t\t\t\tLinkDocument,\r\n\t\t\t\t\t//\r\n\t\t\t\t\tStudyTimeName: studyTime\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn rs\r\n\t}\r\n\r\n\t// OTHER VIEW\r\n\t// ManyTeacher\r\n\tconst onCheckEmptyManyTeacher = async (value: IGetTeacher) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\tlet res\r\n\t\ttry {\r\n\t\t\tconst { TeacherID, StudyTimeID, StartTime, EndTime, BranchID } = value\r\n\t\t\tconst fmObj = {\r\n\t\t\t\tTeacherID: TeacherID.toString(),\r\n\t\t\t\tStudyTimeID: StudyTimeID.join(','),\r\n\t\t\t\tStartTime: moment(StartTime).format('YYYY/MM/DD'),\r\n\t\t\t\tEndTime: moment(EndTime).format('YYYY/MM/DD')\r\n\t\t\t}\r\n\t\t\tres = await checkTeacherScheduleStudy.getAll(fmObj)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetDataList({ list: res.data.data, type: 'CheckManyTeacher' })\r\n\t\t\t\tsetInfoSearch({\r\n\t\t\t\t\ttitle: 'Lịch nhiều giáo viên',\r\n\t\t\t\t\tbranchName: optionList.branchList.find((b) => b.value === BranchID)?.title || '',\r\n\t\t\t\t\tfromDate: moment(StartTime).format('DD/MM/YYYY'),\r\n\t\t\t\t\ttoDate: moment(EndTime).format('DD/MM/YYYY')\r\n\t\t\t\t})\r\n\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', 'Không tìm thấy')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn res\r\n\t}\r\n\tconst fmListOfEmptyTeacher = (calendarArr: ICheckTeacherScheduleStudy[]) => {\r\n\t\t// rs = {\r\n\t\t//     \"2021/08/11\": {\r\n\t\t//         \"21-Ca 08:00 - 10:00\": [\r\n\t\t//             {\r\n\t\t//                 \"TeacherID\": 1236,\r\n\t\t//                 \"TeacherName\": \"Kim Bảo 98\",\r\n\t\t//                 \"StudyTimeID\": 21,\r\n\t\t//                 \"StudyTimeName\": \"Ca 08:00 - 10:00\",\r\n\t\t//                 \"Date\": \"2021-08-11T00:00:00\",\r\n\t\t//                 \"StartTime\": \"2021-08-11T08:00:00\",\r\n\t\t//                 \"EndTime\": \"2021-08-11T10:00:00\"\r\n\t\t//             },\r\n\t\t//         ],\r\n\t\t//     }\r\n\t\t// }\r\n\t\tconst rs = {}\r\n\t\tconst newCalendarArr = [...calendarArr]\r\n\t\tfor (let i = 0; i < newCalendarArr.length; i++) {\r\n\t\t\tconst c = newCalendarArr[i]\r\n\t\t\tconst { Date, StudyTimeID, StudyTimeName, StartTime } = c\r\n\t\t\tconst fmDateTimeStamp = moment(StartTime).format('X')\r\n\t\t\tconst fmDate = moment(Date).format('YYYY/MM/DD')\r\n\t\t\tconst fmStudyTime = `${StudyTimeID}-${StudyTimeName}-${fmDateTimeStamp}`\r\n\t\t\tif (rs[fmDate]) {\r\n\t\t\t\tif (rs[fmDate][fmStudyTime]) {\r\n\t\t\t\t\trs[fmDate][fmStudyTime].push(c)\r\n\t\t\t\t} else {\r\n\t\t\t\t\trs[fmDate][fmStudyTime] = [c]\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\trs[fmDate] = {}\r\n\t\t\t\tnewCalendarArr.push(c)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rs\r\n\t}\r\n\r\n\t// ============================================================================\r\n\t// ============================================================================\r\n\t// ============================================================================\r\n\t// ============================================================================\r\n\t// ============================================================================\r\n\t// ============================================================================\r\n\r\n\t//Branch\r\n\tconst onCheckScheduleOfBranch = async (value: { BranchID: number; StartTime: string; EndTime: string }) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\tlet res\r\n\t\ttry {\r\n\t\t\tconst { BranchID, StartTime, EndTime } = value\r\n\t\t\tconst fmObj = {\r\n\t\t\t\tbranchId: BranchID,\r\n\t\t\t\tfrom: moment(StartTime).format('YYYY/MM/DD'),\r\n\t\t\t\tto: moment(EndTime).format('YYYY/MM/DD')\r\n\t\t\t}\r\n\t\t\tres = await checkBranchScheduleStudy.getAll(fmObj)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetDataList({ list: res.data.data, type: 'CheckBranch' })\r\n\t\t\t\tsetInfoSearch({\r\n\t\t\t\t\ttitle: 'Lịch trung tâm',\r\n\t\t\t\t\tbranchName: optionList.branchList.find((b) => b.value === BranchID)?.title || '',\r\n\t\t\t\t\tfromDate: moment(StartTime).format('DD/MM/YYYY'),\r\n\t\t\t\t\ttoDate: moment(EndTime).format('DD/MM/YYYY')\r\n\t\t\t\t})\r\n\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', 'Lịch trống')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn res\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tif (optionList.branchList.length) {\r\n\t\t\tonCheckScheduleOfBranch({\r\n\t\t\t\tBranchID: parseInt(optionList.branchList[0].value.toString()),\r\n\t\t\t\tStartTime: moment().format('YYYY/MM/DD'),\r\n\t\t\t\tEndTime: moment().add(1, 'months').format('YYYY/MM/DD')\r\n\t\t\t})\r\n\t\t}\r\n\t}, [optionList.branchList])\r\n\tconst fmListOfBranch = (calendarArr: ICheckBranchScheduleStudyData[]) => {\r\n\t\t// rs = {\r\n\t\t// \t\t'2021/08/13': {\r\n\t\t// \t\t\t'31-Phòng 1-31': [\r\n\t\t// \t\t\t\t{\r\n\t\t// \t\t\t\t\tRoomID: 31,\r\n\t\t// \t\t\t\t\tRoomName: 'Phòng 1',\r\n\t\t// \t\t\t\t\tStudyTimeID: 21,\r\n\t\t// \t\t\t\t\tStudyTimeName: 'Ca 08:00 - 10:00',\r\n\t\t// \t\t\t\t\tStartTime: '2021-08-13T08:00:00',\r\n\t\t// \t\t\t\t\tEndTime: '2021-08-13T10:00:00',\r\n\t\t// \t\t\t\t},\r\n\t\t// \t\t\t],\r\n\t\t// \t\t\t'32-Phòng 2-32': [\r\n\t\t// \t\t\t\t{\r\n\t\t// \t\t\t\t\tRoomID: 32,\r\n\t\t// \t\t\t\t\tRoomName: 'Phòng 2',\r\n\t\t// \t\t\t\t\tStudyTimeID: 27,\r\n\t\t// \t\t\t\t\tStudyTimeName: 'Ca 14:00 - 16:00',\r\n\t\t// \t\t\t\t\tStartTime: '2021-08-13T14:00:00',\r\n\t\t// \t\t\t\t\tEndTime: '2021-08-13T16:00:00',\r\n\t\t// \t\t\t\t},\r\n\t\t// \t\t\t],\r\n\t\t// \t\t},\r\n\t\t// \t};\r\n\t\tconst rs = {}\r\n\t\tconst newCalendarArr = [...calendarArr]\r\n\t\tfor (let i = 0; i < newCalendarArr.length; i++) {\r\n\t\t\tconst c = newCalendarArr[i]\r\n\t\t\tconst { StartTime, StudyTimeID, RoomName, RoomID, StudyTimeName } = c\r\n\t\t\tconst fmDate = moment(StartTime).format('YYYY/MM/DD')\r\n\t\t\tconst fmRoomName = `${RoomID}-${RoomName}-${RoomID}`\r\n\t\t\tif (rs[fmDate]) {\r\n\t\t\t\tif (rs[fmDate][fmRoomName]) {\r\n\t\t\t\t\trs[fmDate][fmRoomName].push(c)\r\n\t\t\t\t} else {\r\n\t\t\t\t\trs[fmDate][fmRoomName] = [c]\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\trs[fmDate] = {}\r\n\t\t\t\tnewCalendarArr.push(c)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rs\r\n\t}\r\n\r\n\tconst fmList = (type, arr) => {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'CheckBranch':\r\n\t\t\t\treturn fmListOfBranch(arr)\r\n\t\t\tcase 'CheckManyTeacher':\r\n\t\t\t\treturn fmListOfEmptyTeacher(arr)\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<TitlePage title=\"Kiểm tra lịch học\" />\r\n\t\t\t<div className=\"col-12\">\r\n\t\t\t\t<Card\r\n\t\t\t\t\textra={\r\n\t\t\t\t\t\t<div className=\"card-list-btn\">\r\n\t\t\t\t\t\t\t<CheckBranch isLoading={isLoading} optionList={optionList} handleSubmit={onCheckScheduleOfBranch} />\r\n\t\t\t\t\t\t\t{/* */}\r\n\t\t\t\t\t\t\t{/* <CheckRoom\r\n\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\toptionList={optionList}\r\n\t\t\t\t\t\t\t\thandleFetchRoom={fetchRoomByBranchID}\r\n\t\t\t\t\t\t\t\thandleSubmit={onCheckRoom}\r\n\t\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t\t<CheckOneTeacher\r\n\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\toptionList={optionList}\r\n\t\t\t\t\t\t\t\thandleFetchTeacher={fetchTeacherByBranchID}\r\n\t\t\t\t\t\t\t\thandleSubmit={onCheckOneTeacher}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{/* */}\r\n\t\t\t\t\t\t\t<CheckManyEmptyTeacher\r\n\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\toptionList={optionList}\r\n\t\t\t\t\t\t\t\thandleFetchTeacher={fetchTeacherByBranchID}\r\n\t\t\t\t\t\t\t\thandleSubmit={onCheckEmptyManyTeacher}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" spinning={isLoading.type === 'ADD_DATA' && isLoading.status}>\r\n\t\t\t\t\t\t{infoSearch && (\r\n\t\t\t\t\t\t\t<h4 className=\"font-weight-black mb-3\">\r\n\t\t\t\t\t\t\t\t{infoSearch.title && `[${infoSearch.title}]`}\r\n\t\t\t\t\t\t\t\t{infoSearch.branchName && `[${infoSearch.branchName}]`}\r\n\t\t\t\t\t\t\t\t{infoSearch.teacherName && `[${infoSearch.teacherName}]`}\r\n\t\t\t\t\t\t\t\t{infoSearch.roomName && `[${infoSearch.roomName}]`} | {infoSearch.fromDate} - {infoSearch.toDate}\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{dataList.type === 'CheckBranch' || dataList.type === 'CheckManyTeacher' ? (\r\n\t\t\t\t\t\t\t<ScheduleStudyList dataSource={fmList(dataList.type, dataList.list)} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<CDCalendar isLoaded={true} isGetRecordList={true} eventList={calendarFm(dataList.list)} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Spin>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default ScheduleStudy\r\n"]},"metadata":{},"sourceType":"module"}
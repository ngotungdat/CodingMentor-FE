{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Option\\\\ProgramDetail\\\\AddExamForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Modal, Tooltip, Divider, Button } from 'antd';\nimport { curriculumDetailApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport { Select } from 'antd';\nimport { Info } from 'react-feather';\nvar Option = Select.Option;\n\nvar AddExamForm = function AddExamForm(props) {\n  _s();\n\n  var dataRow = props.dataRow,\n      dataExamTopic = props.dataExamTopic,\n      onFetchData = props.onFetchData,\n      currentCheckID = props.currentCheckID,\n      disable = props.disable;\n\n  var _useState = useState(false),\n      isModalVisible = _useState[0],\n      setIsModalVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(dataRow.ExamTopicID && dataRow.ExamTopicID !== 0 ? dataRow.ExamTopicID : null),\n      ExamID = _useState3[0],\n      setExamID = _useState3[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var showModal = function showModal() {\n    setIsModalVisible(true);\n  };\n\n  var handleOk = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!disable) {\n                _context.next = 4;\n                break;\n              }\n\n              setIsModalVisible(false);\n              _context.next = 18;\n              break;\n\n            case 4:\n              setIsLoading(true);\n              _context.prev = 5;\n              _context.next = 8;\n              return curriculumDetailApi.update({\n                ID: dataRow.ID,\n                ExamTopicID: ExamID,\n                IsExam: true\n              });\n\n            case 8:\n              res = _context.sent;\n\n              if (res.status == 200) {\n                showNoti('success', 'Cập nhật đề kiểm tra thành công');\n                setIsModalVisible(false);\n                onFetchData && onFetchData();\n              } else {\n                showNoti('danger', 'Đường truyền mạng đang không ổn định');\n              }\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](5);\n              showNoti('danger', _context.t0.message);\n\n            case 15:\n              _context.prev = 15;\n              setIsLoading(false);\n              return _context.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 12, 15, 18]]);\n    }));\n\n    return function handleOk() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleCancel = function handleCancel() {\n    setIsModalVisible(false);\n  };\n\n  var handleChange_SelectExam = function handleChange_SelectExam(value) {\n    setExamID(value);\n  };\n\n  useEffect(function () {\n    if (currentCheckID == dataRow.ID) {\n      showModal();\n    }\n  }, [currentCheckID]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-icon\",\n      onClick: showModal,\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Xem th\\xF4ng tin\",\n        children: /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Th\\xEAm \\u0111\\u1EC1 ki\\u1EC3m tra\",\n      visible: isModalVisible,\n      okText: disable ? 'OK' : 'LƯU',\n      cancelText: \"H\\u1EE7y\",\n      cancelButtonProps: null,\n      okButtonProps: {\n        loading: isLoading\n      },\n      onOk: handleOk,\n      footer: null,\n      onCancel: handleCancel,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black mb-2\",\n        children: \"Ch\\u1ECDn \\u0111\\u1EC1 ki\\u1EC3m tra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(Select, {\n        value: ExamID,\n        className: \"style-input\",\n        onChange: handleChange_SelectExam,\n        disabled: disable == true ? true : false,\n        children: dataExamTopic === null || dataExamTopic === void 0 ? void 0 : dataExamTopic.map(function (item) {\n          return /*#__PURE__*/_jsxDEV(Option, {\n            value: item.ID,\n            children: item.Name\n          }, item.ID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(Divider, {\n        style: {\n          width: 550,\n          marginLeft: -25,\n          marginRight: -25,\n          marginBottom: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          width: '100%',\n          alignItems: 'flex-end',\n          justifyContent: 'flex-end'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleOk,\n          className: \"btn btn-primary\",\n          style: {\n            marginTop: 15,\n            marginBottom: -7\n          },\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(AddExamForm, \"12BXei9ltxrSkj1KRNOSztjyAkw=\", false, function () {\n  return [useWrap];\n});\n\n_c = AddExamForm;\nexport default AddExamForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddExamForm\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Option/ProgramDetail/AddExamForm.tsx"],"names":["React","useEffect","useState","Modal","Tooltip","Divider","Button","curriculumDetailApi","useWrap","Select","Info","Option","AddExamForm","props","dataRow","dataExamTopic","onFetchData","currentCheckID","disable","isModalVisible","setIsModalVisible","isLoading","setIsLoading","ExamTopicID","ExamID","setExamID","showNoti","showModal","handleOk","update","ID","IsExam","res","status","message","handleCancel","handleChange_SelectExam","value","loading","map","item","Name","width","marginLeft","marginRight","marginBottom","display","alignItems","justifyContent","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Modal, Tooltip, Divider, Button } from 'antd';\r\nimport { curriculumDetailApi } from '~/apiBase';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { Select } from 'antd';\r\nimport { Info } from 'react-feather';\r\n\r\nconst { Option } = Select;\r\n\r\nconst AddExamForm = (props) => {\r\n\tconst { dataRow, dataExamTopic, onFetchData, currentCheckID, disable } = props;\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [ExamID, setExamID] = useState(dataRow.ExamTopicID && dataRow.ExamTopicID !== 0 ? dataRow.ExamTopicID : null);\r\n\tconst { showNoti } = useWrap();\r\n\r\n\tconst showModal = () => {\r\n\t\tsetIsModalVisible(true);\r\n\t};\r\n\r\n\tconst handleOk = async () => {\r\n\t\tif (disable) {\r\n\t\t\tsetIsModalVisible(false);\r\n\t\t} else {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await curriculumDetailApi.update({ ID: dataRow.ID, ExamTopicID: ExamID, IsExam: true });\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tshowNoti('success', 'Cập nhật đề kiểm tra thành công');\r\n\t\t\t\t\tsetIsModalVisible(false);\r\n\t\t\t\t\tonFetchData && onFetchData();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tshowNoti('danger', 'Đường truyền mạng đang không ổn định');\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false);\r\n\t};\r\n\r\n\tconst handleChange_SelectExam = (value) => {\r\n\t\tsetExamID(value);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentCheckID == dataRow.ID) {\r\n\t\t\tshowModal();\r\n\t\t}\r\n\t}, [currentCheckID]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button className=\"btn btn-icon\" onClick={showModal}>\r\n\t\t\t\t<Tooltip title=\"Xem thông tin\">\r\n\t\t\t\t\t<Info />\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</button>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Thêm đề kiểm tra\"\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tokText={disable ? 'OK' : 'LƯU'}\r\n\t\t\t\tcancelText=\"Hủy\"\r\n\t\t\t\tcancelButtonProps={null}\r\n\t\t\t\tokButtonProps={{ loading: isLoading }}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t>\r\n\t\t\t\t<p className=\"font-weight-black mb-2\">Chọn đề kiểm tra</p>\r\n\t\t\t\t<Select value={ExamID} className=\"style-input\" onChange={handleChange_SelectExam} disabled={disable == true ? true : false}>\r\n\t\t\t\t\t{dataExamTopic?.map((item) => (\r\n\t\t\t\t\t\t<Option key={item.ID} value={item.ID}>\r\n\t\t\t\t\t\t\t{item.Name}\r\n\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t\t<Divider style={{ width: 550, marginLeft: -25, marginRight: -25, marginBottom: 0 }} />\r\n\t\t\t\t<div style={{ display: 'flex', width: '100%', alignItems: 'flex-end', justifyContent: 'flex-end' }}>\r\n\t\t\t\t\t<Button onClick={handleOk} className=\"btn btn-primary\" style={{ marginTop: 15, marginBottom: -7 }}>\r\n\t\t\t\t\t\tOK\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AddExamForm;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\notification\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport PowerTable from '~/components/PowerTable';\nimport LayoutBase from '~/components/LayoutBase';\nimport { AlertCircle } from 'react-feather';\nimport { notificationApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport moment from 'moment';\nimport { Checkbox, Tooltip } from 'antd';\nimport ReactHtmlParser from 'react-html-parser';\nimport Modal from 'antd/lib/modal/Modal';\nconst listTodoApi = {\n  pageSize: 10,\n  pageIndex: 1,\n  IsPagination: true\n};\n\nconst Notification = () => {\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    0: dataTable,\n    1: setDataTable\n  } = useState();\n  const {\n    0: contentRow,\n    1: setContentRow\n  } = useState({\n    ID: null,\n    content: null,\n    title: null,\n    status: null\n  });\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi); // GET DATA\n\n  const getDataTable = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await notificationApi.getAllWithUser(todoApi);\n\n      if (res.status == 200) {\n        setDataTable(res.data);\n      }\n\n      if (res.status == 204) {\n        showNoti('danger', 'Không có dữ liệu');\n        console.log(`%c - Noti 204:` + `%c Không tìm thấy thông báo nào`, 'color: red; font-weight: bold', 'color: yellow;');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // PAGINATION\n\n\n  const getPagination = pageNumber => {\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      pageIndex: pageNumber\n    }));\n  };\n\n  const _onSubmit = async data => {\n    setIsLoading({\n      type: 'UPDATE_DATA',\n      status: true\n    });\n    let res = null;\n\n    try {\n      var _res;\n\n      res = await notificationApi.updateSeen(data);\n\n      if (((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200) {\n        showNoti('success', 'Cập nhật thành công');\n        getDataTable();\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n    }\n\n    return res;\n  };\n\n  const onChange = e => {\n    const data = {\n      ID: e.target.value\n    };\n\n    _onSubmit(data);\n  };\n\n  const columns = [{\n    title: () => /*#__PURE__*/_jsxDEV(Checkbox, {\n      value: 0,\n      onChange: onChange,\n      defaultChecked: false,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"color-white\",\n        children: \"\\u0110\\xE3 xem t\\u1EA5t c\\u1EA3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this),\n    dataIndex: 'Status',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: text == 0 ? /*#__PURE__*/_jsxDEV(Checkbox, {\n        className: \"uncheck\",\n        value: record.ID,\n        onChange: onChange,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u0110\\xE3 xem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: true,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u0110\\xE3 xem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)\n  }, {\n    title: 'Tên thông báo',\n    dataIndex: 'NotificationTitle',\n    render: text => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Nội dung thông báo',\n    dataIndex: 'NotificationContent',\n    render: text => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-notification\",\n      children: ReactHtmlParser(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Thời gian',\n    dataIndex: 'CreatedOn',\n    render: date => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"font-weight-primary\",\n      children: moment(date).format('DD/MM/YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 22\n    }, this)\n  }, {\n    render: record => /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Chi ti\\u1EBFt\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-icon delete\",\n        onClick: () => {\n          setIsModalVisible(true);\n          setContentRow({\n            ID: record.ID,\n            content: record.NotificationContent,\n            title: record.NotificationTitle,\n            status: record.Status\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(AlertCircle, {\n          color: \"#32c6a4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this)\n  }];\n  useEffect(() => {\n    getDataTable();\n  }, [todoApi]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      title: /*#__PURE__*/_jsxDEV(AlertCircle, {\n        color: \"#32c6a4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 12\n      }, this),\n      visible: isModalVisible,\n      onOk: () => {\n        setIsModalVisible(false);\n        contentRow.status == 0 && _onSubmit({\n          ID: contentRow.ID\n        });\n      },\n      onCancel: () => {\n        setIsModalVisible(false);\n        contentRow.status == 0 && _onSubmit({\n          ID: contentRow.ID\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: contentRow.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ReactHtmlParser(contentRow.content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PowerTable, {\n      loading: isLoading,\n      currentPage: currentPage,\n      totalPage: (dataTable === null || dataTable === void 0 ? void 0 : dataTable.totalRow) && (dataTable === null || dataTable === void 0 ? void 0 : dataTable.totalRow),\n      getPagination: pageNumber => getPagination(pageNumber),\n      addClass: \"basic-header\",\n      TitlePage: \"Danh s\\xE1ch th\\xF4ng b\\xE1o\",\n      dataSource: dataTable === null || dataTable === void 0 ? void 0 : dataTable.data,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nNotification.layout = LayoutBase;\nexport default Notification;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/notification/index.tsx"],"names":["React","useEffect","useState","PowerTable","LayoutBase","AlertCircle","notificationApi","useWrap","moment","Checkbox","Tooltip","ReactHtmlParser","Modal","listTodoApi","pageSize","pageIndex","IsPagination","Notification","showNoti","dataTable","setDataTable","contentRow","setContentRow","ID","content","title","status","isModalVisible","setIsModalVisible","isLoading","setIsLoading","type","currentPage","setCurrentPage","todoApi","setTodoApi","getDataTable","res","getAllWithUser","data","console","log","error","message","getPagination","pageNumber","_onSubmit","updateSeen","onChange","e","target","value","columns","dataIndex","render","text","record","date","format","NotificationContent","NotificationTitle","Status","totalRow","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport { AlertCircle } from 'react-feather'\r\nimport { notificationApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\nimport moment from 'moment'\r\nimport { Checkbox, Tooltip } from 'antd'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport Modal from 'antd/lib/modal/Modal'\r\n\r\nconst listTodoApi = {\r\n\tpageSize: 10,\r\n\tpageIndex: 1,\r\n\tIsPagination: true\r\n}\r\n\r\nconst Notification = () => {\r\n\tconst { showNoti } = useWrap()\r\n\r\n\tconst [dataTable, setDataTable] = useState<any>()\r\n\tconst [contentRow, setContentRow] = useState({ ID: null, content: null, title: null, status: null })\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst [isLoading, setIsLoading] = useState({ type: '', status: false })\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// GET DATA\r\n\tconst getDataTable = async () => {\r\n\t\tsetIsLoading({ type: 'GET_ALL', status: true })\r\n\t\ttry {\r\n\t\t\tlet res = await notificationApi.getAllWithUser(todoApi)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetDataTable(res.data)\r\n\t\t\t}\r\n\t\t\tif (res.status == 204) {\r\n\t\t\t\tshowNoti('danger', 'Không có dữ liệu')\r\n\t\t\t\tconsole.log(`%c - Noti 204:` + `%c Không tìm thấy thông báo nào`, 'color: red; font-weight: bold', 'color: yellow;')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'GET_ALL', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({ ...todoApi, pageIndex: pageNumber })\r\n\t}\r\n\r\n\tconst _onSubmit = async (data: any) => {\r\n\t\tsetIsLoading({ type: 'UPDATE_DATA', status: true })\r\n\t\tlet res = null\r\n\t\ttry {\r\n\t\t\tres = await notificationApi.updateSeen(data)\r\n\t\t\tif (res?.status == 200) {\r\n\t\t\t\tshowNoti('success', 'Cập nhật thành công')\r\n\t\t\t\tgetDataTable()\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'ADD_DATA', status: false })\r\n\t\t}\r\n\t\treturn res\r\n\t}\r\n\r\n\tconst onChange = (e) => {\r\n\t\tconst data = { ID: e.target.value }\r\n\t\t_onSubmit(data)\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: () => (\r\n\t\t\t\t<Checkbox value={0} onChange={onChange} defaultChecked={false}>\r\n\t\t\t\t\t<span className=\"color-white\">Đã xem tất cả</span>\r\n\t\t\t\t</Checkbox>\r\n\t\t\t),\r\n\t\t\tdataIndex: 'Status',\r\n\t\t\trender: (text, record) => (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{text == 0 ? (\r\n\t\t\t\t\t\t<Checkbox className=\"uncheck\" value={record.ID} onChange={onChange}>\r\n\t\t\t\t\t\t\t<span>Đã xem</span>\r\n\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Checkbox checked>\r\n\t\t\t\t\t\t\t<span>Đã xem</span>\r\n\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tên thông báo',\r\n\t\t\tdataIndex: 'NotificationTitle',\r\n\t\t\trender: (text) => <span className=\"font-weight-black\">{text}</span>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Nội dung thông báo',\r\n\t\t\tdataIndex: 'NotificationContent',\r\n\t\t\trender: (text) => <div className=\"content-notification\">{ReactHtmlParser(text)}</div>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Thời gian',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\trender: (date) => <span className=\"font-weight-primary\">{moment(date).format('DD/MM/YYYY')}</span>\r\n\t\t},\r\n\t\t{\r\n\t\t\trender: (record) => (\r\n\t\t\t\t<Tooltip title=\"Chi tiết\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn btn-icon delete\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetIsModalVisible(true)\r\n\t\t\t\t\t\t\tsetContentRow({\r\n\t\t\t\t\t\t\t\tID: record.ID,\r\n\t\t\t\t\t\t\t\tcontent: record.NotificationContent,\r\n\t\t\t\t\t\t\t\ttitle: record.NotificationTitle,\r\n\t\t\t\t\t\t\t\tstatus: record.Status\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<AlertCircle color=\"#32c6a4\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataTable()\r\n\t}, [todoApi])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={<AlertCircle color=\"#32c6a4\" />}\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\t\tcontentRow.status == 0 && _onSubmit({ ID: contentRow.ID })\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\t\tcontentRow.status == 0 && _onSubmit({ ID: contentRow.ID })\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<h4>{contentRow.title}</h4>\r\n\t\t\t\t<div>{ReactHtmlParser(contentRow.content)}</div>\r\n\t\t\t</Modal>\r\n\t\t\t<PowerTable\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={dataTable?.totalRow && dataTable?.totalRow}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Danh sách thông báo\"\r\n\t\t\t\tdataSource={dataTable?.data}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nNotification.layout = LayoutBase\r\nexport default Notification\r\n"]},"metadata":{},"sourceType":"module"}
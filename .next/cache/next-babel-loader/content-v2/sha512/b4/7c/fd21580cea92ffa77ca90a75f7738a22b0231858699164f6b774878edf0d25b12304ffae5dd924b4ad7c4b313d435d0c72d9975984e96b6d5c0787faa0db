{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\option\\\\grade\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport PowerTable from '~/components/PowerTable';\nimport { Tooltip, Switch } from 'antd';\nimport GradeForm from '~/components/Global/Option/GradeForm';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport SortBox from '~/components/Elements/SortBox';\nimport LayoutBase from '~/components/LayoutBase';\nimport { gradeApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport moment from 'moment';\nvar pageIndex = 1;\nvar listFieldSearch = {\n  pageIndex: 1,\n  GradeCode: null,\n  GradeName: null\n};\nvar dataOption = [{\n  dataSort: {\n    sort: 0,\n    sortType: false\n  },\n  text: 'Tên giảm dần'\n}, {\n  dataSort: {\n    sort: 0,\n    sortType: true\n  },\n  text: 'Tên tăng dần '\n}];\n\nvar Grade = function Grade() {\n  _s();\n\n  // ------ BASE USESTATE TABLE -------\n  var _useState = useState([]),\n      dataSource = _useState[0],\n      setDataSource = _useState[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      pageSize = _useWrap.pageSize;\n\n  var _useState2 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      totalPage = _useState3[0],\n      setTotalPage = _useState3[1];\n\n  var _useState4 = useState(null),\n      indexRow = _useState4[0],\n      setIndexRow = _useState4[1];\n\n  var _useState5 = useState(1),\n      currentPage = _useState5[0],\n      setCurrentPage = _useState5[1];\n\n  var listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    sort: null,\n    sortType: null,\n    GradeCode: null,\n    GradeName: null\n  };\n\n  var _useState6 = useState(listTodoApi),\n      todoApi = _useState6[0],\n      setTodoApi = _useState6[1]; // GET DATA SOURCE\n\n\n  var getDataSource = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return gradeApi.getAll(todoApi);\n\n            case 4:\n              res = _context.sent;\n              res.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow), showNoti('success', 'Thành công'));\n              res.status == 204 && showNoti('danger', 'Không có dữ liệu') && setDataSource([]);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              showNoti('danger', _context.t0.message);\n\n            case 12:\n              _context.prev = 12;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function getDataSource() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // ---------------- AFTER SUBMIT -----------------\n\n\n  var afterPost = function afterPost(mes) {\n    showNoti('success', mes);\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // ----------------- ON SUBMIT --------------------\n\n\n  var _onSubmit2 = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dataSubmit) {\n      var res, newDataSource, _res;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              res = null;\n\n              if (!dataSubmit.ID) {\n                _context2.next = 19;\n                break;\n              }\n\n              _context2.prev = 3;\n              _context2.next = 6;\n              return gradeApi.update(dataSubmit);\n\n            case 6:\n              res = _context2.sent;\n\n              if (res.status == 200) {\n                newDataSource = _toConsumableArray(dataSource);\n                newDataSource.splice(indexRow, 1, dataSubmit);\n                setDataSource(newDataSource);\n                showNoti('success', res.data.message);\n              }\n\n              _context2.next = 14;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.log('error: ', _context2.t0);\n              showNoti('danger', _context2.t0.message);\n\n            case 14:\n              _context2.prev = 14;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context2.finish(14);\n\n            case 17:\n              _context2.next = 32;\n              break;\n\n            case 19:\n              _context2.prev = 19;\n              _context2.next = 22;\n              return gradeApi.add(dataSubmit);\n\n            case 22:\n              res = _context2.sent;\n              ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && afterPost(res.data.message);\n              _context2.next = 29;\n              break;\n\n            case 26:\n              _context2.prev = 26;\n              _context2.t1 = _context2[\"catch\"](19);\n              showNoti('danger', _context2.t1.message);\n\n            case 29:\n              _context2.prev = 29;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context2.finish(29);\n\n            case 32:\n              return _context2.abrupt(\"return\", res);\n\n            case 33:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 10, 14, 17], [19, 26, 29, 32]]);\n    }));\n\n    return function _onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // ----------------- TURN OF ------------------------\n\n\n  var changeStatus = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(checked, idRow) {\n      var dataChange, res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              dataChange = {\n                ID: idRow,\n                Enable: checked\n              };\n              _context3.prev = 2;\n              _context3.next = 5;\n              return gradeApi.update(dataChange);\n\n            case 5:\n              res = _context3.sent;\n              res.status == 200 && setTodoApi(_objectSpread({}, todoApi));\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](2);\n              showNoti('danger', _context3.t0.Message);\n\n            case 12:\n              _context3.prev = 12;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context3.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 9, 12, 15]]);\n    }));\n\n    return function changeStatus(_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // --------------- HANDLE SORT ----------------------\n\n\n  var _handleSort = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(option) {\n      var newTodoApi;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n                pageIndex: 1,\n                sort: option.title.sort,\n                sortType: option.title.sortType\n              });\n              setCurrentPage(1), setTodoApi(newTodoApi);\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleSort(_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // ------------ ON SEARCH -----------------------\n\n\n  var checkField = function checkField(valueSearch, dataIndex) {\n    var newList = _objectSpread({}, listFieldSearch);\n\n    Object.keys(newList).forEach(function (key) {\n      console.log('key: ', key);\n\n      if (key != dataIndex) {\n        if (key != 'pageIndex') {\n          newList[key] = null;\n        }\n      } else {\n        newList[key] = valueSearch;\n      }\n    });\n    console.log('new list: ', newList);\n    return newList;\n  };\n\n  console.log('Todo API: ', todoApi);\n  console.log('list search: ', listFieldSearch);\n\n  var onSearch = function onSearch(valueSearch, dataIndex) {\n    var clearKey = checkField(valueSearch, dataIndex);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), clearKey));\n  }; // HANDLE RESET\n\n\n  var resetListFieldSearch = function resetListFieldSearch() {\n    Object.keys(listFieldSearch).forEach(function (key) {\n      if (key != 'pageIndex') {\n        listFieldSearch[key] = null;\n      }\n    });\n  };\n\n  var handleReset = function handleReset() {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1), resetListFieldSearch();\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  var _getPagination = function getPagination(pageNumber) {\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      // ...listFieldSearch,\n      pageIndex: pageIndex\n    }));\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(function () {\n    getDataSource();\n  }, [todoApi]); // Columns\n\n  var columns = [_objectSpread({\n    title: 'Mã khối',\n    dataIndex: 'GradeCode'\n  }, FilterColumn('GradeCode', onSearch, handleReset, 'text')), _objectSpread({\n    title: 'Tên khối',\n    dataIndex: 'GradeName'\n  }, FilterColumn('GradeName', onSearch, handleReset, 'text')), {\n    title: 'Ghi chú',\n    dataIndex: 'Description'\n  }, {\n    title: 'Tạo ngày',\n    dataIndex: 'CreatedOn',\n    render: function render(date) {\n      return moment(date).format('DD/MM/YYYY');\n    }\n  }, {\n    title: 'Trạng thái',\n    dataIndex: 'Enable',\n    render: function render(Enable, record) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          checkedChildren: \"Hi\\u1EC7n\",\n          unCheckedChildren: \"\\u1EA8n\",\n          checked: Enable,\n          size: \"default\",\n          onChange: function onChange(checked) {\n            return changeStatus(checked, record.ID);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false);\n    }\n  }, {\n    render: function render(text, data, index) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"C\\u1EADp nh\\u1EADt trung t\\xE2m\",\n          children: /*#__PURE__*/_jsxDEV(GradeForm, {\n            getIndex: function getIndex() {\n              return setIndexRow(index);\n            },\n            index: index,\n            rowData: data,\n            rowID: data.ID,\n            isLoading: isLoading,\n            _onSubmit: function _onSubmit(data) {\n              return _onSubmit2(data);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PowerTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: function getPagination(pageNumber) {\n        return _getPagination(pageNumber);\n      },\n      loading: isLoading,\n      addClass: \"basic-header\",\n      TitlePage: \"Danh s\\xE1ch kh\\u1ED1i h\\u1ECDc\",\n      TitleCard: /*#__PURE__*/_jsxDEV(GradeForm, {\n        isLoading: isLoading,\n        _onSubmit: function _onSubmit(data) {\n          return _onSubmit2(data);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 16\n      }, _this),\n      dataSource: dataSource,\n      columns: columns,\n      Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: /*#__PURE__*/_jsxDEV(SortBox, {\n          handleSort: function handleSort(value) {\n            return _handleSort(value);\n          },\n          dataOption: dataOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Grade, \"xmpYEc2xVNbCF/if+CPLDzi8r6c=\", false, function () {\n  return [useWrap];\n});\n\n_c = Grade;\nGrade.layout = LayoutBase;\nexport default Grade;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grade\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/option/grade/index.tsx"],"names":["React","useEffect","useState","PowerTable","Tooltip","Switch","GradeForm","FilterColumn","SortBox","LayoutBase","gradeApi","useWrap","moment","pageIndex","listFieldSearch","GradeCode","GradeName","dataOption","dataSort","sort","sortType","text","Grade","dataSource","setDataSource","showNoti","pageSize","type","status","isLoading","setIsLoading","totalPage","setTotalPage","indexRow","setIndexRow","currentPage","setCurrentPage","listTodoApi","todoApi","setTodoApi","getDataSource","getAll","res","data","totalRow","message","afterPost","mes","_onSubmit","dataSubmit","ID","update","newDataSource","splice","console","log","add","changeStatus","checked","idRow","dataChange","Enable","Message","handleSort","option","newTodoApi","title","checkField","valueSearch","dataIndex","newList","Object","keys","forEach","key","onSearch","clearKey","resetListFieldSearch","handleReset","getPagination","pageNumber","columns","render","date","format","record","index","value","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport { Tooltip, Switch } from 'antd'\r\nimport GradeForm from '~/components/Global/Option/GradeForm'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport { gradeApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\nimport moment from 'moment'\r\n\r\nlet pageIndex = 1\r\n\r\nlet listFieldSearch = {\r\n\tpageIndex: 1,\r\n\tGradeCode: null,\r\n\tGradeName: null\r\n}\r\n\r\nconst dataOption = [\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Tên giảm dần'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Tên tăng dần '\r\n\t}\r\n]\r\n\r\nconst Grade = () => {\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState<IGrade[]>([])\r\n\tconst { showNoti, pageSize } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [indexRow, setIndexRow] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tGradeCode: null,\r\n\t\tGradeName: null\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await gradeApi.getAll(todoApi)\r\n\t\t\tres.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow), showNoti('success', 'Thành công'))\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu') && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// ---------------- AFTER SUBMIT -----------------\r\n\tconst afterPost = (mes) => {\r\n\t\tshowNoti('success', mes)\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// ----------------- ON SUBMIT --------------------\r\n\tconst _onSubmit = async (dataSubmit: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet res = null\r\n\r\n\t\tif (dataSubmit.ID) {\r\n\t\t\ttry {\r\n\t\t\t\tres = await gradeApi.update(dataSubmit)\r\n\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tlet newDataSource = [...dataSource]\r\n\t\t\t\t\tnewDataSource.splice(indexRow, 1, dataSubmit)\r\n\t\t\t\t\tsetDataSource(newDataSource)\r\n\t\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log('error: ', error)\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tres = await gradeApi.add(dataSubmit)\r\n\t\t\t\tres?.status == 200 && afterPost(res.data.message)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\t// ----------------- TURN OF ------------------------\r\n\tconst changeStatus = async (checked: boolean, idRow: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet dataChange = {\r\n\t\t\tID: idRow,\r\n\t\t\tEnable: checked\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await gradeApi.update(dataChange)\r\n\t\t\tres.status == 200 && setTodoApi({ ...todoApi })\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.Message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// --------------- HANDLE SORT ----------------------\r\n\tconst handleSort = async (option) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetCurrentPage(1), setTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// ------------ ON SEARCH -----------------------\r\n\r\n\tconst checkField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = { ...listFieldSearch }\r\n\t\tObject.keys(newList).forEach(function (key) {\r\n\t\t\tconsole.log('key: ', key)\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\t\tnewList[key] = null\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewList[key] = valueSearch\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconsole.log('new list: ', newList)\r\n\t\treturn newList\r\n\t}\r\n\r\n\tconsole.log('Todo API: ', todoApi)\r\n\tconsole.log('list search: ', listFieldSearch)\r\n\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tlet clearKey = checkField(valueSearch, dataIndex)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t...clearKey\r\n\t\t})\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tconst resetListFieldSearch = () => {\r\n\t\tObject.keys(listFieldSearch).forEach(function (key) {\r\n\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\tlistFieldSearch[key] = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1), resetListFieldSearch()\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tpageIndex = pageNumber\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t// ...listFieldSearch,\r\n\t\t\tpageIndex: pageIndex\r\n\t\t})\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t}, [todoApi])\r\n\r\n\t// Columns\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Mã khối',\r\n\t\t\tdataIndex: 'GradeCode',\r\n\t\t\t...FilterColumn('GradeCode', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tên khối',\r\n\t\t\tdataIndex: 'GradeName',\r\n\t\t\t...FilterColumn('GradeName', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ghi chú',\r\n\t\t\tdataIndex: 'Description'\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\ttitle: 'Tạo ngày',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\trender: (date: any) => moment(date).format('DD/MM/YYYY')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tdataIndex: 'Enable',\r\n\t\t\trender: (Enable, record) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Switch\r\n\t\t\t\t\t\tcheckedChildren=\"Hiện\"\r\n\t\t\t\t\t\tunCheckedChildren=\"Ẩn\"\r\n\t\t\t\t\t\tchecked={Enable}\r\n\t\t\t\t\t\tsize=\"default\"\r\n\t\t\t\t\t\tonChange={(checked) => changeStatus(checked, record.ID)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\trender: (text, data, index) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Tooltip title=\"Cập nhật trung tâm\">\r\n\t\t\t\t\t\t<GradeForm\r\n\t\t\t\t\t\t\tgetIndex={() => setIndexRow(index)}\r\n\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\trowData={data}\r\n\t\t\t\t\t\t\trowID={data.ID}\r\n\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t_onSubmit={(data: any) => _onSubmit(data)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PowerTable\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Danh sách khối học\"\r\n\t\t\t\tTitleCard={<GradeForm isLoading={isLoading} _onSubmit={(data: any) => _onSubmit(data)} />}\r\n\t\t\t\tdataSource={dataSource}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t<SortBox handleSort={(value) => handleSort(value)} dataOption={dataOption} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\nGrade.layout = LayoutBase\r\nexport default Grade\r\n"]},"metadata":{},"sourceType":"module"}
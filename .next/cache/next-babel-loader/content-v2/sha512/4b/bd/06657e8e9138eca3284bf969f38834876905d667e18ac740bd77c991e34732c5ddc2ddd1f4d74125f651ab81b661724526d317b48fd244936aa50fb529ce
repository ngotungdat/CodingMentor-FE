{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\QuestionBank\\\\QuestionFormType\\\\DragForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useWrap } from '~/context/wrap';\nimport { Form, Spin, Checkbox, Input, Tooltip } from 'antd';\nimport Editor from '~/components/Elements/Editor';\nimport { exerciseGroupApi } from '~/apiBase/';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Plus } from 'react-feather';\nlet AnsID = 0;\n\nconst DragForm = props => {\n  var _question$ExerciseLis3;\n\n  const {\n    questionData,\n    changeIsSubmit,\n    visible,\n    onChange\n  } = props;\n  const {\n    showNoti\n  } = useWrap();\n  const [form] = Form.useForm();\n  const {\n    0: question,\n    1: setQuestion\n  } = useState(null); // Dữ liệu câu hỏi + câu trả lời\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: dataExercise,\n    1: setDataExercise\n  } = useState([]); // VỪA VÔ LẤY DỮ LIỆU\n\n  useEffect(() => {\n    visible ? dataGroupDetail() : setLoading(true);\n  }, [visible]);\n  useEffect(() => {\n    onChange(question);\n  }, [question]); // GET GROUP DETAIL DATA\n\n  const dataGroupDetail = async () => {\n    changeIsSubmit(true);\n\n    try {\n      let res = await exerciseGroupApi.getWithID(questionData.ID ? questionData.ID : questionData.ExerciseGroupID);\n      res.status == 200 && setQuestion(res.data.data);\n      res.status == 204 && showNoti('danger', 'Không có dữ liệu');\n    } catch (error) {\n      showNoti('danger', error === null || error === void 0 ? void 0 : error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const setDataEditor = e => {\n    setQuestion(_objectSpread(_objectSpread({}, question), {}, {\n      Paragraph: e\n    }));\n    onChange(_objectSpread(_objectSpread({}, question), {}, {\n      Paragraph: e\n    }));\n  }; // HANDLE ADD QUESTION\n\n\n  const addQuestion = p => {\n    AnsID++;\n    let exerciseList = question === null || question === void 0 ? void 0 : question.ExerciseList;\n    let tempData = dataExercise;\n    let temp = {\n      inputID: p,\n      Content: '',\n      ExerciseGroupID: question.ID,\n      SubjectID: question.SubjectID,\n      SubjectName: question.SubjectName,\n      DescribeAnswer: '',\n      Level: question.Level,\n      LevelName: question.LevelName,\n      LinkAudio: null,\n      Type: question.Type,\n      TypeName: question.TypeName,\n      isAdd: true,\n      Enable: true,\n      ExerciseAnswer: [{\n        ID: AnsID,\n        AnswerContent: '',\n        isTrue: true,\n        Enable: true,\n        isAdd: true\n      }]\n    };\n    tempData.push(temp);\n    exerciseList.push(temp);\n    setDataExercise(tempData);\n    setQuestion(_objectSpread(_objectSpread({}, question), {}, {\n      ExerciseList: exerciseList\n    }));\n    onChange(_objectSpread(_objectSpread({}, question), {}, {\n      ExerciseList: exerciseList\n    }));\n  }; // HANDLE DELETE QUESTION\n\n\n  const deleteSingleQuestion = ID => {\n    let questionIndex = question.ExerciseList.findIndex(item => item.inputID == ID); // Lấy vị trí của cái ID truyền vào\n\n    let exerciseIndex = dataExercise.findIndex(item => item.inputID == ID); // Xóa bên Ex nếu nó khác -1\n\n    if (dataExercise[exerciseIndex]) {\n      dataExercise.splice(exerciseIndex, 1);\n    } // Xóa bên Quest nếu nó khác -1\n\n\n    if (question.ExerciseList[questionIndex]) {\n      if (question.ExerciseList[questionIndex].isAdd) {\n        question.ExerciseList.splice(questionIndex, 1);\n      } else {\n        question.ExerciseList[questionIndex].Enable = false;\n      }\n    } else {\n      console.log('Câu hỏi không tồn tại');\n    }\n\n    setDataExercise([...dataExercise]);\n    setQuestion(_objectSpread({}, question));\n    onChange(_objectSpread({}, question));\n  }; // HANDLE DELETE ALL QUESTION\n\n\n  const deleteAllQuestion = () => {\n    dataExercise === null || dataExercise === void 0 ? void 0 : dataExercise.splice(0, dataExercise.length); // Xóa tất cả tụi bên Ex\n\n    question.ExerciseList.forEach(item => {\n      item.Enable = false; // Xóa tất cả tụi bên này - gọi vậy để xóa trên data\n    });\n    setDataExercise([...dataExercise]);\n    setQuestion(_objectSpread(_objectSpread({}, question), {}, {\n      Paragraph: ''\n    }));\n    onChange(_objectSpread(_objectSpread({}, question), {}, {\n      Paragraph: ''\n    }));\n  }; // Lấy cái số hiện ra bên câu trả lời\n\n\n  const getQuestIndex = (ar, i) => {\n    let temp = [];\n\n    for (let i = 0; i < ar.length; i++) {\n      ar[i].Enable && temp.push(ar[i]);\n    }\n\n    return parseInt(temp.indexOf(i)) + 1;\n  }; // HANDLE ADD ANSWER\n\n\n  const handleAddAnswer = ID => {\n    AnsID++;\n    question.ExerciseList.every(item => {\n      if (item.inputID == ID) {\n        item.ExerciseAnswer.push({\n          ID: AnsID,\n          AnswerContent: '',\n          isTrue: true,\n          Enable: true,\n          isAdd: true\n        });\n        return false;\n      }\n\n      return true;\n    });\n    setQuestion(_objectSpread({}, question));\n  }; // ON CHANGE TEXT\n\n\n  const onChange_text = (e, AnswerID, QuestionID) => {\n    var _question$ExerciseLis;\n\n    let QuestionIndex = question === null || question === void 0 ? void 0 : (_question$ExerciseLis = question.ExerciseList) === null || _question$ExerciseLis === void 0 ? void 0 : _question$ExerciseLis.findIndex(item => item.Enable && item.inputID == QuestionID); // Get question index\n\n    let AnswerIndex = question.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex(item => item.Enable && item.ID == AnswerID); // Get answer index\n\n    question.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].AnswerContent = e.target.value; // Add text\n\n    setQuestion(_objectSpread({}, question));\n  }; // DELETE ANSWER\n\n\n  const deleteAnswerItem = (AnswerID, QuestionID) => {\n    let QuestionIndex = question.ExerciseList.findIndex(item => item.inputID == QuestionID); // - Get question index\n\n    let AnswerIndex = question.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex(item => item.ID == AnswerID); // - Get answer index\n    // Action delete\n\n    if (question.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].isAdd) {\n      question.ExerciseList[QuestionIndex].ExerciseAnswer.splice(AnswerIndex, 1);\n    } else {\n      question.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].Enable = false;\n    }\n\n    setQuestion(_objectSpread({}, question));\n  };\n\n  const onChange_isCorrect = (e, AnswerID, QuestionID) => {\n    var _question$ExerciseLis2;\n\n    let checked = e.target.checked;\n    let QuestionIndex = question === null || question === void 0 ? void 0 : (_question$ExerciseLis2 = question.ExerciseList) === null || _question$ExerciseLis2 === void 0 ? void 0 : _question$ExerciseLis2.findIndex(item => item.inputID == QuestionID);\n    let AnswerIndex = question.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex(item => item.ID == AnswerID);\n    question.ExerciseList[QuestionIndex].ExerciseAnswer.forEach(item => {\n      item.isTrue = false;\n    });\n    question.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].isTrue = checked;\n    setQuestion(_objectSpread({}, question));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-create-question\",\n    children: visible && loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }, this) : visible && /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      layout: \"vertical\",\n      onFinish: () => {},\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12\",\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"Question\",\n              label: \"N\\u1ED9i dung\",\n              children: /*#__PURE__*/_jsxDEV(Editor, {\n                exerciseList: dataExercise,\n                deleteAllQuestion: deleteAllQuestion,\n                deleteSingleQuestion: quesID => deleteSingleQuestion(quesID),\n                handleChange: value => setDataEditor(value),\n                questionContent: question === null || question === void 0 ? void 0 : question.Paragraph // Câu hỏi được truyền vô\n                ,\n                questionData: question,\n                addQuestion: inputID => addQuestion(inputID),\n                visible: visible\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12\",\n            style: {\n              borderLeft: '2px dotted #dbdbdb'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"style-label\",\n              style: {\n                textDecoration: 'underline'\n              },\n              children: \"\\u0110\\xE1p \\xE1n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 10\n            }, this), question === null || question === void 0 ? void 0 : (_question$ExerciseLis3 = question.ExerciseList) === null || _question$ExerciseLis3 === void 0 ? void 0 : _question$ExerciseLis3.map((itemQues, index) => {\n              var _itemQues$ExerciseAns;\n\n              return itemQues.Enable && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-item-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"\",\n                  style: {\n                    fontWeight: 500,\n                    color: '#525252'\n                  },\n                  children: [\"C\\xE2u: \", getQuestIndex(question.ExerciseList, itemQues)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 14\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Th\\xEAm \\u0111\\xE1p \\xE1n\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-add-answer\",\n                    onClick: () => handleAddAnswer(itemQues.inputID),\n                    children: /*#__PURE__*/_jsxDEV(Plus, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 16\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 14\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: (_itemQues$ExerciseAns = itemQues.ExerciseAnswer) === null || _itemQues$ExerciseAns === void 0 ? void 0 : _itemQues$ExerciseAns.map((itemAns, index) => itemAns.Enable && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6 col-12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row-ans mt-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                        checked: itemAns.isTrue,\n                        onChange: e => onChange_isCorrect(e, itemAns.ID, itemQues.inputID)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 20\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                        className: \"mb-0\",\n                        children: /*#__PURE__*/_jsxDEV(Input, {\n                          value: itemAns.AnswerContent,\n                          className: \"style-input\",\n                          onChange: e => onChange_text(e, itemAns.ID, itemQues.inputID)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 230,\n                          columnNumber: 21\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 20\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"delete-ans\",\n                        onClick: () => deleteAnswerItem(itemAns.ID, itemQues.inputID),\n                        children: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 237,\n                          columnNumber: 21\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 20\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 19\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 18\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 14\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 13\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 3\n  }, this);\n};\n\nexport default DragForm;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/QuestionBank/QuestionFormType/DragForm.tsx"],"names":["React","useEffect","useState","useWrap","Form","Spin","Checkbox","Input","Tooltip","Editor","exerciseGroupApi","CloseOutlined","Plus","AnsID","DragForm","props","questionData","changeIsSubmit","visible","onChange","showNoti","form","useForm","question","setQuestion","loading","setLoading","dataExercise","setDataExercise","dataGroupDetail","res","getWithID","ID","ExerciseGroupID","status","data","error","message","setDataEditor","e","Paragraph","addQuestion","p","exerciseList","ExerciseList","tempData","temp","inputID","Content","SubjectID","SubjectName","DescribeAnswer","Level","LevelName","LinkAudio","Type","TypeName","isAdd","Enable","ExerciseAnswer","AnswerContent","isTrue","push","deleteSingleQuestion","questionIndex","findIndex","item","exerciseIndex","splice","console","log","deleteAllQuestion","length","forEach","getQuestIndex","ar","i","parseInt","indexOf","handleAddAnswer","every","onChange_text","AnswerID","QuestionID","QuestionIndex","AnswerIndex","target","value","deleteAnswerItem","onChange_isCorrect","checked","quesID","borderLeft","textDecoration","map","itemQues","index","fontWeight","color","itemAns"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { Form, Spin, Checkbox, Input, Tooltip } from 'antd'\r\nimport Editor from '~/components/Elements/Editor'\r\nimport { exerciseGroupApi } from '~/apiBase/'\r\nimport { CloseOutlined } from '@ant-design/icons'\r\nimport { Plus } from 'react-feather'\r\n\r\nlet AnsID = 0\r\n\r\nconst DragForm = (props: any) => {\r\n\tconst { questionData, changeIsSubmit, visible, onChange } = props\r\n\tconst { showNoti } = useWrap()\r\n\tconst [form] = Form.useForm()\r\n\tconst [question, setQuestion] = useState<any>(null) // Dữ liệu câu hỏi + câu trả lời\r\n\tconst [loading, setLoading] = useState<any>(true)\r\n\tconst [dataExercise, setDataExercise] = useState<any>([])\r\n\r\n\t// VỪA VÔ LẤY DỮ LIỆU\r\n\tuseEffect(() => {\r\n\t\tvisible ? dataGroupDetail() : setLoading(true)\r\n\t}, [visible])\r\n\r\n\tuseEffect(() => {\r\n\t\tonChange(question)\r\n\t}, [question])\r\n\r\n\t// GET GROUP DETAIL DATA\r\n\tconst dataGroupDetail = async () => {\r\n\t\tchangeIsSubmit(true)\r\n\t\ttry {\r\n\t\t\tlet res: any = await exerciseGroupApi.getWithID(questionData.ID ? questionData.ID : questionData.ExerciseGroupID)\r\n\t\t\tres.status == 200 && setQuestion(res.data.data)\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu')\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error?.message)\r\n\t\t} finally {\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst setDataEditor = (e: any) => {\r\n\t\tsetQuestion({ ...question, Paragraph: e })\r\n\t\tonChange({ ...question, Paragraph: e })\r\n\t}\r\n\r\n\t// HANDLE ADD QUESTION\r\n\tconst addQuestion = (p: any) => {\r\n\t\tAnsID++\r\n\t\tlet exerciseList: any = question?.ExerciseList\r\n\t\tlet tempData: any = dataExercise\r\n\t\tlet temp: any = {\r\n\t\t\tinputID: p,\r\n\t\t\tContent: '',\r\n\t\t\tExerciseGroupID: question.ID,\r\n\t\t\tSubjectID: question.SubjectID,\r\n\t\t\tSubjectName: question.SubjectName,\r\n\t\t\tDescribeAnswer: '',\r\n\t\t\tLevel: question.Level,\r\n\t\t\tLevelName: question.LevelName,\r\n\t\t\tLinkAudio: null,\r\n\t\t\tType: question.Type,\r\n\t\t\tTypeName: question.TypeName,\r\n\t\t\tisAdd: true,\r\n\t\t\tEnable: true,\r\n\t\t\tExerciseAnswer: [\r\n\t\t\t\t{\r\n\t\t\t\t\tID: AnsID,\r\n\t\t\t\t\tAnswerContent: '',\r\n\t\t\t\t\tisTrue: true,\r\n\t\t\t\t\tEnable: true,\r\n\t\t\t\t\tisAdd: true\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t\ttempData.push(temp)\r\n\t\texerciseList.push(temp)\r\n\t\tsetDataExercise(tempData)\r\n\t\tsetQuestion({ ...question, ExerciseList: exerciseList })\r\n\t\tonChange({ ...question, ExerciseList: exerciseList })\r\n\t}\r\n\r\n\t// HANDLE DELETE QUESTION\r\n\tconst deleteSingleQuestion = (ID: any) => {\r\n\t\tlet questionIndex: any = question.ExerciseList.findIndex((item: any) => item.inputID == ID) // Lấy vị trí của cái ID truyền vào\r\n\t\tlet exerciseIndex: any = dataExercise.findIndex((item: any) => item.inputID == ID)\r\n\t\t// Xóa bên Ex nếu nó khác -1\r\n\t\tif (dataExercise[exerciseIndex]) {\r\n\t\t\tdataExercise.splice(exerciseIndex, 1)\r\n\t\t}\r\n\t\t// Xóa bên Quest nếu nó khác -1\r\n\t\tif (question.ExerciseList[questionIndex]) {\r\n\t\t\tif (question.ExerciseList[questionIndex].isAdd) {\r\n\t\t\t\tquestion.ExerciseList.splice(questionIndex, 1)\r\n\t\t\t} else {\r\n\t\t\t\tquestion.ExerciseList[questionIndex].Enable = false\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log('Câu hỏi không tồn tại')\r\n\t\t}\r\n\t\tsetDataExercise([...dataExercise])\r\n\t\tsetQuestion({ ...question })\r\n\t\tonChange({ ...question })\r\n\t}\r\n\r\n\t// HANDLE DELETE ALL QUESTION\r\n\tconst deleteAllQuestion = () => {\r\n\t\tdataExercise?.splice(0, dataExercise.length) // Xóa tất cả tụi bên Ex\r\n\t\tquestion.ExerciseList.forEach((item: any) => {\r\n\t\t\titem.Enable = false // Xóa tất cả tụi bên này - gọi vậy để xóa trên data\r\n\t\t})\r\n\t\tsetDataExercise([...dataExercise])\r\n\t\tsetQuestion({ ...question, Paragraph: '' })\r\n\t\tonChange({ ...question, Paragraph: '' })\r\n\t}\r\n\r\n\t// Lấy cái số hiện ra bên câu trả lời\r\n\tconst getQuestIndex = (ar: any, i: any) => {\r\n\t\tlet temp: any = []\r\n\t\tfor (let i = 0; i < ar.length; i++) {\r\n\t\t\tar[i].Enable && temp.push(ar[i])\r\n\t\t}\r\n\t\treturn parseInt(temp.indexOf(i)) + 1\r\n\t}\r\n\r\n\t// HANDLE ADD ANSWER\r\n\tconst handleAddAnswer = (ID: number) => {\r\n\t\tAnsID++\r\n\t\tquestion.ExerciseList.every((item: any) => {\r\n\t\t\tif (item.inputID == ID) {\r\n\t\t\t\titem.ExerciseAnswer.push({\r\n\t\t\t\t\tID: AnsID,\r\n\t\t\t\t\tAnswerContent: '',\r\n\t\t\t\t\tisTrue: true,\r\n\t\t\t\t\tEnable: true,\r\n\t\t\t\t\tisAdd: true\r\n\t\t\t\t})\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t\tsetQuestion({ ...question })\r\n\t}\r\n\r\n\t// ON CHANGE TEXT\r\n\tconst onChange_text = (e: any, AnswerID: number, QuestionID: any) => {\r\n\t\tlet QuestionIndex: any = question?.ExerciseList?.findIndex((item: any) => item.Enable && item.inputID == QuestionID) // Get question index\r\n\t\tlet AnswerIndex: any = question.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex((item: any) => item.Enable && item.ID == AnswerID) // Get answer index\r\n\t\tquestion.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].AnswerContent = e.target.value // Add text\r\n\t\tsetQuestion({ ...question })\r\n\t}\r\n\r\n\t// DELETE ANSWER\r\n\tconst deleteAnswerItem = (AnswerID: number, QuestionID: number) => {\r\n\t\tlet QuestionIndex: any = question.ExerciseList.findIndex((item: any) => item.inputID == QuestionID) // - Get question index\r\n\t\tlet AnswerIndex: any = question.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex((item: any) => item.ID == AnswerID) // - Get answer index\r\n\r\n\t\t// Action delete\r\n\t\tif (question.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].isAdd) {\r\n\t\t\tquestion.ExerciseList[QuestionIndex].ExerciseAnswer.splice(AnswerIndex, 1)\r\n\t\t} else {\r\n\t\t\tquestion.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].Enable = false\r\n\t\t}\r\n\t\tsetQuestion({ ...question })\r\n\t}\r\n\r\n\tconst onChange_isCorrect = (e: any, AnswerID: any, QuestionID: any) => {\r\n\t\tlet checked: any = e.target.checked\r\n\t\tlet QuestionIndex: any = question?.ExerciseList?.findIndex((item: any) => item.inputID == QuestionID)\r\n\t\tlet AnswerIndex: any = question.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex((item: any) => item.ID == AnswerID)\r\n\t\tquestion.ExerciseList[QuestionIndex].ExerciseAnswer.forEach((item: any) => {\r\n\t\t\titem.isTrue = false\r\n\t\t})\r\n\t\tquestion.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].isTrue = checked\r\n\t\tsetQuestion({ ...question })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"form-create-question\">\r\n\t\t\t{visible && loading ? (\r\n\t\t\t\t<div className=\"w-100 text-center mt-3\">\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<Form form={form} layout=\"vertical\" onFinish={() => {}}>\r\n\t\t\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-12\">\r\n\t\t\t\t\t\t\t\t\t<Form.Item name=\"Question\" label=\"Nội dung\">\r\n\t\t\t\t\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\t\t\t\t\texerciseList={dataExercise}\r\n\t\t\t\t\t\t\t\t\t\t\tdeleteAllQuestion={deleteAllQuestion}\r\n\t\t\t\t\t\t\t\t\t\t\tdeleteSingleQuestion={(quesID: number) => deleteSingleQuestion(quesID)}\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange={(value: string) => setDataEditor(value)}\r\n\t\t\t\t\t\t\t\t\t\t\tquestionContent={question?.Paragraph} // Câu hỏi được truyền vô\r\n\t\t\t\t\t\t\t\t\t\t\tquestionData={question}\r\n\t\t\t\t\t\t\t\t\t\t\taddQuestion={(inputID: any) => addQuestion(inputID)}\r\n\t\t\t\t\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-12\" style={{ borderLeft: '2px dotted #dbdbdb' }}>\r\n\t\t\t\t\t\t\t\t\t<p className=\"style-label\" style={{ textDecoration: 'underline' }}>\r\n\t\t\t\t\t\t\t\t\t\tĐáp án\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t{question?.ExerciseList?.map(\r\n\t\t\t\t\t\t\t\t\t\t(itemQues: any, index: any) =>\r\n\t\t\t\t\t\t\t\t\t\t\titemQues.Enable && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={index} className=\"question-item-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"\" style={{ fontWeight: 500, color: '#525252' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCâu: {getQuestIndex(question.ExerciseList, itemQues)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Thêm đáp án\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn-add-answer\" onClick={() => handleAddAnswer(itemQues.inputID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Plus />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{itemQues.ExerciseAnswer?.map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(itemAns: any, index: any) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titemAns.Enable && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-12\" key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row-ans mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={itemAns.isTrue}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => onChange_isCorrect(e, itemAns.ID, itemQues.inputID)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item className=\"mb-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={itemAns.AnswerContent}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => onChange_text(e, itemAns.ID, itemQues.inputID)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"delete-ans\" onClick={() => deleteAnswerItem(itemAns.ID, itemQues.inputID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DragForm\r\n"]},"metadata":{},"sourceType":"module"}
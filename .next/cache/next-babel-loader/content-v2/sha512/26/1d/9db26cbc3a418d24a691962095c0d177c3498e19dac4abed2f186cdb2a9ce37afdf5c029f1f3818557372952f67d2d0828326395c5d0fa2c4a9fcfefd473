{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\CourseList\\\\CourseListUpdate.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Form, Modal, Spin } from 'antd';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { UserCheck } from 'react-feather';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport InputTextField from '~/components/FormControl/InputTextField';\nimport SelectField from '~/components/FormControl/SelectField';\nimport UploadAvatarField from '~/components/FormControl/UploadAvatarField';\nimport { numberWithCommas } from '~/utils/functions';\nimport { optionCommonPropTypes } from '~/utils/proptypes';\n\nvar CourseListUpdate = function CourseListUpdate(props) {\n  _s();\n\n  var handleFetchDataForUpdateForm = props.handleFetchDataForUpdateForm,\n      handleOnUpdateCourse = props.handleOnUpdateCourse,\n      courseObj = props.courseObj,\n      isLoading = props.isLoading,\n      optionList = props.optionList;\n\n  var _useState = useState(false),\n      isModalVisible = _useState[0],\n      setIsModalVisible = _useState[1];\n\n  isModalVisible && console.log(courseObj);\n\n  var showModal = function showModal() {\n    setIsModalVisible(true);\n  };\n\n  var handleOk = function handleOk() {\n    setIsModalVisible(false);\n  };\n\n  var handleCancel = function handleCancel() {\n    setIsModalVisible(false);\n  };\n\n  var schema = yup.object().shape({\n    TeacherLeaderUID: yup.number().min(1, 'Bạn không được để trống'),\n    SalaryOfLesson: yup.string().nullable().required('Bạn không được để trống')\n  });\n  var defaultValuesInit = {\n    TeacherLeaderUID: 0,\n    SalaryOfLesson: ''\n  };\n  var form = useForm({\n    defaultValues: defaultValuesInit,\n    resolver: yupResolver(schema)\n  });\n  useEffect(function () {\n    if (courseObj) {\n      form.reset(_objectSpread(_objectSpread({}, courseObj), {}, {\n        SalaryOfLesson: numberWithCommas(courseObj.SalaryOfLesson)\n      }));\n    }\n  }, [courseObj]); // CHECK IF VALUE DO NOT IN THE SELECT => CHANGE VALUE TO DEFAULT (0)\n\n  useEffect(function () {\n    var TeacherLeaderUID = courseObj.TeacherLeaderUID;\n    var teacherLeadList = optionList.teacherLeadList;\n\n    if (teacherLeadList.length) {\n      if (!teacherLeadList.some(function (o) {\n        return o.value === TeacherLeaderUID;\n      })) {\n        form.setValue('TeacherLeaderUID', 0);\n      }\n    }\n  }, [courseObj, optionList]);\n\n  var checkHandleFetchDataForUpdateForm = function checkHandleFetchDataForUpdateForm(_ref) {\n    var BranchID = _ref.BranchID;\n    if (!handleFetchDataForUpdateForm) return;\n    handleFetchDataForUpdateForm(BranchID);\n  };\n\n  var checkHandleOnUpdateCourse = function checkHandleOnUpdateCourse(data) {\n    console.log('data', data);\n    if (!handleOnUpdateCourse) return;\n    handleOnUpdateCourse(data).then(function (res) {\n      res && res.status === 200 && handleCancel();\n    });\n  };\n\n  useEffect(function () {\n    isModalVisible && checkHandleFetchDataForUpdateForm(courseObj);\n  }, [isModalVisible]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-icon\",\n      onClick: showModal,\n      children: /*#__PURE__*/_jsxDEV(UserCheck, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n      width: \"350px\",\n      title: \"C\\u1EADp nh\\u1EADt qu\\u1EA3n l\\xFD kh\\xF3a h\\u1ECDc\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-form\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          layout: \"vertical\",\n          onFinish: form.handleSubmit(checkHandleOnUpdateCourse),\n          children: [/*#__PURE__*/_jsxDEV(SelectField, {\n            form: form,\n            name: \"TeacherLeaderUID\",\n            isRequired: true,\n            label: \"Gi\\xE1o vi\\xEAn qu\\u1EA3n l\\xFD\",\n            optionList: optionList.teacherLeadList,\n            isLoading: isLoading.type == 'FETCH_DATA' && isLoading.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(InputTextField, {\n            form: form,\n            name: \"SalaryOfLesson\",\n            isRequired: true,\n            label: \"L\\u01B0\\u01A1ng/bu\\u1ED5i\",\n            placeholder: \"Nh\\u1EADp l\\u01B0\\u01A1ng/bu\\u1ED5i h\\u1ECDc\",\n            handleFormatCurrency: numberWithCommas\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(UploadAvatarField, {\n            form: form,\n            name: \"Avatar\",\n            label: \"\\u1EA2nh \\u0111\\u1EA1i di\\u1EC7n kh\\xF3a h\\u1ECDc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-100\",\n            disabled: isLoading.type == 'UPDATE_DATA' && isLoading.status,\n            children: [\"C\\u1EADp nh\\u1EADt\", isLoading.type == 'UPDATE_DATA' && isLoading.status && /*#__PURE__*/_jsxDEV(Spin, {\n              className: \"loading-base\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 64\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(CourseListUpdate, \"3x62bu9qz2sQC2Ae3QDkJjefKsM=\", false, function () {\n  return [useForm];\n});\n\n_c = CourseListUpdate;\nCourseListUpdate.propTypes = {\n  handleOnUpdateCourse: PropTypes.func,\n  handleFetchDataForUpdateForm: PropTypes.func,\n  courseObj: PropTypes.shape({\n    AcademicUID: PropTypes.number.isRequired,\n    TeacherLeaderUID: PropTypes.number.isRequired\n  }),\n  optionList: PropTypes.shape({\n    teacherLeadList: optionCommonPropTypes,\n    academicList: optionCommonPropTypes\n  }),\n  isLoading: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    status: PropTypes.bool.isRequired\n  })\n};\nCourseListUpdate.defaultProps = {\n  handleOnUpdateCourse: null,\n  handleFetchDataForUpdateForm: null,\n  courseObj: {\n    AcademicUID: 0,\n    TeacherLeaderUID: 0\n  },\n  optionList: {\n    teacherLeadList: [],\n    academicList: []\n  },\n  isLoading: {\n    type: '',\n    status: false\n  }\n};\nexport default CourseListUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseListUpdate\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/CourseList/CourseListUpdate.tsx"],"names":["yupResolver","Form","Modal","Spin","PropTypes","React","useEffect","useState","UserCheck","useForm","yup","InputTextField","SelectField","UploadAvatarField","numberWithCommas","optionCommonPropTypes","CourseListUpdate","props","handleFetchDataForUpdateForm","handleOnUpdateCourse","courseObj","isLoading","optionList","isModalVisible","setIsModalVisible","console","log","showModal","handleOk","handleCancel","schema","object","shape","TeacherLeaderUID","number","min","SalaryOfLesson","string","nullable","required","defaultValuesInit","form","defaultValues","resolver","reset","teacherLeadList","length","some","o","value","setValue","checkHandleFetchDataForUpdateForm","BranchID","checkHandleOnUpdateCourse","data","then","res","status","handleSubmit","type","propTypes","func","AcademicUID","isRequired","academicList","bool","defaultProps"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Form, Modal, Spin } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { UserCheck } from 'react-feather'\r\nimport { useForm } from 'react-hook-form'\r\nimport * as yup from 'yup'\r\nimport InputTextField from '~/components/FormControl/InputTextField'\r\nimport SelectField from '~/components/FormControl/SelectField'\r\nimport UploadAvatarField from '~/components/FormControl/UploadAvatarField'\r\nimport { numberWithCommas } from '~/utils/functions'\r\nimport { optionCommonPropTypes } from '~/utils/proptypes'\r\n\r\nconst CourseListUpdate = (props) => {\r\n\tconst { handleFetchDataForUpdateForm, handleOnUpdateCourse, courseObj, isLoading, optionList } = props\r\n\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tisModalVisible && console.log(courseObj)\r\n\r\n\tconst showModal = () => {\r\n\t\tsetIsModalVisible(true)\r\n\t}\r\n\r\n\tconst handleOk = () => {\r\n\t\tsetIsModalVisible(false)\r\n\t}\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false)\r\n\t}\r\n\r\n\tconst schema = yup.object().shape({\r\n\t\tTeacherLeaderUID: yup.number().min(1, 'Bạn không được để trống'),\r\n\t\tSalaryOfLesson: yup.string().nullable().required('Bạn không được để trống')\r\n\t})\r\n\tconst defaultValuesInit = {\r\n\t\tTeacherLeaderUID: 0,\r\n\t\tSalaryOfLesson: ''\r\n\t}\r\n\r\n\tconst form = useForm({\r\n\t\tdefaultValues: defaultValuesInit,\r\n\t\tresolver: yupResolver(schema)\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tif (courseObj) {\r\n\t\t\tform.reset({\r\n\t\t\t\t...courseObj,\r\n\t\t\t\tSalaryOfLesson: numberWithCommas(courseObj.SalaryOfLesson)\r\n\t\t\t})\r\n\t\t}\r\n\t}, [courseObj])\r\n\r\n\t// CHECK IF VALUE DO NOT IN THE SELECT => CHANGE VALUE TO DEFAULT (0)\r\n\tuseEffect(() => {\r\n\t\tlet { TeacherLeaderUID } = courseObj\r\n\t\tconst { teacherLeadList } = optionList\r\n\t\tif (teacherLeadList.length) {\r\n\t\t\tif (!teacherLeadList.some((o) => o.value === TeacherLeaderUID)) {\r\n\t\t\t\tform.setValue('TeacherLeaderUID', 0)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [courseObj, optionList])\r\n\r\n\tconst checkHandleFetchDataForUpdateForm = ({ BranchID }) => {\r\n\t\tif (!handleFetchDataForUpdateForm) return\r\n\t\thandleFetchDataForUpdateForm(BranchID)\r\n\t}\r\n\r\n\tconst checkHandleOnUpdateCourse = (data) => {\r\n\t\tconsole.log('data', data)\r\n\t\tif (!handleOnUpdateCourse) return\r\n\t\thandleOnUpdateCourse(data).then((res) => {\r\n\t\t\tres && res.status === 200 && handleCancel()\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tisModalVisible && checkHandleFetchDataForUpdateForm(courseObj)\r\n\t}, [isModalVisible])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button className=\"btn btn-icon\" onClick={showModal}>\r\n\t\t\t\t<UserCheck />\r\n\t\t\t</button>\r\n\t\t\t<Modal width=\"350px\" title=\"Cập nhật quản lý khóa học\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} footer={null}>\r\n\t\t\t\t<div className=\"wrap-form\">\r\n\t\t\t\t\t<Form layout=\"vertical\" onFinish={form.handleSubmit(checkHandleOnUpdateCourse)}>\r\n\t\t\t\t\t\t<SelectField\r\n\t\t\t\t\t\t\tform={form}\r\n\t\t\t\t\t\t\tname=\"TeacherLeaderUID\"\r\n\t\t\t\t\t\t\tisRequired\r\n\t\t\t\t\t\t\tlabel=\"Giáo viên quản lý\"\r\n\t\t\t\t\t\t\toptionList={optionList.teacherLeadList}\r\n\t\t\t\t\t\t\tisLoading={isLoading.type == 'FETCH_DATA' && isLoading.status}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputTextField\r\n\t\t\t\t\t\t\tform={form}\r\n\t\t\t\t\t\t\tname=\"SalaryOfLesson\"\r\n\t\t\t\t\t\t\tisRequired\r\n\t\t\t\t\t\t\tlabel=\"Lương/buổi\"\r\n\t\t\t\t\t\t\tplaceholder=\"Nhập lương/buổi học\"\r\n\t\t\t\t\t\t\thandleFormatCurrency={numberWithCommas}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<UploadAvatarField form={form} name=\"Avatar\" label=\"Ảnh đại diện khóa học\" />\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary w-100\" disabled={isLoading.type == 'UPDATE_DATA' && isLoading.status}>\r\n\t\t\t\t\t\t\tCập nhật\r\n\t\t\t\t\t\t\t{isLoading.type == 'UPDATE_DATA' && isLoading.status && <Spin className=\"loading-base\" />}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nCourseListUpdate.propTypes = {\r\n\thandleOnUpdateCourse: PropTypes.func,\r\n\thandleFetchDataForUpdateForm: PropTypes.func,\r\n\tcourseObj: PropTypes.shape({\r\n\t\tAcademicUID: PropTypes.number.isRequired,\r\n\t\tTeacherLeaderUID: PropTypes.number.isRequired\r\n\t}),\r\n\toptionList: PropTypes.shape({\r\n\t\tteacherLeadList: optionCommonPropTypes,\r\n\t\tacademicList: optionCommonPropTypes\r\n\t}),\r\n\tisLoading: PropTypes.shape({\r\n\t\ttype: PropTypes.string.isRequired,\r\n\t\tstatus: PropTypes.bool.isRequired\r\n\t})\r\n}\r\nCourseListUpdate.defaultProps = {\r\n\thandleOnUpdateCourse: null,\r\n\thandleFetchDataForUpdateForm: null,\r\n\tcourseObj: {\r\n\t\tAcademicUID: 0,\r\n\t\tTeacherLeaderUID: 0\r\n\t},\r\n\toptionList: {\r\n\t\tteacherLeadList: [],\r\n\t\tacademicList: []\r\n\t},\r\n\tisLoading: { type: '', status: false }\r\n}\r\nexport default CourseListUpdate\r\n"]},"metadata":{},"sourceType":"module"}
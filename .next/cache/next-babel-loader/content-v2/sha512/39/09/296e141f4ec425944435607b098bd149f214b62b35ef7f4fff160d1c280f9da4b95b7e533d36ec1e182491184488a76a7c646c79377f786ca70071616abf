{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\CourseExam\\\\CourseExamUpdate.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { useWrap } from '~/context/wrap';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Form, Modal, Spin, Tooltip } from 'antd';\nimport SelectField from '~/components/FormControl/SelectField';\nimport TextAreaField from '~/components/FormControl/TextAreaField';\nimport { UndoOutlined } from '@ant-design/icons';\nimport { courseExamApi } from '~/apiBase/package/course-exam';\nlet returnSchema = {};\nlet schema = null;\n\nconst CourseExamUpdate = props => {\n  const {\n    dataTeacher,\n    dataRow,\n    onFetchData\n  } = props;\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  }; // -----  HANDLE ALL IN FORM -------------\n\n\n  const defaultValuesInit = {\n    ID: null,\n    TeacherID: null,\n    Note: ''\n  };\n\n  (function returnSchemaFunc() {\n    returnSchema = _objectSpread({}, defaultValuesInit);\n    Object.keys(returnSchema).forEach(function (key) {\n      switch (key) {\n        case 'Email':\n          returnSchema[key] = yup.string().email('Email nhập sai cú pháp').required('Bạn không được để trống');\n          break;\n\n        case 'Mobile':\n          returnSchema[key] = yup.mixed().required('Bạn không được để trống');\n          break;\n\n        case 'Branch':\n          returnSchema[key] = yup.array().required('Bạn không được để trống');\n\n        default:\n          // returnSchema[key] = yup.mixed().required(\"Bạn không được để trống\");\n          break;\n      }\n    });\n    schema = yup.object().shape(returnSchema);\n  })();\n\n  const form = useForm({\n    defaultValues: defaultValuesInit,\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = async dataSubmit => {\n    setIsLoading(true);\n\n    try {\n      let res = await courseExamApi.update(dataSubmit);\n\n      if (res.status == 200) {\n        showNoti('success', 'Cập nhật thành công');\n        setIsModalVisible(false);\n        onFetchData && onFetchData();\n      } else {\n        showNoti('danger', 'Mạng không ổn định');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isModalVisible) {\n      if (dataRow) {\n        form.setValue('ID', dataRow.ID);\n        form.setValue('TeacherID', dataRow.TeacherID);\n        form.setValue('Note', dataRow.Note);\n      }\n    }\n  }, [isModalVisible]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"C\\u1EADp nh\\u1EADt\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-icon edit\",\n        onClick: showModal,\n        children: /*#__PURE__*/_jsxDEV(UndoOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      footer: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wp-100 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary w-100\",\n          onClick: form.handleSubmit(onSubmit),\n          children: [\"C\\u1EADp nh\\u1EADt\", isLoading && /*#__PURE__*/_jsxDEV(Spin, {\n            className: \"loading-base\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 6\n      }, this),\n      title: \"C\\u1EADp nh\\u1EADt\",\n      visible: isModalVisible,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        onFinish: form.handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(SelectField, {\n          form: form,\n          name: \"TeacherID\",\n          label: \"Gi\\xE1o vi\\xEAn\",\n          optionList: dataTeacher,\n          placeholder: \"Ch\\u1ECDn gi\\xE1o vi\\xEAn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n          name: \"Note\",\n          label: \"Ghi ch\\xFA\",\n          form: form,\n          placeholder: \"Nh\\u1EADp ghi ch\\xFA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport default CourseExamUpdate;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/CourseExam/CourseExamUpdate.tsx"],"names":["React","useEffect","useState","useForm","yup","useWrap","yupResolver","Form","Modal","Spin","Tooltip","SelectField","TextAreaField","UndoOutlined","courseExamApi","returnSchema","schema","CourseExamUpdate","props","dataTeacher","dataRow","onFetchData","showNoti","isModalVisible","setIsModalVisible","isLoading","setIsLoading","showModal","handleOk","handleCancel","defaultValuesInit","ID","TeacherID","Note","returnSchemaFunc","Object","keys","forEach","key","string","email","required","mixed","array","object","shape","form","defaultValues","resolver","onSubmit","dataSubmit","res","update","status","error","message","setValue","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport * as yup from 'yup'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Form, Modal, Spin, Tooltip } from 'antd'\r\nimport SelectField from '~/components/FormControl/SelectField'\r\nimport TextAreaField from '~/components/FormControl/TextAreaField'\r\nimport { UndoOutlined } from '@ant-design/icons'\r\nimport { courseExamApi } from '~/apiBase/package/course-exam'\r\n\r\nlet returnSchema = {}\r\nlet schema = null\r\n\r\nconst CourseExamUpdate = (props) => {\r\n\tconst { dataTeacher, dataRow, onFetchData } = props\r\n\tconst { showNoti } = useWrap()\r\n\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\r\n\tconst showModal = () => {\r\n\t\tsetIsModalVisible(true)\r\n\t}\r\n\r\n\tconst handleOk = () => {\r\n\t\tsetIsModalVisible(false)\r\n\t}\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false)\r\n\t}\r\n\r\n\t// -----  HANDLE ALL IN FORM -------------\r\n\tconst defaultValuesInit = {\r\n\t\tID: null,\r\n\t\tTeacherID: null,\r\n\t\tNote: ''\r\n\t}\r\n\r\n\t;(function returnSchemaFunc() {\r\n\t\treturnSchema = { ...defaultValuesInit }\r\n\t\tObject.keys(returnSchema).forEach(function (key) {\r\n\t\t\tswitch (key) {\r\n\t\t\t\tcase 'Email':\r\n\t\t\t\t\treturnSchema[key] = yup.string().email('Email nhập sai cú pháp').required('Bạn không được để trống')\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'Mobile':\r\n\t\t\t\t\treturnSchema[key] = yup.mixed().required('Bạn không được để trống')\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'Branch':\r\n\t\t\t\t\treturnSchema[key] = yup.array().required('Bạn không được để trống')\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// returnSchema[key] = yup.mixed().required(\"Bạn không được để trống\");\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tschema = yup.object().shape(returnSchema)\r\n\t})()\r\n\r\n\tconst form = useForm({\r\n\t\tdefaultValues: defaultValuesInit,\r\n\t\tresolver: yupResolver(schema)\r\n\t})\r\n\r\n\tconst onSubmit = async (dataSubmit: any) => {\r\n\t\tsetIsLoading(true)\r\n\t\ttry {\r\n\t\t\tlet res = await courseExamApi.update(dataSubmit)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tshowNoti('success', 'Cập nhật thành công')\r\n\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\tonFetchData && onFetchData()\r\n\t\t\t} else {\r\n\t\t\t\tshowNoti('danger', 'Mạng không ổn định')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isModalVisible) {\r\n\t\t\tif (dataRow) {\r\n\t\t\t\tform.setValue('ID', dataRow.ID)\r\n\t\t\t\tform.setValue('TeacherID', dataRow.TeacherID)\r\n\t\t\t\tform.setValue('Note', dataRow.Note)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [isModalVisible])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tooltip title=\"Cập nhật\">\r\n\t\t\t\t<button className=\"btn btn-icon edit\" onClick={showModal}>\r\n\t\t\t\t\t<UndoOutlined />\r\n\t\t\t\t</button>\r\n\t\t\t</Tooltip>\r\n\t\t\t<Modal\r\n\t\t\t\tfooter={\r\n\t\t\t\t\t<div className=\"wp-100 text-center\">\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary w-100\" onClick={form.handleSubmit(onSubmit)}>\r\n\t\t\t\t\t\t\tCập nhật\r\n\t\t\t\t\t\t\t{isLoading && <Spin className=\"loading-base\" />}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\ttitle=\"Cập nhật\"\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t>\r\n\t\t\t\t<Form layout=\"vertical\" onFinish={form.handleSubmit(onSubmit)}>\r\n\t\t\t\t\t<SelectField form={form} name=\"TeacherID\" label=\"Giáo viên\" optionList={dataTeacher} placeholder=\"Chọn giáo viên\" />\r\n\t\t\t\t\t<TextAreaField name=\"Note\" label=\"Ghi chú\" form={form} placeholder=\"Nhập ghi chú\" />\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CourseExamUpdate\r\n"]},"metadata":{},"sourceType":"module"}
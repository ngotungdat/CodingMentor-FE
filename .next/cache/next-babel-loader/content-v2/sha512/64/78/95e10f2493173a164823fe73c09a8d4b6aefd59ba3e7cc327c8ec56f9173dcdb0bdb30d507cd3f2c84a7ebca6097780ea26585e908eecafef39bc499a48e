{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Profile\\\\ProfileCustomer\\\\InfoTimelineCard\\\\InfoTimelineCard.tsx\";\nimport { Card, Spin, Timeline } from 'antd';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { Clock } from 'react-feather';\nimport { timelineStudentApi } from '~/apiBase/customer/student/history-change';\nimport { useWrap } from '~/context/wrap';\nInfoTimelineCard.propTypes = {\n  studentID: PropTypes.number\n};\nInfoTimelineCard.defaultProps = {\n  studentID: 0\n};\n\nfunction InfoTimelineCard(props) {\n  const {\n    studentID\n  } = props;\n  const {\n    0: timelineList,\n    1: setTimelineList\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: 'GET_ALL',\n    status: false\n  });\n  const {\n    showNoti\n  } = useWrap();\n\n  const getDataTimeline = async () => {\n    try {\n      setIsLoading({\n        type: 'FETCH_TIMELINE',\n        status: true\n      });\n      const res = await timelineStudentApi.getAll({\n        pageSize: 8,\n        UserInformationID: studentID\n      });\n\n      if (res.status === 200) {\n        setTimelineList(res.data.data);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'FETCH_TIMELINE',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    getDataTimeline();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: timelineList.length ? /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        spinning: isLoading.type === 'FETCH_TIMELINE' && isLoading.status,\n        size: \"large\",\n        children: /*#__PURE__*/_jsxDEV(Timeline, {\n          mode: \"left\",\n          children: timelineList.map(t => /*#__PURE__*/_jsxDEV(Timeline.Item, {\n            label: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-weight-black\",\n                  children: moment(t.CreatedOn).format('DD/MM/YYYY')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: moment(t.CreatedOn).format('LT')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true),\n            dot: /*#__PURE__*/_jsxDEV(Clock, {\n              style: {\n                fontSize: '16px'\n              },\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-weight-black\",\n                children: [\"Thay \\u0111\\u1ED5i:\", ' ', t.Content.slice(0, t.Content.indexOf(':')).toLocaleLowerCase()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: t.Content.slice(t.Content.indexOf(':') + 1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 10\n            }, this)]\n          }, t.ID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this) : null\n  }, void 0, false);\n}\n\nexport default InfoTimelineCard;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Profile/ProfileCustomer/InfoTimelineCard/InfoTimelineCard.tsx"],"names":["Card","Spin","Timeline","moment","PropTypes","React","useEffect","useState","Clock","timelineStudentApi","useWrap","InfoTimelineCard","propTypes","studentID","number","defaultProps","props","timelineList","setTimelineList","isLoading","setIsLoading","type","status","showNoti","getDataTimeline","res","getAll","pageSize","UserInformationID","data","error","message","length","map","t","CreatedOn","format","fontSize","Content","slice","indexOf","toLocaleLowerCase","ID"],"mappings":"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","sourcesContent":["import {Card, Spin, Timeline} from 'antd';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport React, {useEffect, useState} from 'react';\r\nimport {Clock} from 'react-feather';\r\nimport {timelineStudentApi} from '~/apiBase/customer/student/history-change';\r\nimport {useWrap} from '~/context/wrap';\r\n\r\nInfoTimelineCard.propTypes = {\r\n\tstudentID: PropTypes.number,\r\n};\r\nInfoTimelineCard.defaultProps = {\r\n\tstudentID: 0,\r\n};\r\nfunction InfoTimelineCard(props) {\r\n\tconst {studentID} = props;\r\n\tconst [timelineList, setTimelineList] = useState<ITimelineStudent[]>([]);\r\n\tconst [isLoading, setIsLoading] = useState({type: 'GET_ALL', status: false});\r\n\tconst {showNoti} = useWrap();\r\n\r\n\tconst getDataTimeline = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_TIMELINE',\r\n\t\t\t\tstatus: true,\r\n\t\t\t});\r\n\t\t\tconst res = await timelineStudentApi.getAll({\r\n\t\t\t\tpageSize: 8,\r\n\t\t\t\tUserInformationID: studentID,\r\n\t\t\t});\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetTimelineList(res.data.data);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_TIMELINE',\r\n\t\t\t\tstatus: false,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataTimeline();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{timelineList.length ? (\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Spin\r\n\t\t\t\t\t\tspinning={isLoading.type === 'FETCH_TIMELINE' && isLoading.status}\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Timeline mode=\"left\">\r\n\t\t\t\t\t\t\t{timelineList.map((t) => (\r\n\t\t\t\t\t\t\t\t<Timeline.Item\r\n\t\t\t\t\t\t\t\t\tkey={t.ID}\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"font-weight-black\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{moment(t.CreatedOn).format('DD/MM/YYYY')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>{moment(t.CreatedOn).format('LT')}</div>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tdot={<Clock style={{fontSize: '16px'}} size={18} />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"font-weight-black\">\r\n\t\t\t\t\t\t\t\t\t\t\tThay đổi:{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t{t.Content.slice(\r\n\t\t\t\t\t\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t\t\t\t\t\tt.Content.indexOf(':')\r\n\t\t\t\t\t\t\t\t\t\t\t).toLocaleLowerCase()}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>{t.Content.slice(t.Content.indexOf(':') + 1)}</div>\r\n\t\t\t\t\t\t\t\t</Timeline.Item>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Timeline>\r\n\t\t\t\t\t</Spin>\r\n\t\t\t\t</Card>\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t);\r\n}\r\nexport default InfoTimelineCard;\r\n"]},"metadata":{},"sourceType":"module"}
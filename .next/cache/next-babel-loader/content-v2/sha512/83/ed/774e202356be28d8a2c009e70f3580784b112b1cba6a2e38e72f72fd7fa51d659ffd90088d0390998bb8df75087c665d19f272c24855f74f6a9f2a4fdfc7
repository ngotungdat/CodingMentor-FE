{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\Header\\\\notification.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { BellOutlined, NotificationOutlined, NotificationTwoTone } from '@ant-design/icons';\nimport { Card, List, Popover } from 'antd';\nimport Modal from 'antd/lib/modal/Modal';\nimport Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\nimport { AlertCircle } from 'react-feather';\nimport ReactHtmlParser from 'react-html-parser';\nimport { notificationApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nvar listTodoApi = {\n  pageSize: 10,\n  pageIndex: 1,\n  IsPagination: false\n};\n\nvar Notification = function Notification() {\n  _s();\n\n  var _useWrap = useWrap(),\n      reloadNotification = _useWrap.reloadNotification,\n      handleReloadNoti = _useWrap.handleReloadNoti;\n\n  var _useState = useState({}),\n      dataTable = _useState[0],\n      setDataTable = _useState[1];\n\n  var _useState2 = useState({\n    ID: null,\n    content: null,\n    title: null,\n    status: null\n  }),\n      contentRow = _useState2[0],\n      setContentRow = _useState2[1];\n\n  var _useState3 = useState(false),\n      isModalVisible = _useState3[0],\n      setIsModalVisible = _useState3[1];\n\n  var getDataNotification = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return notificationApi.getAllWithUser(listTodoApi);\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status == 200) {\n                setDataTable(res.data);\n              }\n\n              if (res.status == 204) {\n                console.log(\"%c - Noti 204:\" + \"%c Kh\\xF4ng t\\xECm th\\u1EA5y th\\xF4ng b\\xE1o n\\xE0o\", 'color: red; font-weight: bold', 'color: yellow;');\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('error: ', _context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function getDataNotification() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              res = null;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return notificationApi.updateSeen(data);\n\n            case 4:\n              res = _context2.sent;\n\n              if (res.status == 200) {\n                getDataNotification();\n              }\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log('error', _context2.t0.message);\n\n            case 11:\n              return _context2.abrupt(\"return\", res);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    return function _onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var content_notification = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap-notification middle\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content_notification\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Th\\xF4ng b\\xE1o\",\n        extra: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/notification\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Xem t\\u1EA5t c\\u1EA3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, _this),\n        bordered: false,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          itemLayout: \"horizontal\",\n          dataSource: dataTable.data,\n          className: \"list-notification\",\n          renderItem: function renderItem(item) {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: function onClick() {\n                  setIsModalVisible(true);\n                  setContentRow({\n                    ID: item.ID,\n                    content: item.NotificationContent,\n                    title: item.NotificationTitle,\n                    status: item.Status\n                  });\n                },\n                children: /*#__PURE__*/_jsxDEV(List.Item, {\n                  className: item.Status == 0 ? 'new' : 'old',\n                  children: item.Status == 0 ? /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n                    avatar: /*#__PURE__*/_jsxDEV(NotificationTwoTone, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 21\n                    }, _this),\n                    title: item.NotificationTitle,\n                    description: ReactHtmlParser(item.NotificationContent)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 12\n                  }, _this) : /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n                    avatar: /*#__PURE__*/_jsxDEV(NotificationOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 21\n                    }, _this),\n                    title: item.NotificationTitle,\n                    description: ReactHtmlParser(item.NotificationContent)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 12\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 10\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 9\n              }, _this)\n            }, void 0, false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, _this);\n\n  useEffect(function () {\n    if (!!reloadNotification) {\n      getDataNotification();\n      handleReloadNoti();\n    }\n  }, [reloadNotification]);\n  useEffect(function () {\n    getDataNotification();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      title: /*#__PURE__*/_jsxDEV(AlertCircle, {\n        color: \"#32c6a4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 12\n      }, _this),\n      visible: isModalVisible,\n      width: 700,\n      okButtonProps: {\n        style: {\n          display: 'none'\n        }\n      },\n      onCancel: function onCancel() {\n        setIsModalVisible(false);\n        contentRow.status == 0 && _onSubmit({\n          ID: contentRow.ID\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: contentRow.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ReactHtmlParser(contentRow.content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n      placement: \"bottomRight\",\n      content: content_notification,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shopping__cart-detail cart-icon d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            textDecoration: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(BellOutlined, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: (dataTable === null || dataTable === void 0 ? void 0 : dataTable.totalRow) > 0 ? 'count-notification' : 'hide',\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (dataTable === null || dataTable === void 0 ? void 0 : dataTable.totalRow) > 9 ? \"9+\" : dataTable === null || dataTable === void 0 ? void 0 : dataTable.totalRow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Notification, \"7OVRUm6IOT7d+y1hzSt/7PVtj58=\", false, function () {\n  return [useWrap];\n});\n\n_c = Notification;\nexport default Notification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/Header/notification.tsx"],"names":["BellOutlined","NotificationOutlined","NotificationTwoTone","Card","List","Popover","Modal","Link","React","useEffect","useState","AlertCircle","ReactHtmlParser","notificationApi","useWrap","listTodoApi","pageSize","pageIndex","IsPagination","Notification","reloadNotification","handleReloadNoti","dataTable","setDataTable","ID","content","title","status","contentRow","setContentRow","isModalVisible","setIsModalVisible","getDataNotification","getAllWithUser","res","data","console","log","_onSubmit","updateSeen","message","content_notification","item","NotificationContent","NotificationTitle","Status","style","display","textDecoration","totalRow"],"mappings":"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","sourcesContent":["import { BellOutlined, NotificationOutlined, NotificationTwoTone } from '@ant-design/icons'\r\nimport { Card, List, Popover } from 'antd'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport Link from 'next/link'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AlertCircle } from 'react-feather'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { notificationApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst listTodoApi = { pageSize: 10, pageIndex: 1, IsPagination: false }\r\n\r\nconst Notification = () => {\r\n\tconst { reloadNotification, handleReloadNoti } = useWrap()\r\n\r\n\tconst [dataTable, setDataTable] = useState<any>({})\r\n\tconst [contentRow, setContentRow] = useState({ ID: null, content: null, title: null, status: null })\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n\tconst getDataNotification = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await notificationApi.getAllWithUser(listTodoApi)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetDataTable(res.data)\r\n\t\t\t}\r\n\t\t\tif (res.status == 204) {\r\n\t\t\t\tconsole.log(`%c - Noti 204:` + `%c Không tìm thấy thông báo nào`, 'color: red; font-weight: bold', 'color: yellow;')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error: ', error)\r\n\t\t}\r\n\t}\r\n\r\n\tconst _onSubmit = async (data: any) => {\r\n\t\tlet res = null\r\n\t\ttry {\r\n\t\t\tres = await notificationApi.updateSeen(data)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tgetDataNotification()\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error', error.message)\r\n\t\t}\r\n\t\treturn res\r\n\t}\r\n\r\n\tconst content_notification = (\r\n\t\t<div className={`wrap-notification middle`}>\r\n\t\t\t<div className=\"content_notification\">\r\n\t\t\t\t<Card\r\n\t\t\t\t\ttitle=\"Thông báo\"\r\n\t\t\t\t\textra={\r\n\t\t\t\t\t\t<Link href=\"/notification\">\r\n\t\t\t\t\t\t\t<a>Xem tất cả</a>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbordered={false}\r\n\t\t\t\t>\r\n\t\t\t\t\t<List\r\n\t\t\t\t\t\titemLayout=\"horizontal\"\r\n\t\t\t\t\t\tdataSource={dataTable.data}\r\n\t\t\t\t\t\tclassName=\"list-notification\"\r\n\t\t\t\t\t\trenderItem={(item: INotification) => (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetIsModalVisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetContentRow({\r\n\t\t\t\t\t\t\t\t\t\t\tID: item.ID,\r\n\t\t\t\t\t\t\t\t\t\t\tcontent: item.NotificationContent,\r\n\t\t\t\t\t\t\t\t\t\t\ttitle: item.NotificationTitle,\r\n\t\t\t\t\t\t\t\t\t\t\tstatus: item.Status\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<List.Item className={item.Status == 0 ? 'new' : 'old'}>\r\n\t\t\t\t\t\t\t\t\t\t{item.Status == 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<List.Item.Meta\r\n\t\t\t\t\t\t\t\t\t\t\t\tavatar={<NotificationTwoTone />}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={item.NotificationTitle}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdescription={ReactHtmlParser(item.NotificationContent)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<List.Item.Meta\r\n\t\t\t\t\t\t\t\t\t\t\t\tavatar={<NotificationOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={item.NotificationTitle}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdescription={ReactHtmlParser(item.NotificationContent)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!!reloadNotification) {\r\n\t\t\tgetDataNotification()\r\n\t\t\thandleReloadNoti()\r\n\t\t}\r\n\t}, [reloadNotification])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataNotification()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={<AlertCircle color=\"#32c6a4\" />}\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\twidth={700}\r\n\t\t\t\tokButtonProps={{\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tdisplay: 'none'\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\t\tcontentRow.status == 0 && _onSubmit({ ID: contentRow.ID })\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<h4>{contentRow.title}</h4>\r\n\t\t\t\t<div>{ReactHtmlParser(contentRow.content)}</div>\r\n\t\t\t</Modal>\r\n\t\t\t<Popover placement=\"bottomRight\" content={content_notification}>\r\n\t\t\t\t<div className=\"shopping__cart-detail cart-icon d-flex justify-content-center align-items-center\">\r\n\t\t\t\t\t<a style={{ textDecoration: 'none' }}>\r\n\t\t\t\t\t\t<BellOutlined size={18} />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<span className={dataTable?.totalRow > 0 ? 'count-notification' : 'hide'}>\r\n\t\t\t\t\t\t<span>{dataTable?.totalRow > 9 ? `9+` : dataTable?.totalRow}</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</Popover>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Notification\r\n"]},"metadata":{},"sourceType":"module"}
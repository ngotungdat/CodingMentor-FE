{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Option\\\\IdiomsForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Form, Modal, Spin, Tooltip } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { idiomsApi } from '~/apiBase/options/idioms';\nimport EditorField from '~/components/FormControl/EditorField';\nimport { useWrap } from '~/context/wrap';\nvar IdiomsForm = /*#__PURE__*/React.memo(_c = _s(function (props) {\n  _s();\n\n  var idiomsId = props.idiomsId,\n      reloadData = props.reloadData,\n      idiomsDetail = props.idiomsDetail,\n      currentPage = props.currentPage;\n\n  var _useForm = useForm(),\n      setValue = _useForm.setValue;\n\n  var _useState = useState(false),\n      isModalVisible = _useState[0],\n      setIsModalVisible = _useState[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      idiomsInput = _useState3[0],\n      setIdiomsInput = _useState3[1];\n\n  var _useState4 = useState(false),\n      isReset = _useState4[0],\n      setIsReset = _useState4[1];\n\n  var defaultValuesInit = {\n    Idioms: ''\n  };\n  var schema = yup.object().shape({\n    Idioms: yup.string().required('Bạn không được để trống')\n  });\n  var form = useForm({\n    defaultValues: defaultValuesInit,\n    resolver: yupResolver(schema)\n  });\n  console.log(idiomsInput);\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var res, _res;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(data);\n              setLoading(true);\n\n              if (!idiomsId) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.prev = 3;\n              _context.next = 6;\n              return idiomsApi.update(_objectSpread(_objectSpread({}, data), {}, {\n                ID: idiomsId,\n                Idioms: idiomsInput\n              }));\n\n            case 6:\n              res = _context.sent;\n              afterSubmit(res === null || res === void 0 ? void 0 : res.data.message);\n              reloadData(currentPage);\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](3);\n              showNoti('danger', _context.t0.message);\n              setLoading(false);\n\n            case 15:\n              _context.next = 32;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.next = 20;\n              return idiomsApi.add(_objectSpread(_objectSpread({}, data), {}, {\n                Enable: true,\n                Idioms: idiomsInput\n              }));\n\n            case 20:\n              _res = _context.sent;\n\n              if (_res.status === 200) {\n                form.reset({\n                  Idioms: ''\n                });\n              }\n\n              afterSubmit(_res === null || _res === void 0 ? void 0 : _res.data.message);\n              reloadData(1);\n              setIdiomsInput(null);\n              setIsReset(true);\n              _context.next = 32;\n              break;\n\n            case 28:\n              _context.prev = 28;\n              _context.t1 = _context[\"catch\"](17);\n              showNoti('danger', _context.t1.message);\n              setLoading(false);\n\n            case 32:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 11], [17, 28]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var afterSubmit = function afterSubmit(mes) {\n    showNoti('success', mes);\n    setLoading(false);\n    setIsModalVisible(false);\n  };\n\n  useEffect(function () {\n    if (idiomsDetail) {\n      form.setValue('Idioms', idiomsDetail.Idioms);\n      console.log(idiomsDetail.Idioms);\n    }\n  }, [isModalVisible]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [idiomsId ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-icon edit\",\n      onClick: function onClick() {\n        setIsModalVisible(true);\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"C\\u1EADp nh\\u1EADt\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-edit\",\n          style: {\n            color: '#34c4a4',\n            fontSize: 16,\n            marginBottom: -1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, _this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-warning add-new\",\n      onClick: function onClick() {\n        setIsModalVisible(true);\n      },\n      children: \"Th\\xEAm m\\u1EDBi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n      width: 800,\n      title: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: idiomsId ? 'Cập nhật' : 'Thêm mới'\n      }, void 0, false),\n      visible: isModalVisible,\n      onCancel: function onCancel() {\n        return setIsModalVisible(false);\n      },\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          layout: \"vertical\",\n          onFinish: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(EditorField, {\n                form: form,\n                label: \"C\\xE2u th\\xE0nh ng\\u1EEF\",\n                name: \"Idioms\" // content={idiomsDetail ? idiomsDetail.Idioms : idiomsInput}\n                ,\n                handleChange: function handleChange(value) {\n                  return setIdiomsInput(value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 9\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 8\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [\"L\\u01B0u\", loading == true && /*#__PURE__*/_jsxDEV(Spin, {\n                  className: \"loading-base\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 30\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 9\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 8\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true);\n}, \"/sOwps7QA+tQ2U4l+Nk98bU1UFs=\", false, function () {\n  return [useForm, useWrap, useForm];\n}));\n_c2 = IdiomsForm;\nexport default IdiomsForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IdiomsForm$React.memo\");\n$RefreshReg$(_c2, \"IdiomsForm\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Option/IdiomsForm.tsx"],"names":["yupResolver","Form","Modal","Spin","Tooltip","React","useEffect","useState","useForm","yup","idiomsApi","EditorField","useWrap","IdiomsForm","memo","props","idiomsId","reloadData","idiomsDetail","currentPage","setValue","isModalVisible","setIsModalVisible","showNoti","loading","setLoading","idiomsInput","setIdiomsInput","isReset","setIsReset","defaultValuesInit","Idioms","schema","object","shape","string","required","form","defaultValues","resolver","console","log","onSubmit","data","update","ID","res","afterSubmit","message","add","Enable","status","reset","mes","color","fontSize","marginBottom","value"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Form, Modal, Spin, Tooltip } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport * as yup from 'yup'\r\nimport { idiomsApi } from '~/apiBase/options/idioms'\r\nimport EditorField from '~/components/FormControl/EditorField'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst IdiomsForm = React.memo((props: any) => {\r\n\tconst { idiomsId, reloadData, idiomsDetail, currentPage } = props\r\n\tconst { setValue } = useForm()\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n\tconst { showNoti } = useWrap()\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [idiomsInput, setIdiomsInput] = useState()\r\n\tconst [isReset, setIsReset] = useState(false)\r\n\r\n\tconst defaultValuesInit = {\r\n\t\tIdioms: ''\r\n\t}\r\n\tconst schema = yup.object().shape({\r\n\t\tIdioms: yup.string().required('Bạn không được để trống')\r\n\t})\r\n\tconst form = useForm({\r\n\t\tdefaultValues: defaultValuesInit,\r\n\t\tresolver: yupResolver(schema)\r\n\t})\r\n\tconsole.log(idiomsInput)\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tconsole.log(data)\r\n\t\tsetLoading(true)\r\n\t\tif (idiomsId) {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await idiomsApi.update({\r\n\t\t\t\t\t...data,\r\n\t\t\t\t\tID: idiomsId,\r\n\t\t\t\t\tIdioms: idiomsInput\r\n\t\t\t\t})\r\n\t\t\t\tafterSubmit(res?.data.message)\r\n\t\t\t\treloadData(currentPage)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await idiomsApi.add({\r\n\t\t\t\t\t...data,\r\n\t\t\t\t\tEnable: true,\r\n\t\t\t\t\tIdioms: idiomsInput\r\n\t\t\t\t})\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tform.reset({\r\n\t\t\t\t\t\tIdioms: ''\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tafterSubmit(res?.data.message)\r\n\t\t\t\treloadData(1)\r\n\t\t\t\tsetIdiomsInput(null)\r\n\t\t\t\tsetIsReset(true)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst afterSubmit = (mes) => {\r\n\t\tshowNoti('success', mes)\r\n\t\tsetLoading(false)\r\n\t\tsetIsModalVisible(false)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (idiomsDetail) {\r\n\t\t\tform.setValue('Idioms', idiomsDetail.Idioms)\r\n\t\t\tconsole.log(idiomsDetail.Idioms)\r\n\t\t}\r\n\t}, [isModalVisible])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{idiomsId ? (\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-icon edit\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetIsModalVisible(true)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Tooltip title=\"Cập nhật\">\r\n\t\t\t\t\t\t<i className=\"fas fa-edit\" style={{ color: '#34c4a4', fontSize: 16, marginBottom: -1 }}></i>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</button>\r\n\t\t\t) : (\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-warning add-new\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetIsModalVisible(true)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tThêm mới\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\r\n\t\t\t<Modal\r\n\t\t\t\twidth={800}\r\n\t\t\t\ttitle={<>{idiomsId ? 'Cập nhật' : 'Thêm mới'}</>}\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonCancel={() => setIsModalVisible(false)}\r\n\t\t\t\tfooter={null}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<Form layout=\"vertical\" onFinish={onSubmit}>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t<EditorField\r\n\t\t\t\t\t\t\t\t\tform={form}\r\n\t\t\t\t\t\t\t\t\tlabel=\"Câu thành ngữ\"\r\n\t\t\t\t\t\t\t\t\tname=\"Idioms\"\r\n\t\t\t\t\t\t\t\t\t// content={idiomsDetail ? idiomsDetail.Idioms : idiomsInput}\r\n\t\t\t\t\t\t\t\t\thandleChange={(value) => setIdiomsInput(value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-12 text-center\">\r\n\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\r\n\t\t\t\t\t\t\t\t\tLưu\r\n\t\t\t\t\t\t\t\t\t{loading == true && <Spin className=\"loading-base\" />}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n})\r\n\r\nexport default IdiomsForm\r\n"]},"metadata":{},"sourceType":"module"}
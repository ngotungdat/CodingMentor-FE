{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\ExamList\\\\MarkingExam\\\\DoneMarkingExam.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { FormOutlined, WarningOutlined } from '@ant-design/icons';\nimport { Input, Modal, Spin } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { examAppointmentResultApi } from '~/apiBase';\nimport { homeworkPonimentApi } from '~/apiBase/course-detail/home-work-pontment';\nimport { courseExamResultApi } from '~/apiBase/package/course-exam-result';\nimport { packageResultDetailApi } from '~/apiBase/package/package-result-detail';\nimport { useDoneTest } from '~/context/useDoneTest';\nimport { useWrap } from '~/context/wrap';\nconst {\n  TextArea\n} = Input;\n\nconst DoneMarkingExam = props => {\n  const {\n    onDoneMarking,\n    isMarked,\n    type\n  } = props;\n  const {\n    dataMarking,\n    getDataMarking\n  } = useDoneTest();\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: checkDone,\n    1: setCheckDone\n  } = useState(false);\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    handleMarkingExam();\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const remakeData = () => {\n    let dataSubmit = null;\n\n    switch (type) {\n      case 'test':\n        let dataTest = {\n          ExamAppointmentResultID: null,\n          Note: '',\n          examAppointmentExerciseStudentList: []\n        };\n        dataTest.ExamAppointmentResultID = dataMarking.SetPackageResultID;\n        dataTest.Note = dataMarking.Note;\n        dataTest.examAppointmentExerciseStudentList = [...dataMarking.setPackageExerciseStudentsList];\n        dataSubmit = _objectSpread({}, dataTest);\n        break;\n\n      case 'check':\n        let dataCheck = {\n          CourseExamresultID: dataMarking.SetPackageResultID,\n          Note: dataMarking.Note,\n          courseExamExerciseStudentList: [...dataMarking.setPackageExerciseStudentsList]\n        };\n        dataSubmit = _objectSpread({}, dataCheck);\n        break;\n\n      case 'homework':\n        let dataHW = {\n          HomeworkResultID: dataMarking.SetPackageResultID,\n          Note: dataMarking.Note,\n          homeworkExerciseStudenttList: [...dataMarking.setPackageExerciseStudentsList]\n        };\n        dataSubmit = _objectSpread({}, dataHW);\n        break;\n\n      default:\n        dataSubmit = _objectSpread({}, dataMarking);\n        break;\n    }\n\n    return dataSubmit;\n  };\n\n  const handleMarkingExam = async () => {\n    setLoading(true);\n    let dataSubmit = remakeData();\n    console.log('Data Submit: ', dataMarking);\n    let res = null;\n\n    try {\n      switch (type) {\n        case 'test':\n          res = await examAppointmentResultApi.updatePoint(dataSubmit);\n          break;\n\n        case 'check':\n          res = await courseExamResultApi.updatePoint(dataSubmit);\n          break;\n\n        case 'homework':\n          res = await homeworkPonimentApi.update(dataSubmit);\n          break;\n\n        default:\n          res = await packageResultDetailApi.updatePoint(dataSubmit);\n          break;\n      }\n\n      if (res.status === 200) {\n        showNoti('success', 'Hoàn tất chấm bài');\n        onDoneMarking && onDoneMarking();\n        setIsModalVisible(false);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onChange_note = value => {\n    getDataMarking(_objectSpread(_objectSpread({}, dataMarking), {}, {\n      Note: value\n    }));\n  };\n\n  useEffect(() => {\n    if (isModalVisible) {\n      let nullPoint = dataMarking === null || dataMarking === void 0 ? void 0 : dataMarking.setPackageExerciseStudentsList.some(item => item['Point'] == null);\n      setCheckDone(!nullPoint);\n    }\n  }, [isModalVisible]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-warning ml-2\",\n      onClick: showModal,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(FormOutlined, {\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }, this), \"Ho\\xE0n t\\u1EA5t ch\\u1EA5m b\\xE0i\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: isMarked || !checkDone ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-icon delete\",\n        children: /*#__PURE__*/_jsxDEV(WarningOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this) : 'Hoàn tất chấm bài',\n      footer: null,\n      visible: isModalVisible // onOk={handleOk}\n      ,\n      onCancel: handleCancel // confirmLoading={loading}\n      ,\n      children: isMarked ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0\",\n        style: {\n          fontWeight: 500\n        },\n        children: [\"\\u0110\\u1EC1 thi n\\xE0y \\u0111\\xE3 \\u0111\\u01B0\\u1EE3c ch\\u1EA5m. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 32\n        }, this), \" B\\u1EA1n ch\\u1EC9 \\u0111\\u01B0\\u1EE3c ch\\u1EA5m l\\u1EA1i khi c\\xF3 y\\xEAu c\\u1EA7u c\\u1EE7a h\\u1ECDc vi\\xEAn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 6\n      }, this) : !checkDone ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0\",\n        style: {\n          fontWeight: 500\n        },\n        children: [\"V\\u1EABn c\\xF2n c\\xE2u ch\\u01B0a \\u0111\\u01B0\\u1EE3c ch\\u1EA5m \\u0111i\\u1EC3m! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 40\n        }, this), \"Vui l\\xF2ng ch\\u1EA5m n\\u1ED1t s\\u1ED1 c\\xE2u c\\xF2n l\\u1EA1i\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: 500\n          },\n          children: \"Nh\\u1EADn x\\xE9t (c\\xF3 th\\u1EC3 \\u0111\\u1EC3 tr\\u1ED1ng)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n          onChange: e => onChange_note(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary w-100 mt-3\",\n          onClick: handleMarkingExam,\n          children: [\"L\\u01B0u\", loading && /*#__PURE__*/_jsxDEV(Spin, {\n            className: \"loading-base\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }, this), ' ']\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport default DoneMarkingExam;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/ExamList/MarkingExam/DoneMarkingExam.tsx"],"names":["FormOutlined","WarningOutlined","Input","Modal","Spin","React","useEffect","useState","examAppointmentResultApi","homeworkPonimentApi","courseExamResultApi","packageResultDetailApi","useDoneTest","useWrap","TextArea","DoneMarkingExam","props","onDoneMarking","isMarked","type","dataMarking","getDataMarking","showNoti","loading","setLoading","checkDone","setCheckDone","isModalVisible","setIsModalVisible","showModal","handleOk","handleMarkingExam","handleCancel","remakeData","dataSubmit","dataTest","ExamAppointmentResultID","Note","examAppointmentExerciseStudentList","SetPackageResultID","setPackageExerciseStudentsList","dataCheck","CourseExamresultID","courseExamExerciseStudentList","dataHW","HomeworkResultID","homeworkExerciseStudenttList","console","log","res","updatePoint","update","status","error","message","onChange_note","value","nullPoint","some","item","fontWeight","e","target"],"mappings":"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","sourcesContent":["import { FormOutlined, WarningOutlined } from '@ant-design/icons'\r\nimport { Input, Modal, Spin } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { examAppointmentResultApi } from '~/apiBase'\r\nimport { homeworkPonimentApi } from '~/apiBase/course-detail/home-work-pontment'\r\nimport { courseExamResultApi } from '~/apiBase/package/course-exam-result'\r\nimport { packageResultDetailApi } from '~/apiBase/package/package-result-detail'\r\nimport { useDoneTest } from '~/context/useDoneTest'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst { TextArea } = Input\r\n\r\nconst DoneMarkingExam = (props) => {\r\n\tconst { onDoneMarking, isMarked, type } = props\r\n\tconst { dataMarking, getDataMarking } = useDoneTest()\r\n\tconst { showNoti } = useWrap()\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [checkDone, setCheckDone] = useState(false)\r\n\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n\tconst showModal = () => {\r\n\t\tsetIsModalVisible(true)\r\n\t}\r\n\r\n\tconst handleOk = () => {\r\n\t\thandleMarkingExam()\r\n\t}\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false)\r\n\t}\r\n\r\n\tconst remakeData = () => {\r\n\t\tlet dataSubmit = null\r\n\t\tswitch (type) {\r\n\t\t\tcase 'test':\r\n\t\t\t\tlet dataTest = {\r\n\t\t\t\t\tExamAppointmentResultID: null,\r\n\t\t\t\t\tNote: '',\r\n\t\t\t\t\texamAppointmentExerciseStudentList: []\r\n\t\t\t\t}\r\n\t\t\t\tdataTest.ExamAppointmentResultID = dataMarking.SetPackageResultID\r\n\t\t\t\tdataTest.Note = dataMarking.Note\r\n\t\t\t\tdataTest.examAppointmentExerciseStudentList = [...dataMarking.setPackageExerciseStudentsList]\r\n\r\n\t\t\t\tdataSubmit = { ...dataTest }\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 'check':\r\n\t\t\t\tlet dataCheck = {\r\n\t\t\t\t\tCourseExamresultID: dataMarking.SetPackageResultID,\r\n\t\t\t\t\tNote: dataMarking.Note,\r\n\t\t\t\t\tcourseExamExerciseStudentList: [...dataMarking.setPackageExerciseStudentsList]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataSubmit = { ...dataCheck }\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 'homework':\r\n\t\t\t\tlet dataHW = {\r\n\t\t\t\t\tHomeworkResultID: dataMarking.SetPackageResultID,\r\n\t\t\t\t\tNote: dataMarking.Note,\r\n\t\t\t\t\thomeworkExerciseStudenttList: [...dataMarking.setPackageExerciseStudentsList]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataSubmit = { ...dataHW }\r\n\t\t\t\tbreak\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tdataSubmit = { ...dataMarking }\r\n\t\t\t\tbreak\r\n\t\t}\r\n\r\n\t\treturn dataSubmit\r\n\t}\r\n\r\n\tconst handleMarkingExam = async () => {\r\n\t\tsetLoading(true)\r\n\t\tlet dataSubmit = remakeData()\r\n\r\n\t\tconsole.log('Data Submit: ', dataMarking)\r\n\r\n\t\tlet res = null\r\n\r\n\t\ttry {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'test':\r\n\t\t\t\t\tres = await examAppointmentResultApi.updatePoint(dataSubmit)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'check':\r\n\t\t\t\t\tres = await courseExamResultApi.updatePoint(dataSubmit)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'homework':\r\n\t\t\t\t\tres = await homeworkPonimentApi.update(dataSubmit)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tres = await packageResultDetailApi.updatePoint(dataSubmit)\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tshowNoti('success', 'Hoàn tất chấm bài')\r\n\t\t\t\tonDoneMarking && onDoneMarking()\r\n\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onChange_note = (value) => {\r\n\t\tgetDataMarking({\r\n\t\t\t...dataMarking,\r\n\t\t\tNote: value\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isModalVisible) {\r\n\t\t\tlet nullPoint = dataMarking?.setPackageExerciseStudentsList.some((item) => item['Point'] == null)\r\n\t\t\tsetCheckDone(!nullPoint)\r\n\t\t}\r\n\t}, [isModalVisible])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button className=\"btn btn-warning ml-2\" onClick={showModal}>\r\n\t\t\t\t<span className=\"d-flex align-items-center\">\r\n\t\t\t\t\t<FormOutlined className=\"mr-2\" />\r\n\t\t\t\t\tHoàn tất chấm bài\r\n\t\t\t\t</span>\r\n\t\t\t</button>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={\r\n\t\t\t\t\tisMarked || !checkDone ? (\r\n\t\t\t\t\t\t<button className=\"btn btn-icon delete\">\r\n\t\t\t\t\t\t\t<WarningOutlined />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t'Hoàn tất chấm bài'\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\t// onOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t// confirmLoading={loading}\r\n\t\t\t>\r\n\t\t\t\t{isMarked ? (\r\n\t\t\t\t\t<p className=\"mb-0\" style={{ fontWeight: 500 }}>\r\n\t\t\t\t\t\tĐề thi này đã được chấm. <br /> Bạn chỉ được chấm lại khi có yêu cầu của học viên\r\n\t\t\t\t\t</p>\r\n\t\t\t\t) : !checkDone ? (\r\n\t\t\t\t\t<p className=\"mb-0\" style={{ fontWeight: 500 }}>\r\n\t\t\t\t\t\tVẫn còn câu chưa được chấm điểm! <br />\r\n\t\t\t\t\t\tVui lòng chấm nốt số câu còn lại\r\n\t\t\t\t\t</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<p style={{ fontWeight: 500 }}>Nhận xét (có thể để trống)</p>\r\n\t\t\t\t\t\t<TextArea onChange={(e) => onChange_note(e.target.value)}></TextArea>\r\n\t\t\t\t\t\t<button className=\"btn btn-primary w-100 mt-3\" onClick={handleMarkingExam}>\r\n\t\t\t\t\t\t\tLưu\r\n\t\t\t\t\t\t\t{loading && <Spin className=\"loading-base\" />}\r\n\t\t\t\t\t\t</button>{' '}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default DoneMarkingExam\r\n"]},"metadata":{},"sourceType":"module"}
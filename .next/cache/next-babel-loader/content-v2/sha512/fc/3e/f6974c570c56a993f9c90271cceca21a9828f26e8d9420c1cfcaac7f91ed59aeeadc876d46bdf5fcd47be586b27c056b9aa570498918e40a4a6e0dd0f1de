{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Customer\\\\Service\\\\Student\\\\ServiceTestStudent.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport moment from 'moment';\nimport router from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport { branchApi, studentApi, testCustomerApi, examTopicApi } from '~/apiBase';\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase';\nimport NotiModal from '~/components/Elements/NotiModal/NotiModal';\nimport SortBox from '~/components/Elements/SortBox';\nimport ExpandTable from '~/components/ExpandTable';\nimport LayoutBase from '~/components/LayoutBase';\nimport { useWrap } from '~/context/wrap';\nimport { EditOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport ExamAppointmentPoint from '../../../ExamAppointment/ExamAppointmentPoint';\nimport Link from 'next/link';\nvar pageIndex = 1;\nvar listFieldSearch = {\n  pageIndex: 1,\n  FullNameUnicode: null\n};\nvar listFieldFilter = {\n  pageIndex: 1,\n  BranchID: null,\n  // lọc\n  UserInformationID: null,\n  Status: null,\n  AppointmentDate: null\n};\nvar dataOption = [{\n  dataSort: {\n    sort: 2,\n    sortType: true\n  },\n  text: 'Tên A - Z '\n}, {\n  dataSort: {\n    sort: 2,\n    sortType: false\n  },\n  text: 'Tên Z - A'\n}, {\n  dataSort: {\n    sort: 0,\n    sortType: true\n  },\n  text: 'Ngày hẹn A - Z'\n}, {\n  dataSort: {\n    sort: 0,\n    sortType: false\n  },\n  text: 'Ngày hẹn Z - A'\n}]; // -- FOR DIFFERENT VIEW --\n\nvar listApi = [{\n  api: branchApi,\n  text: 'Trung tâm',\n  name: 'Branch'\n}, {\n  api: studentApi,\n  text: 'Học viên',\n  name: 'Student'\n}];\nexport default function ServiceTestStudent(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState({\n    Branch: [],\n    Student: []\n  }),\n      listDataForm = _useState[0],\n      setListDataForm = _useState[1];\n\n  var _useState2 = useState([]),\n      dataExam = _useState2[0],\n      setDataExam = _useState2[1];\n\n  var _useState3 = useState(null),\n      currentDate = _useState3[0],\n      setCurrentDate = _useState3[1];\n\n  var _useState4 = useState(false),\n      isOpenNoti = _useState4[0],\n      setisOpenNoti = _useState4[1];\n\n  var _useState5 = useState(''),\n      contentNoti = _useState5[0],\n      setContentNoti = _useState5[1]; // ------ BASE USESTATE TABLE -------\n\n\n  var _useState6 = useState([]),\n      dataSource = _useState6[0],\n      setDataSource = _useState6[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      pageSize = _useWrap.pageSize,\n      userInformation = _useWrap.userInformation;\n\n  var listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    sort: null,\n    sortType: null,\n    FullNameUnicode: null,\n    BranchID: null,\n    // lọc\n    UserInformationID: userInformation === null || userInformation === void 0 ? void 0 : userInformation.UserInformationID,\n    Status: null,\n    AppointmentDate: null\n  };\n\n  var _useState7 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState7[0],\n      setIsLoading = _useState7[1];\n\n  var _useState8 = useState(null),\n      totalPage = _useState8[0],\n      setTotalPage = _useState8[1];\n\n  var _useState9 = useState(null),\n      indexRow = _useState9[0],\n      setIndexRow = _useState9[1];\n\n  var _useState10 = useState(1),\n      currentPage = _useState10[0],\n      setCurrentPage = _useState10[1];\n\n  var _useState11 = useState(listTodoApi),\n      todoApi = _useState11[0],\n      setTodoApi = _useState11[1];\n\n  var _useState12 = useState(false),\n      showfirst = _useState12[0],\n      setShowFirst = _useState12[1]; // ------ LIST FILTER -------\n\n\n  var _useState13 = useState([{\n    name: 'BranchID',\n    title: 'Trung tâm',\n    col: 'col-md-12 col-12',\n    type: 'select',\n    optionList: null,\n    // Gọi api xong trả data vào đây\n    value: null\n  }, {\n    name: 'Status',\n    title: 'Trạng thái',\n    col: 'col-md-12 col-12',\n    type: 'select',\n    optionList: [{\n      title: 'Chưa test',\n      value: 0\n    }, {\n      title: 'Đang chấm bài test',\n      value: 1\n    }, {\n      title: 'Chưa đăng kí khóa học',\n      value: 2\n    }, {\n      title: 'Đã đăng kí khóa học',\n      value: 3\n    }, {\n      title: 'Đã hủy hẹn test',\n      value: 4\n    }],\n    value: null\n  }, {\n    name: 'AppointmentDate',\n    title: 'Ngày hẹn test',\n    col: 'col-md-12 col-12',\n    type: 'date-single',\n    value: null\n  }, {\n    name: 'date-range',\n    title: 'Từ - đến',\n    col: 'col-12',\n    type: 'date-range',\n    value: null\n  }]),\n      dataFilter = _useState13[0],\n      setDataFilter = _useState13[1];\n\n  var makeNewData = function makeNewData(data, name) {\n    var newData = null;\n\n    switch (name) {\n      case 'Branch':\n        newData = data.map(function (item) {\n          return {\n            title: item.BranchName,\n            value: item.ID\n          };\n        });\n        setDataFunc('BranchID', newData);\n        break;\n\n      case 'Student':\n        newData = data.map(function (item) {\n          return {\n            title: item.FullNameUnicode,\n            value: item.UserInformationID,\n            counselorsName: item.CounselorsName == null ? '' : item.CounselorsName\n          };\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    return newData;\n  };\n\n  var getDataTolist = function getDataTolist(data, name) {\n    var newData = makeNewData(data, name);\n    Object.keys(listDataForm).forEach(function (key) {\n      if (key == name) {\n        listDataForm[key] = newData;\n      }\n    });\n    setListDataForm(_objectSpread({}, listDataForm));\n  }; // ----------- GET DATA EXAM ------------\n\n\n  var getDataExam = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return examTopicApi.getAll({\n                selectAll: true,\n                type: 1\n              });\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                setDataExam(res.data.data);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('Error Exam: ', _context.t0.message);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function getDataExam() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // ----------- GET DATA SOURCE ---------------\n\n\n  var getDataAll = function getDataAll(arrApi) {\n    arrApi.forEach(function (item, index) {\n      ;\n\n      _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                res = null;\n                _context2.prev = 1;\n\n                if (!(item.name == 'Counselors')) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 5;\n                return item.api.getAll({\n                  pageIndex: 1,\n                  pageSize: 99999,\n                  RoleID: 6,\n                  StatusID: 0,\n                  Enable: true\n                });\n\n              case 5:\n                res = _context2.sent;\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.next = 10;\n                return item.api.getAll({\n                  pageIndex: 1,\n                  pageSize: 99999,\n                  Enable: true\n                });\n\n              case 10:\n                res = _context2.sent;\n\n              case 11:\n                res.status == 200 && getDataTolist(res.data.data, item.name);\n                res.status == 204 && showNoti('danger', item.text + ' Không có dữ liệu');\n                _context2.next = 18;\n                break;\n\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](1);\n                showNoti('danger', _context2.t0.message);\n\n              case 18:\n                _context2.prev = 18;\n                return _context2.finish(18);\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 15, 18, 20]]);\n      }))();\n    });\n  }; // GET DATA SOURCE\n\n\n  var getDataSource = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context3.prev = 1;\n              _context3.next = 4;\n              return testCustomerApi.getAll(todoApi);\n\n            case 4:\n              res = _context3.sent;\n\n              if (res.status == 200) {\n                setDataSource(res.data.data);\n                setTotalPage(res.data.totalRow); //@ts-ignore\n                // setTestDate(moment(res.data.data.AppointmentDate).format('DD/MM/YYYY HH:mm'));\n              }\n\n              res.status == 204 && setDataSource([]);\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](1);\n              showNoti('danger', _context3.t0.message);\n\n            case 12:\n              _context3.prev = 12;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context3.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function getDataSource() {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // ------ SET DATA FUN ------\n\n\n  var setDataFunc = function setDataFunc(name, data) {\n    dataFilter.every(function (item, index) {\n      if (item.name == name) {\n        item.optionList = data;\n        return false;\n      }\n\n      return true;\n    });\n    setDataFilter(_toConsumableArray(dataFilter));\n  }; // ---------------- AFTER SUBMIT -----------------\n\n\n  var afterPost = function afterPost(mes) {\n    // showNoti(\"success\", mes);\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // ----------------- ON SUBMIT --------------------\n\n\n  var _onSubmit = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dataSubmit) {\n      var res, newDataSource, _res;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              res = null;\n              _context4.prev = 2;\n\n              if (!dataSubmit.ID) {\n                _context4.next = 10;\n                break;\n              }\n\n              _context4.next = 6;\n              return testCustomerApi.update(dataSubmit);\n\n            case 6:\n              res = _context4.sent;\n\n              if (res.status == 200) {\n                newDataSource = _toConsumableArray(dataSource);\n                newDataSource.splice(indexRow, 1, _objectSpread(_objectSpread({}, dataSubmit), {}, {\n                  FullNameUnicode: listDataForm.Student.find(function (item) {\n                    return item.value == dataSubmit.UserInformationID;\n                  }).title,\n                  BranchName: listDataForm.Branch.find(function (item) {\n                    return item.value == dataSubmit.BranchID;\n                  }).title\n                }));\n                setDataSource(newDataSource);\n                showNoti('success', res.data.message);\n              }\n\n              _context4.next = 14;\n              break;\n\n            case 10:\n              _context4.next = 12;\n              return testCustomerApi.add(dataSubmit);\n\n            case 12:\n              res = _context4.sent;\n              ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && afterPost(res.data.message);\n\n            case 14:\n              _context4.next = 20;\n              break;\n\n            case 16:\n              _context4.prev = 16;\n              _context4.t0 = _context4[\"catch\"](2);\n              console.log('error: ', _context4.t0);\n              showNoti('danger', _context4.t0.message);\n\n            case 20:\n              _context4.prev = 20;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context4.finish(20);\n\n            case 23:\n              return _context4.abrupt(\"return\", res);\n\n            case 24:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 16, 20, 23]]);\n    }));\n\n    return function _onSubmit(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // -------------- HANDLE FILTER ------------------\n\n\n  var _handleFilter = function handleFilter(listFilter) {\n    var newListFilter = _objectSpread({}, listFieldFilter);\n\n    listFilter.forEach(function (item, index) {\n      var key = item.name;\n      Object.keys(newListFilter).forEach(function (keyFilter) {\n        if (keyFilter == key) {\n          newListFilter[key] = item.value;\n        }\n      });\n    });\n    setTodoApi(_objectSpread(_objectSpread(_objectSpread({}, listTodoApi), newListFilter), {}, {\n      pageIndex: 1\n    }));\n  }; // --------------- HANDLE SORT ----------------------\n\n\n  var _handleSort = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(option) {\n      var newTodoApi;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n                pageIndex: 1,\n                sort: option.title.sort,\n                sortType: option.title.sortType\n              });\n              setCurrentPage(1), setTodoApi(newTodoApi);\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function handleSort(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); // ------------ ON SEARCH -----------------------\n\n\n  var checkField = function checkField(valueSearch, dataIndex) {\n    var newList = _objectSpread({}, listFieldSearch);\n\n    Object.keys(newList).forEach(function (key) {\n      if (key != dataIndex) {\n        if (key != 'pageIndex') {\n          newList[key] = null;\n        }\n      } else {\n        newList[key] = valueSearch;\n      }\n    });\n    return newList;\n  };\n\n  var onSearch = function onSearch(valueSearch, dataIndex) {\n    var clearKey = checkField(valueSearch, dataIndex);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), clearKey));\n  }; // HANDLE RESET\n\n\n  var resetListFieldSearch = function resetListFieldSearch() {\n    Object.keys(listFieldSearch).forEach(function (key) {\n      if (key != 'pageIndex') {\n        listFieldSearch[key] = null;\n      }\n    });\n  };\n\n  var handleReset = function handleReset() {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1), resetListFieldSearch();\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  var _getPagination = function getPagination(pageNumber) {\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      // ...listFieldSearch,\n      pageIndex: pageIndex\n    }));\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(function () {\n    if (userInformation) {\n      getDataSource();\n    }\n  }, [todoApi]);\n  useEffect(function () {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    if (userInformation) {\n      !showfirst && (setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n        UserInformationID: userInformation.UserInformationID\n      })), setShowFirst(true));\n    }\n  }, [userInformation]);\n  useEffect(function () {\n    // getDataAll(listApi);\n    getDataExam(); // Get current date\n\n    var currentdate = new Date();\n    var datetime = currentdate.getDate() + '/' + (currentdate.getMonth() + 1) + '/' + currentdate.getFullYear() + ' ' + currentdate.getHours() + ':' + currentdate.getMinutes();\n    setCurrentDate(datetime);\n  }, []);\n\n  var moveToTest = function moveToTest(e, data) {\n    e.preventDefault();\n    var testDate = moment(data.AppointmentDate).format('DD/MM/YYYY') + ' ' + data.Time;\n    testDate = new Date(testDate);\n\n    if (new Date(currentDate) < testDate) {\n      setisOpenNoti(true);\n      setContentNoti('Chưa đến giờ làm bài test');\n    } else {\n      if (data.Status == 0) {\n        router.push({\n          pathname: '/exam/exam-review',\n          query: {\n            examID: data.ExamTopicID,\n            packageDetailID: data.ID,\n            type: 'test'\n          }\n        });\n      } else {\n        setisOpenNoti(true);\n\n        if (data.Status !== 4) {\n          setContentNoti('Bạn đã làm bài test này rồi!');\n        } else {\n          setContentNoti('Lịch hẹn test của bạn đã bị hủy');\n        }\n      }\n    }\n  }; // const expandedRowRender = (record) => {\n  // \t// return record.Note ? record.Note : \"Không có ghi chú\";\n  // \treturn (\n  // \t\t<>\n  // \t\t\t<div className=\"box-note mt-2\">\n  // \t\t\t\t<h6 className=\"d-block text-underline\">Ghi chú:</h6>\n  // \t\t\t\t<p>{record.Note}</p>\n  // \t\t\t</div>\n  // \t\t\t<TestCustomerPoint ID={record.ID} />\n  // \t\t</>\n  // \t);\n  // };\n\n\n  var expandedRowRender = function expandedRowRender(data, index) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ExamAppointmentPoint, {\n        infoID: data.ID,\n        userID: data.UserInformationID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false);\n  };\n\n  var columns = [{\n    title: 'Ngày hẹn',\n    dataIndex: 'AppointmentDate',\n    render: function render(date) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: moment(date).format('DD/MM/YYYY')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 27\n      }, _this);\n    }\n  }, {\n    title: 'Giờ hẹn',\n    dataIndex: 'Time',\n    render: function render(text) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 22\n      }, _this);\n    }\n  }, {\n    width: 150,\n    title: 'Trung tâm',\n    dataIndex: 'BranchName',\n    render: function render(a) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: a\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 19\n      }, _this);\n    }\n  }, {\n    width: 150,\n    title: 'Đề test',\n    dataIndex: 'ExamTopicnName',\n    render: function render(text, data) {\n      return data.Status == 0 && data.ExamTopicID !== 0 && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"L\\xE0m \\u0111\\u1EC1 test\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"\",\n          className: \"font-weight-link d-flex align-items-center\",\n          onClick: function onClick(e) {\n            return moveToTest(e, data);\n          },\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 6\n      }, _this);\n    }\n  }, {\n    title: 'Tư vấn viên',\n    dataIndex: 'CounselorsName'\n  }, {\n    title: 'Trạng thái',\n    dataIndex: 'Status',\n    width: 100,\n    filters: [{\n      text: 'Chưa test',\n      value: 0\n    }, {\n      text: 'Đang chấm bài',\n      value: 1\n    }, {\n      text: 'Chờ đăng kí khóa học',\n      value: 2\n    }, {\n      text: 'Đã đăng kí khóa học',\n      value: 3\n    }],\n    onFilter: function onFilter(value, record) {\n      return record.Status === value;\n    },\n    render: function render(status) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [status == 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag red\",\n          children: \"Ch\\u01B0a test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 23\n        }, _this), status == 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag blue\",\n          children: \"\\u0110ang ch\\u1EA5m b\\xE0i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 23\n        }, _this), status == 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag yellow\",\n          children: \"Ch\\u1EDD \\u0111\\u0103ng k\\xED kh\\xF3a h\\u1ECDc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 23\n        }, _this), status == 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag green\",\n          children: \"\\u0110\\xE3 \\u0111\\u0103ng k\\xED kh\\xF3a h\\u1ECDc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 23\n        }, _this), status == 4 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag gray\",\n          children: \"\\u0110\\xE3 h\\u1EE7y h\\u1EB9n test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 23\n        }, _this)]\n      }, void 0, true);\n    }\n  }, {\n    title: '',\n    render: function render(text, data, index) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [data.ExamAppointmentResultID !== 0 && /*#__PURE__*/_jsxDEV(Link, {\n          href: {\n            pathname: '/customer/service/service-test-student/detail/[slug]',\n            query: {\n              slug: data.ID,\n              examID: data.ExamTopicID,\n              ExamAppointmentResultID: data.ExamAppointmentResultID\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Chi ti\\u1EBFt k\\u1EBFt qu\\u1EA3 \\u0111\\u1EC1 h\\u1EB9n test\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-icon\",\n              children: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 9\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 7\n        }, _this), data.Status == 0 && data.ExamTopicID !== 0 && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"L\\xE0m \\u0111\\u1EC1 test\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-icon edit mr-2\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"\",\n              className: \"font-weight-link d-flex align-items-center\",\n              onClick: function onClick(e) {\n                return moveToTest(e, data);\n              },\n              children: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 9\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 7\n        }, _this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NotiModal, {\n      isOpen: isOpenNoti,\n      isCancel: function isCancel() {\n        return setisOpenNoti(false);\n      },\n      isOk: function isOk() {\n        return setisOpenNoti(false);\n      },\n      content: contentNoti\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ExpandTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: function getPagination(pageNumber) {\n        return _getPagination(pageNumber);\n      },\n      loading: isLoading,\n      addClass: \"basic-header\",\n      TitlePage: \"Th\\xF4ng tin h\\u1EB9n test\",\n      dataSource: dataSource,\n      columns: columns,\n      Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: [/*#__PURE__*/_jsxDEV(FilterBase, {\n          dataFilter: dataFilter,\n          handleFilter: function handleFilter(listFilter) {\n            return _handleFilter(listFilter);\n          },\n          handleReset: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(SortBox, {\n          handleSort: function handleSort(value) {\n            return _handleSort(value);\n          },\n          dataOption: dataOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 6\n      }, this),\n      expandable: {\n        expandedRowRender: expandedRowRender\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ServiceTestStudent, \"H4OKDqqykAZY8YLO1dYqo7hSnrc=\", false, function () {\n  return [useWrap];\n});\n\n_c = ServiceTestStudent;\nServiceTestStudent.layout = LayoutBase;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServiceTestStudent\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Customer/Service/Student/ServiceTestStudent.tsx"],"names":["moment","router","React","useEffect","useState","branchApi","studentApi","testCustomerApi","examTopicApi","FilterBase","NotiModal","SortBox","ExpandTable","LayoutBase","useWrap","EditOutlined","ExclamationCircleOutlined","Tooltip","ExamAppointmentPoint","Link","pageIndex","listFieldSearch","FullNameUnicode","listFieldFilter","BranchID","UserInformationID","Status","AppointmentDate","dataOption","dataSort","sort","sortType","text","listApi","api","name","ServiceTestStudent","props","Branch","Student","listDataForm","setListDataForm","dataExam","setDataExam","currentDate","setCurrentDate","isOpenNoti","setisOpenNoti","contentNoti","setContentNoti","dataSource","setDataSource","showNoti","pageSize","userInformation","listTodoApi","type","status","isLoading","setIsLoading","totalPage","setTotalPage","indexRow","setIndexRow","currentPage","setCurrentPage","todoApi","setTodoApi","showfirst","setShowFirst","title","col","optionList","value","dataFilter","setDataFilter","makeNewData","data","newData","map","item","BranchName","ID","setDataFunc","counselorsName","CounselorsName","getDataTolist","Object","keys","forEach","key","getDataExam","getAll","selectAll","res","console","log","message","getDataAll","arrApi","index","RoleID","StatusID","Enable","getDataSource","totalRow","every","afterPost","mes","_onSubmit","dataSubmit","update","newDataSource","splice","find","add","handleFilter","listFilter","newListFilter","keyFilter","handleSort","option","newTodoApi","checkField","valueSearch","dataIndex","newList","onSearch","clearKey","resetListFieldSearch","handleReset","getPagination","pageNumber","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","moveToTest","e","preventDefault","testDate","format","Time","push","pathname","query","examID","ExamTopicID","packageDetailID","expandedRowRender","columns","render","date","width","a","filters","onFilter","record","ExamAppointmentResultID","slug","layout"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,eAAhC,EAAiDC,YAAjD,QAAqE,WAArE;AACA,OAAOC,UAAP,MAAuB,6CAAvB;AACA,OAAOC,SAAP,MAAsB,2CAAtB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,SAASC,YAAT,EAAuBC,yBAAvB,QAAwD,mBAAxD;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAOC,oBAAP,MAAiC,+CAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,IAAIC,SAAS,GAAG,CAAhB;AAEA,IAAIC,eAAe,GAAG;AACrBD,EAAAA,SAAS,EAAE,CADU;AAErBE,EAAAA,eAAe,EAAE;AAFI,CAAtB;AAKA,IAAIC,eAAe,GAAG;AACrBH,EAAAA,SAAS,EAAE,CADU;AAErBI,EAAAA,QAAQ,EAAE,IAFW;AAEL;AAChBC,EAAAA,iBAAiB,EAAE,IAHE;AAIrBC,EAAAA,MAAM,EAAE,IAJa;AAKrBC,EAAAA,eAAe,EAAE;AALI,CAAtB;AAQA,IAAMC,UAAU,GAAG,CAClB;AACCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADX;AAKCC,EAAAA,IAAI,EAAE;AALP,CADkB,EAQlB;AACCH,EAAAA,QAAQ,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADX;AAKCC,EAAAA,IAAI,EAAE;AALP,CARkB,EAgBlB;AACCH,EAAAA,QAAQ,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADX;AAKCC,EAAAA,IAAI,EAAE;AALP,CAhBkB,EAuBlB;AACCH,EAAAA,QAAQ,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADX;AAKCC,EAAAA,IAAI,EAAE;AALP,CAvBkB,CAAnB,C,CAgCA;;AAiBA,IAAMC,OAAO,GAAG,CACf;AACCC,EAAAA,GAAG,EAAE7B,SADN;AAEC2B,EAAAA,IAAI,EAAE,WAFP;AAGCG,EAAAA,IAAI,EAAE;AAHP,CADe,EAMf;AACCD,EAAAA,GAAG,EAAE5B,UADN;AAEC0B,EAAAA,IAAI,EAAE,UAFP;AAGCG,EAAAA,IAAI,EAAE;AAHP,CANe,CAAhB;AAaA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAAA;;AAAA,kBACTjC,QAAQ,CAAe;AAAEkC,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAAf,CADC;AAAA,MAC1CC,YAD0C;AAAA,MAC5BC,eAD4B;;AAAA,mBAEjBrC,QAAQ,CAAe,EAAf,CAFS;AAAA,MAE1CsC,QAF0C;AAAA,MAEhCC,WAFgC;;AAAA,mBAGXvC,QAAQ,CAAM,IAAN,CAHG;AAAA,MAG1CwC,WAH0C;AAAA,MAG7BC,cAH6B;;AAAA,mBAIbzC,QAAQ,CAAC,KAAD,CAJK;AAAA,MAI1C0C,UAJ0C;AAAA,MAI9BC,aAJ8B;;AAAA,mBAKX3C,QAAQ,CAAC,EAAD,CALG;AAAA,MAK1C4C,WAL0C;AAAA,MAK7BC,cAL6B,kBAOjD;;;AAPiD,mBAQb7C,QAAQ,CAAkB,EAAlB,CARK;AAAA,MAQ1C8C,UAR0C;AAAA,MAQ9BC,aAR8B;;AAAA,iBASDrC,OAAO,EATN;AAAA,MASzCsC,QATyC,YASzCA,QATyC;AAAA,MAS/BC,QAT+B,YAS/BA,QAT+B;AAAA,MASrBC,eATqB,YASrBA,eATqB;;AAWjD,MAAMC,WAAW,GAAG;AACnBF,IAAAA,QAAQ,EAAEA,QADS;AAEnBjC,IAAAA,SAAS,EAAEA,SAFQ;AAGnBU,IAAAA,IAAI,EAAE,IAHa;AAInBC,IAAAA,QAAQ,EAAE,IAJS;AAKnBT,IAAAA,eAAe,EAAE,IALE;AAMnBE,IAAAA,QAAQ,EAAE,IANS;AAMH;AAChBC,IAAAA,iBAAiB,EAAE6B,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAE7B,iBAPjB;AAQnBC,IAAAA,MAAM,EAAE,IARW;AASnBC,IAAAA,eAAe,EAAE;AATE,GAApB;;AAXiD,mBAsBfvB,QAAQ,CAAC;AAC1CoD,IAAAA,IAAI,EAAE,EADoC;AAE1CC,IAAAA,MAAM,EAAE;AAFkC,GAAD,CAtBO;AAAA,MAsB1CC,SAtB0C;AAAA,MAsB/BC,YAtB+B;;AAAA,mBA0BfvD,QAAQ,CAAC,IAAD,CA1BO;AAAA,MA0B1CwD,SA1B0C;AAAA,MA0B/BC,YA1B+B;;AAAA,mBA2BjBzD,QAAQ,CAAC,IAAD,CA3BS;AAAA,MA2B1C0D,QA3B0C;AAAA,MA2BhCC,WA3BgC;;AAAA,oBA4BX3D,QAAQ,CAAC,CAAD,CA5BG;AAAA,MA4B1C4D,WA5B0C;AAAA,MA4B7BC,cA5B6B;;AAAA,oBA6BnB7D,QAAQ,CAACmD,WAAD,CA7BW;AAAA,MA6B1CW,OA7B0C;AAAA,MA6BjCC,UA7BiC;;AAAA,oBA8Bf/D,QAAQ,CAAC,KAAD,CA9BO;AAAA,MA8B1CgE,SA9B0C;AAAA,MA8B/BC,YA9B+B,mBAgCjD;;;AAhCiD,oBAiCbjE,QAAQ,CAAC,CAC5C;AACC+B,IAAAA,IAAI,EAAE,UADP;AAECmC,IAAAA,KAAK,EAAE,WAFR;AAGCC,IAAAA,GAAG,EAAE,kBAHN;AAICf,IAAAA,IAAI,EAAE,QAJP;AAKCgB,IAAAA,UAAU,EAAE,IALb;AAKmB;AAClBC,IAAAA,KAAK,EAAE;AANR,GAD4C,EAU5C;AACCtC,IAAAA,IAAI,EAAE,QADP;AAECmC,IAAAA,KAAK,EAAE,YAFR;AAGCC,IAAAA,GAAG,EAAE,kBAHN;AAICf,IAAAA,IAAI,EAAE,QAJP;AAKCgB,IAAAA,UAAU,EAAE,CACX;AACCF,MAAAA,KAAK,EAAE,WADR;AAECG,MAAAA,KAAK,EAAE;AAFR,KADW,EAKX;AACCH,MAAAA,KAAK,EAAE,oBADR;AAECG,MAAAA,KAAK,EAAE;AAFR,KALW,EASX;AACCH,MAAAA,KAAK,EAAE,uBADR;AAECG,MAAAA,KAAK,EAAE;AAFR,KATW,EAaX;AACCH,MAAAA,KAAK,EAAE,qBADR;AAECG,MAAAA,KAAK,EAAE;AAFR,KAbW,EAiBX;AACCH,MAAAA,KAAK,EAAE,iBADR;AAECG,MAAAA,KAAK,EAAE;AAFR,KAjBW,CALb;AA2BCA,IAAAA,KAAK,EAAE;AA3BR,GAV4C,EAuC5C;AACCtC,IAAAA,IAAI,EAAE,iBADP;AAECmC,IAAAA,KAAK,EAAE,eAFR;AAGCC,IAAAA,GAAG,EAAE,kBAHN;AAICf,IAAAA,IAAI,EAAE,aAJP;AAKCiB,IAAAA,KAAK,EAAE;AALR,GAvC4C,EA8C5C;AACCtC,IAAAA,IAAI,EAAE,YADP;AAECmC,IAAAA,KAAK,EAAE,UAFR;AAGCC,IAAAA,GAAG,EAAE,QAHN;AAICf,IAAAA,IAAI,EAAE,YAJP;AAKCiB,IAAAA,KAAK,EAAE;AALR,GA9C4C,CAAD,CAjCK;AAAA,MAiC1CC,UAjC0C;AAAA,MAiC9BC,aAjC8B;;AAwFjD,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAO1C,IAAP,EAAgB;AACnC,QAAI2C,OAAO,GAAG,IAAd;;AACA,YAAQ3C,IAAR;AACC,WAAK,QAAL;AACC2C,QAAAA,OAAO,GAAGD,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD;AAAA,iBAAW;AAC7BV,YAAAA,KAAK,EAAEU,IAAI,CAACC,UADiB;AAE7BR,YAAAA,KAAK,EAAEO,IAAI,CAACE;AAFiB,WAAX;AAAA,SAAT,CAAV;AAIAC,QAAAA,WAAW,CAAC,UAAD,EAAaL,OAAb,CAAX;AACA;;AAED,WAAK,SAAL;AACCA,QAAAA,OAAO,GAAGD,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD;AAAA,iBAAW;AAC7BV,YAAAA,KAAK,EAAEU,IAAI,CAAC1D,eADiB;AAE7BmD,YAAAA,KAAK,EAAEO,IAAI,CAACvD,iBAFiB;AAG7B2D,YAAAA,cAAc,EAAEJ,IAAI,CAACK,cAAL,IAAuB,IAAvB,GAA8B,EAA9B,GAAmCL,IAAI,CAACK;AAH3B,WAAX;AAAA,SAAT,CAAV;AAMA;;AACD;AACC;AAlBF;;AAqBA,WAAOP,OAAP;AACA,GAxBD;;AA0BA,MAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACT,IAAD,EAAY1C,IAAZ,EAA0B;AAC/C,QAAI2C,OAAO,GAAGF,WAAW,CAACC,IAAD,EAAO1C,IAAP,CAAzB;AAEAoD,IAAAA,MAAM,CAACC,IAAP,CAAYhD,YAAZ,EAA0BiD,OAA1B,CAAkC,UAAUC,GAAV,EAAe;AAChD,UAAIA,GAAG,IAAIvD,IAAX,EAAiB;AAChBK,QAAAA,YAAY,CAACkD,GAAD,CAAZ,GAAoBZ,OAApB;AACA;AACD,KAJD;AAKArC,IAAAA,eAAe,mBAAMD,YAAN,EAAf;AACA,GATD,CAlHiD,CA6HjD;;;AACA,MAAMmD,WAAW;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEFnF,YAAY,CAACoF,MAAb,CAAoB;AACnCC,gBAAAA,SAAS,EAAE,IADwB;AAEnCrC,gBAAAA,IAAI,EAAE;AAF6B,eAApB,CAFE;;AAAA;AAEdsC,cAAAA,GAFc;;AAMlB,kBAAIA,GAAG,CAACrC,MAAJ,KAAe,GAAnB,EAAwB;AACvBd,gBAAAA,WAAW,CAACmD,GAAG,CAACjB,IAAJ,CAASA,IAAV,CAAX;AACA;;AARiB;AAAA;;AAAA;AAAA;AAAA;AAUlBkB,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,YAAMC,OAAlC;;AAVkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXN,WAAW;AAAA;AAAA;AAAA,KAAjB,CA9HiD,CA4IjD;;;AACA,MAAMO,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAY;AAC9BA,IAAAA,MAAM,CAACV,OAAP,CAAe,UAACT,IAAD,EAAOoB,KAAP,EAAiB;AAC/B;;AAAC,+DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACGN,gBAAAA,GADH,GACS,IADT;AAAA;;AAAA,sBAGId,IAAI,CAAC7C,IAAL,IAAa,YAHjB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIa6C,IAAI,CAAC9C,GAAL,CAAS0D,MAAT,CAAgB;AAC3BxE,kBAAAA,SAAS,EAAE,CADgB;AAE3BiC,kBAAAA,QAAQ,EAAE,KAFiB;AAG3BgD,kBAAAA,MAAM,EAAE,CAHmB;AAI3BC,kBAAAA,QAAQ,EAAE,CAJiB;AAK3BC,kBAAAA,MAAM,EAAE;AALmB,iBAAhB,CAJb;;AAAA;AAICT,gBAAAA,GAJD;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAYad,IAAI,CAAC9C,GAAL,CAAS0D,MAAT,CAAgB;AAC3BxE,kBAAAA,SAAS,EAAE,CADgB;AAE3BiC,kBAAAA,QAAQ,EAAE,KAFiB;AAG3BkD,kBAAAA,MAAM,EAAE;AAHmB,iBAAhB,CAZb;;AAAA;AAYCT,gBAAAA,GAZD;;AAAA;AAmBAA,gBAAAA,GAAG,CAACrC,MAAJ,IAAc,GAAd,IAAqB6B,aAAa,CAACQ,GAAG,CAACjB,IAAJ,CAASA,IAAV,EAAgBG,IAAI,CAAC7C,IAArB,CAAlC;AAEA2D,gBAAAA,GAAG,CAACrC,MAAJ,IAAc,GAAd,IAAqBL,QAAQ,CAAC,QAAD,EAAW4B,IAAI,CAAChD,IAAL,GAAY,mBAAvB,CAA7B;AArBA;AAAA;;AAAA;AAAA;AAAA;AAuBAoB,gBAAAA,QAAQ,CAAC,QAAD,EAAW,aAAM6C,OAAjB,CAAR;;AAvBA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;AA2BD,KA5BD;AA6BA,GA9BD,CA7IiD,CA6KjD;;;AACA,MAAMO,aAAa;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACrB7C,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,SADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AADqB;AAAA;AAAA,qBAOJlD,eAAe,CAACqF,MAAhB,CAAuB1B,OAAvB,CAPI;;AAAA;AAOhB4B,cAAAA,GAPgB;;AAQpB,kBAAIA,GAAG,CAACrC,MAAJ,IAAc,GAAlB,EAAuB;AACtBN,gBAAAA,aAAa,CAAC2C,GAAG,CAACjB,IAAJ,CAASA,IAAV,CAAb;AACAhB,gBAAAA,YAAY,CAACiC,GAAG,CAACjB,IAAJ,CAAS4B,QAAV,CAAZ,CAFsB,CAGtB;AACA;AACA;;AACDX,cAAAA,GAAG,CAACrC,MAAJ,IAAc,GAAd,IAAqBN,aAAa,CAAC,EAAD,CAAlC;AAdoB;AAAA;;AAAA;AAAA;AAAA;AAgBpBC,cAAAA,QAAQ,CAAC,QAAD,EAAW,aAAM6C,OAAjB,CAAR;;AAhBoB;AAAA;AAkBpBtC,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,SADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AAlBoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAb+C,aAAa;AAAA;AAAA;AAAA,KAAnB,CA9KiD,CAuMjD;;;AACA,MAAMrB,WAAW,GAAG,SAAdA,WAAc,CAAChD,IAAD,EAAO0C,IAAP,EAAgB;AACnCH,IAAAA,UAAU,CAACgC,KAAX,CAAiB,UAAC1B,IAAD,EAAOoB,KAAP,EAAiB;AACjC,UAAIpB,IAAI,CAAC7C,IAAL,IAAaA,IAAjB,EAAuB;AACtB6C,QAAAA,IAAI,CAACR,UAAL,GAAkBK,IAAlB;AACA,eAAO,KAAP;AACA;;AACD,aAAO,IAAP;AACA,KAND;AAOAF,IAAAA,aAAa,oBAAKD,UAAL,EAAb;AACA,GATD,CAxMiD,CAmNjD;;;AACA,MAAMiC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAS;AAC1B;AACAzC,IAAAA,UAAU,iCACNZ,WADM;AAETnC,MAAAA,SAAS,EAAE;AAFF,OAAV;AAIA6C,IAAAA,cAAc,CAAC,CAAD,CAAd;AACA,GAPD,CApNiD,CA6NjD;;;AACA,MAAM4C,SAAS;AAAA,yEAAG,kBAAOC,UAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBnD,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,UADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AAKIqC,cAAAA,GANa,GAMP,IANO;AAAA;;AAAA,mBASZgB,UAAU,CAAC5B,EATC;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUH3E,eAAe,CAACwG,MAAhB,CAAuBD,UAAvB,CAVG;;AAAA;AAUfhB,cAAAA,GAVe;;AAYf,kBAAIA,GAAG,CAACrC,MAAJ,IAAc,GAAlB,EAAuB;AAClBuD,gBAAAA,aADkB,sBACE9D,UADF;AAEtB8D,gBAAAA,aAAa,CAACC,MAAd,CAAqBnD,QAArB,EAA+B,CAA/B,kCACIgD,UADJ;AAECxF,kBAAAA,eAAe,EAAEkB,YAAY,CAACD,OAAb,CAAqB2E,IAArB,CAA0B,UAAClC,IAAD;AAAA,2BAAUA,IAAI,CAACP,KAAL,IAAcqC,UAAU,CAACrF,iBAAnC;AAAA,mBAA1B,EAAgF6C,KAFlG;AAGCW,kBAAAA,UAAU,EAAEzC,YAAY,CAACF,MAAb,CAAoB4E,IAApB,CAAyB,UAAClC,IAAD;AAAA,2BAAUA,IAAI,CAACP,KAAL,IAAcqC,UAAU,CAACtF,QAAnC;AAAA,mBAAzB,EAAsE8C;AAHnF;AAKAnB,gBAAAA,aAAa,CAAC6D,aAAD,CAAb;AACA5D,gBAAAA,QAAQ,CAAC,SAAD,EAAY0C,GAAG,CAACjB,IAAJ,CAASoB,OAArB,CAAR;AACA;;AArBc;AAAA;;AAAA;AAAA;AAAA,qBAuBH1F,eAAe,CAAC4G,GAAhB,CAAoBL,UAApB,CAvBG;;AAAA;AAuBfhB,cAAAA,GAvBe;AAwBf,uBAAAA,GAAG,UAAH,oCAAKrC,MAAL,KAAe,GAAf,IAAsBkD,SAAS,CAACb,GAAG,CAACjB,IAAJ,CAASoB,OAAV,CAA/B;;AAxBe;AAAA;AAAA;;AAAA;AAAA;AAAA;AA2BhBF,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA5C,cAAAA,QAAQ,CAAC,QAAD,EAAW,aAAM6C,OAAjB,CAAR;;AA5BgB;AAAA;AA8BhBtC,cAAAA,YAAY,CAAC;AACZH,gBAAAA,IAAI,EAAE,UADM;AAEZC,gBAAAA,MAAM,EAAE;AAFI,eAAD,CAAZ;AA9BgB;;AAAA;AAAA,gDAoCVqC,GApCU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATe,SAAS;AAAA;AAAA;AAAA,KAAf,CA9NiD,CAqQjD;;;AACA,MAAMO,aAAY,GAAG,SAAfA,YAAe,CAACC,UAAD,EAAgB;AACpC,QAAIC,aAAa,qBAAQ/F,eAAR,CAAjB;;AACA8F,IAAAA,UAAU,CAAC5B,OAAX,CAAmB,UAACT,IAAD,EAAOoB,KAAP,EAAiB;AACnC,UAAIV,GAAG,GAAGV,IAAI,CAAC7C,IAAf;AACAoD,MAAAA,MAAM,CAACC,IAAP,CAAY8B,aAAZ,EAA2B7B,OAA3B,CAAmC,UAAC8B,SAAD,EAAe;AACjD,YAAIA,SAAS,IAAI7B,GAAjB,EAAsB;AACrB4B,UAAAA,aAAa,CAAC5B,GAAD,CAAb,GAAqBV,IAAI,CAACP,KAA1B;AACA;AACD,OAJD;AAKA,KAPD;AAQAN,IAAAA,UAAU,+CAAMZ,WAAN,GAAsB+D,aAAtB;AAAqClG,MAAAA,SAAS,EAAE;AAAhD,OAAV;AACA,GAXD,CAtQiD,CAmRjD;;;AACA,MAAMoG,WAAU;AAAA,yEAAG,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,cAAAA,UADc,mCAEdnE,WAFc;AAGjBnC,gBAAAA,SAAS,EAAE,CAHM;AAIjBU,gBAAAA,IAAI,EAAE2F,MAAM,CAACnD,KAAP,CAAaxC,IAJF;AAKjBC,gBAAAA,QAAQ,EAAE0F,MAAM,CAACnD,KAAP,CAAavC;AALN;AAOlBkC,cAAAA,cAAc,CAAC,CAAD,CAAd,EAAmBE,UAAU,CAACuD,UAAD,CAA7B;;AAPkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVF,UAAU;AAAA;AAAA;AAAA,KAAhB,CApRiD,CA8RjD;;;AAEA,MAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,WAAD,EAAcC,SAAd,EAA4B;AAC9C,QAAIC,OAAO,qBAAQzG,eAAR,CAAX;;AACAkE,IAAAA,MAAM,CAACC,IAAP,CAAYsC,OAAZ,EAAqBrC,OAArB,CAA6B,UAAUC,GAAV,EAAe;AAC3C,UAAIA,GAAG,IAAImC,SAAX,EAAsB;AACrB,YAAInC,GAAG,IAAI,WAAX,EAAwB;AACvBoC,UAAAA,OAAO,CAACpC,GAAD,CAAP,GAAe,IAAf;AACA;AACD,OAJD,MAIO;AACNoC,QAAAA,OAAO,CAACpC,GAAD,CAAP,GAAekC,WAAf;AACA;AACD,KARD;AAUA,WAAOE,OAAP;AACA,GAbD;;AAeA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACH,WAAD,EAAcC,SAAd,EAA4B;AAC5C,QAAIG,QAAQ,GAAGL,UAAU,CAACC,WAAD,EAAcC,SAAd,CAAzB;AAEA1D,IAAAA,UAAU,iCACND,OADM,GAEN8D,QAFM,EAAV;AAIA,GAPD,CA/SiD,CAwTjD;;;AACA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAClC1C,IAAAA,MAAM,CAACC,IAAP,CAAYnE,eAAZ,EAA6BoE,OAA7B,CAAqC,UAAUC,GAAV,EAAe;AACnD,UAAIA,GAAG,IAAI,WAAX,EAAwB;AACvBrE,QAAAA,eAAe,CAACqE,GAAD,CAAf,GAAuB,IAAvB;AACA;AACD,KAJD;AAKA,GAND;;AAQA,MAAMwC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACzB/D,IAAAA,UAAU,iCACNZ,WADM;AAETnC,MAAAA,SAAS,EAAE;AAFF,OAAV;AAIA6C,IAAAA,cAAc,CAAC,CAAD,CAAd,EAAmBgE,oBAAoB,EAAvC;AACA,GAND,CAjUiD,CAyUjD;;;AACA,MAAME,cAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAwB;AAC7ChH,IAAAA,SAAS,GAAGgH,UAAZ;AACAnE,IAAAA,cAAc,CAACmE,UAAD,CAAd;AACAjE,IAAAA,UAAU,iCACND,OADM;AAET;AACA9C,MAAAA,SAAS,EAAEA;AAHF,OAAV;AAKA,GARD,CA1UiD,CAoVjD;;;AACAjB,EAAAA,SAAS,CAAC,YAAM;AACf,QAAImD,eAAJ,EAAqB;AACpBkD,MAAAA,aAAa;AACb;AACD,GAJQ,EAIN,CAACtC,OAAD,CAJM,CAAT;AAMA/D,EAAAA,SAAS,CAAC,YAAM;AACfwD,IAAAA,YAAY,CAAC;AACZH,MAAAA,IAAI,EAAE,SADM;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAD,CAAZ;;AAIA,QAAIH,eAAJ,EAAqB;AACpB,OAACc,SAAD,KAAeD,UAAU,iCAAMD,OAAN;AAAezC,QAAAA,iBAAiB,EAAE6B,eAAe,CAAC7B;AAAlD,SAAV,EAAkF4C,YAAY,CAAC,IAAD,CAA7G;AACA;AACD,GARQ,EAQN,CAACf,eAAD,CARM,CAAT;AAUAnD,EAAAA,SAAS,CAAC,YAAM;AACf;AACAwF,IAAAA,WAAW,GAFI,CAIf;;AACA,QAAI0C,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACA,QAAIC,QAAQ,GACXF,WAAW,CAACG,OAAZ,KACA,GADA,IAECH,WAAW,CAACI,QAAZ,KAAyB,CAF1B,IAGA,GAHA,GAIAJ,WAAW,CAACK,WAAZ,EAJA,GAKA,GALA,GAMAL,WAAW,CAACM,QAAZ,EANA,GAOA,GAPA,GAQAN,WAAW,CAACO,UAAZ,EATD;AAWA/F,IAAAA,cAAc,CAAC0F,QAAD,CAAd;AACA,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,MAAMM,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAIjE,IAAJ,EAAa;AAC/BiE,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,QAAa,GAAGhJ,MAAM,CAAC6E,IAAI,CAAClD,eAAN,CAAN,CAA6BsH,MAA7B,CAAoC,YAApC,IAAoD,GAApD,GAA0DpE,IAAI,CAACqE,IAAnF;AAEAF,IAAAA,QAAQ,GAAG,IAAIV,IAAJ,CAASU,QAAT,CAAX;;AAEA,QAAI,IAAIV,IAAJ,CAAS1F,WAAT,IAAwBoG,QAA5B,EAAsC;AACrCjG,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,MAAAA,cAAc,CAAC,2BAAD,CAAd;AACA,KAHD,MAGO;AACN,UAAI4B,IAAI,CAACnD,MAAL,IAAe,CAAnB,EAAsB;AACrBzB,QAAAA,MAAM,CAACkJ,IAAP,CAAY;AACXC,UAAAA,QAAQ,EAAE,mBADC;AAEXC,UAAAA,KAAK,EAAE;AACNC,YAAAA,MAAM,EAAEzE,IAAI,CAAC0E,WADP;AAENC,YAAAA,eAAe,EAAE3E,IAAI,CAACK,EAFhB;AAGN1B,YAAAA,IAAI,EAAE;AAHA;AAFI,SAAZ;AAQA,OATD,MASO;AACNT,QAAAA,aAAa,CAAC,IAAD,CAAb;;AACA,YAAI8B,IAAI,CAACnD,MAAL,KAAgB,CAApB,EAAuB;AACtBuB,UAAAA,cAAc,CAAC,8BAAD,CAAd;AACA,SAFD,MAEO;AACNA,UAAAA,cAAc,CAAC,iCAAD,CAAd;AACA;AACD;AACD;AACD,GA7BD,CAzXiD,CAwZjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMwG,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC5E,IAAD,EAAOuB,KAAP,EAAiB;AAC1C,wBACC;AAAA,6BACC,QAAC,oBAAD;AAAsB,QAAA,MAAM,EAAEvB,IAAI,CAACK,EAAnC;AAAuC,QAAA,MAAM,EAAEL,IAAI,CAACpD;AAApD;AAAA;AAAA;AAAA;AAAA;AADD,qBADD;AAKA,GAND;;AAQA,MAAMiI,OAAO,GAAG,CACf;AACCpF,IAAAA,KAAK,EAAE,UADR;AAECuD,IAAAA,SAAS,EAAE,iBAFZ;AAGC8B,IAAAA,MAAM,EAAE,gBAACC,IAAD;AAAA,0BAAe;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA,kBAAkC5J,MAAM,CAAC4J,IAAD,CAAN,CAAaX,MAAb,CAAoB,YAApB;AAAlC;AAAA;AAAA;AAAA;AAAA,eAAf;AAAA;AAHT,GADe,EAMf;AACC3E,IAAAA,KAAK,EAAE,SADR;AAECuD,IAAAA,SAAS,EAAE,MAFZ;AAGC8B,IAAAA,MAAM,EAAE,gBAAC3H,IAAD;AAAA,0BAAU;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA,kBAAkCA;AAAlC;AAAA;AAAA;AAAA;AAAA,eAAV;AAAA;AAHT,GANe,EAWf;AACC6H,IAAAA,KAAK,EAAE,GADR;AAECvF,IAAAA,KAAK,EAAE,WAFR;AAGCuD,IAAAA,SAAS,EAAE,YAHZ;AAIC8B,IAAAA,MAAM,EAAE,gBAACG,CAAD;AAAA,0BAAO;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA,kBAAkCA;AAAlC;AAAA;AAAA;AAAA;AAAA,eAAP;AAAA;AAJT,GAXe,EAiBf;AACCD,IAAAA,KAAK,EAAE,GADR;AAECvF,IAAAA,KAAK,EAAE,SAFR;AAGCuD,IAAAA,SAAS,EAAE,gBAHZ;AAIC8B,IAAAA,MAAM,EAAE,gBAAC3H,IAAD,EAAO6C,IAAP;AAAA,aACPA,IAAI,CAACnD,MAAL,IAAe,CAAf,IACAmD,IAAI,CAAC0E,WAAL,KAAqB,CADrB,iBAEC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,0BAAf;AAAA,+BACC;AAAG,UAAA,IAAI,EAAC,EAAR;AAAW,UAAA,SAAS,EAAC,4CAArB;AAAkE,UAAA,OAAO,EAAE,iBAACT,CAAD;AAAA,mBAAOD,UAAU,CAACC,CAAD,EAAIjE,IAAJ,CAAjB;AAAA,WAA3E;AAAA,oBACE7C;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,eAHM;AAAA;AAJT,GAjBe,EA+Bf;AACCsC,IAAAA,KAAK,EAAE,aADR;AAECuD,IAAAA,SAAS,EAAE;AAFZ,GA/Be,EAmCf;AACCvD,IAAAA,KAAK,EAAE,YADR;AAECuD,IAAAA,SAAS,EAAE,QAFZ;AAGCgC,IAAAA,KAAK,EAAE,GAHR;AAICE,IAAAA,OAAO,EAAE,CACR;AACC/H,MAAAA,IAAI,EAAE,WADP;AAECyC,MAAAA,KAAK,EAAE;AAFR,KADQ,EAKR;AACCzC,MAAAA,IAAI,EAAE,eADP;AAECyC,MAAAA,KAAK,EAAE;AAFR,KALQ,EASR;AACCzC,MAAAA,IAAI,EAAE,sBADP;AAECyC,MAAAA,KAAK,EAAE;AAFR,KATQ,EAaR;AACCzC,MAAAA,IAAI,EAAE,qBADP;AAECyC,MAAAA,KAAK,EAAE;AAFR,KAbQ,CAJV;AAsBCuF,IAAAA,QAAQ,EAAE,kBAACvF,KAAD,EAAQwF,MAAR;AAAA,aAAmBA,MAAM,CAACvI,MAAP,KAAkB+C,KAArC;AAAA,KAtBX;AAuBCkF,IAAAA,MAAM,EAAE,gBAAClG,MAAD,EAAY;AACnB,0BACC;AAAA,mBACEA,MAAM,IAAI,CAAV,iBAAe;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADjB,EAEEA,MAAM,IAAI,CAAV,iBAAe;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFjB,EAGEA,MAAM,IAAI,CAAV,iBAAe;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHjB,EAIEA,MAAM,IAAI,CAAV,iBAAe;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJjB,EAKEA,MAAM,IAAI,CAAV,iBAAe;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALjB;AAAA,sBADD;AASA;AAjCF,GAnCe,EAsEf;AACCa,IAAAA,KAAK,EAAE,EADR;AAECqF,IAAAA,MAAM,EAAE,gBAAC3H,IAAD,EAAO6C,IAAP,EAAauB,KAAb;AAAA,0BACP;AAAA,mBACEvB,IAAI,CAACqF,uBAAL,KAAiC,CAAjC,iBACA,QAAC,IAAD;AACC,UAAA,IAAI,EAAE;AACLd,YAAAA,QAAQ,EAAE,sDADL;AAELC,YAAAA,KAAK,EAAE;AACNc,cAAAA,IAAI,EAAEtF,IAAI,CAACK,EADL;AAENoE,cAAAA,MAAM,EAAEzE,IAAI,CAAC0E,WAFP;AAGNW,cAAAA,uBAAuB,EAAErF,IAAI,CAACqF;AAHxB;AAFF,WADP;AAAA,iCAUC,QAAC,OAAD;AAAS,YAAA,KAAK,EAAC,4DAAf;AAAA,mCACC;AAAQ,cAAA,SAAS,EAAC,cAAlB;AAAA,qCACC,QAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAVD;AAAA;AAAA;AAAA;AAAA,iBAFF,EAoBErF,IAAI,CAACnD,MAAL,IAAe,CAAf,IAAoBmD,IAAI,CAAC0E,WAAL,KAAqB,CAAzC,iBACA,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,0BAAf;AAAA,iCACC;AAAQ,YAAA,SAAS,EAAC,wBAAlB;AAAA,mCACC;AAAG,cAAA,IAAI,EAAC,EAAR;AAAW,cAAA,SAAS,EAAC,4CAArB;AAAkE,cAAA,OAAO,EAAE,iBAACT,CAAD;AAAA,uBAAOD,UAAU,CAACC,CAAD,EAAIjE,IAAJ,CAAjB;AAAA,eAA3E;AAAA,qCACC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,iBArBF;AAAA,sBADO;AAAA;AAFT,GAtEe,CAAhB;AA2GA,sBACC;AAAA,4BACC,QAAC,SAAD;AAAW,MAAA,MAAM,EAAE/B,UAAnB;AAA+B,MAAA,QAAQ,EAAE;AAAA,eAAMC,aAAa,CAAC,KAAD,CAAnB;AAAA,OAAzC;AAAqE,MAAA,IAAI,EAAE;AAAA,eAAMA,aAAa,CAAC,KAAD,CAAnB;AAAA,OAA3E;AAAuG,MAAA,OAAO,EAAEC;AAAhH;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,WAAD;AACC,MAAA,WAAW,EAAEgB,WADd;AAEC,MAAA,SAAS,EAAEJ,SAAS,IAAIA,SAFzB;AAGC,MAAA,aAAa,EAAE,uBAACwE,UAAD;AAAA,eAAwBD,cAAa,CAACC,UAAD,CAArC;AAAA,OAHhB;AAIC,MAAA,OAAO,EAAE1E,SAJV;AAKC,MAAA,QAAQ,EAAC,cALV;AAMC,MAAA,SAAS,EAAC,4BANX;AAOC,MAAA,UAAU,EAAER,UAPb;AAQC,MAAA,OAAO,EAAEwG,OARV;AASC,MAAA,KAAK,eACJ;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACC,QAAC,UAAD;AAAY,UAAA,UAAU,EAAEhF,UAAxB;AAAoC,UAAA,YAAY,EAAE,sBAAC2C,UAAD;AAAA,mBAAqBD,aAAY,CAACC,UAAD,CAAjC;AAAA,WAAlD;AAAiG,UAAA,WAAW,EAAEa;AAA9G;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,OAAD;AAAS,UAAA,UAAU,EAAE,oBAACzD,KAAD;AAAA,mBAAW+C,WAAU,CAAC/C,KAAD,CAArB;AAAA,WAArB;AAAmD,UAAA,UAAU,EAAE7C;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAeC,MAAA,UAAU,EAAE;AAAE6H,QAAAA,iBAAiB,EAAjBA;AAAF;AAfb;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAsBA;;GA9iBuBrH,kB;UASyBtB,O;;;KATzBsB,kB;AAgjBxBA,kBAAkB,CAACgI,MAAnB,GAA4BvJ,UAA5B","sourcesContent":["import moment from 'moment'\r\nimport router from 'next/router'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { branchApi, studentApi, testCustomerApi, examTopicApi } from '~/apiBase'\r\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase'\r\nimport NotiModal from '~/components/Elements/NotiModal/NotiModal'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport ExpandTable from '~/components/ExpandTable'\r\n\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nimport { EditOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport { Tooltip } from 'antd'\r\nimport ExamAppointmentPoint from '../../../ExamAppointment/ExamAppointmentPoint'\r\nimport Link from 'next/link'\r\n\r\nlet pageIndex = 1\r\n\r\nlet listFieldSearch = {\r\n\tpageIndex: 1,\r\n\tFullNameUnicode: null\r\n}\r\n\r\nlet listFieldFilter = {\r\n\tpageIndex: 1,\r\n\tBranchID: null, // lọc\r\n\tUserInformationID: null,\r\n\tStatus: null,\r\n\tAppointmentDate: null\r\n}\r\n\r\nconst dataOption = [\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Tên A - Z '\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Tên Z - A'\r\n\t},\r\n\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Ngày hẹn A - Z'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Ngày hẹn Z - A'\r\n\t}\r\n]\r\n\r\n// -- FOR DIFFERENT VIEW --\r\ninterface optionObj {\r\n\ttitle: string\r\n\tvalue: number\r\n}\r\n\r\ninterface studentObj {\r\n\ttitle: string\r\n\tvalue: number\r\n\tcounselorsName: string\r\n}\r\n\r\ninterface listDataForm {\r\n\tBranch: Array<optionObj>\r\n\tStudent: Array<studentObj>\r\n}\r\n\r\nconst listApi = [\r\n\t{\r\n\t\tapi: branchApi,\r\n\t\ttext: 'Trung tâm',\r\n\t\tname: 'Branch'\r\n\t},\r\n\t{\r\n\t\tapi: studentApi,\r\n\t\ttext: 'Học viên',\r\n\t\tname: 'Student'\r\n\t}\r\n]\r\n\r\nexport default function ServiceTestStudent(props) {\r\n\tconst [listDataForm, setListDataForm] = useState<listDataForm>({ Branch: [], Student: [] })\r\n\tconst [dataExam, setDataExam] = useState<IExamTopic[]>([])\r\n\tconst [currentDate, setCurrentDate] = useState<any>(null)\r\n\tconst [isOpenNoti, setisOpenNoti] = useState(false)\r\n\tconst [contentNoti, setContentNoti] = useState('')\r\n\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState<ITestCustomer[]>([])\r\n\tconst { showNoti, pageSize, userInformation } = useWrap()\r\n\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tFullNameUnicode: null,\r\n\t\tBranchID: null, // lọc\r\n\t\tUserInformationID: userInformation?.UserInformationID,\r\n\t\tStatus: null,\r\n\t\tAppointmentDate: null\r\n\t}\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [indexRow, setIndexRow] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\tconst [showfirst, setShowFirst] = useState(false)\r\n\r\n\t// ------ LIST FILTER -------\r\n\tconst [dataFilter, setDataFilter] = useState([\r\n\t\t{\r\n\t\t\tname: 'BranchID',\r\n\t\t\ttitle: 'Trung tâm',\r\n\t\t\tcol: 'col-md-12 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null, // Gọi api xong trả data vào đây\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tname: 'Status',\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tcol: 'col-md-12 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Chưa test',\r\n\t\t\t\t\tvalue: 0\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Đang chấm bài test',\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Chưa đăng kí khóa học',\r\n\t\t\t\t\tvalue: 2\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Đã đăng kí khóa học',\r\n\t\t\t\t\tvalue: 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Đã hủy hẹn test',\r\n\t\t\t\t\tvalue: 4\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'AppointmentDate',\r\n\t\t\ttitle: 'Ngày hẹn test',\r\n\t\t\tcol: 'col-md-12 col-12',\r\n\t\t\ttype: 'date-single',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'date-range',\r\n\t\t\ttitle: 'Từ - đến',\r\n\t\t\tcol: 'col-12',\r\n\t\t\ttype: 'date-range',\r\n\t\t\tvalue: null\r\n\t\t}\r\n\t])\r\n\r\n\tconst makeNewData = (data, name) => {\r\n\t\tlet newData = null\r\n\t\tswitch (name) {\r\n\t\t\tcase 'Branch':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.BranchName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('BranchID', newData)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 'Student':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.FullNameUnicode,\r\n\t\t\t\t\tvalue: item.UserInformationID,\r\n\t\t\t\t\tcounselorsName: item.CounselorsName == null ? '' : item.CounselorsName\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\r\n\t\treturn newData\r\n\t}\r\n\r\n\tconst getDataTolist = (data: any, name: any) => {\r\n\t\tlet newData = makeNewData(data, name)\r\n\r\n\t\tObject.keys(listDataForm).forEach(function (key) {\r\n\t\t\tif (key == name) {\r\n\t\t\t\tlistDataForm[key] = newData\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetListDataForm({ ...listDataForm })\r\n\t}\r\n\r\n\t// ----------- GET DATA EXAM ------------\r\n\tconst getDataExam = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await examTopicApi.getAll({\r\n\t\t\t\tselectAll: true,\r\n\t\t\t\ttype: 1\r\n\t\t\t})\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetDataExam(res.data.data)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Error Exam: ', error.message)\r\n\t\t}\r\n\t}\r\n\r\n\t// ----------- GET DATA SOURCE ---------------\r\n\tconst getDataAll = (arrApi) => {\r\n\t\tarrApi.forEach((item, index) => {\r\n\t\t\t;(async () => {\r\n\t\t\t\tlet res = null\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (item.name == 'Counselors') {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tRoleID: 6,\r\n\t\t\t\t\t\t\tStatusID: 0,\r\n\t\t\t\t\t\t\tEnable: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tEnable: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tres.status == 200 && getDataTolist(res.data.data, item.name)\r\n\r\n\t\t\t\t\tres.status == 204 && showNoti('danger', item.text + ' Không có dữ liệu')\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t\t} finally {\r\n\t\t\t\t}\r\n\t\t\t})()\r\n\t\t})\r\n\t}\r\n\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await testCustomerApi.getAll(todoApi)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetDataSource(res.data.data)\r\n\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\t// setTestDate(moment(res.data.data.AppointmentDate).format('DD/MM/YYYY HH:mm'));\r\n\t\t\t}\r\n\t\t\tres.status == 204 && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// ------ SET DATA FUN ------\r\n\tconst setDataFunc = (name, data) => {\r\n\t\tdataFilter.every((item, index) => {\r\n\t\t\tif (item.name == name) {\r\n\t\t\t\titem.optionList = data\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t\tsetDataFilter([...dataFilter])\r\n\t}\r\n\r\n\t// ---------------- AFTER SUBMIT -----------------\r\n\tconst afterPost = (mes) => {\r\n\t\t// showNoti(\"success\", mes);\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// ----------------- ON SUBMIT --------------------\r\n\tconst _onSubmit = async (dataSubmit: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet res = null\r\n\r\n\t\ttry {\r\n\t\t\tif (dataSubmit.ID) {\r\n\t\t\t\tres = await testCustomerApi.update(dataSubmit)\r\n\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tlet newDataSource = [...dataSource]\r\n\t\t\t\t\tnewDataSource.splice(indexRow, 1, {\r\n\t\t\t\t\t\t...dataSubmit,\r\n\t\t\t\t\t\tFullNameUnicode: listDataForm.Student.find((item) => item.value == dataSubmit.UserInformationID).title,\r\n\t\t\t\t\t\tBranchName: listDataForm.Branch.find((item) => item.value == dataSubmit.BranchID).title\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetDataSource(newDataSource)\r\n\t\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tres = await testCustomerApi.add(dataSubmit)\r\n\t\t\t\tres?.status == 200 && afterPost(res.data.message)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error: ', error)\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\t// -------------- HANDLE FILTER ------------------\r\n\tconst handleFilter = (listFilter) => {\r\n\t\tlet newListFilter = { ...listFieldFilter }\r\n\t\tlistFilter.forEach((item, index) => {\r\n\t\t\tlet key = item.name\r\n\t\t\tObject.keys(newListFilter).forEach((keyFilter) => {\r\n\t\t\t\tif (keyFilter == key) {\r\n\t\t\t\t\tnewListFilter[key] = item.value\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tsetTodoApi({ ...listTodoApi, ...newListFilter, pageIndex: 1 })\r\n\t}\r\n\r\n\t// --------------- HANDLE SORT ----------------------\r\n\tconst handleSort = async (option) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetCurrentPage(1), setTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// ------------ ON SEARCH -----------------------\r\n\r\n\tconst checkField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = { ...listFieldSearch }\r\n\t\tObject.keys(newList).forEach(function (key) {\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\t\tnewList[key] = null\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewList[key] = valueSearch\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn newList\r\n\t}\r\n\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tlet clearKey = checkField(valueSearch, dataIndex)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t...clearKey\r\n\t\t})\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tconst resetListFieldSearch = () => {\r\n\t\tObject.keys(listFieldSearch).forEach(function (key) {\r\n\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\tlistFieldSearch[key] = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1), resetListFieldSearch()\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tpageIndex = pageNumber\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t// ...listFieldSearch,\r\n\t\t\tpageIndex: pageIndex\r\n\t\t})\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tif (userInformation) {\r\n\t\t\tgetDataSource()\r\n\t\t}\r\n\t}, [todoApi])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\tif (userInformation) {\r\n\t\t\t!showfirst && (setTodoApi({ ...todoApi, UserInformationID: userInformation.UserInformationID }), setShowFirst(true))\r\n\t\t}\r\n\t}, [userInformation])\r\n\r\n\tuseEffect(() => {\r\n\t\t// getDataAll(listApi);\r\n\t\tgetDataExam()\r\n\r\n\t\t// Get current date\r\n\t\tlet currentdate = new Date()\r\n\t\tlet datetime =\r\n\t\t\tcurrentdate.getDate() +\r\n\t\t\t'/' +\r\n\t\t\t(currentdate.getMonth() + 1) +\r\n\t\t\t'/' +\r\n\t\t\tcurrentdate.getFullYear() +\r\n\t\t\t' ' +\r\n\t\t\tcurrentdate.getHours() +\r\n\t\t\t':' +\r\n\t\t\tcurrentdate.getMinutes()\r\n\r\n\t\tsetCurrentDate(datetime)\r\n\t}, [])\r\n\r\n\tconst moveToTest = (e, data) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tlet testDate: any = moment(data.AppointmentDate).format('DD/MM/YYYY') + ' ' + data.Time\r\n\r\n\t\ttestDate = new Date(testDate)\r\n\r\n\t\tif (new Date(currentDate) < testDate) {\r\n\t\t\tsetisOpenNoti(true)\r\n\t\t\tsetContentNoti('Chưa đến giờ làm bài test')\r\n\t\t} else {\r\n\t\t\tif (data.Status == 0) {\r\n\t\t\t\trouter.push({\r\n\t\t\t\t\tpathname: '/exam/exam-review',\r\n\t\t\t\t\tquery: {\r\n\t\t\t\t\t\texamID: data.ExamTopicID,\r\n\t\t\t\t\t\tpackageDetailID: data.ID,\r\n\t\t\t\t\t\ttype: 'test'\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tsetisOpenNoti(true)\r\n\t\t\t\tif (data.Status !== 4) {\r\n\t\t\t\t\tsetContentNoti('Bạn đã làm bài test này rồi!')\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetContentNoti('Lịch hẹn test của bạn đã bị hủy')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// const expandedRowRender = (record) => {\r\n\t// \t// return record.Note ? record.Note : \"Không có ghi chú\";\r\n\t// \treturn (\r\n\t// \t\t<>\r\n\t// \t\t\t<div className=\"box-note mt-2\">\r\n\t// \t\t\t\t<h6 className=\"d-block text-underline\">Ghi chú:</h6>\r\n\t// \t\t\t\t<p>{record.Note}</p>\r\n\t// \t\t\t</div>\r\n\t// \t\t\t<TestCustomerPoint ID={record.ID} />\r\n\t// \t\t</>\r\n\t// \t);\r\n\t// };\r\n\r\n\tconst expandedRowRender = (data, index) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<ExamAppointmentPoint infoID={data.ID} userID={data.UserInformationID} />\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Ngày hẹn',\r\n\t\t\tdataIndex: 'AppointmentDate',\r\n\t\t\trender: (date: any) => <p className=\"font-weight-black\">{moment(date).format('DD/MM/YYYY')}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Giờ hẹn',\r\n\t\t\tdataIndex: 'Time',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 150,\r\n\t\t\ttitle: 'Trung tâm',\r\n\t\t\tdataIndex: 'BranchName',\r\n\t\t\trender: (a) => <p className=\"font-weight-black\">{a}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 150,\r\n\t\t\ttitle: 'Đề test',\r\n\t\t\tdataIndex: 'ExamTopicnName',\r\n\t\t\trender: (text, data: any) =>\r\n\t\t\t\tdata.Status == 0 &&\r\n\t\t\t\tdata.ExamTopicID !== 0 && (\r\n\t\t\t\t\t<Tooltip title=\"Làm đề test\">\r\n\t\t\t\t\t\t<a href=\"\" className=\"font-weight-link d-flex align-items-center\" onClick={(e) => moveToTest(e, data)}>\r\n\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tư vấn viên',\r\n\t\t\tdataIndex: 'CounselorsName'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tdataIndex: 'Status',\r\n\t\t\twidth: 100,\r\n\t\t\tfilters: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Chưa test',\r\n\t\t\t\t\tvalue: 0\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Đang chấm bài',\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Chờ đăng kí khóa học',\r\n\t\t\t\t\tvalue: 2\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Đã đăng kí khóa học',\r\n\t\t\t\t\tvalue: 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tonFilter: (value, record) => record.Status === value,\r\n\t\t\trender: (status) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{status == 0 && <span className=\"tag red\">Chưa test</span>}\r\n\t\t\t\t\t\t{status == 1 && <span className=\"tag blue\">Đang chấm bài</span>}\r\n\t\t\t\t\t\t{status == 2 && <span className=\"tag yellow\">Chờ đăng kí khóa học</span>}\r\n\t\t\t\t\t\t{status == 3 && <span className=\"tag green\">Đã đăng kí khóa học</span>}\r\n\t\t\t\t\t\t{status == 4 && <span className=\"tag gray\">Đã hủy hẹn test</span>}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t\trender: (text, data, index) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{data.ExamAppointmentResultID !== 0 && (\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\t\tpathname: '/customer/service/service-test-student/detail/[slug]',\r\n\t\t\t\t\t\t\t\tquery: {\r\n\t\t\t\t\t\t\t\t\tslug: data.ID,\r\n\t\t\t\t\t\t\t\t\texamID: data.ExamTopicID,\r\n\t\t\t\t\t\t\t\t\tExamAppointmentResultID: data.ExamAppointmentResultID\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Tooltip title=\"Chi tiết kết quả đề hẹn test\">\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-icon\">\r\n\t\t\t\t\t\t\t\t\t<ExclamationCircleOutlined />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{data.Status == 0 && data.ExamTopicID !== 0 && (\r\n\t\t\t\t\t\t<Tooltip title=\"Làm đề test\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-icon edit mr-2\">\r\n\t\t\t\t\t\t\t\t<a href=\"\" className=\"font-weight-link d-flex align-items-center\" onClick={(e) => moveToTest(e, data)}>\r\n\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<NotiModal isOpen={isOpenNoti} isCancel={() => setisOpenNoti(false)} isOk={() => setisOpenNoti(false)} content={contentNoti} />\r\n\t\t\t<ExpandTable\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Thông tin hẹn test\"\r\n\t\t\t\tdataSource={dataSource}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t<FilterBase dataFilter={dataFilter} handleFilter={(listFilter: any) => handleFilter(listFilter)} handleReset={handleReset} />\r\n\t\t\t\t\t\t<SortBox handleSort={(value) => handleSort(value)} dataOption={dataOption} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\texpandable={{ expandedRowRender }}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nServiceTestStudent.layout = LayoutBase\r\n"]},"metadata":{},"sourceType":"module"}
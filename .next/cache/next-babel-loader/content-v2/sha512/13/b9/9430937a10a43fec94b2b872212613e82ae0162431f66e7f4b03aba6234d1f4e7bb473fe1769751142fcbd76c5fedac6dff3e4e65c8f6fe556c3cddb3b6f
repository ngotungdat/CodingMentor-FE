{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\Global\\\\ExamAppointment\\\\ExamAppointmentPoint.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n//@ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport NestedTable from '~/components/Elements/NestedTable';\nimport { useWrap } from '~/context/wrap';\nimport { examAppointmentResultApi } from '~/apiBase';\nimport { homeworkResultApi } from '~/apiBase/course-detail/home-work-result';\n\nvar ExamAppointmentPoint = function ExamAppointmentPoint(props) {\n  _s();\n\n  var _detail$;\n\n  var infoID = props.infoID,\n      userID = props.userID,\n      isExercise = props.isExercise,\n      visible = props.visible;\n\n  var _useState = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState([]),\n      detail = _useState2[0],\n      setDetail = _useState2[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      userInformation = _useWrap.userInformation;\n\n  var _useState3 = useState(false),\n      isDone = _useState3[0],\n      setIsDone = _useState3[1];\n\n  var fetchDetailInfo = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, arr;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return examAppointmentResultApi.getAll({\n                selectAll: true,\n                UserInformationID: userID,\n                ExamAppointmentID: infoID\n              });\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status == 200) {\n                setIsDone(res.data.data[0].isDone);\n                arr = [];\n                arr.push(res.data.data[0]);\n                setDetail(arr);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              showNoti('danger', _context.t0.message);\n\n            case 11:\n              _context.prev = 11;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8, 11, 14]]);\n    }));\n\n    return function fetchDetailInfo() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fetchDetailExercise = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res, arr;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(visible == true)) {\n                _context2.next = 15;\n                break;\n              }\n\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context2.prev = 2;\n              _context2.next = 5;\n              return homeworkResultApi.getAll({\n                selectAll: true,\n                UserInformationID: userID,\n                HomeworkID: infoID\n              });\n\n            case 5:\n              res = _context2.sent;\n\n              if (res.status == 200) {\n                setIsDone(res.data.data[0].isDone);\n                arr = [];\n                arr.push(res.data.data[0]);\n                setDetail(arr);\n              }\n\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              showNoti('danger', _context2.t0.message);\n\n            case 12:\n              _context2.prev = 12;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context2.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 9, 12, 15]]);\n    }));\n\n    return function fetchDetailExercise() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    isExercise ? fetchDetailExercise() : fetchDetailInfo();\n  }, []);\n  var columns = [{\n    title: 'Tổng câu hỏi',\n    dataIndex: 'NumberExercise',\n    render: function render(text) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 22\n      }, _this);\n    }\n  }, {\n    title: 'Điểm từng môn',\n    align: 'center',\n    children: [{\n      title: 'Nghe',\n      align: 'center',\n      dataIndex: 'ListeningPoint'\n    }, {\n      title: 'Nói',\n      align: 'center',\n      dataIndex: 'SpeakingPoint'\n    }, {\n      title: 'Đọc',\n      align: 'center',\n      dataIndex: 'ReadingPoint'\n    }, {\n      title: 'Viết',\n      align: 'center',\n      dataIndex: 'WritingPoint'\n    }]\n  }, {\n    title: 'Tổng điểm',\n    align: 'center',\n    dataIndex: 'PointTotal',\n    render: function render(text) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 22\n      }, _this);\n    }\n  }, {\n    title: 'Ghi chú',\n    dataIndex: 'Note'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (isDone || (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) == 1 || (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) == 2) && /*#__PURE__*/_jsxDEV(NestedTable, {\n      loading: isLoading,\n      addClass: \"basic-header\",\n      dataSource: (_detail$ = detail[0]) !== null && _detail$ !== void 0 && _detail$.isDone ? detail : {},\n      columns: columns,\n      haveBorder: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false);\n};\n\n_s(ExamAppointmentPoint, \"o+0AXSGnMIDVYtqBfGB4RFvPdR0=\", false, function () {\n  return [useWrap];\n});\n\n_c = ExamAppointmentPoint;\nexport default ExamAppointmentPoint;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExamAppointmentPoint\");","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/Global/ExamAppointment/ExamAppointmentPoint.tsx"],"names":["React","useEffect","useState","NestedTable","useWrap","examAppointmentResultApi","homeworkResultApi","ExamAppointmentPoint","props","infoID","userID","isExercise","visible","type","status","isLoading","setIsLoading","detail","setDetail","showNoti","userInformation","isDone","setIsDone","fetchDetailInfo","getAll","selectAll","UserInformationID","ExamAppointmentID","res","data","arr","push","message","fetchDetailExercise","HomeworkID","columns","title","dataIndex","render","text","align","children","RoleID"],"mappings":"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","sourcesContent":["//@ts-nocheck\r\nimport React, { useEffect, useState } from 'react';\r\nimport NestedTable from '~/components/Elements/NestedTable';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { examAppointmentResultApi } from '~/apiBase';\r\nimport { homeworkResultApi } from '~/apiBase/course-detail/home-work-result';\r\n\r\nconst ExamAppointmentPoint = (props) => {\r\n\tconst { infoID, userID, isExercise, visible } = props;\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t});\r\n\tconst [detail, setDetail] = useState<IExamAppointmentResult>([]);\r\n\tconst { showNoti, userInformation } = useWrap();\r\n\tconst [isDone, setIsDone] = useState(false);\r\n\r\n\tconst fetchDetailInfo = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tlet res = await examAppointmentResultApi.getAll({\r\n\t\t\t\tselectAll: true,\r\n\t\t\t\tUserInformationID: userID,\r\n\t\t\t\tExamAppointmentID: infoID\r\n\t\t\t});\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetIsDone(res.data.data[0].isDone);\r\n\t\t\t\tlet arr = [];\r\n\t\t\t\tarr.push(res.data.data[0]);\r\n\t\t\t\tsetDetail(arr);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tshowNoti('danger', err.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst fetchDetailExercise = async () => {\r\n\t\tif (visible == true) {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await homeworkResultApi.getAll({\r\n\t\t\t\t\tselectAll: true,\r\n\t\t\t\t\tUserInformationID: userID,\r\n\t\t\t\t\tHomeworkID: infoID\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tsetIsDone(res.data.data[0].isDone);\r\n\t\t\t\t\tlet arr = [];\r\n\t\t\t\t\tarr.push(res.data.data[0]);\r\n\t\t\t\t\tsetDetail(arr);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tshowNoti('danger', err.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tisExercise ? fetchDetailExercise() : fetchDetailInfo();\r\n\t}, []);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Tổng câu hỏi',\r\n\t\t\tdataIndex: 'NumberExercise',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Điểm từng môn',\r\n\t\t\talign: 'center',\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Nghe',\r\n\t\t\t\t\talign: 'center',\r\n\t\t\t\t\tdataIndex: 'ListeningPoint'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Nói',\r\n\t\t\t\t\talign: 'center',\r\n\t\t\t\t\tdataIndex: 'SpeakingPoint'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Đọc',\r\n\t\t\t\t\talign: 'center',\r\n\t\t\t\t\tdataIndex: 'ReadingPoint'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Viết',\r\n\t\t\t\t\talign: 'center',\r\n\t\t\t\t\tdataIndex: 'WritingPoint'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tổng điểm',\r\n\t\t\talign: 'center',\r\n\t\t\tdataIndex: 'PointTotal',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ghi chú',\r\n\t\t\tdataIndex: 'Note'\r\n\t\t}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{(isDone || userInformation?.RoleID == 1 || userInformation?.RoleID == 2) && (\r\n\t\t\t\t<NestedTable\r\n\t\t\t\t\tloading={isLoading}\r\n\t\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\t\tdataSource={detail[0]?.isDone ? detail : {}}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\thaveBorder={true}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ExamAppointmentPoint;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\ExamDetail\\\\AddQuestionModal.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal, Spin } from 'antd';\nimport QuestionCreate from '../QuestionBank/QuestionCreate';\nimport { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]';\nimport { examDetailApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport { Plus } from 'react-feather';\n\nvar AddQuestionModal = function AddQuestionModal(props) {\n  _s();\n\n  var dataExam = props.dataExam,\n      onFetchData = props.onFetchData;\n\n  var _useExamDetail = useExamDetail(),\n      onAddQuestion = _useExamDetail.onAddQuestion,\n      listQuestionAddOutside = _useExamDetail.listQuestionAddOutside;\n\n  var _useState = useState(false),\n      isModalVisible = _useState[0],\n      setIsModalVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var showModal = function showModal() {\n    setIsModalVisible(true);\n  };\n\n  var handleOk = function handleOk() {\n    setIsModalVisible(false);\n  };\n\n  var handleCancel = function handleCancel() {\n    setIsModalVisible(false);\n  };\n\n  var handleAddQuestion = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(listQuestionAddOutside.length > 0)) {\n                _context.next = 18;\n                break;\n              }\n\n              setIsLoading(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return examDetailApi.add({\n                ExamTopicID: dataExam.ID,\n                ExerciseOrExerciseGroup: listQuestionAddOutside\n              });\n\n            case 5:\n              res = _context.sent;\n\n              if (res.status == 200) {\n                showNoti('success', 'Thêm câu hỏi thành công');\n                onFetchData && onFetchData();\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              showNoti('danger', _context.t0.message);\n\n            case 12:\n              _context.prev = 12;\n              setIsModalVisible(false);\n              setIsLoading(false);\n              return _context.finish(12);\n\n            case 16:\n              _context.next = 19;\n              break;\n\n            case 18:\n              showNoti('danger', 'Bạn chưa chọn câu hỏi nào!');\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9, 12, 16]]);\n    }));\n\n    return function handleAddQuestion() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success d-block w-100 text-center\",\n      onClick: showModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center w-100\",\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          className: \"mr-2\",\n          style: {\n            width: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, _this), \"Th\\xEAm c\\xE2u h\\u1ECFi\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n      centered: true,\n      style: {\n        top: 10\n      },\n      width: '90%',\n      title: \"Th\\xEAm c\\xE2u h\\u1ECFi v\\xE0o \\u0111\\u1EC1\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      className: \"modal-add-question\",\n      footer: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-light mr-2\",\n          onClick: handleCancel,\n          children: \"\\u0110\\xF3ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleAddQuestion,\n          children: [\"L\\u01B0u\", isLoading && /*#__PURE__*/_jsxDEV(Spin, {\n            className: \"loading-base\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 22\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }, _this),\n      children: /*#__PURE__*/_jsxDEV(QuestionCreate, {\n        isOpenModal: isModalVisible,\n        dataExam: dataExam\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(AddQuestionModal, \"xDmtj5a+Ur4eSLpyCQY2uvu7JEQ=\", false, function () {\n  return [useExamDetail, useWrap];\n});\n\n_c = AddQuestionModal;\nexport default AddQuestionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddQuestionModal\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/ExamDetail/AddQuestionModal.tsx"],"names":["React","useState","Modal","Spin","QuestionCreate","useExamDetail","examDetailApi","useWrap","Plus","AddQuestionModal","props","dataExam","onFetchData","onAddQuestion","listQuestionAddOutside","isModalVisible","setIsModalVisible","isLoading","setIsLoading","showNoti","showModal","handleOk","handleCancel","handleAddQuestion","length","add","ExamTopicID","ID","ExerciseOrExerciseGroup","res","status","message","width","top"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Modal, Spin } from 'antd';\r\nimport QuestionCreate from '../QuestionBank/QuestionCreate';\r\nimport ExamDetail, { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]';\r\nimport { examDetailApi, examTopicApi } from '~/apiBase';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { Plus } from 'react-feather';\r\n\r\nconst AddQuestionModal = (props) => {\r\n\tconst { dataExam, onFetchData } = props;\r\n\tconst { onAddQuestion, listQuestionAddOutside } = useExamDetail();\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst { showNoti } = useWrap();\r\n\r\n\tconst showModal = () => {\r\n\t\tsetIsModalVisible(true);\r\n\t};\r\n\r\n\tconst handleOk = () => {\r\n\t\tsetIsModalVisible(false);\r\n\t};\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false);\r\n\t};\r\n\r\n\tconst handleAddQuestion = async () => {\r\n\t\t// onAddQuestion();\r\n\t\tif (listQuestionAddOutside.length > 0) {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await examDetailApi.add({\r\n\t\t\t\t\tExamTopicID: dataExam.ID,\r\n\t\t\t\t\tExerciseOrExerciseGroup: listQuestionAddOutside\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tshowNoti('success', 'Thêm câu hỏi thành công');\r\n\r\n\t\t\t\t\tonFetchData && onFetchData();\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsModalVisible(false);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tshowNoti('danger', 'Bạn chưa chọn câu hỏi nào!');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button className=\"btn btn-success d-block w-100 text-center\" onClick={showModal}>\r\n\t\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t\t<Plus className=\"mr-2\" style={{ width: '20px' }} />\r\n\t\t\t\t\tThêm câu hỏi\r\n\t\t\t\t</div>\r\n\t\t\t</button>\r\n\t\t\t<Modal\r\n\t\t\t\tcentered={true}\r\n\t\t\t\tstyle={{ top: 10 }}\r\n\t\t\t\twidth={'90%'}\r\n\t\t\t\ttitle=\"Thêm câu hỏi vào đề\"\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\tclassName=\"modal-add-question\"\r\n\t\t\t\tfooter={\r\n\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t<button className=\"btn btn-light mr-2\" onClick={handleCancel}>\r\n\t\t\t\t\t\t\tĐóng\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={handleAddQuestion}>\r\n\t\t\t\t\t\t\tLưu\r\n\t\t\t\t\t\t\t{isLoading && <Spin className=\"loading-base\" />}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<QuestionCreate isOpenModal={isModalVisible} dataExam={dataExam} />\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AddQuestionModal;\r\n"]},"metadata":{},"sourceType":"module"}
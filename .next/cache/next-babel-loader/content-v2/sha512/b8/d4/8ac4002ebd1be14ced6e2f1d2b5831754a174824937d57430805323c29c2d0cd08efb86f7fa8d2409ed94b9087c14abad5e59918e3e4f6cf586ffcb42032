{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\option\\\\notification\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport NotificationForm from '~/components/Global/Option/NotificationForm';\nimport ExpandTable from '~/components/ExpandTable';\nimport { CheckCircle } from 'react-feather';\nimport LayoutBase from '~/components/LayoutBase';\nimport { useWrap } from '~/context/wrap';\nimport { notificationApi, branchApi } from '~/apiBase';\nimport moment from 'moment';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst Notification = () => {\n  const {\n    0: dataTable,\n    1: setDataTable\n  } = useState([]);\n  const {\n    0: dataBranch,\n    1: setDataBranch\n  } = useState([]);\n  const {\n    0: dataDelete,\n    1: setDataDelete\n  } = useState({\n    SalaryID: null,\n    Enable: null\n  });\n  const {\n    showNoti,\n    pageSize,\n    handleReloadNoti\n  } = useWrap();\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  let pageIndex = 1; // SORT\n\n  const dataOption = [{\n    dataSort: {\n      sort: 2,\n      sortType: false\n    },\n    value: 3,\n    text: 'Tên giảm dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: true\n    },\n    value: 4,\n    text: 'Tên tăng dần '\n  }]; // PARAMS SEARCH\n\n  let listField = {\n    FullName: ''\n  }; // PARAMS API GETALL\n\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    sort: null,\n    sortType: null,\n    RoleID: null,\n    FullName: null,\n    fromDate: null,\n    toDate: null\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi); // GET DATA\n\n  const getDataTable = () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    (async () => {\n      try {\n        let res = await notificationApi.getAll(todoApi);\n\n        if (res.status == 204) {\n          showNoti('danger', 'Không có dữ liệu');\n          handleReset();\n          setDataTable([]);\n        }\n\n        if (res.status == 200) {\n          // if (res.data.data.length < 1) {\n          // \thandleReset();\n          // }\n          setTotalPage(res.data.totalRow);\n          const results = res.data.data.map((row, i) => ({\n            key: row.NotificationID,\n            BranchID: row.BranchID,\n            BranchName: row.BranchName,\n            CourseID: row.CourseID,\n            CreatedBy: row.CreatedBy,\n            CreatedOn: row.CreatedOn,\n            Enable: row.Enable,\n            IsSendMail: row.IsSendMail,\n            ModifiedBy: row.ModifiedBy,\n            ModifiedOn: row.ModifiedOn,\n            NotificationContent: row.NotificationContent,\n            NotificationID: row.NotificationID,\n            NotificationTitle: row.NotificationTitle,\n            RoleID: row.RoleID,\n            RoleName: row.RoleName,\n            AllRole: row.AllRole,\n            AllBranch: row.AllBranch\n          }));\n          setDataTable(results);\n        }\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'GET_ALL',\n          status: false\n        });\n      }\n    })();\n  }; // GET DATA USERINFORMATION\n\n\n  const getDataBranch = () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    (async () => {\n      try {\n        let res = await branchApi.getAll({\n          pageSize: 9999,\n          pageIndex: 1\n        });\n        res.status == 200 && setDataBranch(res.data.data);\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'GET_ALL',\n          status: false\n        });\n      }\n    })();\n  }; // ADD DATA\n\n\n  const _onSubmit = async data => {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res = null;\n\n    try {\n      var _res;\n\n      res = await notificationApi.add(data);\n      ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && (afterPost('Thêm'), handleReloadNoti());\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n    }\n\n    return res;\n  };\n\n  const afterPost = value => {\n    showNoti('success', `${value} thành công`);\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // PAGINATION\n\n\n  const getPagination = (pageNumber, pageSize) => {\n    if (!pageSize) pageSize = 10;\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      //   ...listFieldSearch,\n      pageIndex: pageIndex,\n      pageSize: pageSize\n    }));\n  }; // HANDLE RESET\n\n\n  const handleReset = () => {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // const expandedRowRender = () => {\n  //   return (\n  //     <div>\n  //       Tuần tới đội chuyên môn HN sẽ họp tại tầng 8 CS Thái Hà. Thời gian: 10h\n  //       sáng thứ 2 (26/10) Nội dung: Phát triển trong môi trường ZIM và những kĩ\n  //       năng cần thiết.\n  //     </div>\n  //   );\n  // };\n  // console.log('todoApi: ', todoApi);\n\n\n  useEffect(() => {\n    getDataTable();\n    getDataBranch();\n    console.log('todoApi: ', todoApi);\n  }, [todoApi]);\n  const columns = [{\n    title: 'Date',\n    dataIndex: 'ModifiedOn',\n    render: date => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: moment(date).format('DD/MM/YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 22\n    }, this) // ...FilterDateColumn(\"expires\")\n\n  }, {\n    title: 'Role',\n    dataIndex: 'RoleName',\n    // ...FilterColumn(\"teacher\"),\n    render: (role, record, index) => {\n      if (record.AllRole) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"T\\u1EA5t c\\u1EA3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this);\n      } else if (role) {\n        let arr = role.split(',');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-tag\",\n          children: arr.map((item, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 7\n        }, this);\n      }\n    }\n  }, {\n    title: 'Center',\n    dataIndex: 'BranchName',\n    render: (BranchName, record, index) => {\n      if (record.AllBranch) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"T\\u1EA5t c\\u1EA3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this);\n      } else if (BranchName) {\n        let arr = BranchName.split(',');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-tag\",\n          children: arr.map((item, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 7\n        }, this);\n      }\n    } // ...FilterColumn(\"center\")\n\n  }, {\n    title: 'Email',\n    dataIndex: 'IsSendMail',\n    render: IsSendMail => {\n      if (IsSendMail) {\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          color: \"#06d6a0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this);\n      }\n    }\n  }, {\n    title: 'Title',\n    dataIndex: 'NotificationTitle'\n  }];\n  return /*#__PURE__*/_jsxDEV(ExpandTable, {\n    loading: isLoading,\n    currentPage: currentPage,\n    totalPage: totalPage && totalPage,\n    getPagination: getPagination,\n    addClass: \"basic-header\",\n    TitlePage: \"Danh s\\xE1ch th\\xF4ng b\\xE1o\",\n    expandable: {\n      expandedRowRender: record => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0\n        },\n        children: ReactHtmlParser(record.NotificationContent)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 36\n      }, this),\n      rowExpandable: record => record.NotificationTitle !== 'Not Expandable'\n    },\n    TitleCard: /*#__PURE__*/_jsxDEV(NotificationForm, {\n      showAdd: true,\n      isLoading: isLoading,\n      _onSubmit: data => _onSubmit(data),\n      dataBranch: dataBranch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }, this),\n    dataSource: dataTable,\n    columns: columns,\n    Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extra-table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 3\n  }, this);\n};\n\nNotification.layout = LayoutBase;\nexport default Notification;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/option/notification/index.tsx"],"names":["React","useEffect","useState","NotificationForm","ExpandTable","CheckCircle","LayoutBase","useWrap","notificationApi","branchApi","moment","ReactHtmlParser","Notification","dataTable","setDataTable","dataBranch","setDataBranch","dataDelete","setDataDelete","SalaryID","Enable","showNoti","pageSize","handleReloadNoti","isModalVisible","setIsModalVisible","isLoading","setIsLoading","type","status","totalPage","setTotalPage","currentPage","setCurrentPage","pageIndex","dataOption","dataSort","sort","sortType","value","text","listField","FullName","listTodoApi","RoleID","fromDate","toDate","todoApi","setTodoApi","getDataTable","res","getAll","handleReset","data","totalRow","results","map","row","i","key","NotificationID","BranchID","BranchName","CourseID","CreatedBy","CreatedOn","IsSendMail","ModifiedBy","ModifiedOn","NotificationContent","NotificationTitle","RoleName","AllRole","AllBranch","error","message","getDataBranch","_onSubmit","add","afterPost","getPagination","pageNumber","console","log","columns","title","dataIndex","render","date","format","role","record","index","arr","split","item","expandedRowRender","margin","rowExpandable","layout"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport NotificationForm from '~/components/Global/Option/NotificationForm';\r\nimport ExpandTable from '~/components/ExpandTable';\r\nimport { CheckCircle } from 'react-feather';\r\nimport LayoutBase from '~/components/LayoutBase';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { notificationApi, branchApi } from '~/apiBase';\r\nimport moment from 'moment';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst Notification = () => {\r\n\tconst [dataTable, setDataTable] = useState([]);\r\n\tconst [dataBranch, setDataBranch] = useState([]);\r\n\tconst [dataDelete, setDataDelete] = useState({\r\n\t\tSalaryID: null,\r\n\t\tEnable: null\r\n\t});\r\n\tconst { showNoti, pageSize, handleReloadNoti } = useWrap();\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t});\r\n\tconst [totalPage, setTotalPage] = useState(null);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\r\n\tlet pageIndex = 1;\r\n\r\n\t// SORT\r\n\tconst dataOption = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 3,\r\n\t\t\ttext: 'Tên giảm dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 4,\r\n\t\t\ttext: 'Tên tăng dần '\r\n\t\t}\r\n\t];\r\n\r\n\t// PARAMS SEARCH\r\n\tlet listField = {\r\n\t\tFullName: ''\r\n\t};\r\n\r\n\t// PARAMS API GETALL\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tRoleID: null,\r\n\t\tFullName: null,\r\n\t\tfromDate: null,\r\n\t\ttoDate: null\r\n\t};\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi);\r\n\r\n\t// GET DATA\r\n\tconst getDataTable = () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await notificationApi.getAll(todoApi);\r\n\t\t\t\tif (res.status == 204) {\r\n\t\t\t\t\tshowNoti('danger', 'Không có dữ liệu');\r\n\t\t\t\t\thandleReset();\r\n\t\t\t\t\tsetDataTable([]);\r\n\t\t\t\t}\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\t// if (res.data.data.length < 1) {\r\n\t\t\t\t\t// \thandleReset();\r\n\t\t\t\t\t// }\r\n\t\t\t\t\tsetTotalPage(res.data.totalRow);\r\n\r\n\t\t\t\t\tconst results = res.data.data.map((row, i) => ({\r\n\t\t\t\t\t\tkey: row.NotificationID,\r\n\t\t\t\t\t\tBranchID: row.BranchID,\r\n\t\t\t\t\t\tBranchName: row.BranchName,\r\n\t\t\t\t\t\tCourseID: row.CourseID,\r\n\t\t\t\t\t\tCreatedBy: row.CreatedBy,\r\n\t\t\t\t\t\tCreatedOn: row.CreatedOn,\r\n\t\t\t\t\t\tEnable: row.Enable,\r\n\t\t\t\t\t\tIsSendMail: row.IsSendMail,\r\n\t\t\t\t\t\tModifiedBy: row.ModifiedBy,\r\n\t\t\t\t\t\tModifiedOn: row.ModifiedOn,\r\n\t\t\t\t\t\tNotificationContent: row.NotificationContent,\r\n\t\t\t\t\t\tNotificationID: row.NotificationID,\r\n\t\t\t\t\t\tNotificationTitle: row.NotificationTitle,\r\n\t\t\t\t\t\tRoleID: row.RoleID,\r\n\t\t\t\t\t\tRoleName: row.RoleName,\r\n\t\t\t\t\t\tAllRole: row.AllRole,\r\n\t\t\t\t\t\tAllBranch: row.AllBranch\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tsetDataTable(results);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})();\r\n\t};\r\n\t// GET DATA USERINFORMATION\r\n\tconst getDataBranch = () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await branchApi.getAll({ pageSize: 9999, pageIndex: 1 });\r\n\t\t\t\tres.status == 200 && setDataBranch(res.data.data);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})();\r\n\t};\r\n\t// ADD DATA\r\n\tconst _onSubmit = async (data: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\r\n\t\tlet res = null;\r\n\t\ttry {\r\n\t\t\tres = await notificationApi.add(data);\r\n\t\t\tres?.status == 200 && (afterPost('Thêm'), handleReloadNoti());\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t};\r\n\r\n\tconst afterPost = (value) => {\r\n\t\tshowNoti('success', `${value} thành công`);\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t});\r\n\t\tsetCurrentPage(1);\r\n\t};\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageNumber: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10;\r\n\t\tpageIndex = pageNumber;\r\n\t\tsetCurrentPage(pageNumber);\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t//   ...listFieldSearch,\r\n\t\t\tpageIndex: pageIndex,\r\n\t\t\tpageSize: pageSize\r\n\t\t});\r\n\t};\r\n\r\n\t// HANDLE RESET\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t});\r\n\t\tsetCurrentPage(1);\r\n\t};\r\n\r\n\t// const expandedRowRender = () => {\r\n\t//   return (\r\n\t//     <div>\r\n\t//       Tuần tới đội chuyên môn HN sẽ họp tại tầng 8 CS Thái Hà. Thời gian: 10h\r\n\t//       sáng thứ 2 (26/10) Nội dung: Phát triển trong môi trường ZIM và những kĩ\r\n\t//       năng cần thiết.\r\n\t//     </div>\r\n\t//   );\r\n\t// };\r\n\r\n\t// console.log('todoApi: ', todoApi);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataTable();\r\n\t\tgetDataBranch();\r\n\r\n\t\tconsole.log('todoApi: ', todoApi);\r\n\t}, [todoApi]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Date',\r\n\t\t\tdataIndex: 'ModifiedOn',\r\n\t\t\trender: (date) => <p className=\"font-weight-black\">{moment(date).format('DD/MM/YYYY')}</p>\r\n\t\t\t// ...FilterDateColumn(\"expires\")\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Role',\r\n\t\t\tdataIndex: 'RoleName',\r\n\t\t\t// ...FilterColumn(\"teacher\"),\r\n\t\t\trender: (role, record, index) => {\r\n\t\t\t\tif (record.AllRole) {\r\n\t\t\t\t\treturn <span>Tất cả</span>;\r\n\t\t\t\t} else if (role) {\r\n\t\t\t\t\tlet arr = role.split(',');\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"list-tag\">\r\n\t\t\t\t\t\t\t{arr.map((item, i) => (\r\n\t\t\t\t\t\t\t\t<span key={i}>{item}</span>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Center',\r\n\t\t\tdataIndex: 'BranchName',\r\n\t\t\trender: (BranchName, record, index) => {\r\n\t\t\t\tif (record.AllBranch) {\r\n\t\t\t\t\treturn <span>Tất cả</span>;\r\n\t\t\t\t} else if (BranchName) {\r\n\t\t\t\t\tlet arr = BranchName.split(',');\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"list-tag\">\r\n\t\t\t\t\t\t\t{arr.map((item, i) => (\r\n\t\t\t\t\t\t\t\t<span key={i}>{item}</span>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// ...FilterColumn(\"center\")\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Email',\r\n\t\t\tdataIndex: 'IsSendMail',\r\n\t\t\trender: (IsSendMail) => {\r\n\t\t\t\tif (IsSendMail) {\r\n\t\t\t\t\treturn <CheckCircle color=\"#06d6a0\" />;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ title: 'Title', dataIndex: 'NotificationTitle' }\r\n\t];\r\n\r\n\treturn (\r\n\t\t<ExpandTable\r\n\t\t\tloading={isLoading}\r\n\t\t\tcurrentPage={currentPage}\r\n\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\tgetPagination={getPagination}\r\n\t\t\taddClass=\"basic-header\"\r\n\t\t\tTitlePage=\"Danh sách thông báo\"\r\n\t\t\texpandable={{\r\n\t\t\t\texpandedRowRender: (record) => <p style={{ margin: 0 }}>{ReactHtmlParser(record.NotificationContent)}</p>,\r\n\t\t\t\trowExpandable: (record) => record.NotificationTitle !== 'Not Expandable'\r\n\t\t\t}}\r\n\t\t\tTitleCard={\r\n\t\t\t\t<NotificationForm showAdd={true} isLoading={isLoading} _onSubmit={(data: any) => _onSubmit(data)} dataBranch={dataBranch} />\r\n\t\t\t}\r\n\t\t\tdataSource={dataTable}\r\n\t\t\tcolumns={columns}\r\n\t\t\tExtra={\r\n\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t{/* <FilterTable />\r\n          <SortBox /> */}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n};\r\nNotification.layout = LayoutBase;\r\nexport default Notification;\r\n"]},"metadata":{},"sourceType":"module"}
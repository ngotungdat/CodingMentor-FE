{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\staff\\\\staff-list\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Tooltip } from 'antd';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { areaApi, branchApi, jobApi, parentsApi, puroseApi, sourceInfomationApi, staffApi, staffSalaryApi, userInformationApi } from '~/apiBase';\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport ExpandTable from '~/components/ExpandTable';\nimport ResetPassForm from '~/components/Global/StaffList/ResetPassForm';\nimport SalaryStaffNested from '~/components/Global/StaffList/SalaryStaffNested';\nimport StaffForm from '~/components/Global/StaffList/StaffForm';\nimport LayoutBase from '~/components/LayoutBase';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nimport Link from 'next/link';\nimport { Eye } from 'react-feather';\nlet pageIndex = 1;\nlet listFieldSearch = {\n  pageIndex: 1,\n  FullNameUnicode: null\n};\nlet listFieldFilter = {\n  pageIndex: 1,\n  fromDate: null,\n  toDate: null,\n  RoleID: null,\n  BranchID: null,\n  AreaID: null,\n  StatusID: null\n};\nconst dataOption = [{\n  dataSort: {\n    sort: 0,\n    sortType: false\n  },\n  text: 'Tên Z-A'\n}, {\n  dataSort: {\n    sort: 0,\n    sortType: true\n  },\n  text: 'Tên A-Z '\n}]; // -- FOR DIFFERENT VIEW --\n\nconst optionGender = [{\n  value: 0,\n  title: 'Nữ'\n}, {\n  value: 1,\n  title: 'Nam'\n}, {\n  value: 0,\n  title: 'Khác'\n}];\nconst listApi = [{\n  api: areaApi,\n  text: 'Tỉnh/Tp',\n  name: 'Area'\n}, {\n  api: jobApi,\n  text: 'Công việc',\n  name: 'Job'\n}, {\n  api: puroseApi,\n  text: 'Mục đích học',\n  name: 'Purposes'\n}, {\n  api: branchApi,\n  text: 'Trung tâm',\n  name: 'Branch'\n}, {\n  api: parentsApi,\n  text: 'Phụ huynh',\n  name: 'Parent'\n}, {\n  api: sourceInfomationApi,\n  text: 'Nguồn khách hàng',\n  name: 'SourceInformation'\n}, {\n  api: userInformationApi,\n  text: 'Nguồn khách hàng',\n  name: 'Role'\n}, {\n  api: staffApi,\n  text: 'Nguồn khách hàng',\n  name: 'Counselors'\n}];\n\nconst StaffList = () => {\n  const {\n    0: listDataForm,\n    1: setListDataForm\n  } = useState({\n    Area: [],\n    DistrictID: [],\n    WardID: [],\n    Role: [],\n    Branch: [],\n    Purposes: [],\n    SourceInformation: [],\n    Parent: [],\n    Counselors: []\n  });\n  const {\n    0: isOpenReset,\n    1: setIsOpenReset\n  } = useState(false); // ------ BASE USESTATE TABLE -------\n\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    showNoti,\n    pageSize,\n    userInformation\n  } = useWrap();\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    sort: null,\n    sortType: null,\n    fromDate: null,\n    toDate: null,\n    FullNameUnicode: null,\n    RoleID: null,\n    BranchID: null,\n    AreaID: null\n  };\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: indexRow,\n    1: setIndexRow\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi); // GET LIST ROLES\n\n  const {\n    0: dataFilter,\n    1: setDataFilter\n  } = useState([{\n    name: 'AreaID',\n    title: 'Tỉnh/TP',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: null,\n    // Gọi api xong trả data vào đây\n    value: null\n  }, {\n    name: 'BranchID',\n    title: 'Trung tâm',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: null,\n    value: null\n  }, {\n    name: 'RoleID',\n    title: 'Chức vụ',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: null,\n    value: null\n  }, {\n    name: 'StatusID',\n    title: 'Trạng thái',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: [{\n      value: 0,\n      title: 'Hoạt động'\n    }, {\n      value: 1,\n      title: 'Không Hoạt động'\n    }],\n    value: null\n  }, {\n    name: 'date-range',\n    title: 'Từ - đến',\n    col: 'col-12',\n    type: 'date-range',\n    value: null\n  }]); // FOR STUDENT FORM\n  // ------------- ADD data to list --------------\n\n  const makeNewData = (data, name) => {\n    let newData = null;\n\n    switch (name) {\n      case 'Area':\n        newData = data.map(item => ({\n          title: item.AreaName,\n          value: item.AreaID\n        }));\n        setDataFunc('AreaID', newData);\n        break;\n\n      case 'DistrictID':\n        newData = data.map(item => ({\n          title: item.DistrictName,\n          value: item.ID\n        }));\n        break;\n\n      case 'WardID':\n        newData = data.map(item => ({\n          title: item.WardName,\n          value: item.ID\n        }));\n        break;\n\n      case 'Branch':\n        newData = data.map(item => ({\n          title: item.BranchName,\n          value: item.ID\n        }));\n        setDataFunc('BranchID', newData);\n        break;\n\n      case 'Job':\n        newData = data.map(item => ({\n          title: item.JobName,\n          value: item.JobID\n        }));\n        break;\n\n      case 'Purposes':\n        newData = data.map(item => ({\n          title: item.PurposesName,\n          value: item.PurposesID\n        }));\n        break;\n\n      case 'Parent':\n        newData = data.map(item => ({\n          title: item.FullNameUnicode,\n          value: item.UserInformationID\n        }));\n        break;\n\n      case 'SourceInformation':\n        newData = data.map(item => ({\n          title: item.SourceInformationName,\n          value: item.SourceInformationID\n        }));\n        setDataFunc('SourceInformationID', newData);\n        break;\n\n      case 'Counselors':\n        newData = data.map(item => ({\n          title: item.FullNameUnicode,\n          value: item.UserInformationID\n        }));\n        break;\n\n      case 'Role':\n        newData = data.map(item => ({\n          title: item.name,\n          value: item.ID\n        }));\n        break;\n\n      default:\n        break;\n    }\n\n    return newData;\n  };\n\n  const getDataTolist = (data, name) => {\n    let newData = makeNewData(data, name);\n    Object.keys(listDataForm).forEach(function (key) {\n      if (key == name) {\n        listDataForm[key] = newData;\n      }\n    });\n    setListDataForm(_objectSpread({}, listDataForm));\n  }; // ----------- GET DATA SOURCE ---------------\n\n\n  const getDataStudentForm = arrApi => {\n    arrApi.forEach((item, index) => {\n      ;\n\n      (async () => {\n        let res = null;\n\n        try {\n          if (item.name == 'Counselors') {\n            res = await item.api.getAll({\n              pageIndex: 1,\n              pageSize: 99999,\n              RoleID: 6,\n              StatusID: 0,\n              Enable: true\n            });\n          } else if (item.name == 'Role') {\n            res = await item.api.getRole(1);\n          } else {\n            res = await item.api.getAll({\n              pageIndex: 1,\n              pageSize: 99999,\n              Enable: true\n            });\n          }\n\n          res.status == 200 && getDataTolist(res.data.data, item.name);\n          res.status == 204 && console.log(item.text + ' Không có dữ liệu');\n        } catch (error) {\n          console.log(error);\n        } finally {}\n      })();\n    });\n  }; // GET DATA SOURCE\n\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await staffApi.getAll(todoApi);\n      res.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow));\n      res.status == 204 && setDataSource([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // ------ SET DATA FUN ------\n\n\n  const setDataFunc = (name, data) => {\n    dataFilter.every((item, index) => {\n      if (item.name == name) {\n        item.optionList = data;\n        return false;\n      }\n\n      return true;\n    });\n    setDataFilter([...dataFilter]);\n  }; // ---------------- AFTER SUBMIT -----------------\n\n\n  const afterPost = mes => {\n    // showNoti(\"success\", \"Thêm nhân viên thành công\");\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // ----------- SUBMI FORM ------------\n\n\n  const returnBranchName = branchID => {\n    let newArr = [];\n    let listID = branchID.split(',');\n    listID.forEach(item => {\n      let newObj = {\n        ID: parseInt(item),\n        BranchName: listDataForm === null || listDataForm === void 0 ? void 0 : listDataForm.Branch.find(a => a.value === parseInt(item)).title\n      };\n      newObj && newArr.push(newObj);\n    });\n    return newArr;\n  };\n\n  const onSubmitSalary = async data => {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res = null;\n\n    try {\n      res = await staffSalaryApi.update(data);\n\n      if (res.status == 200) {\n        showNoti('success', 'Thêm lương thành công');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n    }\n\n    return res;\n  };\n\n  const onSubmit = async data => {\n    if (typeof data.Branch != 'undefined') {\n      data.Branch = data.Branch.toString();\n    } else {\n      data.Branch = '';\n    }\n\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res = null;\n\n    try {\n      if (data.UserInformationID) {\n        res = await staffApi.update(data);\n\n        if (res.status == 200) {\n          // let newDataSource = [...dataSource];\n          // newDataSource.splice(indexRow, 1, {\n          // \t...data,\n          // \tBranch: returnBranchName(data.Branch),\n          // \tRoleName: dataRoles.find((item) => item.value == data.RoleID)?.title\n          // });\n          // setDataSource(newDataSource);\n          setTodoApi(_objectSpread({}, todoApi));\n          showNoti('success', res.data.message);\n        }\n      } else {\n        var _res;\n\n        res = await staffApi.add(data);\n        ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && afterPost(res.data.message);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n    }\n\n    return res;\n  }; // -------------- CHECK FIELD ---------------------\n\n\n  const checkField = (valueSearch, dataIndex) => {\n    let newList = _objectSpread({}, listFieldSearch);\n\n    Object.keys(newList).forEach(function (key) {\n      if (key != dataIndex) {\n        if (key != 'pageIndex') {\n          newList[key] = null;\n        }\n      } else {\n        newList[key] = valueSearch;\n      }\n    });\n    return newList;\n  }; // -------------- HANDLE FILTER ------------------\n\n\n  const handleFilter = listFilter => {\n    let newListFilter = _objectSpread({}, listFieldFilter);\n\n    listFilter.forEach((item, index) => {\n      let key = item.name;\n      Object.keys(newListFilter).forEach(keyFilter => {\n        if (keyFilter == key) {\n          newListFilter[key] = item.value;\n        }\n      });\n    });\n    setTodoApi(_objectSpread(_objectSpread(_objectSpread({}, listTodoApi), newListFilter), {}, {\n      pageIndex: 1\n    }));\n  }; // --------------- HANDLE SORT ----------------------\n\n\n  const handleSort = async option => {\n    let newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1,\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n\n    setCurrentPage(1), setTodoApi(newTodoApi);\n  }; // ------------ ON SEARCH -----------------------\n\n\n  const onSearch = (valueSearch, dataIndex) => {\n    let clearKey = dataIndex == 'FullNameUnicode' ? {\n      FullNameUnicode: valueSearch\n    } : dataIndex == 'ChineseName' ? {\n      ChineseName: valueSearch\n    } : dataIndex == 'Mobile' ? {\n      Mobile: valueSearch\n    } : {\n      Email: valueSearch\n    };\n    setTodoApi(_objectSpread(_objectSpread(_objectSpread({}, todoApi), clearKey), listFieldFilter));\n  }; // HANDLE RESET\n\n\n  const resetListFieldSearch = () => {\n    Object.keys(listFieldSearch).forEach(function (key) {\n      if (key != 'pageIndex') {\n        listFieldSearch[key] = null;\n      }\n    });\n  };\n\n  const handleReset = () => {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1), resetListFieldSearch();\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  const getPagination = pageNumber => {\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, todoApi), listFieldSearch), listFieldFilter), {}, {\n      pageIndex: pageIndex\n    }));\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(() => {\n    getDataSource();\n  }, [todoApi]);\n  useEffect(() => {\n    getDataStudentForm(listApi);\n  }, []);\n\n  const _onSubmitPromoteStaff = async data => {\n    setIsLoading({\n      type: 'PROMOTE',\n      status: true\n    });\n\n    try {\n      let res = await staffApi.update({\n        RoleID: 2,\n        UserInformationID: data\n      });\n\n      if (res.status == 200) {\n        setTodoApi(_objectSpread({}, todoApi));\n        showNoti('success', 'Chuyển vị trí thành công!');\n        return true;\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'PROMOTE',\n        status: false\n      });\n    }\n  };\n\n  const columns = [{\n    width: 120,\n    title: 'Mã',\n    dataIndex: 'UserCode',\n    fixed: 'left'\n  }, _objectSpread(_objectSpread({\n    title: 'Họ tên',\n    dataIndex: 'FullNameUnicode',\n    fixed: 'left',\n    width: 200\n  }, FilterColumn('FullNameUnicode', onSearch, handleReset, 'text')), {}, {\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 22\n    }, this)\n  }), {\n    width: 100,\n    title: 'Giới tính',\n    dataIndex: 'Gender',\n    render: gender => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: gender == 0 ? 'Nữ' : gender == 1 ? 'Nam' : 'Khác'\n    }, void 0, false)\n  }, {\n    width: 100,\n    title: 'Tài khoản',\n    dataIndex: 'UserName'\n  }, {\n    title: 'Email',\n    width: 100,\n    dataIndex: 'Email',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Vị trí',\n    width: 120,\n    dataIndex: 'RoleName'\n  }, {\n    width: 150,\n    title: 'Ngày nhận việc',\n    dataIndex: 'Jobdate',\n    render: date => date && moment(date).format('DD/MM/YYYY')\n  }, {\n    width: 150,\n    title: 'Facebook',\n    dataIndex: 'LinkFaceBook',\n    render: link => link && /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"font-weight-black\",\n      href: link,\n      target: \"_blank\",\n      children: \"Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 6\n    }, this)\n  }, {\n    title: 'Trạng thái',\n    width: 150,\n    dataIndex: 'StatusID',\n    className: 'text-center',\n    render: status => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `tag ${status == 0 ? 'green' : 'gray'}`,\n        children: status == 0 ? 'Hoạt động' : 'Khóa'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 27\n      }, this)\n    }, void 0, false)\n  }, {\n    title: '',\n    dataIndex: '',\n    width: userInformation !== null && (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) === 5 ? 0 : 180,\n    render: (text, data, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: userInformation !== null && (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) !== 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(StaffForm, {\n          getIndex: () => setIndexRow(index),\n          index: index,\n          rowData: data,\n          rowID: data.UserInformationID,\n          isLoading: isLoading,\n          onSubmit: data => onSubmit(data),\n          onSubmitSalary: data => onSubmitSalary(data),\n          listDataForm: listDataForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(ResetPassForm, {\n          dataRow: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 8\n        }, this), data.RoleID === 5 && /*#__PURE__*/_jsxDEV(Link, {\n          href: {\n            pathname: '/staff/teacher-list/teacher-detail/[slug]',\n            query: {\n              slug: data.UserInformationID\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Chi ti\\u1EBFt gi\\u1EA3ng d\\u1EA1y\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"btn btn-icon\",\n              children: /*#__PURE__*/_jsxDEV(Eye, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  }];\n\n  const expandedRowRender = data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(SalaryStaffNested, {\n        staffID: data.UserInformationID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ExpandTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: pageNumber => getPagination(pageNumber),\n      loading: isLoading,\n      addClass: \"basic-header\",\n      columns: columns,\n      dataSource: dataSource,\n      TitlePage: \"Danh s\\xE1ch nh\\xE2n vi\\xEAn\",\n      TitleCard: userInformation !== null && (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) !== 5 ? /*#__PURE__*/_jsxDEV(StaffForm, {\n        isLoading: isLoading,\n        onSubmit: data => onSubmit(data),\n        listDataForm: listDataForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 7\n      }, this) : null,\n      Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: [/*#__PURE__*/_jsxDEV(FilterBase, {\n          dataFilter: dataFilter,\n          handleFilter: listFilter => handleFilter(listFilter),\n          handleReset: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(SortBox, {\n          handleSort: value => handleSort(value),\n          dataOption: dataOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 6\n      }, this),\n      expandable: {\n        expandedRowRender\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nStaffList.layout = LayoutBase;\nexport default StaffList;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/staff/staff-list/index.tsx"],"names":["Tooltip","moment","React","useEffect","useState","areaApi","branchApi","jobApi","parentsApi","puroseApi","sourceInfomationApi","staffApi","staffSalaryApi","userInformationApi","FilterBase","SortBox","ExpandTable","ResetPassForm","SalaryStaffNested","StaffForm","LayoutBase","FilterColumn","useWrap","Link","Eye","pageIndex","listFieldSearch","FullNameUnicode","listFieldFilter","fromDate","toDate","RoleID","BranchID","AreaID","StatusID","dataOption","dataSort","sort","sortType","text","optionGender","value","title","listApi","api","name","StaffList","listDataForm","setListDataForm","Area","DistrictID","WardID","Role","Branch","Purposes","SourceInformation","Parent","Counselors","isOpenReset","setIsOpenReset","dataSource","setDataSource","showNoti","pageSize","userInformation","listTodoApi","isLoading","setIsLoading","type","status","totalPage","setTotalPage","indexRow","setIndexRow","currentPage","setCurrentPage","todoApi","setTodoApi","dataFilter","setDataFilter","col","optionList","makeNewData","data","newData","map","item","AreaName","setDataFunc","DistrictName","ID","WardName","BranchName","JobName","JobID","PurposesName","PurposesID","UserInformationID","SourceInformationName","SourceInformationID","getDataTolist","Object","keys","forEach","key","getDataStudentForm","arrApi","index","res","getAll","Enable","getRole","console","log","error","getDataSource","totalRow","message","every","afterPost","mes","returnBranchName","branchID","newArr","listID","split","newObj","parseInt","find","a","push","onSubmitSalary","update","onSubmit","toString","add","checkField","valueSearch","dataIndex","newList","handleFilter","listFilter","newListFilter","keyFilter","handleSort","option","newTodoApi","onSearch","clearKey","ChineseName","Mobile","Email","resetListFieldSearch","handleReset","getPagination","pageNumber","_onSubmitPromoteStaff","columns","width","fixed","render","gender","date","format","link","className","e","stopPropagation","pathname","query","slug","expandedRowRender","layout"],"mappings":"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","sourcesContent":["import { Tooltip } from 'antd'\r\nimport moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport {\r\n\tareaApi,\r\n\tbranchApi,\r\n\tjobApi,\r\n\tparentsApi,\r\n\tpuroseApi,\r\n\tsourceInfomationApi,\r\n\tstaffApi,\r\n\tstaffSalaryApi,\r\n\tuserInformationApi\r\n} from '~/apiBase'\r\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport ExpandTable from '~/components/ExpandTable'\r\nimport ResetPassForm from '~/components/Global/StaffList/ResetPassForm'\r\nimport SalaryStaffNested from '~/components/Global/StaffList/SalaryStaffNested'\r\nimport StaffForm from '~/components/Global/StaffList/StaffForm'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\nimport Link from 'next/link'\r\nimport { Eye } from 'react-feather'\r\n\r\nlet pageIndex = 1\r\n\r\ninterface dataRoles {\r\n\ttitle: string\r\n\tvalue: number\r\n}\r\n\r\nlet listFieldSearch = {\r\n\tpageIndex: 1,\r\n\tFullNameUnicode: null\r\n}\r\n\r\nlet listFieldFilter = {\r\n\tpageIndex: 1,\r\n\tfromDate: null,\r\n\ttoDate: null,\r\n\tRoleID: null,\r\n\tBranchID: null,\r\n\tAreaID: null,\r\n\tStatusID: null\r\n}\r\n\r\nconst dataOption = [\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Tên Z-A'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Tên A-Z '\r\n\t}\r\n]\r\n\r\n// -- FOR DIFFERENT VIEW --\r\n\r\ninterface objData {\r\n\ttitle: string\r\n\tvalue: number\r\n}\r\n\r\ninterface listDataForm {\r\n\tArea: Array<objData>\r\n\tDistrictID: Array<objData>\r\n\tWardID: Array<objData>\r\n\tRole: Array<objData>\r\n\tBranch: Array<objData>\r\n\tPurposes: Array<objData>\r\n\tSourceInformation: Array<objData>\r\n\tParent: Array<objData>\r\n\tCounselors: Array<objData>\r\n}\r\n\r\nconst optionGender = [\r\n\t{\r\n\t\tvalue: 0,\r\n\t\ttitle: 'Nữ'\r\n\t},\r\n\t{\r\n\t\tvalue: 1,\r\n\t\ttitle: 'Nam'\r\n\t},\r\n\t{\r\n\t\tvalue: 0,\r\n\t\ttitle: 'Khác'\r\n\t}\r\n]\r\n\r\nconst listApi = [\r\n\t{\r\n\t\tapi: areaApi,\r\n\t\ttext: 'Tỉnh/Tp',\r\n\t\tname: 'Area'\r\n\t},\r\n\r\n\t{\r\n\t\tapi: jobApi,\r\n\t\ttext: 'Công việc',\r\n\t\tname: 'Job'\r\n\t},\r\n\t{\r\n\t\tapi: puroseApi,\r\n\t\ttext: 'Mục đích học',\r\n\t\tname: 'Purposes'\r\n\t},\r\n\t{\r\n\t\tapi: branchApi,\r\n\t\ttext: 'Trung tâm',\r\n\t\tname: 'Branch'\r\n\t},\r\n\t{\r\n\t\tapi: parentsApi,\r\n\t\ttext: 'Phụ huynh',\r\n\t\tname: 'Parent'\r\n\t},\r\n\t{\r\n\t\tapi: sourceInfomationApi,\r\n\t\ttext: 'Nguồn khách hàng',\r\n\t\tname: 'SourceInformation'\r\n\t},\r\n\t{\r\n\t\tapi: userInformationApi,\r\n\t\ttext: 'Nguồn khách hàng',\r\n\t\tname: 'Role'\r\n\t},\r\n\t{\r\n\t\tapi: staffApi,\r\n\t\ttext: 'Nguồn khách hàng',\r\n\t\tname: 'Counselors'\r\n\t}\r\n]\r\n\r\nconst StaffList = () => {\r\n\tconst [listDataForm, setListDataForm] = useState<listDataForm>({\r\n\t\tArea: [],\r\n\t\tDistrictID: [],\r\n\t\tWardID: [],\r\n\t\tRole: [],\r\n\t\tBranch: [],\r\n\t\tPurposes: [],\r\n\t\tSourceInformation: [],\r\n\t\tParent: [],\r\n\t\tCounselors: []\r\n\t})\r\n\r\n\tconst [isOpenReset, setIsOpenReset] = useState(false)\r\n\r\n\t// ------ BASE USESTATE TABLE -------\r\n\r\n\tconst [dataSource, setDataSource] = useState<IStaff[]>([])\r\n\tconst { showNoti, pageSize, userInformation } = useWrap()\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tfromDate: null,\r\n\t\ttoDate: null,\r\n\t\tFullNameUnicode: null,\r\n\t\tRoleID: null,\r\n\t\tBranchID: null,\r\n\t\tAreaID: null\r\n\t}\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [indexRow, setIndexRow] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\t// GET LIST ROLES\r\n\r\n\tconst [dataFilter, setDataFilter] = useState([\r\n\t\t{\r\n\t\t\tname: 'AreaID',\r\n\t\t\ttitle: 'Tỉnh/TP',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null, // Gọi api xong trả data vào đây\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'BranchID',\r\n\t\t\ttitle: 'Trung tâm',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null,\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'RoleID',\r\n\t\t\ttitle: 'Chức vụ',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null,\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'StatusID',\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: [\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\ttitle: 'Hoạt động'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 1,\r\n\t\t\t\t\ttitle: 'Không Hoạt động'\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'date-range',\r\n\t\t\ttitle: 'Từ - đến',\r\n\t\t\tcol: 'col-12',\r\n\t\t\ttype: 'date-range',\r\n\t\t\tvalue: null\r\n\t\t}\r\n\t])\r\n\r\n\t// FOR STUDENT FORM\r\n\t// ------------- ADD data to list --------------\r\n\r\n\tconst makeNewData = (data, name) => {\r\n\t\tlet newData = null\r\n\t\tswitch (name) {\r\n\t\t\tcase 'Area':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.AreaName,\r\n\t\t\t\t\tvalue: item.AreaID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('AreaID', newData)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'DistrictID':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.DistrictName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'WardID':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.WardName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Branch':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.BranchName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('BranchID', newData)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Job':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.JobName,\r\n\t\t\t\t\tvalue: item.JobID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Purposes':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.PurposesName,\r\n\t\t\t\t\tvalue: item.PurposesID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Parent':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.FullNameUnicode,\r\n\t\t\t\t\tvalue: item.UserInformationID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'SourceInformation':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.SourceInformationName,\r\n\t\t\t\t\tvalue: item.SourceInformationID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('SourceInformationID', newData)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Counselors':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.FullNameUnicode,\r\n\t\t\t\t\tvalue: item.UserInformationID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Role':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.name,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\r\n\t\treturn newData\r\n\t}\r\n\r\n\tconst getDataTolist = (data: any, name: any) => {\r\n\t\tlet newData = makeNewData(data, name)\r\n\r\n\t\tObject.keys(listDataForm).forEach(function (key) {\r\n\t\t\tif (key == name) {\r\n\t\t\t\tlistDataForm[key] = newData\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetListDataForm({ ...listDataForm })\r\n\t}\r\n\r\n\t// ----------- GET DATA SOURCE ---------------\r\n\tconst getDataStudentForm = (arrApi) => {\r\n\t\tarrApi.forEach((item, index) => {\r\n\t\t\t;(async () => {\r\n\t\t\t\tlet res = null\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (item.name == 'Counselors') {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tRoleID: 6,\r\n\t\t\t\t\t\t\tStatusID: 0,\r\n\t\t\t\t\t\t\tEnable: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else if (item.name == 'Role') {\r\n\t\t\t\t\t\tres = await item.api.getRole(1)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tEnable: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tres.status == 200 && getDataTolist(res.data.data, item.name)\r\n\r\n\t\t\t\t\tres.status == 204 && console.log(item.text + ' Không có dữ liệu')\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t} finally {\r\n\t\t\t\t}\r\n\t\t\t})()\r\n\t\t})\r\n\t}\r\n\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await staffApi.getAll(todoApi)\r\n\t\t\tres.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow))\r\n\t\t\tres.status == 204 && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// ------ SET DATA FUN ------\r\n\tconst setDataFunc = (name, data) => {\r\n\t\tdataFilter.every((item, index) => {\r\n\t\t\tif (item.name == name) {\r\n\t\t\t\titem.optionList = data\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t\tsetDataFilter([...dataFilter])\r\n\t}\r\n\r\n\t// ---------------- AFTER SUBMIT -----------------\r\n\tconst afterPost = (mes) => {\r\n\t\t// showNoti(\"success\", \"Thêm nhân viên thành công\");\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// ----------- SUBMI FORM ------------\r\n\tconst returnBranchName = (branchID) => {\r\n\t\tlet newArr = []\r\n\t\tlet listID = branchID.split(',')\r\n\r\n\t\tlistID.forEach((item) => {\r\n\t\t\tlet newObj = {\r\n\t\t\t\tID: parseInt(item),\r\n\t\t\t\tBranchName: listDataForm?.Branch.find((a) => a.value === parseInt(item)).title\r\n\t\t\t}\r\n\r\n\t\t\tnewObj && newArr.push(newObj)\r\n\t\t})\r\n\r\n\t\treturn newArr\r\n\t}\r\n\r\n\tconst onSubmitSalary = async (data: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\tlet res = null\r\n\t\ttry {\r\n\t\t\tres = await staffSalaryApi.update(data)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tshowNoti('success', 'Thêm lương thành công')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tif (typeof data.Branch != 'undefined') {\r\n\t\t\tdata.Branch = data.Branch.toString()\r\n\t\t} else {\r\n\t\t\tdata.Branch = ''\r\n\t\t}\r\n\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\tlet res = null\r\n\t\ttry {\r\n\t\t\tif (data.UserInformationID) {\r\n\t\t\t\tres = await staffApi.update(data)\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\t// let newDataSource = [...dataSource];\r\n\t\t\t\t\t// newDataSource.splice(indexRow, 1, {\r\n\t\t\t\t\t// \t...data,\r\n\t\t\t\t\t// \tBranch: returnBranchName(data.Branch),\r\n\t\t\t\t\t// \tRoleName: dataRoles.find((item) => item.value == data.RoleID)?.title\r\n\t\t\t\t\t// });\r\n\t\t\t\t\t// setDataSource(newDataSource);\r\n\t\t\t\t\tsetTodoApi({ ...todoApi })\r\n\t\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tres = await staffApi.add(data)\r\n\t\t\t\tres?.status == 200 && afterPost(res.data.message)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\t// -------------- CHECK FIELD ---------------------\r\n\tconst checkField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = { ...listFieldSearch }\r\n\t\tObject.keys(newList).forEach(function (key) {\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\t\tnewList[key] = null\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewList[key] = valueSearch\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn newList\r\n\t}\r\n\r\n\t// -------------- HANDLE FILTER ------------------\r\n\tconst handleFilter = (listFilter) => {\r\n\t\tlet newListFilter = { ...listFieldFilter }\r\n\t\tlistFilter.forEach((item, index) => {\r\n\t\t\tlet key = item.name\r\n\t\t\tObject.keys(newListFilter).forEach((keyFilter) => {\r\n\t\t\t\tif (keyFilter == key) {\r\n\t\t\t\t\tnewListFilter[key] = item.value\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tsetTodoApi({ ...listTodoApi, ...newListFilter, pageIndex: 1 })\r\n\t}\r\n\r\n\t// --------------- HANDLE SORT ----------------------\r\n\tconst handleSort = async (option) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetCurrentPage(1), setTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// ------------ ON SEARCH -----------------------\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tlet clearKey =\r\n\t\t\tdataIndex == 'FullNameUnicode'\r\n\t\t\t\t? { FullNameUnicode: valueSearch }\r\n\t\t\t\t: dataIndex == 'ChineseName'\r\n\t\t\t\t? { ChineseName: valueSearch }\r\n\t\t\t\t: dataIndex == 'Mobile'\r\n\t\t\t\t? { Mobile: valueSearch }\r\n\t\t\t\t: { Email: valueSearch }\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t...clearKey,\r\n\t\t\t...listFieldFilter\r\n\t\t})\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tconst resetListFieldSearch = () => {\r\n\t\tObject.keys(listFieldSearch).forEach(function (key) {\r\n\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\tlistFieldSearch[key] = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1), resetListFieldSearch()\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tpageIndex = pageNumber\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t...listFieldSearch,\r\n\t\t\t...listFieldFilter,\r\n\t\t\tpageIndex: pageIndex\r\n\t\t})\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t}, [todoApi])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataStudentForm(listApi)\r\n\t}, [])\r\n\r\n\tconst _onSubmitPromoteStaff = async (data) => {\r\n\t\tsetIsLoading({ type: 'PROMOTE', status: true })\r\n\t\ttry {\r\n\t\t\tlet res = await staffApi.update({ RoleID: 2, UserInformationID: data })\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetTodoApi({ ...todoApi })\r\n\t\t\t\tshowNoti('success', 'Chuyển vị trí thành công!')\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'PROMOTE', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\twidth: 120,\r\n\t\t\ttitle: 'Mã',\r\n\t\t\tdataIndex: 'UserCode',\r\n\t\t\tfixed: 'left'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Họ tên',\r\n\t\t\tdataIndex: 'FullNameUnicode',\r\n\t\t\tfixed: 'left',\r\n\t\t\twidth: 200,\r\n\t\t\t...FilterColumn('FullNameUnicode', onSearch, handleReset, 'text'),\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 100,\r\n\t\t\ttitle: 'Giới tính',\r\n\t\t\tdataIndex: 'Gender',\r\n\t\t\trender: (gender) => <>{gender == 0 ? 'Nữ' : gender == 1 ? 'Nam' : 'Khác'}</>\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 100,\r\n\t\t\ttitle: 'Tài khoản',\r\n\t\t\tdataIndex: 'UserName'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Email',\r\n\t\t\twidth: 100,\r\n\t\t\tdataIndex: 'Email',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Vị trí',\r\n\t\t\twidth: 120,\r\n\t\t\tdataIndex: 'RoleName'\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 150,\r\n\t\t\ttitle: 'Ngày nhận việc',\r\n\t\t\tdataIndex: 'Jobdate',\r\n\t\t\trender: (date: any) => date && moment(date).format('DD/MM/YYYY')\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 150,\r\n\t\t\ttitle: 'Facebook',\r\n\t\t\tdataIndex: 'LinkFaceBook',\r\n\t\t\trender: (link) =>\r\n\t\t\t\tlink && (\r\n\t\t\t\t\t<a className=\"font-weight-black\" href={link} target=\"_blank\">\r\n\t\t\t\t\t\tLink\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\twidth: 150,\r\n\t\t\tdataIndex: 'StatusID',\r\n\t\t\tclassName: 'text-center',\r\n\t\t\trender: (status) => <>{<span className={`tag ${status == 0 ? 'green' : 'gray'}`}>{status == 0 ? 'Hoạt động' : 'Khóa'}</span>}</>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t\tdataIndex: '',\r\n\t\t\twidth: userInformation !== null && userInformation?.RoleID === 5 ? 0 : 180,\r\n\t\t\trender: (text, data, index) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{userInformation !== null && userInformation?.RoleID !== 5 && (\r\n\t\t\t\t\t\t<div onClick={(e) => e.stopPropagation()}>\r\n\t\t\t\t\t\t\t<StaffForm\r\n\t\t\t\t\t\t\t\tgetIndex={() => setIndexRow(index)}\r\n\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\trowData={data}\r\n\t\t\t\t\t\t\t\trowID={data.UserInformationID}\r\n\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\tonSubmit={(data: any) => onSubmit(data)}\r\n\t\t\t\t\t\t\t\tonSubmitSalary={(data: any) => onSubmitSalary(data)}\r\n\t\t\t\t\t\t\t\tlistDataForm={listDataForm}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ResetPassForm dataRow={data} />\r\n\t\t\t\t\t\t\t{data.RoleID === 5 && (\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\t\t\t\tpathname: '/staff/teacher-list/teacher-detail/[slug]',\r\n\t\t\t\t\t\t\t\t\t\tquery: { slug: data.UserInformationID }\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip title=\"Chi tiết giảng dạy\">\r\n\t\t\t\t\t\t\t\t\t\t<a className=\"btn btn-icon\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Eye />\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{/* {userInformation && userInformation?.RoleID == 1 && data.RoleID == 5 && (\r\n\t\t\t\t\t\t\t\t<PromoteTeacher\r\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\ttype=\"staff\"\r\n\t\t\t\t\t\t\t\t\trecord={data}\r\n\t\t\t\t\t\t\t\t\t_onSubmitPromoteStaff={() => _onSubmitPromoteStaff(data.UserInformationID)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\tconst expandedRowRender = (data) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<SalaryStaffNested staffID={data.UserInformationID} />\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ExpandTable\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdataSource={dataSource}\r\n\t\t\t\tTitlePage=\"Danh sách nhân viên\"\r\n\t\t\t\tTitleCard={\r\n\t\t\t\t\tuserInformation !== null && userInformation?.RoleID !== 5 ? (\r\n\t\t\t\t\t\t<StaffForm isLoading={isLoading} onSubmit={(data: any) => onSubmit(data)} listDataForm={listDataForm} />\r\n\t\t\t\t\t) : null\r\n\t\t\t\t}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t<FilterBase dataFilter={dataFilter} handleFilter={(listFilter: any) => handleFilter(listFilter)} handleReset={handleReset} />\r\n\t\t\t\t\t\t<SortBox handleSort={(value) => handleSort(value)} dataOption={dataOption} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\texpandable={{ expandedRowRender }}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\nStaffList.layout = LayoutBase\r\n\r\nexport default StaffList\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\QuestionBank\\\\QuestionShow\\\\QuestionSingle.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Radio, Tooltip, Skeleton, Popconfirm, Checkbox } from 'antd';\nimport { Trash2 } from 'react-feather';\nimport CreateQuestionForm from '~/components/Global/QuestionBank/CreateQuestionForm';\nimport ReactHtmlParser from 'react-html-parser';\nimport { exerciseApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]';\nimport { CheckOutlined } from '@ant-design/icons';\nimport _ from '~/appConfig';\n\nconst QuestionSingle = props => {\n  const {\n    onGetListQuestionID,\n    listQuestionID,\n    listQuestionAddOutside,\n    onRemoveQuestionAdd\n  } = useExamDetail();\n  const {\n    listQuestion,\n    loadingQuestion,\n    onFetchData,\n    onRemoveData,\n    isGroup,\n    onEditData,\n    listAlphabet,\n    groupID,\n    dataExam\n  } = props;\n  const {\n    0: dataListQuestion,\n    1: setDataListQuestion\n  } = useState(null);\n  const {\n    showNoti,\n    userInformation\n  } = useWrap();\n  const {\n    0: visible,\n    1: setVisible\n  } = useState({\n    id: null,\n    status: false\n  });\n  const {\n    0: confirmLoading,\n    1: setConfirmLoading\n  } = useState(false);\n  const {\n    0: loadingInGroup,\n    1: setLoadingInGroup\n  } = useState(false);\n  const {\n    0: loadingAudio,\n    1: setLoadingAudio\n  } = useState(null);\n  const {\n    0: activeID,\n    1: setActiveID\n  } = useState(null);\n  const {\n    0: lengthData,\n    1: setLengthData\n  } = useState(null);\n\n  const onChange = e => {\n    e.preventDefault();\n  }; // ON EDIT\n\n\n  const onEdit = dataEdit => {\n    if (!isGroup.status) {\n      onEditData(dataEdit);\n    } else {\n      let index = dataListQuestion.findIndex(item => item.ID == dataEdit.ID);\n      dataListQuestion.splice(index, 1, dataEdit);\n      setDataListQuestion([...dataListQuestion]);\n    }\n  };\n\n  const deleteQuestionItem = quesID => {\n    !visible.status ? setVisible({\n      id: quesID,\n      status: true\n    }) : setVisible({\n      id: quesID,\n      status: false\n    });\n  }; // Chấp nhận xóa câu hỏi\n\n\n  const handleOk = async quesItem => {\n    setConfirmLoading(true);\n    quesItem.Enable = false;\n\n    try {\n      let res = await exerciseApi.update(quesItem);\n\n      if (res.status == 200) {\n        setVisible(_objectSpread(_objectSpread({}, visible), {}, {\n          status: false\n        }));\n        onRemoveData(quesItem);\n        showNoti('success', 'Xóa thành công');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setConfirmLoading(false);\n    }\n  };\n\n  const handleCancel = quesID => {\n    setVisible({\n      id: quesID,\n      status: false\n    });\n  };\n\n  const getQuestionInGroup = async () => {\n    setLoadingInGroup(true);\n\n    try {\n      let res = await exerciseApi.getAll({\n        pageIndex: 1,\n        pageSize: 9999,\n        ExerciseGroupID: isGroup.id\n      });\n      res.status == 200 && setDataListQuestion(res.data.data);\n      res.status == 204 && setDataListQuestion([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoadingInGroup(false);\n    }\n  };\n\n  const onHover = ID => {\n    setActiveID(ID);\n  };\n\n  const returnAudio = item => {\n    const audioHTML = item => {\n      return /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: item.LinkAudio,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !activeID ? item.LinkAudio !== '' && audioHTML(item) : item.ID == activeID ? !loadingAudio ? item.LinkAudio !== '' && audioHTML(item) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : item.LinkAudio !== '' && audioHTML(item)\n    }, void 0, false);\n  };\n\n  useEffect(() => {\n    // Check active item when add new data\n    if ((dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.length) > 0) {\n      if (listQuestion.length > lengthData) {\n        setActiveID(listQuestion[0].ID);\n      }\n    }\n\n    setLengthData(listQuestion.length); // Loading audio for change html audio (because the link not change when update state)\n\n    setLoadingAudio(true);\n    setTimeout(() => {\n      setLoadingAudio(false);\n    }, 100); // Check all situations between no group and have group\n\n    if (!isGroup.status) {\n      listQuestion.forEach(item => {\n        item.isChecked = null;\n\n        if ((listQuestionAddOutside === null || listQuestionAddOutside === void 0 ? void 0 : listQuestionAddOutside.length) > 0) {\n          if (listQuestionAddOutside.some(object => object['ExerciseOrExerciseGroupID'] == item.ID)) {\n            item.isChecked = true;\n          }\n        }\n      });\n      setDataListQuestion(listQuestion);\n    } else {\n      isGroup.id && isGroup.id === groupID && getQuestionInGroup();\n    }\n  }, [listQuestion]);\n  useEffect(() => {\n    isGroup.status && setDataListQuestion([]);\n    isGroup.status && isGroup.id && isGroup.id === groupID && getQuestionInGroup();\n  }, [isGroup]); // On change - add question\n\n  const onChange_AddQuestion = (checked, quesID) => {\n    let objectQuestion = {\n      type: 1,\n      ExerciseOrExerciseGroupID: quesID\n    }; // Call function to get ID of question\n\n    if (checked) {\n      onGetListQuestionID(objectQuestion);\n    } else {\n      onRemoveQuestionAdd(objectQuestion);\n    }\n  };\n\n  useEffect(() => {\n    if ((dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.length) > 0) {\n      if ((listQuestionAddOutside === null || listQuestionAddOutside === void 0 ? void 0 : listQuestionAddOutside.length) > 0) {\n        dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.forEach(item => {\n          if (listQuestionAddOutside.some(object => object['ExerciseOrExerciseGroupID'] == item.ID)) {\n            item.isChecked = true;\n          } else {\n            item.isChecked = false;\n          }\n        });\n      } else {\n        dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.forEach(item => {\n          item.isChecked = false;\n        });\n      }\n\n      setDataListQuestion([...dataListQuestion]);\n    }\n  }, [listQuestionAddOutside]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [(dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.length) == 0 ? !isGroup.status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Danh s\\xE1ch c\\xF2n tr\\u1ED1ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this) : dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.map((item, index) => {\n      var _item$ExerciseAnswer;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `question-item ${item.ID == activeID ? 'active' : ''}`,\n        onMouseEnter: () => onHover(item.ID),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title-ques\",\n              children: [\"C\\xE2u h\\u1ECFi \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 10\n            }, this), item.LinkAudio && returnAudio(item), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title-text\",\n              children: ReactHtmlParser(item.Content)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-answer\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-single question-wrap w-100\",\n              children: (_item$ExerciseAnswer = item.ExerciseAnswer) === null || _item$ExerciseAnswer === void 0 ? void 0 : _item$ExerciseAnswer.map((ans, i) => /*#__PURE__*/_jsxDEV(Radio, {\n                checked: ans.isTrue,\n                className: \"d-block\",\n                value: ans.ID,\n                onChange: onChange,\n                disabled: ans.isTrue ? false : true,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tick\",\n                  children: listAlphabet[i]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text\",\n                  children: ans.AnswerContent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 13\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 12\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 8\n        }, this), (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) !== 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-action\",\n          children: [/*#__PURE__*/_jsxDEV(CreateQuestionForm, {\n            questionData: item,\n            onFetchData: onFetchData,\n            onEditData: dataEdit => onEdit(dataEdit),\n            isGroup: {\n              status: false,\n              id: null\n            },\n            getActiveID: ID => setActiveID(ID)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n            title: \"B\\u1EA1n c\\xF3 ch\\u1EAFc mu\\u1ED1n x\\xF3a?\",\n            onConfirm: () => handleOk(item),\n            okButtonProps: {\n              loading: confirmLoading\n            },\n            onCancel: () => handleCancel(item.ID),\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"X\\xF3a c\\xE2u h\\u1ECFi\",\n              placement: \"rightTop\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-icon delete\",\n                onClick: () => deleteQuestionItem(item.ID),\n                children: /*#__PURE__*/_jsxDEV(Trash2, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 10\n          }, this), !isGroup.status && dataExam && (listQuestionID.includes(item.ID) ? /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"\\u0110\\xE3 c\\xF3 trong \\u0111\\u1EC1 thi\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-icon edit\",\n              children: /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 12\n          }, this) : /*#__PURE__*/_jsxDEV(Checkbox, {\n            className: \"checkbox-addquestion\",\n            checked: item.isChecked,\n            onChange: e => onChange_AddQuestion(e.target.checked, item.ID)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 12\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }, this);\n    }), isGroup !== null && isGroup !== void 0 && isGroup.status && loadingInGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 5\n    }, this) : (isGroup === null || isGroup === void 0 ? void 0 : isGroup.status) && (dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.length) == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: _.primaryColor\n      },\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"Nh\\xF3m n\\xE0y ch\\u01B0a c\\xF3 c\\xE2u h\\u1ECFi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 6\n    }, this), loadingQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\nexport default QuestionSingle;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/QuestionBank/QuestionShow/QuestionSingle.tsx"],"names":["React","useEffect","useState","Radio","Tooltip","Skeleton","Popconfirm","Checkbox","Trash2","CreateQuestionForm","ReactHtmlParser","exerciseApi","useWrap","useExamDetail","CheckOutlined","_","QuestionSingle","props","onGetListQuestionID","listQuestionID","listQuestionAddOutside","onRemoveQuestionAdd","listQuestion","loadingQuestion","onFetchData","onRemoveData","isGroup","onEditData","listAlphabet","groupID","dataExam","dataListQuestion","setDataListQuestion","showNoti","userInformation","visible","setVisible","id","status","confirmLoading","setConfirmLoading","loadingInGroup","setLoadingInGroup","loadingAudio","setLoadingAudio","activeID","setActiveID","lengthData","setLengthData","onChange","e","preventDefault","onEdit","dataEdit","index","findIndex","item","ID","splice","deleteQuestionItem","quesID","handleOk","quesItem","Enable","res","update","error","message","handleCancel","getQuestionInGroup","getAll","pageIndex","pageSize","ExerciseGroupID","data","onHover","returnAudio","audioHTML","LinkAudio","length","setTimeout","forEach","isChecked","some","object","onChange_AddQuestion","checked","objectQuestion","type","ExerciseOrExerciseGroupID","map","Content","ExerciseAnswer","ans","i","isTrue","AnswerContent","RoleID","loading","includes","target","color","primaryColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Radio, Tooltip, Skeleton, Popconfirm, Checkbox } from 'antd'\r\nimport { Trash2 } from 'react-feather'\r\nimport CreateQuestionForm from '~/components/Global/QuestionBank/CreateQuestionForm'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { exerciseApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]'\r\nimport { CheckOutlined } from '@ant-design/icons'\r\nimport _ from '~/appConfig'\r\n\r\nconst QuestionSingle = (props: any) => {\r\n\tconst { onGetListQuestionID, listQuestionID, listQuestionAddOutside, onRemoveQuestionAdd } = useExamDetail()\r\n\tconst { listQuestion, loadingQuestion, onFetchData, onRemoveData, isGroup, onEditData, listAlphabet, groupID, dataExam } = props\r\n\tconst [dataListQuestion, setDataListQuestion] = useState(null)\r\n\tconst { showNoti, userInformation } = useWrap()\r\n\tconst [visible, setVisible] = useState({\r\n\t\tid: null,\r\n\t\tstatus: false\r\n\t})\r\n\tconst [confirmLoading, setConfirmLoading] = useState(false)\r\n\tconst [loadingInGroup, setLoadingInGroup] = useState(false)\r\n\tconst [loadingAudio, setLoadingAudio] = useState(null)\r\n\tconst [activeID, setActiveID] = useState(null)\r\n\tconst [lengthData, setLengthData] = useState(null)\r\n\r\n\tconst onChange = (e) => {\r\n\t\te.preventDefault()\r\n\t}\r\n\r\n\t// ON EDIT\r\n\tconst onEdit = (dataEdit) => {\r\n\t\tif (!isGroup.status) {\r\n\t\t\tonEditData(dataEdit)\r\n\t\t} else {\r\n\t\t\tlet index = dataListQuestion.findIndex((item) => item.ID == dataEdit.ID)\r\n\t\t\tdataListQuestion.splice(index, 1, dataEdit)\r\n\t\t\tsetDataListQuestion([...dataListQuestion])\r\n\t\t}\r\n\t}\r\n\r\n\tconst deleteQuestionItem = (quesID) => {\r\n\t\t!visible.status\r\n\t\t\t? setVisible({\r\n\t\t\t\t\tid: quesID,\r\n\t\t\t\t\tstatus: true\r\n\t\t\t  })\r\n\t\t\t: setVisible({\r\n\t\t\t\t\tid: quesID,\r\n\t\t\t\t\tstatus: false\r\n\t\t\t  })\r\n\t}\r\n\r\n\t// Chấp nhận xóa câu hỏi\r\n\tconst handleOk = async (quesItem) => {\r\n\t\tsetConfirmLoading(true)\r\n\t\tquesItem.Enable = false\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseApi.update(quesItem)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetVisible({\r\n\t\t\t\t\t...visible,\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t\tonRemoveData(quesItem)\r\n\t\t\t\tshowNoti('success', 'Xóa thành công')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetConfirmLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleCancel = (quesID) => {\r\n\t\tsetVisible({\r\n\t\t\tid: quesID,\r\n\t\t\tstatus: false\r\n\t\t})\r\n\t}\r\n\r\n\tconst getQuestionInGroup = async () => {\r\n\t\tsetLoadingInGroup(true)\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseApi.getAll({\r\n\t\t\t\tpageIndex: 1,\r\n\t\t\t\tpageSize: 9999,\r\n\t\t\t\tExerciseGroupID: isGroup.id\r\n\t\t\t})\r\n\t\t\tres.status == 200 && setDataListQuestion(res.data.data)\r\n\t\t\tres.status == 204 && setDataListQuestion([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingInGroup(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onHover = (ID: number) => {\r\n\t\tsetActiveID(ID)\r\n\t}\r\n\r\n\tconst returnAudio = (item) => {\r\n\t\tconst audioHTML = (item) => {\r\n\t\t\treturn (\r\n\t\t\t\t<audio controls>\r\n\t\t\t\t\t<source src={item.LinkAudio} type=\"audio/mpeg\" />\r\n\t\t\t\t</audio>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{!activeID ? (\r\n\t\t\t\t\titem.LinkAudio !== '' && audioHTML(item)\r\n\t\t\t\t) : item.ID == activeID ? (\r\n\t\t\t\t\t!loadingAudio ? (\r\n\t\t\t\t\t\titem.LinkAudio !== '' && audioHTML(item)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<></>\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\titem.LinkAudio !== '' && audioHTML(item)\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t// Check active item when add new data\r\n\t\tif (dataListQuestion?.length > 0) {\r\n\t\t\tif (listQuestion.length > lengthData) {\r\n\t\t\t\tsetActiveID(listQuestion[0].ID)\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetLengthData(listQuestion.length)\r\n\r\n\t\t// Loading audio for change html audio (because the link not change when update state)\r\n\t\tsetLoadingAudio(true)\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLoadingAudio(false)\r\n\t\t}, 100)\r\n\r\n\t\t// Check all situations between no group and have group\r\n\t\tif (!isGroup.status) {\r\n\t\t\tlistQuestion.forEach((item) => {\r\n\t\t\t\titem.isChecked = null\r\n\r\n\t\t\t\tif (listQuestionAddOutside?.length > 0) {\r\n\t\t\t\t\tif (listQuestionAddOutside.some((object) => object['ExerciseOrExerciseGroupID'] == item.ID)) {\r\n\t\t\t\t\t\titem.isChecked = true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tsetDataListQuestion(listQuestion)\r\n\t\t} else {\r\n\t\t\tisGroup.id && isGroup.id === groupID && getQuestionInGroup()\r\n\t\t}\r\n\t}, [listQuestion])\r\n\r\n\tuseEffect(() => {\r\n\t\tisGroup.status && setDataListQuestion([])\r\n\t\tisGroup.status && isGroup.id && isGroup.id === groupID && getQuestionInGroup()\r\n\t}, [isGroup])\r\n\r\n\t// On change - add question\r\n\tconst onChange_AddQuestion = (checked, quesID) => {\r\n\t\tlet objectQuestion = {\r\n\t\t\ttype: 1,\r\n\t\t\tExerciseOrExerciseGroupID: quesID\r\n\t\t}\r\n\r\n\t\t// Call function to get ID of question\r\n\t\tif (checked) {\r\n\t\t\tonGetListQuestionID(objectQuestion)\r\n\t\t} else {\r\n\t\t\tonRemoveQuestionAdd(objectQuestion)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dataListQuestion?.length > 0) {\r\n\t\t\tif (listQuestionAddOutside?.length > 0) {\r\n\t\t\t\tdataListQuestion?.forEach((item) => {\r\n\t\t\t\t\tif (listQuestionAddOutside.some((object) => object['ExerciseOrExerciseGroupID'] == item.ID)) {\r\n\t\t\t\t\t\titem.isChecked = true\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\titem.isChecked = false\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tdataListQuestion?.forEach((item) => {\r\n\t\t\t\t\titem.isChecked = false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tsetDataListQuestion([...dataListQuestion])\r\n\t\t}\r\n\t}, [listQuestionAddOutside])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{dataListQuestion?.length == 0\r\n\t\t\t\t? !isGroup.status && (\r\n\t\t\t\t\t\t<p className=\"text-center\">\r\n\t\t\t\t\t\t\t<b>Danh sách còn trống</b>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t  )\r\n\t\t\t\t: dataListQuestion?.map((item, index) => (\r\n\t\t\t\t\t\t<div className={`question-item ${item.ID == activeID ? 'active' : ''}`} key={index} onMouseEnter={() => onHover(item.ID)}>\r\n\t\t\t\t\t\t\t<div className=\"box-detail\">\r\n\t\t\t\t\t\t\t\t<div className=\"box-title\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"title-ques\">Câu hỏi {index + 1}</span>\r\n\t\t\t\t\t\t\t\t\t{item.LinkAudio && returnAudio(item)}\r\n\t\t\t\t\t\t\t\t\t<div className=\"title-text\">{ReactHtmlParser(item.Content)}</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"box-answer\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"question-single question-wrap w-100\">\r\n\t\t\t\t\t\t\t\t\t\t{item.ExerciseAnswer?.map((ans, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Radio\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={ans.isTrue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"d-block\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={ans.ID}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={ans.isTrue ? false : true}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"tick\">{listAlphabet[i]}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text\">{ans.AnswerContent}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</Radio>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{userInformation?.RoleID !== 2 && (\r\n\t\t\t\t\t\t\t\t<div className=\"box-action\">\r\n\t\t\t\t\t\t\t\t\t<CreateQuestionForm\r\n\t\t\t\t\t\t\t\t\t\tquestionData={item}\r\n\t\t\t\t\t\t\t\t\t\tonFetchData={onFetchData}\r\n\t\t\t\t\t\t\t\t\t\tonEditData={(dataEdit: any) => onEdit(dataEdit)}\r\n\t\t\t\t\t\t\t\t\t\tisGroup={{ status: false, id: null }}\r\n\t\t\t\t\t\t\t\t\t\tgetActiveID={(ID: any) => setActiveID(ID)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\t\t\ttitle=\"Bạn có chắc muốn xóa?\"\r\n\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleOk(item)}\r\n\t\t\t\t\t\t\t\t\t\tokButtonProps={{ loading: confirmLoading }}\r\n\t\t\t\t\t\t\t\t\t\tonCancel={() => handleCancel(item.ID)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Xóa câu hỏi\" placement=\"rightTop\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-icon delete\" onClick={() => deleteQuestionItem(item.ID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Trash2 />\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t\t\t\t{!isGroup.status &&\r\n\t\t\t\t\t\t\t\t\t\tdataExam &&\r\n\t\t\t\t\t\t\t\t\t\t(listQuestionID.includes(item.ID) ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Đã có trong đề thi\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-icon edit\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"checkbox-addquestion\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={item.isChecked}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => onChange_AddQuestion(e.target.checked, item.ID)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t  ))}\r\n\r\n\t\t\t{isGroup?.status && loadingInGroup ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Skeleton />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\tisGroup?.status &&\r\n\t\t\t\tdataListQuestion?.length == 0 && (\r\n\t\t\t\t\t<p style={{ color: _.primaryColor }}>\r\n\t\t\t\t\t\t<i>Nhóm này chưa có câu hỏi</i>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t\t{loadingQuestion && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Skeleton />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default QuestionSingle\r\n"]},"metadata":{},"sourceType":"module"}
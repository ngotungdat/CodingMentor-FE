{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Customer\\\\Service\\\\TestAddExam.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Modal, Select, Tooltip } from 'antd';\nimport { DiffOutlined } from '@ant-design/icons';\nimport { testCustomerApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nvar Option = Select.Option;\n\nvar TestAddExam = function TestAddExam(props) {\n  _s();\n\n  var _useState = useState(false),\n      isModalVisible = _useState[0],\n      setIsModalVisible = _useState[1];\n\n  var dataExam = props.dataExam,\n      dataRow = props.dataRow,\n      onFetchData = props.onFetchData;\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var _useState3 = useState(null),\n      valueExam = _useState3[0],\n      setValueExam = _useState3[1];\n\n  var showModal = function showModal() {\n    setIsModalVisible(true);\n  };\n\n  var handleOk = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = {\n                ID: dataRow.ID,\n                ExamTopicID: valueExam,\n                Enable: true\n              };\n              setLoading(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return testCustomerApi.update(data);\n\n            case 5:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                setIsModalVisible(false);\n                onFetchData && onFetchData();\n                showNoti('success', 'Gán đề thành công');\n              } else {\n                showNoti('danger', 'Mạng đang kết nối không ổn định');\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              showNoti('danger', _context.t0.message);\n\n            case 12:\n              _context.prev = 12;\n              setLoading(false);\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9, 12, 15]]);\n    }));\n\n    return function handleOk() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleCancel = function handleCancel() {\n    setIsModalVisible(false);\n  };\n\n  function handleChange_exam(value) {\n    setValueExam(value);\n  }\n\n  useEffect(function () {\n    if (isModalVisible) {\n      setValueExam(dataRow.ExamTopicnName);\n    }\n  }, [isModalVisible]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Th\\xEAm \\u0111\\u1EC1 h\\u1EB9n test\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-icon view ml-2\",\n        onClick: showModal,\n        children: /*#__PURE__*/_jsxDEV(DiffOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"G\\xE1n \\u0111\\u1EC1 h\\u1EB9n test\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      confirmLoading: loading,\n      okText: \"Th\\xEAm\",\n      onCancel: handleCancel,\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Ch\\u1ECDn \\u0111\\u1EC1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(Select, {\n        value: valueExam,\n        className: \"style-input\",\n        onChange: handleChange_exam,\n        children: dataExam === null || dataExam === void 0 ? void 0 : dataExam.map(function (item, index) {\n          return /*#__PURE__*/_jsxDEV(Option, {\n            value: item.ID,\n            children: item.Name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(TestAddExam, \"pcpof4+RSJkcTxKSxQL7/MM3lhY=\", false, function () {\n  return [useWrap];\n});\n\n_c = TestAddExam;\nexport default TestAddExam;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestAddExam\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Customer/Service/TestAddExam.tsx"],"names":["React","useEffect","useState","Modal","Select","Tooltip","DiffOutlined","testCustomerApi","useWrap","Option","TestAddExam","props","isModalVisible","setIsModalVisible","dataExam","dataRow","onFetchData","loading","setLoading","showNoti","valueExam","setValueExam","showModal","handleOk","data","ID","ExamTopicID","Enable","update","res","status","message","handleCancel","handleChange_exam","value","ExamTopicnName","map","item","index","Name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Modal, Select, Tooltip } from 'antd';\r\nimport { DiffOutlined } from '@ant-design/icons';\r\nimport { testCustomerApi } from '~/apiBase';\r\nimport { useWrap } from '~/context/wrap';\r\n\r\nconst { Option } = Select;\r\n\r\nconst TestAddExam = (props) => {\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst { dataExam, dataRow, onFetchData } = props;\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst { showNoti } = useWrap();\r\n\tconst [valueExam, setValueExam] = useState(null);\r\n\r\n\tconst showModal = () => {\r\n\t\tsetIsModalVisible(true);\r\n\t};\r\n\r\n\tconst handleOk = async () => {\r\n\t\tconst data = {\r\n\t\t\tID: dataRow.ID,\r\n\t\t\tExamTopicID: valueExam,\r\n\t\t\tEnable: true\r\n\t\t};\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tlet res = await testCustomerApi.update(data);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetIsModalVisible(false);\r\n\t\t\t\tonFetchData && onFetchData();\r\n\t\t\t\tshowNoti('success', 'Gán đề thành công');\r\n\t\t\t} else {\r\n\t\t\t\tshowNoti('danger', 'Mạng đang kết nối không ổn định');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false);\r\n\t};\r\n\r\n\tfunction handleChange_exam(value) {\r\n\t\tsetValueExam(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isModalVisible) {\r\n\t\t\tsetValueExam(dataRow.ExamTopicnName);\r\n\t\t}\r\n\t}, [isModalVisible]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tooltip title=\"Thêm đề hẹn test\">\r\n\t\t\t\t<button className=\"btn btn-icon view ml-2\" onClick={showModal}>\r\n\t\t\t\t\t<DiffOutlined />\r\n\t\t\t\t</button>\r\n\t\t\t</Tooltip>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Gán đề hẹn test\"\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tconfirmLoading={loading}\r\n\t\t\t\tokText=\"Thêm\"\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t>\r\n\t\t\t\t<h6>Chọn đề</h6>\r\n\t\t\t\t<Select value={valueExam} className=\"style-input\" onChange={handleChange_exam}>\r\n\t\t\t\t\t{dataExam?.map((item, index) => (\r\n\t\t\t\t\t\t<Option value={item.ID} key={index}>\r\n\t\t\t\t\t\t\t{item.Name}\r\n\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TestAddExam;\r\n"]},"metadata":{},"sourceType":"module"}
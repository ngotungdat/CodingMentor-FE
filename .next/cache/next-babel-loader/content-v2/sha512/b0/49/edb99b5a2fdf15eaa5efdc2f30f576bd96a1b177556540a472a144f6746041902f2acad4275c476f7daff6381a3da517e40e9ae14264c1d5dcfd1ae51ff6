{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Elements\\\\CountDown\\\\CountDown.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import './styles.module.scss';\n\nvar CountDown = function CountDown(props) {\n  _s();\n\n  var add_minutes = props.addMinutes;\n\n  var calculateTimeLeft = function calculateTimeLeft() {\n    var timeLeft = {};\n    var difference = +add_minutes - +new Date();\n    var calSeconds = Math.floor(difference / 1000 % 60);\n    var calMinutes = Math.floor(difference / 1000 / 60 % 60);\n\n    if (difference >= 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n        minutes: calMinutes < 10 ? \"0\" + calMinutes : calMinutes,\n        seconds: calSeconds < 10 ? \"0\" + calSeconds : calSeconds\n      };\n    } else {\n      // setShowPopup(true);\n      props.onFinish && props.onFinish();\n    }\n\n    return timeLeft;\n  };\n\n  var _useState = useState(calculateTimeLeft()),\n      timeLeft = _useState[0],\n      setTimeLeft = _useState[1];\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n    return function () {\n      return clearTimeout(timer);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countdown\",\n    children: [timeLeft.hours > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"hours\",\n      children: timeLeft.hours\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 30\n    }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"minutes\",\n      children: timeLeft.minutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"seconds\",\n      children: timeLeft.seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CountDown, \"2yD7J9BRKO6eNclZT/dCzRz3Fpg=\");\n\n_c = CountDown;\nexport default CountDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Elements/CountDown/CountDown.tsx"],"names":["React","useState","useEffect","CountDown","props","add_minutes","addMinutes","calculateTimeLeft","timeLeft","difference","Date","calSeconds","Math","floor","calMinutes","days","hours","minutes","seconds","onFinish","setTimeLeft","timer","setTimeout","clearTimeout"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA;;AAC3B,MAAMC,WAAW,GAAGD,KAAK,CAACE,UAA1B;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,UAAU,GAAG,CAACJ,WAAD,GAAe,CAAC,IAAIK,IAAJ,EAAjC;AAEA,QAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAYJ,UAAU,GAAG,IAAd,GAAsB,EAAjC,CAAjB;AACA,QAAIK,UAAU,GAAGF,IAAI,CAACC,KAAL,CAAYJ,UAAU,GAAG,IAAb,GAAoB,EAArB,GAA2B,EAAtC,CAAjB;;AAEA,QAAIA,UAAU,IAAI,CAAlB,EAAqB;AACnBD,MAAAA,QAAQ,GAAG;AACTO,QAAAA,IAAI,EAAEH,IAAI,CAACC,KAAL,CAAWJ,UAAU,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAArB,CADG;AAETO,QAAAA,KAAK,EAAEJ,IAAI,CAACC,KAAL,CAAYJ,UAAU,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAX,GAAkC,EAA7C,CAFE;AAGTQ,QAAAA,OAAO,EAAEH,UAAU,GAAG,EAAb,GAAkB,MAAMA,UAAxB,GAAqCA,UAHrC;AAITI,QAAAA,OAAO,EAAEP,UAAU,GAAG,EAAb,GAAkB,MAAMA,UAAxB,GAAqCA;AAJrC,OAAX;AAMD,KAPD,MAOO;AACL;AACAP,MAAAA,KAAK,CAACe,QAAN,IAAkBf,KAAK,CAACe,QAAN,EAAlB;AACD;;AAED,WAAOX,QAAP;AACD,GApBD;;AAH2B,kBAyBKP,QAAQ,CAAMM,iBAAiB,EAAvB,CAzBb;AAAA,MAyBpBC,QAzBoB;AAAA,MAyBVY,WAzBU;;AA2B3BlB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMmB,KAAK,GAAGC,UAAU,CAAC,YAAM;AAC7BF,MAAAA,WAAW,CAACb,iBAAiB,EAAlB,CAAX;AACD,KAFuB,EAErB,IAFqB,CAAxB;AAGA,WAAO;AAAA,aAAMgB,YAAY,CAACF,KAAD,CAAlB;AAAA,KAAP;AACD,GALQ,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACGb,QAAQ,CAACQ,KAAT,GAAiB,CAAjB,iBAAsB;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA,gBAAyBR,QAAQ,CAACQ;AAAlC;AAAA;AAAA;AAAA;AAAA,aADzB,eAEE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,gBAA2BR,QAAQ,CAACS;AAApC;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,gBAA2BT,QAAQ,CAACU;AAApC;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAzCD;;GAAMf,S;;KAAAA,S;AA2CN,eAAeA,SAAf","sourcesContent":["import { time } from \"console\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// import './styles.module.scss';\r\n\r\nconst CountDown = (props) => {\r\n  const add_minutes = props.addMinutes;\r\n\r\n  const calculateTimeLeft = () => {\r\n    let timeLeft = {};\r\n    let difference = +add_minutes - +new Date();\r\n\r\n    let calSeconds = Math.floor((difference / 1000) % 60);\r\n    let calMinutes = Math.floor((difference / 1000 / 60) % 60);\r\n\r\n    if (difference >= 0) {\r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: calMinutes < 10 ? \"0\" + calMinutes : calMinutes,\r\n        seconds: calSeconds < 10 ? \"0\" + calSeconds : calSeconds,\r\n      };\r\n    } else {\r\n      // setShowPopup(true);\r\n      props.onFinish && props.onFinish();\r\n    }\r\n\r\n    return timeLeft;\r\n  };\r\n\r\n  const [timeLeft, setTimeLeft] = useState<any>(calculateTimeLeft());\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  });\r\n\r\n  return (\r\n    <div className=\"countdown\">\r\n      {timeLeft.hours > 0 && <span className=\"hours\">{timeLeft.hours}</span>}\r\n      <span className=\"minutes\">{timeLeft.minutes}</span>\r\n      <span className=\"seconds\">{timeLeft.seconds}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountDown;\r\n"]},"metadata":{},"sourceType":"module"}
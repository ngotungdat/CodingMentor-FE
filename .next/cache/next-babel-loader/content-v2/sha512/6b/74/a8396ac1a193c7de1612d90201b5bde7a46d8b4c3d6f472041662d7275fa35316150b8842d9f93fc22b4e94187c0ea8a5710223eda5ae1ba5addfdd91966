{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Package\\\\PackageResultDetail\\\\PackageResultStudentDetail.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ProfileOutlined, RedoOutlined } from '@ant-design/icons';\nimport { faFileVideo } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Card, Skeleton, Spin } from 'antd';\nimport Link from 'next/link';\nimport router from 'next/router';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Bookmark } from 'react-feather';\nimport ReactHtmlParser from 'react-html-parser';\nimport { doingTestApi } from '~/apiBase';\nimport { packageResultDetailApi } from '~/apiBase/package/package-result-detail';\nimport { VideoCourseStoreApi } from '~/apiBase/video-course-store';\nimport TitlePage from '~/components/Elements/TitlePage';\nimport ListQuestion from '~/components/Global/DoingTest/ListQuestion';\nimport { useDoneTest } from '~/context/useDoneTest';\nimport { useWrap } from '~/context/wrap';\nimport MainTest from '../../DoingTest/MainTest';\nimport TopPackageNewsFeed from '../../NewsFeed/TopPackageNewsFeed';\n\nconst PackageResultStudentDetail = () => {\n  const {\n    teacherMarking: teacherMarking,\n    score: score\n  } = router.query;\n  const {\n    getDoneTestData,\n    doneTestData,\n    dataMarking,\n    getDataMarking\n  } = useDoneTest();\n  const {\n    0: detailResult,\n    1: setDetailResult\n  } = useState([]);\n  const {\n    0: visibleNofi,\n    1: setVisibleNofi\n  } = useState(false);\n  const boxEl = useRef(null);\n  const paramsDefault = {\n    pageSize: 999,\n    pageIndex: 1,\n    SetPackageResultID: parseInt(router.query.slug),\n    ExerciseType: teacherMarking ? 2 : null\n  };\n  const {\n    0: params,\n    1: setParams\n  } = useState(paramsDefault);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: listQuestionID,\n    1: setListQuestionID\n  } = useState([]); // Lấy tất cả ID đã có\n\n  const {\n    0: listGroupID,\n    1: setListGroupID\n  } = useState([]); // Lấy tất cả group ID đã có\n\n  const {\n    0: showMainTest,\n    1: setShowMainTest\n  } = useState(false);\n  const {\n    showNoti,\n    userInformation\n  } = useWrap();\n  const {\n    0: isShowAll,\n    1: setIsShowAll\n  } = useState(false);\n  const {\n    0: isMarked,\n    1: setIsMarked\n  } = useState(false);\n  const {\n    0: showNote,\n    1: setShowNote\n  } = useState(false);\n  const {\n    0: infoTest,\n    1: setInfoTest\n  } = useState(null);\n  const {\n    0: loadingInfoTest,\n    1: setLoadingInfoTest\n  } = useState(false);\n  const {\n    0: courses,\n    1: setCourse\n  } = useState([]); // ---- Get Router ----\n\n  const {\n    packageDetailID: packageDetailID,\n    examID: examID\n  } = router.query;\n  const SetPackageResultID = router.query.slug;\n  useEffect(() => {\n    !!infoTest && getVideoCourse();\n  }, [infoTest]);\n\n  const getInfoTest = async () => {\n    setLoadingInfoTest(true);\n\n    try {\n      let res = await doingTestApi.getByID(SetPackageResultID);\n\n      if (res.status === 200) {\n        let dataInfo = _objectSpread({}, res.data.data);\n\n        let totalQuestion = dataInfo.ListeningNumber + dataInfo.ReadingNumber;\n        setInfoTest(_objectSpread(_objectSpread({}, res.data.data), {}, {\n          TotalQuestion: totalQuestion\n        }));\n      }\n    } catch (error) {\n      console.log('error', error.message);\n    } finally {\n      setLoadingInfoTest(false);\n    }\n  };\n\n  const getVideoCourse = async () => {\n    setLoading(true);\n\n    try {\n      const res = await VideoCourseStoreApi.getByPoint((infoTest === null || infoTest === void 0 ? void 0 : infoTest.PointTotal) < 1 ? 1 : infoTest === null || infoTest === void 0 ? void 0 : infoTest.PointTotal);\n      res.status == 200 && setCourse(res.data.data);\n      setLoading(false);\n    } catch (err) {} finally {\n      setLoading(false);\n    }\n  };\n\n  const getDataSetPackageResult = async () => {\n    let cloneListQuestionID = [...listQuestionID];\n    let cloneListGroupID = [...listGroupID];\n    setLoading(true);\n\n    try {\n      let res = await packageResultDetailApi.getAll(params);\n\n      if (res.status == 200) {\n        convertDataDoneTest(res.data.data);\n        setIsMarked(res.data.isDone); // Add to data marking if have teacher marking\n\n        if (teacherMarking) {\n          if (!dataMarking) {\n            let newDataMarking = {\n              SetPackageResultID: parseInt(router.query.slug),\n              Note: '',\n              setPackageExerciseStudentsList: []\n            };\n            res.data.data.forEach(item => {\n              if (item.ExerciseType == 2) {\n                item.SetPackageExerciseStudent.forEach(ques => {\n                  newDataMarking.setPackageExerciseStudentsList.push({\n                    ID: ques.ID,\n                    Point: 0\n                  });\n                });\n              }\n            });\n            getDataMarking(_objectSpread({}, newDataMarking));\n          }\n        } // Add questionid to list\n\n\n        res.data.data.forEach((item, index) => {\n          if (item.Enable) {\n            item.ExerciseGroupID !== 0 && cloneListGroupID.push(item.ExerciseGroupID);\n            item.SetPackageExerciseStudent.forEach(ques => {\n              cloneListQuestionID.push(ques.ExerciseID);\n            });\n          }\n        });\n        getDoneTestData(res.data.data);\n        setListGroupID([...cloneListGroupID]);\n        setListQuestionID([...cloneListQuestionID]);\n      }\n\n      if (res.status == 204) {\n        showNoti('danger', 'Không tìm thấy dữ liệu!');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const convertDataDoneTest = data => {\n    let cloneData = [...data];\n    cloneData.forEach(item => {\n      item.ExerciseTopic = [...item.SetPackageExerciseStudent];\n      item.ExerciseTopic.forEach(ques => {\n        ques.ExerciseAnswer = [...ques.SetPackageExerciseAnswerStudent];\n      });\n    });\n    setDetailResult([...cloneData]);\n  };\n\n  const returnSpaceQuestion = data => {\n    var _data$, _data;\n\n    let indexStart = listQuestionID.indexOf((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.ExerciseID);\n    let indexEnd = listQuestionID.indexOf((_data = data[data.length - 1]) === null || _data === void 0 ? void 0 : _data.ExerciseID);\n    let text = '';\n\n    if (indexStart === indexEnd) {\n      text = 'Câu ' + (indexStart + 1).toString();\n    } else {\n      text = 'Câu ' + (indexStart + 1).toString() + ' - ' + (indexEnd + 1).toString();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"space-question\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 10\n    }, this);\n  };\n\n  const showWritingQuestion = () => {\n    if (isShowAll) {\n      setParams(_objectSpread(_objectSpread({}, paramsDefault), {}, {\n        ExerciseType: 2\n      }));\n    } else {\n      setParams(_objectSpread(_objectSpread({}, paramsDefault), {}, {\n        ExerciseType: null\n      }));\n    }\n\n    setIsShowAll(!isShowAll);\n  };\n\n  useEffect(() => {\n    getDataSetPackageResult();\n  }, [params]);\n  useEffect(() => {\n    if (dataMarking && !showNote) {\n      if (dataMarking.setPackageExerciseStudentsList.length > 0) {\n        dataMarking.setPackageExerciseStudentsList.every(item => {\n          if (item.Point) {\n            setVisibleNofi(true);\n            setShowNote(true);\n            setTimeout(() => {\n              setVisibleNofi(false);\n            }, 5000);\n            return false;\n          }\n\n          return true;\n        });\n      }\n    }\n  }, [dataMarking]);\n  useEffect(() => {\n    getInfoTest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showMainTest ? /*#__PURE__*/_jsxDEV(MainTest, {\n      dataDoneTest: detailResult,\n      isDone: true,\n      listIDFromDoneTest: listQuestionID,\n      listGroupIDFromDoneTest: listGroupID,\n      closeMainTest: () => setShowMainTest(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-wrapper done-test m-0 p-0\",\n      children: [/*#__PURE__*/_jsxDEV(TitlePage, {\n        title: \"K\\u1EBFt qu\\u1EA3 b\\u1ED9 \\u0111\\u1EC1 chi ti\\u1EBFt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row w-100 m-0 p-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8 col-12 m-0 p-0 mb-3 d-m-r\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"table-medium w-100\",\n            title: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title-question-bank\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"title-big\",\n                children: [/*#__PURE__*/_jsxDEV(Bookmark, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 12\n                }, this), \"Danh s\\xE1ch k\\u1EBFt qu\\u1EA3\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 10\n            }, this),\n            extra: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                href: {\n                  pathname: '/doing-test',\n                  query: {\n                    examID: examID,\n                    packageDetailID: packageDetailID,\n                    type: 'examination'\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"btn btn-warning\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"d-flex align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(RedoOutlined, {\n                      className: \"mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 14\n                    }, this), \"L\\xE0m l\\u1EA1i \\u0111\\u1EC1\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary ml-2\",\n                onClick: () => setShowMainTest(true),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"d-flex align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(ProfileOutlined, {\n                    className: \"mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 13\n                  }, this), \"Xem chi ti\\u1EBFt\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"test-body done-test-card \",\n              ref: boxEl,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wrap-box-info mb-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"box-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"box-info__item box-info__score\",\n                    children: [\"S\\u1ED1 \\u0111i\\u1EC3m\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"number\",\n                      children: loadingInfoTest ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                        paragraph: false,\n                        loading: true,\n                        title: true,\n                        active: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 33\n                      }, this) : infoTest === null || infoTest === void 0 ? void 0 : infoTest.PointTotal\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"box-info__item box-info__correct\",\n                    children: [\"S\\u1ED1 c\\xE2u \\u0111\\xFAng\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"number\",\n                      children: loadingInfoTest ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                        paragraph: false,\n                        loading: true,\n                        title: true,\n                        active: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 275,\n                        columnNumber: 15\n                      }, this) : infoTest ? (infoTest === null || infoTest === void 0 ? void 0 : infoTest.ReadingCorrect) + (infoTest === null || infoTest === void 0 ? void 0 : infoTest.ListeningCorrect) + '/' + (infoTest === null || infoTest === void 0 ? void 0 : infoTest.TotalQuestion) : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 10\n              }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mt-5\",\n                children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 11\n              }, this) : (detailResult === null || detailResult === void 0 ? void 0 : detailResult.length) == 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-center font-weight-bold\",\n                children: \"Kh\\xF4ng c\\xF3 d\\u1EEF li\\u1EC7u\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 11\n              }, this) : doneTestData && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: detailResult.map((item, index) => {\n                  if (item.ExerciseGroupID !== 0) {\n                    var _item$ExerciseTopic$;\n\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"wrap-group-list\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"box-detail\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"row\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col-md-11\",\n                            children: [returnSpaceQuestion(item.ExerciseTopic), item.Content && item.Content !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"box-content\",\n                              children: item.Content && ReactHtmlParser(item.Content)\n                            }, index, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 304,\n                              columnNumber: 21\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 301,\n                            columnNumber: 19\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col-md-1\",\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"point-question text-right mt-4\",\n                              children: (_item$ExerciseTopic$ = item.ExerciseTopic[0]) === null || _item$ExerciseTopic$ === void 0 ? void 0 : _item$ExerciseTopic$.Point\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 310,\n                              columnNumber: 20\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 309,\n                            columnNumber: 19\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 300,\n                          columnNumber: 18\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: /*#__PURE__*/_jsxDEV(ListQuestion, {\n                            showScore: !!score,\n                            isMarked: isMarked,\n                            dataQuestion: item,\n                            listQuestionID: listQuestionID\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 315,\n                            columnNumber: 19\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 314,\n                          columnNumber: 18\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 299,\n                        columnNumber: 17\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 16\n                    }, this);\n                  } else {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(ListQuestion, {\n                        showScore: !!score,\n                        isMarked: isMarked,\n                        dataQuestion: item,\n                        listQuestionID: listQuestionID\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 328,\n                        columnNumber: 17\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 16\n                    }, this);\n                  }\n                })\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 col-12 m-0 p-0\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"table-medium w-100\",\n            title: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title-question-bank\",\n              style: {\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"title-big\",\n                style: {\n                  paddingTop: 8,\n                  paddingBottom: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faFileVideo,\n                  size: \"lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 12\n                }, this), \"G\\u1EE3i \\xFD kh\\xF3a h\\u1ECDc\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/video-course\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"font-weight-black\",\n                  style: {\n                    width: 100,\n                    textAlign: 'right'\n                  },\n                  children: \"Xem th\\xEAm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 10\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"test-body done-test-card\",\n              children: /*#__PURE__*/_jsxDEV(TopPackageNewsFeed, {\n                isLoading: loading,\n                topPackageList: courses\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\nexport default PackageResultStudentDetail;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Package/PackageResultDetail/PackageResultStudentDetail.tsx"],"names":["ProfileOutlined","RedoOutlined","faFileVideo","FontAwesomeIcon","Card","Skeleton","Spin","Link","router","React","useEffect","useRef","useState","Bookmark","ReactHtmlParser","doingTestApi","packageResultDetailApi","VideoCourseStoreApi","TitlePage","ListQuestion","useDoneTest","useWrap","MainTest","TopPackageNewsFeed","PackageResultStudentDetail","teacherMarking","score","query","getDoneTestData","doneTestData","dataMarking","getDataMarking","detailResult","setDetailResult","visibleNofi","setVisibleNofi","boxEl","paramsDefault","pageSize","pageIndex","SetPackageResultID","parseInt","slug","ExerciseType","params","setParams","loading","setLoading","listQuestionID","setListQuestionID","listGroupID","setListGroupID","showMainTest","setShowMainTest","showNoti","userInformation","isShowAll","setIsShowAll","isMarked","setIsMarked","showNote","setShowNote","infoTest","setInfoTest","loadingInfoTest","setLoadingInfoTest","courses","setCourse","packageDetailID","examID","getVideoCourse","getInfoTest","res","getByID","status","dataInfo","data","totalQuestion","ListeningNumber","ReadingNumber","TotalQuestion","error","console","log","message","getByPoint","PointTotal","err","getDataSetPackageResult","cloneListQuestionID","cloneListGroupID","getAll","convertDataDoneTest","isDone","newDataMarking","Note","setPackageExerciseStudentsList","forEach","item","SetPackageExerciseStudent","ques","push","ID","Point","index","Enable","ExerciseGroupID","ExerciseID","cloneData","ExerciseTopic","ExerciseAnswer","SetPackageExerciseAnswerStudent","returnSpaceQuestion","indexStart","indexOf","indexEnd","length","text","toString","showWritingQuestion","every","setTimeout","pathname","type","ReadingCorrect","ListeningCorrect","map","Content","display","flexDirection","alignItems","justifyContent","paddingTop","paddingBottom","width","textAlign"],"mappings":"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","sourcesContent":["import { ProfileOutlined, RedoOutlined } from '@ant-design/icons'\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\r\nimport { faFileVideo, faPhotoVideo } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Card, Skeleton, Spin } from 'antd'\r\nimport Link from 'next/link'\r\nimport router from 'next/router'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Bookmark } from 'react-feather'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { doingTestApi } from '~/apiBase'\r\nimport { packageResultDetailApi } from '~/apiBase/package/package-result-detail'\r\nimport { VideoCourseStoreApi } from '~/apiBase/video-course-store'\r\nimport TitlePage from '~/components/Elements/TitlePage'\r\nimport ListQuestion from '~/components/Global/DoingTest/ListQuestion'\r\nimport { useDoneTest } from '~/context/useDoneTest'\r\nimport { useWrap } from '~/context/wrap'\r\nimport MainTest from '../../DoingTest/MainTest'\r\nimport TopPackageNewsFeed from '../../NewsFeed/TopPackageNewsFeed'\r\n\r\nconst PackageResultStudentDetail = () => {\r\n\tconst { teacherMarking: teacherMarking, score: score } = router.query\r\n\tconst { getDoneTestData, doneTestData, dataMarking, getDataMarking } = useDoneTest()\r\n\tconst [detailResult, setDetailResult] = useState([])\r\n\tconst [visibleNofi, setVisibleNofi] = useState(false)\r\n\tconst boxEl = useRef(null)\r\n\r\n\tconst paramsDefault = {\r\n\t\tpageSize: 999,\r\n\t\tpageIndex: 1,\r\n\t\tSetPackageResultID: parseInt(router.query.slug as string),\r\n\t\tExerciseType: teacherMarking ? 2 : null\r\n\t}\r\n\tconst [params, setParams] = useState(paramsDefault)\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [listQuestionID, setListQuestionID] = useState([]) // Lấy tất cả ID đã có\r\n\tconst [listGroupID, setListGroupID] = useState([]) // Lấy tất cả group ID đã có\r\n\r\n\tconst [showMainTest, setShowMainTest] = useState(false)\r\n\tconst { showNoti, userInformation } = useWrap()\r\n\tconst [isShowAll, setIsShowAll] = useState(false)\r\n\tconst [isMarked, setIsMarked] = useState(false)\r\n\tconst [showNote, setShowNote] = useState(false)\r\n\tconst [infoTest, setInfoTest] = useState(null)\r\n\tconst [loadingInfoTest, setLoadingInfoTest] = useState(false)\r\n\tconst [courses, setCourse] = useState<any>([])\r\n\r\n\t// ---- Get Router ----\r\n\r\n\tconst { packageDetailID: packageDetailID, examID: examID } = router.query\r\n\tconst SetPackageResultID = router.query.slug as string\r\n\r\n\tuseEffect(() => {\r\n\t\t!!infoTest && getVideoCourse()\r\n\t}, [infoTest])\r\n\r\n\tconst getInfoTest = async () => {\r\n\t\tsetLoadingInfoTest(true)\r\n\t\ttry {\r\n\t\t\tlet res = await doingTestApi.getByID(SetPackageResultID)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tlet dataInfo: any = { ...res.data.data }\r\n\t\t\t\tlet totalQuestion = dataInfo.ListeningNumber + dataInfo.ReadingNumber\r\n\t\t\t\tsetInfoTest({ ...res.data.data, TotalQuestion: totalQuestion })\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingInfoTest(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst getVideoCourse = async () => {\r\n\t\tsetLoading(true)\r\n\t\ttry {\r\n\t\t\tconst res = await VideoCourseStoreApi.getByPoint(infoTest?.PointTotal < 1 ? 1 : infoTest?.PointTotal)\r\n\t\t\tres.status == 200 && setCourse(res.data.data)\r\n\t\t\tsetLoading(false)\r\n\t\t} catch (err) {\r\n\t\t} finally {\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst getDataSetPackageResult = async () => {\r\n\t\tlet cloneListQuestionID = [...listQuestionID]\r\n\t\tlet cloneListGroupID = [...listGroupID]\r\n\t\tsetLoading(true)\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await packageResultDetailApi.getAll(params)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tconvertDataDoneTest(res.data.data)\r\n\t\t\t\tsetIsMarked(res.data.isDone)\r\n\t\t\t\t// Add to data marking if have teacher marking\r\n\t\t\t\tif (teacherMarking) {\r\n\t\t\t\t\tif (!dataMarking) {\r\n\t\t\t\t\t\tlet newDataMarking = {\r\n\t\t\t\t\t\t\tSetPackageResultID: parseInt(router.query.slug as string),\r\n\t\t\t\t\t\t\tNote: '',\r\n\t\t\t\t\t\t\tsetPackageExerciseStudentsList: []\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tres.data.data.forEach((item) => {\r\n\t\t\t\t\t\t\tif (item.ExerciseType == 2) {\r\n\t\t\t\t\t\t\t\titem.SetPackageExerciseStudent.forEach((ques) => {\r\n\t\t\t\t\t\t\t\t\tnewDataMarking.setPackageExerciseStudentsList.push({\r\n\t\t\t\t\t\t\t\t\t\tID: ques.ID,\r\n\t\t\t\t\t\t\t\t\t\tPoint: 0\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tgetDataMarking({ ...newDataMarking })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add questionid to list\r\n\t\t\t\tres.data.data.forEach((item, index) => {\r\n\t\t\t\t\tif (item.Enable) {\r\n\t\t\t\t\t\titem.ExerciseGroupID !== 0 && cloneListGroupID.push(item.ExerciseGroupID)\r\n\t\t\t\t\t\titem.SetPackageExerciseStudent.forEach((ques) => {\r\n\t\t\t\t\t\t\tcloneListQuestionID.push(ques.ExerciseID)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tgetDoneTestData(res.data.data)\r\n\t\t\t\tsetListGroupID([...cloneListGroupID])\r\n\t\t\t\tsetListQuestionID([...cloneListQuestionID])\r\n\t\t\t}\r\n\r\n\t\t\tif (res.status == 204) {\r\n\t\t\t\tshowNoti('danger', 'Không tìm thấy dữ liệu!')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst convertDataDoneTest = (data) => {\r\n\t\tlet cloneData = [...data]\r\n\t\tcloneData.forEach((item) => {\r\n\t\t\titem.ExerciseTopic = [...item.SetPackageExerciseStudent]\r\n\t\t\titem.ExerciseTopic.forEach((ques) => {\r\n\t\t\t\tques.ExerciseAnswer = [...ques.SetPackageExerciseAnswerStudent]\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\tsetDetailResult([...cloneData])\r\n\t}\r\n\r\n\tconst returnSpaceQuestion = (data) => {\r\n\t\tlet indexStart = listQuestionID.indexOf(data[0]?.ExerciseID)\r\n\t\tlet indexEnd = listQuestionID.indexOf(data[data.length - 1]?.ExerciseID)\r\n\r\n\t\tlet text = ''\r\n\t\tif (indexStart === indexEnd) {\r\n\t\t\ttext = 'Câu ' + (indexStart + 1).toString()\r\n\t\t} else {\r\n\t\t\ttext = 'Câu ' + (indexStart + 1).toString() + ' - ' + (indexEnd + 1).toString()\r\n\t\t}\r\n\t\treturn <p className=\"space-question\">{text}</p>\r\n\t}\r\n\r\n\tconst showWritingQuestion = () => {\r\n\t\tif (isShowAll) {\r\n\t\t\tsetParams({\r\n\t\t\t\t...paramsDefault,\r\n\t\t\t\tExerciseType: 2\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tsetParams({\r\n\t\t\t\t...paramsDefault,\r\n\t\t\t\tExerciseType: null\r\n\t\t\t})\r\n\t\t}\r\n\t\tsetIsShowAll(!isShowAll)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataSetPackageResult()\r\n\t}, [params])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dataMarking && !showNote) {\r\n\t\t\tif (dataMarking.setPackageExerciseStudentsList.length > 0) {\r\n\t\t\t\tdataMarking.setPackageExerciseStudentsList.every((item) => {\r\n\t\t\t\t\tif (item.Point) {\r\n\t\t\t\t\t\tsetVisibleNofi(true)\r\n\t\t\t\t\t\tsetShowNote(true)\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetVisibleNofi(false)\r\n\t\t\t\t\t\t}, 5000)\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}, [dataMarking])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetInfoTest()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{showMainTest ? (\r\n\t\t\t\t<MainTest\r\n\t\t\t\t\tdataDoneTest={detailResult}\r\n\t\t\t\t\tisDone={true}\r\n\t\t\t\t\tlistIDFromDoneTest={listQuestionID}\r\n\t\t\t\t\tlistGroupIDFromDoneTest={listGroupID}\r\n\t\t\t\t\tcloseMainTest={() => setShowMainTest(false)}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"test-wrapper done-test m-0 p-0\">\r\n\t\t\t\t\t<TitlePage title=\"Kết quả bộ đề chi tiết\" />\r\n\t\t\t\t\t<div className=\"row w-100 m-0 p-0\">\r\n\t\t\t\t\t\t<div className=\"col-md-8 col-12 m-0 p-0 mb-3 d-m-r\">\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tclassName=\"table-medium w-100\"\r\n\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t<div className=\"title-question-bank\">\r\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"title-big\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Bookmark />\r\n\t\t\t\t\t\t\t\t\t\t\tDanh sách kết quả\r\n\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\textra={\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/doing-test',\r\n\t\t\t\t\t\t\t\t\t\t\t\tquery: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texamID: examID,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpackageDetailID: packageDetailID,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'examination'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"btn btn-warning\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RedoOutlined className=\"mr-2\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tLàm lại đề\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-secondary ml-2\" onClick={() => setShowMainTest(true)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ProfileOutlined className=\"mr-2\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\tXem chi tiết\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className=\"test-body done-test-card \" ref={boxEl}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"wrap-box-info mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"box-info\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"box-info__item box-info__score\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tSố điểm\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"number\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{loadingInfoTest ? <Skeleton paragraph={false} loading={true} title={true} active /> : infoTest?.PointTotal}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"box-info__item box-info__correct\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tSố câu đúng\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"number\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{loadingInfoTest ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Skeleton paragraph={false} loading={true} title={true} active />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : infoTest ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinfoTest?.ReadingCorrect + infoTest?.ListeningCorrect + '/' + infoTest?.TotalQuestion\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center mt-5\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Spin />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t) : detailResult?.length == 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-center font-weight-bold\">Không có dữ liệu</p>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\tdoneTestData && (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{detailResult.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.ExerciseGroupID !== 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"wrap-group-list\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"box-detail\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-11\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{returnSpaceQuestion(item.ExerciseTopic)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.Content && item.Content !== '' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"box-content\" key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.Content && ReactHtmlParser(item.Content)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"point-question text-right mt-4\">{item.ExerciseTopic[0]?.Point}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListQuestion\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowScore={!!score}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisMarked={isMarked}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataQuestion={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListQuestion showScore={!!score} isMarked={isMarked} dataQuestion={item} listQuestionID={listQuestionID} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"col-md-4 col-12 m-0 p-0\">\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tclassName=\"table-medium w-100\"\r\n\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"title-question-bank\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"title-big\" style={{ paddingTop: 8, paddingBottom: 8 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faFileVideo as IconProp} size=\"lg\" />\r\n\t\t\t\t\t\t\t\t\t\t\tGợi ý khóa học\r\n\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t<Link href=\"/video-course\">\r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"font-weight-black\" style={{ width: 100, textAlign: 'right' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tXem thêm\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className=\"test-body done-test-card\">\r\n\t\t\t\t\t\t\t\t\t<TopPackageNewsFeed isLoading={loading} topPackageList={courses} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default PackageResultStudentDetail\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Teacher\\\\Teacher\\\\TeacherDetail.tsx\";\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\nimport TeacherProfile from '../TeacherProfile';\nimport { useWrap } from '~/context/wrap';\nimport { teacherApi } from '~/apiBase';\n\nconst TeacherDetail = () => {\n  const router = useRouter();\n  const slug = router.query.slug;\n  const {\n    0: dataUser,\n    1: setDataUser\n  } = useState({});\n  const {\n    0: dataSubject,\n    1: setDataSubject\n  } = useState([]);\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n\n  const fetchTeacherByID = async () => {\n    setIsLoading({\n      type: 'GET_BYID',\n      status: true\n    });\n\n    try {\n      let res = await teacherApi.getById(Number(slug));\n\n      if (res.status === 200) {\n        setDataUser(res.data.data);\n      } else if (res.status === 204) {\n        showNoti('danger', 'Không tìm thấy');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_BYID',\n        status: false\n      });\n    }\n  };\n\n  const updateTeacherID = async data => {\n    setIsLoading({\n      type: 'UPDATE_BYID',\n      status: true\n    });\n\n    try {\n      let res = await teacherApi.update(data);\n      (res === null || res === void 0 ? void 0 : res.status) == 200 && showNoti('success', 'Cập nhật thành công'), fetchTeacherByID();\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'UPDATE_BYID',\n        status: false\n      });\n    }\n  };\n\n  const fetchTeacherForSubject = async () => {\n    // setIsLoading({\n    //   type: \"GET_BYID\",\n    //   status: true,\n    // });\n    try {\n      let res = await teacherApi.getAllTeacherForSubject(Number(slug));\n\n      if (res.status === 200) {\n        const result = res.data.data.map((item, i) => ({\n          key: item.ProgramID,\n          ProgramName: item.ProgramName,\n          Subject: item.Subject,\n          IsSelected: item.IsSelected\n        }));\n        setDataSubject(result);\n      } else if (res.status === 204) {\n        showNoti('danger', 'Không tìm thấy');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_BYID',\n        status: false\n      });\n    }\n  };\n\n  const updateTeacherForSubject = async data => {\n    try {\n      let res = await teacherApi.updateTeacherForSubject(data);\n      (res === null || res === void 0 ? void 0 : res.status) == 200 && showNoti('success', 'Cập nhật thành công'), fetchTeacherForSubject();\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'UPDATE_BYID',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchTeacherByID();\n    fetchTeacherForSubject();\n  }, [slug]);\n  return /*#__PURE__*/_jsxDEV(TeacherProfile, {\n    updateTeacherID: data => updateTeacherID(data),\n    updateTeacherForSubject: data => updateTeacherForSubject(data),\n    onFetchData: () => {\n      fetchTeacherForSubject();\n    },\n    isLoading: isLoading,\n    dataSubject: dataSubject,\n    dataUser: dataUser,\n    userID: Number(slug)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 3\n  }, this);\n};\n\nexport default TeacherDetail;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Teacher/Teacher/TeacherDetail.tsx"],"names":["useRouter","useEffect","useState","TeacherProfile","useWrap","teacherApi","TeacherDetail","router","slug","query","dataUser","setDataUser","dataSubject","setDataSubject","showNoti","isLoading","setIsLoading","type","status","fetchTeacherByID","res","getById","Number","data","error","message","updateTeacherID","update","fetchTeacherForSubject","getAllTeacherForSubject","result","map","item","i","key","ProgramID","ProgramName","Subject","IsSelected","updateTeacherForSubject"],"mappings":"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","sourcesContent":["import ProfileBase from '~/components/Profile';\r\nimport LayoutBase from '~/components/LayoutBase';\r\nimport { useRouter } from 'next/router';\r\nimport { useEffect, useState } from 'react';\r\nimport TeacherProfile from '../TeacherProfile';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { teacherApi } from '~/apiBase';\r\n\r\nconst TeacherDetail = () => {\r\n\tconst router = useRouter();\r\n\tconst slug = router.query.slug;\r\n\tconst [dataUser, setDataUser] = useState({});\r\n\tconst [dataSubject, setDataSubject] = useState([]);\r\n\tconst { showNoti } = useWrap();\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t});\r\n\r\n\tconst fetchTeacherByID = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_BYID',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tlet res = await teacherApi.getById(Number(slug));\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetDataUser(res.data.data);\r\n\t\t\t} else if (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', 'Không tìm thấy');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_BYID',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateTeacherID = async (data) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'UPDATE_BYID',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tlet res = await teacherApi.update(data);\r\n\t\t\tres?.status == 200 && showNoti('success', 'Cập nhật thành công'), fetchTeacherByID();\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'UPDATE_BYID',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst fetchTeacherForSubject = async () => {\r\n\t\t// setIsLoading({\r\n\t\t//   type: \"GET_BYID\",\r\n\t\t//   status: true,\r\n\t\t// });\r\n\t\ttry {\r\n\t\t\tlet res = await teacherApi.getAllTeacherForSubject(Number(slug));\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst result = res.data.data.map((item, i) => ({\r\n\t\t\t\t\tkey: item.ProgramID,\r\n\t\t\t\t\tProgramName: item.ProgramName,\r\n\t\t\t\t\tSubject: item.Subject,\r\n\t\t\t\t\tIsSelected: item.IsSelected\r\n\t\t\t\t}));\r\n\t\t\t\tsetDataSubject(result);\r\n\t\t\t} else if (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', 'Không tìm thấy');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_BYID',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateTeacherForSubject = async (data) => {\r\n\t\ttry {\r\n\t\t\tlet res = await teacherApi.updateTeacherForSubject(data);\r\n\t\t\tres?.status == 200 && showNoti('success', 'Cập nhật thành công'), fetchTeacherForSubject();\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'UPDATE_BYID',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchTeacherByID();\r\n\t\tfetchTeacherForSubject();\r\n\t}, [slug]);\r\n\r\n\treturn (\r\n\t\t<TeacherProfile\r\n\t\t\tupdateTeacherID={(data) => updateTeacherID(data)}\r\n\t\t\tupdateTeacherForSubject={(data) => updateTeacherForSubject(data)}\r\n\t\t\tonFetchData={() => {\r\n\t\t\t\tfetchTeacherForSubject();\r\n\t\t\t}}\r\n\t\t\tisLoading={isLoading}\r\n\t\t\tdataSubject={dataSubject}\r\n\t\t\tdataUser={dataUser}\r\n\t\t\tuserID={Number(slug)}\r\n\t\t/>\r\n\t);\r\n};\r\nexport default TeacherDetail;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\option\\\\supplier\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport SortBox from '~/components/Elements/SortBox';\nimport SupplierForm from '~/components/Global/Option/SupplierForm';\nimport LayoutBase from '~/components/LayoutBase';\nimport FilterSupplierTable from '~/components/Global/Option/FilterTable/FilterSupplierTable';\nimport { useWrap } from '~/context/wrap';\nimport { supplierApi, userInformationApi } from '~/apiBase';\nimport { Tooltip } from 'antd';\nimport { AlertTriangle, X } from 'react-feather';\nimport Modal from 'antd/lib/modal/Modal';\nimport moment from 'moment';\n\nconst SupplierList = () => {\n  const {\n    0: dataTable,\n    1: setDataTable\n  } = useState([]);\n  const {\n    0: dataStaffManage,\n    1: setDataStaffManage\n  } = useState([]);\n  const {\n    0: activeColumnSearch,\n    1: setActiveColumnSearch\n  } = useState('');\n  const {\n    0: dataDelete,\n    1: setDataDelete\n  } = useState({\n    ID: null,\n    Enable: null\n  });\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  let pageIndex = 1; // SORT\n\n  const dataOption = [{\n    dataSort: {\n      sort: 2,\n      sortType: false\n    },\n    value: 3,\n    text: 'Tên giảm dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: true\n    },\n    value: 4,\n    text: 'Tên tăng dần '\n  }]; // PARAMS SEARCH\n\n  let listField = {\n    SupplierName: '',\n    PersonInChargeName: ''\n  }; // PARAMS API GETALL\n\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    sort: null,\n    sortType: null,\n    fromDate: null,\n    toDate: null,\n    SupplierName: null,\n    PersonInChargeName: null\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi); // GET NHÂN VIÊN QUẢN LÍ\n\n  const getDataStaffManage = () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    (async () => {\n      try {\n        let res = await userInformationApi.getAllRole(5);\n        res.status == 200 && setDataStaffManage(res.data.data);\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'GET_ALL',\n          status: false\n        });\n      }\n    })();\n  }; // GET DATA\n\n\n  const getDataTable = () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    (async () => {\n      try {\n        let res = await supplierApi.getAll(todoApi);\n\n        if (res.status == 204) {\n          // showNoti(\"danger\", \"Không có dữ liệu\");\n          // handleReset();\n          setDataTable([]);\n        }\n\n        if (res.status == 200) {\n          setDataTable(res.data.data);\n          setTotalPage(res.data.totalRow);\n        }\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'GET_ALL',\n          status: false\n        });\n      }\n    })();\n  }; // ADD DATA\n\n\n  const _onSubmit = async data => {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res = null;\n\n    if (data.ID) {\n      console.log(data);\n\n      try {\n        var _res;\n\n        res = await supplierApi.update(data);\n        ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && showNoti('success', 'Cập nhật thành công'), getDataTable();\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: false\n        });\n      }\n    } else {\n      try {\n        var _res2;\n\n        console.log('data: ', data);\n        res = await supplierApi.add(data);\n        ((_res2 = res) === null || _res2 === void 0 ? void 0 : _res2.status) == 200 && afterPost('Thêm');\n        handleReset();\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: false\n        });\n      }\n    }\n\n    return res;\n  };\n\n  const afterPost = value => {\n    showNoti('success', `${value} thành công`);\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // PAGINATION\n\n\n  const getPagination = (pageNumber, pageSize) => {\n    if (!pageSize) pageSize = 10;\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      //   ...listFieldSearch,\n      pageIndex: pageIndex,\n      pageSize: pageSize\n    }));\n  }; // ON SEARCH\n\n\n  const compareField = (valueSearch, dataIndex) => {\n    let newList = null;\n    Object.keys(listField).forEach(function (key) {\n      console.log('key: ', key);\n\n      if (key != dataIndex) {\n        listField[key] = '';\n      } else {\n        listField[key] = valueSearch;\n      }\n    });\n    newList = listField;\n    return newList;\n  };\n\n  const onSearch = (valueSearch, dataIndex) => {\n    let clearKey = compareField(valueSearch, dataIndex);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      pageIndex: 1\n    }, clearKey));\n    setCurrentPage(pageIndex);\n  }; // DELETE\n\n\n  const handleDelele = async () => {\n    if (dataDelete) {\n      setIsModalVisible(false);\n      let res = null;\n\n      try {\n        res = await supplierApi.update(dataDelete);\n        res.status === 200 && showNoti('success', 'Xóa thành công');\n\n        if (dataTable.length === 1) {\n          listTodoApi.pageIndex === 1 ? setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n            pageIndex: 1\n          })) : setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n            pageIndex: listTodoApi.pageIndex - 1\n          }));\n          return;\n        }\n\n        getDataTable();\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'DELETE_DATA',\n          status: false\n        });\n      }\n    }\n  }; // HANDLE RESET\n\n\n  const handleReset = () => {\n    setActiveColumnSearch('');\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // HANDLE SORT\n\n\n  const handleSort = async option => {\n    console.log('Show option: ', option);\n\n    let newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n\n    setCurrentPage(1);\n    setTodoApi(newTodoApi);\n  }; // HANDLE FILTER\n\n\n  const _onFilterTable = data => {\n    console.log('Show value: ', data);\n\n    let newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n      fromDate: data.fromDate,\n      toDate: data.toDate\n    });\n\n    setCurrentPage(1);\n    setTodoApi(newTodoApi);\n  };\n\n  const columns = [_objectSpread(_objectSpread({\n    title: 'Nhà cung cấp (NCC)',\n    dataIndex: 'SupplierName'\n  }, FilterColumn('SupplierName', onSearch, handleReset, 'text')), {}, {\n    className: activeColumnSearch === 'ID' ? 'active-column-search' : '',\n    render: text => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 12\n      }, this);\n    }\n  }), {\n    title: 'Địa chỉ',\n    dataIndex: 'Address' // ...FilterColumn('SupplierName', onSearch, handleReset, \"text\")\n\n  }, {\n    title: 'Mã số thuế',\n    dataIndex: 'Taxcode' // ...FilterColumn('SupplierName', onSearch, handleReset, \"text\")\n\n  }, _objectSpread(_objectSpread({\n    title: 'Nhân viên quản lí',\n    dataIndex: 'PersonInChargeName'\n  }, FilterColumn('PersonInChargeName', onSearch, handleReset, 'text')), {}, {\n    render: text => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-primary\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 12\n      }, this);\n    }\n  }), {\n    title: 'Thay đổi bởi',\n    dataIndex: 'ModifiedBy' // ...FilterColumn('ModifiedBy', onSearch, handleReset, \"text\")},\n\n  }, {\n    title: 'Thay đổi lúc',\n    dataIndex: 'ModifiedOn',\n    render: date => moment(date).format('DD/MM/YYYY') // ...FilterDateColumn(\"modDate\"),\n\n  }, {\n    render: record => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SupplierForm, {\n        showIcon: true,\n        rowData: record,\n        isLoading: isLoading,\n        _onSubmit: data => _onSubmit(data),\n        dataStaffManage: dataStaffManage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"X\\xF3a\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-icon delete\",\n          onClick: () => {\n            setIsModalVisible(true);\n            setDataDelete({\n              ID: record.ID,\n              Enable: false\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(X, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }];\n  useEffect(() => {\n    getDataTable();\n    getDataStaffManage();\n  }, [todoApi]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      title: /*#__PURE__*/_jsxDEV(AlertTriangle, {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 12\n      }, this),\n      visible: isModalVisible,\n      onOk: () => handleDelele(),\n      onCancel: () => setIsModalVisible(false),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-confirm\",\n        children: \"B\\u1EA1n c\\xF3 ch\\u1EAFc ch\\u1EAFn mu\\u1ED1n x\\xF3a kh\\xF4ng ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PowerTable, {\n      loading: isLoading,\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: getPagination,\n      addClass: \"basic-header\",\n      TitlePage: \"Nh\\xE0 cung c\\u1EA5p\",\n      TitleCard: /*#__PURE__*/_jsxDEV(SupplierForm, {\n        showAdd: true,\n        isLoading: isLoading,\n        _onSubmit: data => _onSubmit(data),\n        dataStaffManage: dataStaffManage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 6\n      }, this),\n      dataSource: dataTable,\n      columns: columns,\n      Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: [/*#__PURE__*/_jsxDEV(FilterSupplierTable, {\n          _onFilter: value => _onFilterTable(value),\n          _onHandleReset: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(SortBox, {\n          handleSort: value => handleSort(value),\n          dataOption: dataOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 3\n  }, this);\n};\n\nSupplierList.layout = LayoutBase;\nexport default SupplierList;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/option/supplier/index.tsx"],"names":["React","Fragment","useEffect","useState","PowerTable","FilterColumn","SortBox","SupplierForm","LayoutBase","FilterSupplierTable","useWrap","supplierApi","userInformationApi","Tooltip","AlertTriangle","X","Modal","moment","SupplierList","dataTable","setDataTable","dataStaffManage","setDataStaffManage","activeColumnSearch","setActiveColumnSearch","dataDelete","setDataDelete","ID","Enable","showNoti","pageSize","isModalVisible","setIsModalVisible","isLoading","setIsLoading","type","status","totalPage","setTotalPage","currentPage","setCurrentPage","pageIndex","dataOption","dataSort","sort","sortType","value","text","listField","SupplierName","PersonInChargeName","listTodoApi","fromDate","toDate","todoApi","setTodoApi","getDataStaffManage","res","getAllRole","data","error","message","getDataTable","getAll","totalRow","_onSubmit","console","log","update","add","afterPost","handleReset","getPagination","pageNumber","compareField","valueSearch","dataIndex","newList","Object","keys","forEach","key","onSearch","clearKey","handleDelele","length","handleSort","option","newTodoApi","title","_onFilterTable","columns","className","render","date","format","record","layout"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport SupplierForm from '~/components/Global/Option/SupplierForm'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport FilterSupplierTable from '~/components/Global/Option/FilterTable/FilterSupplierTable'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { supplierApi, userInformationApi } from '~/apiBase'\r\nimport { Tooltip } from 'antd'\r\nimport { AlertTriangle, X } from 'react-feather'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport moment from 'moment'\r\n\r\nconst SupplierList = () => {\r\n\tconst [dataTable, setDataTable] = useState<ISupplier[]>([])\r\n\tconst [dataStaffManage, setDataStaffManage] = useState([])\r\n\tconst [activeColumnSearch, setActiveColumnSearch] = useState('')\r\n\tconst [dataDelete, setDataDelete] = useState({\r\n\t\tID: null,\r\n\t\tEnable: null\r\n\t})\r\n\tconst { showNoti, pageSize } = useWrap()\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\r\n\tlet pageIndex = 1\r\n\r\n\t// SORT\r\n\tconst dataOption = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 3,\r\n\t\t\ttext: 'Tên giảm dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 4,\r\n\t\t\ttext: 'Tên tăng dần '\r\n\t\t}\r\n\t]\r\n\r\n\t// PARAMS SEARCH\r\n\tlet listField = {\r\n\t\tSupplierName: '',\r\n\t\tPersonInChargeName: ''\r\n\t}\r\n\r\n\t// PARAMS API GETALL\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tfromDate: null,\r\n\t\ttoDate: null,\r\n\t\tSupplierName: null,\r\n\t\tPersonInChargeName: null\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// GET NHÂN VIÊN QUẢN LÍ\r\n\tconst getDataStaffManage = () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\t;(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await userInformationApi.getAllRole(5)\r\n\t\t\t\tres.status == 200 && setDataStaffManage(res.data.data)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})()\r\n\t}\r\n\r\n\t// GET DATA\r\n\tconst getDataTable = () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\t;(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await supplierApi.getAll(todoApi)\r\n\t\t\t\tif (res.status == 204) {\r\n\t\t\t\t\t// showNoti(\"danger\", \"Không có dữ liệu\");\r\n\t\t\t\t\t// handleReset();\r\n\t\t\t\t\tsetDataTable([])\r\n\t\t\t\t}\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tsetDataTable(res.data.data)\r\n\r\n\t\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})()\r\n\t}\r\n\r\n\t// ADD DATA\r\n\tconst _onSubmit = async (data: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet res = null\r\n\r\n\t\tif (data.ID) {\r\n\t\t\tconsole.log(data)\r\n\t\t\ttry {\r\n\t\t\t\tres = await supplierApi.update(data)\r\n\t\t\t\tres?.status == 200 && showNoti('success', 'Cập nhật thành công'), getDataTable()\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log('data: ', data)\r\n\t\t\t\tres = await supplierApi.add(data)\r\n\t\t\t\tres?.status == 200 && afterPost('Thêm')\r\n\t\t\t\thandleReset()\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\tconst afterPost = (value) => {\r\n\t\tshowNoti('success', `${value} thành công`)\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageNumber: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10\r\n\t\tpageIndex = pageNumber\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t//   ...listFieldSearch,\r\n\t\t\tpageIndex: pageIndex,\r\n\t\t\tpageSize: pageSize\r\n\t\t})\r\n\t}\r\n\r\n\t// ON SEARCH\r\n\tconst compareField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = null\r\n\t\tObject.keys(listField).forEach(function (key) {\r\n\t\t\tconsole.log('key: ', key)\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tlistField[key] = ''\r\n\t\t\t} else {\r\n\t\t\t\tlistField[key] = valueSearch\r\n\t\t\t}\r\n\t\t})\r\n\t\tnewList = listField\r\n\t\treturn newList\r\n\t}\r\n\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tlet clearKey = compareField(valueSearch, dataIndex)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t...clearKey\r\n\t\t})\r\n\r\n\t\tsetCurrentPage(pageIndex)\r\n\t}\r\n\r\n\t// DELETE\r\n\tconst handleDelele = async () => {\r\n\t\tif (dataDelete) {\r\n\t\t\tsetIsModalVisible(false)\r\n\t\t\tlet res = null\r\n\t\t\ttry {\r\n\t\t\t\tres = await supplierApi.update(dataDelete)\r\n\t\t\t\tres.status === 200 && showNoti('success', 'Xóa thành công')\r\n\t\t\t\tif (dataTable.length === 1) {\r\n\t\t\t\t\tlistTodoApi.pageIndex === 1\r\n\t\t\t\t\t\t? setTodoApi({\r\n\t\t\t\t\t\t\t\t...listTodoApi,\r\n\t\t\t\t\t\t\t\tpageIndex: 1\r\n\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t: setTodoApi({\r\n\t\t\t\t\t\t\t\t...listTodoApi,\r\n\t\t\t\t\t\t\t\tpageIndex: listTodoApi.pageIndex - 1\r\n\t\t\t\t\t\t  })\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tgetDataTable()\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'DELETE_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tconst handleReset = () => {\r\n\t\tsetActiveColumnSearch('')\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// HANDLE SORT\r\n\tconst handleSort = async (option) => {\r\n\t\tconsole.log('Show option: ', option)\r\n\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetCurrentPage(1)\r\n\t\tsetTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// HANDLE FILTER\r\n\tconst _onFilterTable = (data) => {\r\n\t\tconsole.log('Show value: ', data)\r\n\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tfromDate: data.fromDate,\r\n\t\t\ttoDate: data.toDate\r\n\t\t}\r\n\t\tsetCurrentPage(1)\r\n\t\tsetTodoApi(newTodoApi)\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Nhà cung cấp (NCC)',\r\n\t\t\tdataIndex: 'SupplierName',\r\n\t\t\t...FilterColumn('SupplierName', onSearch, handleReset, 'text'),\r\n\t\t\tclassName: activeColumnSearch === 'ID' ? 'active-column-search' : '',\r\n\t\t\trender: (text) => {\r\n\t\t\t\treturn <p className=\"font-weight-black\">{text}</p>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Địa chỉ',\r\n\t\t\tdataIndex: 'Address'\r\n\t\t\t// ...FilterColumn('SupplierName', onSearch, handleReset, \"text\")\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Mã số thuế',\r\n\t\t\tdataIndex: 'Taxcode'\r\n\t\t\t// ...FilterColumn('SupplierName', onSearch, handleReset, \"text\")\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Nhân viên quản lí',\r\n\t\t\tdataIndex: 'PersonInChargeName',\r\n\t\t\t...FilterColumn('PersonInChargeName', onSearch, handleReset, 'text'),\r\n\t\t\trender: (text) => {\r\n\t\t\t\treturn <p className=\"font-weight-primary\">{text}</p>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Thay đổi bởi',\r\n\t\t\tdataIndex: 'ModifiedBy'\r\n\t\t\t// ...FilterColumn('ModifiedBy', onSearch, handleReset, \"text\")},\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Thay đổi lúc',\r\n\t\t\tdataIndex: 'ModifiedOn',\r\n\t\t\trender: (date) => moment(date).format('DD/MM/YYYY')\r\n\t\t\t// ...FilterDateColumn(\"modDate\"),\r\n\t\t},\r\n\t\t{\r\n\t\t\trender: (record) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<SupplierForm\r\n\t\t\t\t\t\tshowIcon={true}\r\n\t\t\t\t\t\trowData={record}\r\n\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t_onSubmit={(data: any) => _onSubmit(data)}\r\n\t\t\t\t\t\tdataStaffManage={dataStaffManage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Tooltip title=\"Xóa\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"btn btn-icon delete\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetIsModalVisible(true)\r\n\t\t\t\t\t\t\t\tsetDataDelete({\r\n\t\t\t\t\t\t\t\t\tID: record.ID,\r\n\t\t\t\t\t\t\t\t\tEnable: false\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<X />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataTable()\r\n\t\tgetDataStaffManage()\r\n\t}, [todoApi])\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={<AlertTriangle color=\"red\" />}\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonOk={() => handleDelele()}\r\n\t\t\t\tonCancel={() => setIsModalVisible(false)}\r\n\t\t\t>\r\n\t\t\t\t<span className=\"text-confirm\">Bạn có chắc chắn muốn xóa không ?</span>\r\n\t\t\t</Modal>\r\n\t\t\t<PowerTable\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={getPagination}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Nhà cung cấp\"\r\n\t\t\t\tTitleCard={\r\n\t\t\t\t\t<SupplierForm showAdd={true} isLoading={isLoading} _onSubmit={(data: any) => _onSubmit(data)} dataStaffManage={dataStaffManage} />\r\n\t\t\t\t}\r\n\t\t\t\tdataSource={dataTable}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t<FilterSupplierTable _onFilter={(value: any) => _onFilterTable(value)} _onHandleReset={handleReset} />\r\n\t\t\t\t\t\t<SortBox handleSort={(value) => handleSort(value)} dataOption={dataOption} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\nSupplierList.layout = LayoutBase\r\nexport default SupplierList\r\n"]},"metadata":{},"sourceType":"module"}
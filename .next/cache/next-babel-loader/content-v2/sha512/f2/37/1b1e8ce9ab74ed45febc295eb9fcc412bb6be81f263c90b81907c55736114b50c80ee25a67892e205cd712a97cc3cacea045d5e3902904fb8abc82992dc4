{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\pages\\\\option\\\\center\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Switch, Tooltip } from 'antd';\nimport Link from 'next/link';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Eye } from 'react-feather';\nimport { areaApi, branchApi } from '~/apiBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport CenterForm from '~/components/Global/Option/CenterForm';\nimport LayoutBase from '~/components/LayoutBase';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nlet listFieldSearch = {\n  pageIndex: 1,\n  branchCode: null,\n  branchName: null\n};\nconst dataOption = [{\n  dataSort: {\n    sort: 1,\n    sortType: false\n  },\n  text: 'Mã giảm dần'\n}, {\n  dataSort: {\n    sort: 1,\n    sortType: true\n  },\n  text: 'Mã tăng dần'\n}, {\n  dataSort: {\n    sort: 2,\n    sortType: false\n  },\n  text: 'Tên giảm dần'\n}, {\n  dataSort: {\n    sort: 2,\n    sortType: true\n  },\n  text: 'Tên tăng dần '\n}];\n\nconst Center = () => {\n  const {\n    0: center,\n    1: setCenter\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: indexRow,\n    1: setIndexRow\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: dataArea,\n    1: setDataArea\n  } = useState(null);\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: currentPage,\n    sort: null,\n    sortType: null,\n    branchCode: null,\n    branchName: null\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi); // -------------- GET DATA CENTER ----------------\n\n  const getDataCenter = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await branchApi.getAll(todoApi);\n      res.status == 200 && (setCenter(res.data.data), setTotalPage(res.data.totalRow));\n      res.status == 204 && showNoti('danger', 'Không có dữ liệu') && setCenter([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; //GET DATA AREA\n\n\n  const getAllArea = () => {\n    ;\n\n    (async () => {\n      try {\n        const res = await areaApi.getAll({\n          pageIndex: 1,\n          pageSize: 9999\n        });\n        res.status == 200 && setDataArea(res.data.data);\n      } catch (err) {\n        showNoti('danger', err);\n      }\n    })();\n  }; // ---------------- AFTER SUBMIT -----------------\n\n\n  const afterPost = mes => {\n    showNoti('success', mes);\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // ----------------- ON SUBMIT --------------------\n\n\n  const _onSubmit = async dataSubmit => {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res = null;\n\n    if (dataSubmit.ID) {\n      try {\n        res = await branchApi.update(dataSubmit);\n\n        if (res.status == 200) {\n          let newDataSource = [...center];\n          newDataSource.splice(indexRow, 1, dataSubmit);\n          setCenter(newDataSource);\n          showNoti('success', res.data.message);\n        }\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: false\n        });\n      }\n    } else {\n      try {\n        var _res;\n\n        res = await branchApi.add(dataSubmit);\n        ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && afterPost(res.data.message);\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: false\n        });\n      }\n    }\n\n    return res;\n  }; // ----------------- TURN OF ------------------------\n\n\n  const changeStatus = async (checked, idRow) => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n    let dataChange = {\n      ID: idRow,\n      Enable: checked\n    };\n\n    try {\n      let res = await branchApi.update(dataChange);\n      res.status == 200 && setTodoApi(_objectSpread({}, todoApi));\n    } catch (error) {\n      showNoti('danger', error.Message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  const getPagination = pageNumber => {\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      pageIndex: pageNumber\n    }));\n  }; // --------------- HANDLE SORT ----------------------\n\n\n  const handleSort = async option => {\n    let newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1,\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n\n    setCurrentPage(1), setTodoApi(newTodoApi);\n  }; // -------------- CHECK FIELD ---------------------\n\n\n  const checkField = (valueSearch, dataIndex) => {\n    let newList = _objectSpread({}, listFieldSearch);\n\n    Object.keys(newList).forEach(function (key) {\n      if (key != dataIndex) {\n        if (key != 'pageIndex') {\n          newList[key] = null;\n        }\n      } else {\n        newList[key] = valueSearch;\n      }\n    });\n    return newList;\n  }; // ------------ ON SEARCH -----------------------\n\n\n  const onSearch = (valueSearch, dataIndex) => {\n    let clearKey = checkField(valueSearch, dataIndex);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), clearKey));\n  }; // HANDLE RESET\n\n\n  const resetListFieldSearch = () => {\n    Object.keys(listFieldSearch).forEach(function (key) {\n      if (key != 'pageIndex') {\n        listFieldSearch[key] = null;\n      }\n    });\n  };\n\n  const handleReset = () => {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1), resetListFieldSearch();\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(() => {\n    getDataCenter();\n  }, [todoApi]);\n  useEffect(() => {\n    getAllArea();\n  }, []);\n  const columns = [_objectSpread({\n    title: 'Mã trung tâm',\n    width: 150,\n    dataIndex: 'BranchCode'\n  }, FilterColumn('branchCode', onSearch, handleReset, 'text')), _objectSpread({\n    title: 'Tên trung tâm',\n    dataIndex: 'BranchName',\n    width: 150\n  }, FilterColumn('branchName', onSearch, handleReset, 'text')), {\n    title: 'Địa chỉ',\n    width: 150,\n    dataIndex: 'Address'\n  }, {\n    title: 'Số điện thoại',\n    width: 150,\n    dataIndex: 'Phone'\n  }, {\n    title: 'Email',\n    dataIndex: 'Email'\n  }, {\n    title: 'Trạng thái',\n    width: 100,\n    dataIndex: 'Enable',\n    render: (Enable, record) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        checkedChildren: \"Hi\\u1EC7n\",\n        unCheckedChildren: \"\\u1EA8n\",\n        checked: Enable,\n        size: \"default\",\n        onChange: checked => changeStatus(checked, record.ID)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 6\n      }, this)\n    }, void 0, false)\n  }, {\n    width: 100,\n    render: (text, data, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: {\n          pathname: '/option/center/rooms-detail/[slug]',\n          query: {\n            slug: `${data.ID}`\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"D\\u1EEF li\\u1EC7u ph\\xF2ng\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-icon\",\n            children: /*#__PURE__*/_jsxDEV(Eye, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"C\\u1EADp nh\\u1EADt trung t\\xE2m\",\n        children: /*#__PURE__*/_jsxDEV(CenterForm, {\n          dataArea: dataArea,\n          getIndex: () => setIndexRow(index),\n          index: index,\n          branchId: data.ID,\n          rowData: data,\n          isLoading: isLoading,\n          _onSubmit: data => _onSubmit(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }];\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PowerTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: pageNumber => getPagination(pageNumber),\n      loading: isLoading,\n      addClass: \"basic-header\",\n      TitlePage: \"Danh s\\xE1ch trung t\\xE2m\" // TitleCard={<CenterForm dataArea={dataArea} isLoading={isLoading} _onSubmit={(data: any) => _onSubmit(data)} />}\n      ,\n      dataSource: center,\n      columns: columns,\n      Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: /*#__PURE__*/_jsxDEV(SortBox, {\n          handleSort: value => handleSort(value),\n          dataOption: dataOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 3\n  }, this);\n};\n\nCenter.layout = LayoutBase;\nexport default Center;","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/pages/option/center/index.tsx"],"names":["Switch","Tooltip","Link","React","Fragment","useEffect","useState","Eye","areaApi","branchApi","SortBox","CenterForm","LayoutBase","PowerTable","FilterColumn","useWrap","listFieldSearch","pageIndex","branchCode","branchName","dataOption","dataSort","sort","sortType","text","Center","center","setCenter","isLoading","setIsLoading","type","status","showNoti","pageSize","totalPage","setTotalPage","indexRow","setIndexRow","currentPage","setCurrentPage","dataArea","setDataArea","listTodoApi","todoApi","setTodoApi","getDataCenter","res","getAll","data","totalRow","error","message","getAllArea","err","afterPost","mes","_onSubmit","dataSubmit","ID","update","newDataSource","splice","add","changeStatus","checked","idRow","dataChange","Enable","Message","getPagination","pageNumber","handleSort","option","newTodoApi","title","checkField","valueSearch","dataIndex","newList","Object","keys","forEach","key","onSearch","clearKey","resetListFieldSearch","handleReset","columns","width","render","record","index","pathname","query","slug","value","layout"],"mappings":"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","sourcesContent":["import { Switch, Tooltip } from 'antd'\r\nimport Link from 'next/link'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { Eye } from 'react-feather'\r\nimport { areaApi, branchApi } from '~/apiBase'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport CenterForm from '~/components/Global/Option/CenterForm'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nlet listFieldSearch = {\r\n\tpageIndex: 1,\r\n\tbranchCode: null,\r\n\tbranchName: null\r\n}\r\n\r\nconst dataOption = [\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 1,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Mã giảm dần'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 1,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Mã tăng dần'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Tên giảm dần'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Tên tăng dần '\r\n\t}\r\n]\r\n\r\nconst Center = () => {\r\n\tconst [center, setCenter] = useState<IBranch[]>([])\r\n\tconst [isLoading, setIsLoading] = useState({ type: '', status: false })\r\n\tconst { showNoti, pageSize } = useWrap()\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [indexRow, setIndexRow] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [dataArea, setDataArea] = useState<IArea[]>(null)\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: currentPage,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tbranchCode: null,\r\n\t\tbranchName: null\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// -------------- GET DATA CENTER ----------------\r\n\tconst getDataCenter = async () => {\r\n\t\tsetIsLoading({ type: 'GET_ALL', status: true })\r\n\t\ttry {\r\n\t\t\tlet res = await branchApi.getAll(todoApi)\r\n\t\t\tres.status == 200 && (setCenter(res.data.data), setTotalPage(res.data.totalRow))\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu') && setCenter([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'GET_ALL', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\t//GET DATA AREA\r\n\tconst getAllArea = () => {\r\n\t\t; (async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await areaApi.getAll({ pageIndex: 1, pageSize: 9999 })\r\n\t\t\t\tres.status == 200 && setDataArea(res.data.data)\r\n\t\t\t} catch (err) {\r\n\t\t\t\tshowNoti('danger', err)\r\n\t\t\t}\r\n\t\t})()\r\n\t}\r\n\r\n\t// ---------------- AFTER SUBMIT -----------------\r\n\tconst afterPost = (mes) => {\r\n\t\tshowNoti('success', mes)\r\n\t\tsetTodoApi({ ...listTodoApi, pageIndex: 1 })\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// ----------------- ON SUBMIT --------------------\r\n\tconst _onSubmit = async (dataSubmit: any) => {\r\n\t\tsetIsLoading({ type: 'ADD_DATA', status: true })\r\n\t\tlet res = null\r\n\t\tif (dataSubmit.ID) {\r\n\t\t\ttry {\r\n\t\t\t\tres = await branchApi.update(dataSubmit)\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tlet newDataSource = [...center]\r\n\t\t\t\t\tnewDataSource.splice(indexRow, 1, dataSubmit)\r\n\t\t\t\t\tsetCenter(newDataSource)\r\n\t\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({ type: 'ADD_DATA', status: false })\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tres = await branchApi.add(dataSubmit)\r\n\t\t\t\tres?.status == 200 && afterPost(res.data.message)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({ type: 'ADD_DATA', status: false })\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\t// ----------------- TURN OF ------------------------\r\n\tconst changeStatus = async (checked: boolean, idRow: number) => {\r\n\t\tsetIsLoading({ type: 'GET_ALL', status: true })\r\n\t\tlet dataChange = { ID: idRow, Enable: checked }\r\n\t\ttry {\r\n\t\t\tlet res = await branchApi.update(dataChange)\r\n\t\t\tres.status == 200 && setTodoApi({ ...todoApi })\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.Message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'GET_ALL', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({ ...todoApi, pageIndex: pageNumber })\r\n\t}\r\n\r\n\t// --------------- HANDLE SORT ----------------------\r\n\tconst handleSort = async (option) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetCurrentPage(1), setTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// -------------- CHECK FIELD ---------------------\r\n\tconst checkField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = { ...listFieldSearch }\r\n\t\tObject.keys(newList).forEach(function (key) {\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\t\tnewList[key] = null\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewList[key] = valueSearch\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn newList\r\n\t}\r\n\r\n\t// ------------ ON SEARCH -----------------------\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tlet clearKey = checkField(valueSearch, dataIndex)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t...clearKey\r\n\t\t})\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tconst resetListFieldSearch = () => {\r\n\t\tObject.keys(listFieldSearch).forEach(function (key) {\r\n\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\tlistFieldSearch[key] = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({ ...listTodoApi, pageIndex: 1 })\r\n\t\tsetCurrentPage(1), resetListFieldSearch()\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tgetDataCenter()\r\n\t}, [todoApi])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAllArea()\r\n\t}, [])\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Mã trung tâm',\r\n\t\t\twidth: 150,\r\n\t\t\tdataIndex: 'BranchCode',\r\n\t\t\t...FilterColumn('branchCode', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tên trung tâm',\r\n\t\t\tdataIndex: 'BranchName',\r\n\t\t\twidth: 150,\r\n\t\t\t...FilterColumn('branchName', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{ title: 'Địa chỉ', width: 150, dataIndex: 'Address' },\r\n\t\t{\r\n\t\t\ttitle: 'Số điện thoại',\r\n\t\t\twidth: 150,\r\n\t\t\tdataIndex: 'Phone'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Email',\r\n\t\t\tdataIndex: 'Email'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\twidth: 100,\r\n\t\t\tdataIndex: 'Enable',\r\n\t\t\trender: (Enable: boolean, record: any) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Switch\r\n\t\t\t\t\t\tcheckedChildren=\"Hiện\"\r\n\t\t\t\t\t\tunCheckedChildren=\"Ẩn\"\r\n\t\t\t\t\t\tchecked={Enable}\r\n\t\t\t\t\t\tsize=\"default\"\r\n\t\t\t\t\t\tonChange={(checked) => changeStatus(checked, record.ID)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 100,\r\n\t\t\trender: (text: string, data: any, index: number) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\tpathname: '/option/center/rooms-detail/[slug]',\r\n\t\t\t\t\t\t\tquery: { slug: `${data.ID}` }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tooltip title=\"Dữ liệu phòng\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-icon\">\r\n\t\t\t\t\t\t\t\t<Eye />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Tooltip title=\"Cập nhật trung tâm\">\r\n\t\t\t\t\t\t<CenterForm\r\n\t\t\t\t\t\t\tdataArea={dataArea}\r\n\t\t\t\t\t\t\tgetIndex={() => setIndexRow(index)}\r\n\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\tbranchId={data.ID}\r\n\t\t\t\t\t\t\trowData={data}\r\n\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t_onSubmit={(data: any) => _onSubmit(data)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<PowerTable\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Danh sách trung tâm\"\r\n\t\t\t\t// TitleCard={<CenterForm dataArea={dataArea} isLoading={isLoading} _onSubmit={(data: any) => _onSubmit(data)} />}\r\n\t\t\t\tdataSource={center}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t<SortBox handleSort={(value) => handleSort(value)} dataOption={dataOption} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\nCenter.layout = LayoutBase\r\nexport default Center\r\n"]},"metadata":{},"sourceType":"module"}
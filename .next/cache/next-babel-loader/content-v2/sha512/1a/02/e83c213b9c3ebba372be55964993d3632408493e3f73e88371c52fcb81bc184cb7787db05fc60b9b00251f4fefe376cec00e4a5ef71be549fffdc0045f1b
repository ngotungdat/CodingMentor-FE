{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\Global\\\\CourseList\\\\CourseListDetail\\\\NotificationCourse\\\\NotificationCourseForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Form, Modal, Spin } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useWrap } from '~/context/wrap';\nimport * as yup from 'yup';\nimport InputTextField from '~/components/FormControl/InputTextField';\nimport TextAreaField from '~/components/FormControl/TextAreaField';\nNotificationCourseForm.propTypes = {\n  isLoading: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    status: PropTypes.bool.isRequired\n  }),\n  handleSubmit: PropTypes.func\n};\nNotificationCourseForm.defaultProps = {\n  isLoading: {\n    type: '',\n    status: false\n  },\n  handleSubmit: null\n};\n\nfunction NotificationCourseForm(props) {\n  const {\n    userInformation\n  } = useWrap();\n  const {\n    isLoading,\n    handleSubmit\n  } = props;\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n\n  const openModal = () => setIsModalVisible(true);\n\n  const closeModal = () => setIsModalVisible(false);\n\n  const schema = yup.object().shape({\n    NotificationTitle: yup.string().required('Bạn không được để trống'),\n    NotificationContent: yup.string().required('Bạn không được để trống')\n  });\n  const defaultValuesInit = {\n    NotificationTitle: '',\n    NotificationContent: ''\n  };\n  const form = useForm({\n    defaultValues: defaultValuesInit,\n    resolver: yupResolver(schema)\n  });\n\n  const checkHandleSubmit = data => {\n    if (!handleSubmit) return;\n    handleSubmit(data).then(res => {\n      if (res) {\n        form.reset(_objectSpread({}, defaultValuesInit));\n        setIsModalVisible(false);\n      }\n    });\n  };\n\n  const isStudent = () => {\n    let role = userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID;\n\n    if (role == 3) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isStudent() && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-warning add-new\",\n      onClick: openModal,\n      children: \"Th\\xEAm m\\u1EDBi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"T\\u1EA1o th\\xF4ng b\\xE1o m\\u1EDBi\",\n      visible: isModalVisible,\n      footer: null,\n      onCancel: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-form\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          layout: \"vertical\",\n          onFinish: form.handleSubmit(checkHandleSubmit),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(InputTextField, {\n                form: form,\n                name: \"NotificationTitle\",\n                label: \"Th\\xF4ng b\\xE1o\",\n                placeholder: \"Nh\\u1EADp th\\xF4ng b\\xE1o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(TextAreaField, {\n                form: form,\n                name: \"NotificationContent\",\n                label: \"N\\u1ED9i dung th\\xF4ng b\\xE1o\",\n                placeholder: \"Nh\\u1EADp n\\u1ED9i dung th\\xF4ng b\\xE1o\",\n                rows: 5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 mt-5\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary w-100\",\n                disabled: isLoading.type == 'ADD_NOTI' && isLoading.status,\n                children: [\"L\\u01B0u\", isLoading.type == 'ADD_NOTI' && isLoading.status && /*#__PURE__*/_jsxDEV(Spin, {\n                  className: \"loading-base\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 63\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\nexport default NotificationCourseForm;","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/Global/CourseList/CourseListDetail/NotificationCourse/NotificationCourseForm.tsx"],"names":["yupResolver","Form","Modal","Spin","PropTypes","useState","useForm","useWrap","yup","InputTextField","TextAreaField","NotificationCourseForm","propTypes","isLoading","shape","type","string","isRequired","status","bool","handleSubmit","func","defaultProps","props","userInformation","isModalVisible","setIsModalVisible","openModal","closeModal","schema","object","NotificationTitle","required","NotificationContent","defaultValuesInit","form","defaultValues","resolver","checkHandleSubmit","data","then","res","reset","isStudent","role","RoleID"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Form, Modal, Spin } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useWrap } from '~/context/wrap'\r\nimport * as yup from 'yup'\r\nimport InputTextField from '~/components/FormControl/InputTextField'\r\nimport TextAreaField from '~/components/FormControl/TextAreaField'\r\n\r\nNotificationCourseForm.propTypes = {\r\n\tisLoading: PropTypes.shape({\r\n\t\ttype: PropTypes.string.isRequired,\r\n\t\tstatus: PropTypes.bool.isRequired\r\n\t}),\r\n\thandleSubmit: PropTypes.func\r\n}\r\nNotificationCourseForm.defaultProps = {\r\n\tisLoading: { type: '', status: false },\r\n\thandleSubmit: null\r\n}\r\nfunction NotificationCourseForm(props) {\r\n\tconst { userInformation } = useWrap()\r\n\tconst { isLoading, handleSubmit } = props\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst openModal = () => setIsModalVisible(true)\r\n\tconst closeModal = () => setIsModalVisible(false)\r\n\r\n\tconst schema = yup.object().shape({\r\n\t\tNotificationTitle: yup.string().required('Bạn không được để trống'),\r\n\t\tNotificationContent: yup.string().required('Bạn không được để trống')\r\n\t})\r\n\tconst defaultValuesInit = {\r\n\t\tNotificationTitle: '',\r\n\t\tNotificationContent: ''\r\n\t}\r\n\tconst form = useForm({\r\n\t\tdefaultValues: defaultValuesInit,\r\n\t\tresolver: yupResolver(schema)\r\n\t})\r\n\r\n\tconst checkHandleSubmit = (data) => {\r\n\t\tif (!handleSubmit) return\r\n\t\thandleSubmit(data).then((res) => {\r\n\t\t\tif (res) {\r\n\t\t\t\tform.reset({ ...defaultValuesInit })\r\n\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst isStudent = () => {\r\n\t\tlet role = userInformation?.RoleID\r\n\t\tif (role == 3) {\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!isStudent() && (\r\n\t\t\t\t<button className=\"btn btn-warning add-new\" onClick={openModal}>\r\n\t\t\t\t\tThêm mới\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t\t<Modal title=\"Tạo thông báo mới\" visible={isModalVisible} footer={null} onCancel={closeModal}>\r\n\t\t\t\t<div className=\"wrap-form\">\r\n\t\t\t\t\t<Form layout=\"vertical\" onFinish={form.handleSubmit(checkHandleSubmit)}>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t<InputTextField form={form} name=\"NotificationTitle\" label=\"Thông báo\" placeholder=\"Nhập thông báo\" />\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"col-12 mb-3\">\r\n\t\t\t\t\t\t\t\t<TextAreaField\r\n\t\t\t\t\t\t\t\t\tform={form}\r\n\t\t\t\t\t\t\t\t\tname=\"NotificationContent\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Nội dung thông báo\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Nhập nội dung thông báo\"\r\n\t\t\t\t\t\t\t\t\trows={5}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"col-12 mt-5\">\r\n\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary w-100\" disabled={isLoading.type == 'ADD_NOTI' && isLoading.status}>\r\n\t\t\t\t\t\t\t\t\tLưu\r\n\t\t\t\t\t\t\t\t\t{isLoading.type == 'ADD_NOTI' && isLoading.status && <Spin className=\"loading-base\" />}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default NotificationCourseForm\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\Global\\\\CreateCourseOnline\\\\CreateCourseOnline.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Card } from 'antd';\nimport moment from 'moment';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { branchApi, checkTeacherApi, courseApi, curriculumApi, gradeApi, lessonOnlineApi, programApi, staffApi, studyDayOnlineApi, studyTimeApi, teacherApi } from '~/apiBase';\nimport TitlePage from '~/components/TitlePage';\nimport { useWrap } from '~/context/wrap';\nimport { fmArrayToObjectWithSpecialKey, fmSelectArr } from '~/utils/functions';\nimport CreateCourseCalendar from '../CreateCourse/Calendar/CreateCourseCalendar';\nimport Schedule from '../CreateCourse/Schedule/Schedule';\nimport ScheduleList from '../CreateCourse/Schedule/ScheduleList';\nimport CreateCourseOnlineForm from './CreateCourseOnlineForm/CreateCourseOnlineForm';\nimport SaveCreateCourseOnline from './SaveCreateCourseOnline';\nimport ScheduleOnlineItem from './ScheduleOnline/ScheduleOnlineItem'; // ------------ MAIN COMPONENT ------------------\n\nvar dayOfWeek = [{\n  title: 'Thứ 2',\n  value: 1\n}, {\n  title: 'Thứ 3',\n  value: 2\n}, {\n  title: 'Thứ 4',\n  value: 3\n}, {\n  title: 'Thứ 5',\n  value: 4\n}, {\n  title: 'Thứ 6',\n  value: 5\n}, {\n  title: 'Thứ 7',\n  value: 6\n}, {\n  title: 'Chủ nhật',\n  value: 0\n}];\n\nvar CreateCourseOnline = function CreateCourseOnline() {\n  _s();\n\n  var router = useRouter(); // -----------STATE-----------\n  // FORM\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      userInformation = _useWrap.userInformation;\n\n  var _useState = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState({\n    branchList: [],\n    studyTimeList: [],\n    gradeList: [],\n    programList: [],\n    teacherList: [],\n    dayOfWeek: dayOfWeek,\n    curriculumList: [],\n    userInformationList: []\n  }),\n      optionListForForm = _useState2[0],\n      setOptionListForForm = _useState2[1];\n\n  var _useState3 = useState({\n    StudyTimeID: null,\n    ProgramID: null\n  }),\n      dataToFetchCurriculum = _useState3[0],\n      setDataToFetchCurriculum = _useState3[1];\n\n  var _useState4 = useState({\n    BranchID: null,\n    ProgramID: null\n  }),\n      dataToFetchTeacher = _useState4[0],\n      setDataToFetchTeacher = _useState4[1]; //Lesson\n\n\n  var _useState5 = useState({\n    available: [],\n    unavailable: []\n  }),\n      scheduleList = _useState5[0],\n      setScheduleList = _useState5[1];\n\n  var _useState6 = useState({\n    optionStudyTimeList: [],\n    optionTeacherList: []\n  }),\n      optionListForADay = _useState6[0],\n      setOptionListForADay = _useState6[1]; //StudyDay\n\n\n  var _useState7 = useState([]),\n      calendarList = _useState7[0],\n      setCalendarList = _useState7[1]; // SAVE\n\n\n  var _useState8 = useState(false),\n      isSave = _useState8[0],\n      setIsSave = _useState8[1];\n\n  var _useState9 = useState({}),\n      scheduleShow = _useState9[0],\n      setScheduleShow = _useState9[1];\n\n  var stoneDataToSave = useRef({\n    CourseName: '',\n    AcademicUID: 0,\n    BranchID: 0,\n    CurriculumID: 0,\n    ProgramID: 0,\n    TeacherID: 0,\n    StartDay: '',\n    GradeID: 0,\n    SalaryOfLesson: 0,\n    Price: 0,\n    TimeCourse: [],\n    Avatar: ''\n  });\n\n  var _useState10 = useState({\n    CourseName: '',\n    AcademicUID: 0,\n    BranchID: 0,\n    BranchName: '',\n    GradeID: 0,\n    StudyTimeID: '',\n    StudyTimeName: '',\n    ProgramID: 0,\n    ProgramName: '',\n    TeacherID: 0,\n    TeacherName: '',\n    CurriculumID: 0,\n    CurriculumName: '',\n    StartDay: '',\n    EndDay: '',\n    DaySelected: '',\n    DaySelectedName: '',\n    TypeCourse: 2,\n    SalaryOfLesson: 0,\n    Price: 0,\n    Schedule: [],\n    ImageCourse: ''\n  }),\n      saveCourseInfo = _useState10[0],\n      setSaveCourseInfo = _useState10[1]; // CALENDAR MODAL\n\n\n  var _useState11 = useState({\n    dateString: '',\n    limit: 0,\n    scheduleInDay: 0,\n    scheduleList: []\n  }),\n      dataModalCalendar = _useState11[0],\n      setDataModalCalendar = _useState11[1]; // -----------CREATE COURSE FORM-----------\n  // FETCH BRANCH, STUDY TIME, GRADE IN THE FIRST TIME\n\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$Promise$all, _yield$Promise$all2, branch, studyTime, grade, newBranchList, newStudyTimeList, newGradeList;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading({\n                type: 'FETCH_DATA',\n                status: true\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return Promise.all([branchApi.getAll({\n                pageIndex: 1,\n                pageSize: 9999\n              }), studyTimeApi.getAll({\n                selectAll: true\n              }), gradeApi.getAll({\n                selectAll: true\n              })]);\n\n            case 4:\n              _yield$Promise$all = _context.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3);\n              branch = _yield$Promise$all2[0];\n              studyTime = _yield$Promise$all2[1];\n              grade = _yield$Promise$all2[2];\n              // BRANCH\n              newBranchList = fmSelectArr(branch.data.data, 'BranchName', 'ID'); // STUDY TIME\n\n              newStudyTimeList = fmSelectArr(studyTime.data.data, 'Name', 'ID', ['Time', 'TimeStart', 'TimeEnd']); // GRADE\n\n              newGradeList = fmSelectArr(grade.data.data, 'GradeName', 'ID');\n              setOptionListForForm(_objectSpread(_objectSpread({}, optionListForForm), {}, {\n                branchList: newBranchList,\n                studyTimeList: newStudyTimeList,\n                gradeList: newGradeList\n              }));\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](1);\n              showNoti('danger', _context.t0.message);\n\n            case 18:\n              _context.prev = 18;\n              setIsLoading({\n                type: 'FETCH_DATA',\n                status: false\n              });\n              return _context.finish(18);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 15, 18, 21]]);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchData();\n  }, []); // FETCH USER INFORMATION - STAFF\n\n  var fetchStaffByBranch = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var res, newUserInformationList;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsLoading({\n                type: 'BranchID',\n                status: true\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return staffApi.getAll({\n                BranchID: id,\n                RoleID: 7\n              });\n\n            case 4:\n              res = _context2.sent;\n\n              // USER INFORMATION\n              if (res.status === 200) {\n                newUserInformationList = fmSelectArr(res.data.data, 'FullNameUnicode', 'UserInformationID');\n                setOptionListForForm(function (preState) {\n                  return _objectSpread(_objectSpread({}, preState), {}, {\n                    userInformationList: newUserInformationList\n                  });\n                });\n              }\n\n              if (res.status === 204) {\n                setOptionListForForm(function (preState) {\n                  return _objectSpread(_objectSpread({}, preState), {}, {\n                    userInformationList: []\n                  });\n                });\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log('FetchDataByBranch - PromiseAll:', _context2.t0);\n              showNoti('danger', _context2.t0.message);\n\n            case 13:\n              _context2.prev = 13;\n              setIsLoading({\n                type: 'BranchID',\n                status: false\n              });\n              return _context2.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 9, 13, 16]]);\n    }));\n\n    return function fetchStaffByBranch(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // PROGRAM\n\n\n  var fetchProgramByGrade = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n      var res, newProgramList;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsLoading({\n                type: 'GradeID',\n                status: true\n              });\n              _context3.prev = 1;\n              _context3.next = 4;\n              return programApi.getAll({\n                GradeID: id,\n                isNotVideo: true\n              });\n\n            case 4:\n              res = _context3.sent;\n\n              if (res.status === 200) {\n                newProgramList = fmSelectArr(res.data.data, 'ProgramName', 'ID', ['Price']);\n                setOptionListForForm(_objectSpread(_objectSpread({}, optionListForForm), {}, {\n                  programList: newProgramList\n                }));\n              }\n\n              if (res.status === 204) {\n                setOptionListForForm(_objectSpread(_objectSpread({}, optionListForForm), {}, {\n                  programList: []\n                }));\n              }\n\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](1);\n              showNoti('danger', _context3.t0.message);\n\n            case 12:\n              _context3.prev = 12;\n              setIsLoading({\n                type: 'GradeID',\n                status: false\n              });\n              return _context3.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function fetchProgramByGrade(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // GET ENOUGH 2 VALUE TO GET TEACHER - NEED BRANCH ID - PROGRAM ID\n\n\n  var getValueBeforeFetchTeacher = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(key, value) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setDataToFetchTeacher(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, key, value));\n              });\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getValueBeforeFetchTeacher(_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var fetchTeacher = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var res, newTeacherList;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              setIsLoading({\n                type: 'ProgramID',\n                status: true\n              });\n              _context5.prev = 1;\n              _context5.next = 4;\n              return teacherApi.getTeacherByProgram(dataToFetchTeacher);\n\n            case 4:\n              res = _context5.sent;\n\n              if (res.status === 200) {\n                newTeacherList = fmSelectArr(res.data.data, 'FullNameUnicode', 'UserInformationID');\n\n                if (userInformation && userInformation.RoleID === 2) {\n                  setOptionListForForm(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      teacherList: newTeacherList.filter(function (item) {\n                        return item.value === userInformation.UserInformationID;\n                      })\n                    });\n                  });\n\n                  if (newTeacherList.filter(function (item) {\n                    return item.value === userInformation.UserInformationID;\n                  }).length == 0) {\n                    showNoti('danger', 'Giáo viên không được phép dạy chương trình này!');\n                  }\n                } else {\n                  setOptionListForForm(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      teacherList: newTeacherList\n                    });\n                  });\n                }\n              }\n\n              if (res.status === 204) {\n                showNoti('danger', 'Không tìm thấy giáo viên!');\n                setOptionListForForm(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    teacherList: []\n                  });\n                });\n              }\n\n              _context5.next = 12;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](1);\n              showNoti('danger', _context5.t0.message);\n\n            case 12:\n              _context5.prev = 12;\n              setIsLoading({\n                type: 'ProgramID',\n                status: false\n              });\n              return _context5.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function fetchTeacher() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (dataToFetchTeacher.ProgramID && dataToFetchTeacher.BranchID) {\n      fetchTeacher();\n    }\n  }, [dataToFetchTeacher]); // CURRICULUM: GET ENOUGH 2 VALUE TO GET CURRICULUM - NEED PROGRAM ID - STUDY TIME ID\n\n  var getValueBeforeFetchCurriculum = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(key, value) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              setDataToFetchCurriculum(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, key, value));\n              });\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function getValueBeforeFetchCurriculum(_x5, _x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var fetchCurriculum = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var res, newCurriculum;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              setIsLoading({\n                type: 'ProgramID',\n                status: true\n              });\n              _context7.prev = 1;\n              _context7.next = 4;\n              return curriculumApi.getAll({\n                StudyTimeID: dataToFetchCurriculum.StudyTimeID,\n                ProgramID: dataToFetchCurriculum.ProgramID\n              });\n\n            case 4:\n              res = _context7.sent;\n\n              if (res.status === 200) {\n                newCurriculum = fmSelectArr(res.data.data, 'CurriculumName', 'ID');\n                setOptionListForForm(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    curriculumList: newCurriculum\n                  });\n                });\n              }\n\n              if (res.status === 204) {\n                setOptionListForForm(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    curriculumList: []\n                  });\n                });\n              }\n\n              _context7.next = 12;\n              break;\n\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](1);\n              showNoti('danger', _context7.t0.message);\n\n            case 12:\n              _context7.prev = 12;\n              setIsLoading({\n                type: 'ProgramID',\n                status: false\n              });\n              return _context7.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function fetchCurriculum() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (dataToFetchCurriculum.ProgramID && dataToFetchCurriculum.StudyTimeID) {\n      fetchCurriculum();\n    }\n  }, [dataToFetchCurriculum]); // -----------GET COURSE-----------\n\n  var getCourse = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(object) {\n      var BranchID, CurriculumID, StartDate, ProgramID, TeacherID, GradeID, CourseName, SalaryOfLesson, Price, TimeCourse, Avatar, lessonParams, studyDayParams, arrRes;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              console.log('object of object tracking: ', object);\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              _context8.prev = 2;\n              BranchID = object.BranchID, CurriculumID = object.CurriculumID, StartDate = object.StartDay, ProgramID = object.ProgramID, TeacherID = object.TeacherID, GradeID = object.GradeID, CourseName = object.CourseName, SalaryOfLesson = object.SalaryOfLesson, Price = object.Price, TimeCourse = object.TimeCourse, Avatar = object.Avatar;\n              stoneDataToSave.current = {\n                CourseName: CourseName,\n                AcademicUID: 0,\n                BranchID: BranchID,\n                CurriculumID: CurriculumID,\n                ProgramID: ProgramID,\n                TeacherID: TeacherID,\n                GradeID: GradeID,\n                StartDay: StartDate,\n                SalaryOfLesson: +SalaryOfLesson.replace(/\\D/g, ''),\n                Price: +Price.replace(/\\D/g, ''),\n                TimeCourse: TimeCourse,\n                Avatar: Avatar\n              };\n              lessonParams = {\n                CurriculumnID: CurriculumID,\n                StartDate: StartDate,\n                BranchID: BranchID,\n                StudyTimeID: TimeCourse.map(function (t) {\n                  return t.StudyTimeID;\n                }).join(','),\n                DaySelected: TimeCourse.map(function (t) {\n                  return t.DaySelected;\n                }).join(','),\n                TeacherID: TeacherID\n              };\n              studyDayParams = {\n                BranchID: BranchID,\n                StartDate: StartDate,\n                StudyTimeID: TimeCourse.map(function (t) {\n                  return t.StudyTimeID;\n                }).join(','),\n                DaySelected: TimeCourse.map(function (t) {\n                  return t.DaySelected;\n                }).join(',')\n              };\n              _context8.next = 9;\n              return Promise.all([lessonOnlineApi.getAll(lessonParams), studyDayOnlineApi.getAll(studyDayParams)]).then(function (_ref9) {\n                var _ref10 = _slicedToArray(_ref9, 2),\n                    lessonList = _ref10[0],\n                    studyDayList = _ref10[1];\n\n                if (lessonList.status === 200) {\n                  setScheduleList({\n                    available: [],\n                    unavailable: lessonList.data.schedule\n                  });\n                }\n\n                if (studyDayList.status === 200) {\n                  setCalendarList(studyDayList.data.data);\n                }\n\n                if (lessonList.status === 200 && studyDayList.status === 200) {\n                  var finalTeacherList = optionListForForm.teacherList.filter(function (o) {\n                    return o.value === TeacherID;\n                  });\n                  setIsSave(true);\n                  setOptionListForADay({\n                    optionStudyTimeList: optionListForForm.studyTimeList.filter(function (opt) {\n                      return TimeCourse.map(function (t) {\n                        return t.StudyTimeID;\n                      }).includes(opt.value);\n                    }),\n                    optionTeacherList: lessonList.data.schedule.map(function (s) {\n                      return {\n                        id: s.ID,\n                        list: finalTeacherList\n                      };\n                    })\n                  });\n                  setOptionListForForm(_objectSpread(_objectSpread({}, optionListForForm), {}, {\n                    teacherList: finalTeacherList\n                  }));\n                  showNoti('success', 'Thành công');\n                  return true;\n                }\n              })[\"catch\"](function (error) {\n                error.status === 400 && showNoti('danger', error.message);\n              });\n\n            case 9:\n              arrRes = _context8.sent;\n              return _context8.abrupt(\"return\", arrRes);\n\n            case 13:\n              _context8.prev = 13;\n              _context8.t0 = _context8[\"catch\"](2);\n              showNoti('error', _context8.t0.message);\n\n            case 16:\n              _context8.prev = 16;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context8.finish(16);\n\n            case 19:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[2, 13, 16, 19]]);\n    }));\n\n    return function getCourse(_x7) {\n      return _ref8.apply(this, arguments);\n    };\n  }(); // -----------SCHEDULE-----------\n\n\n  var onCheckTeacherAvailable = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(params) {\n      var id, rest, res, idxInOptList, newOptionTeacherList;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              setIsLoading({\n                type: 'CHECK_SCHEDULE',\n                status: true\n              });\n              id = params.id, rest = _objectWithoutProperties(params, [\"id\"]);\n              _context9.next = 5;\n              return checkTeacherApi.getAll(rest);\n\n            case 5:\n              res = _context9.sent;\n              idxInOptList = optionListForADay.optionTeacherList.findIndex(function (o) {\n                return o.id === id;\n              });\n              newOptionTeacherList = _toConsumableArray(optionListForADay.optionTeacherList);\n\n              if (!(res.status === 200)) {\n                _context9.next = 12;\n                break;\n              }\n\n              newOptionTeacherList.splice(idxInOptList, 1, _objectSpread(_objectSpread({}, optionListForADay.optionTeacherList[idxInOptList]), {}, {\n                list: optionListForForm.teacherList\n              }));\n              setOptionListForADay(_objectSpread(_objectSpread({}, optionListForADay), {}, {\n                optionTeacherList: newOptionTeacherList\n              }));\n              return _context9.abrupt(\"return\", true);\n\n            case 12:\n              if (!(res.status === 204)) {\n                _context9.next = 16;\n                break;\n              }\n\n              newOptionTeacherList.splice(idxInOptList, 1, _objectSpread(_objectSpread({}, optionListForADay.optionTeacherList[idxInOptList]), {}, {\n                list: [{\n                  title: '----Giáo viên trống----',\n                  value: 0\n                }]\n              }));\n              setOptionListForADay(_objectSpread(_objectSpread({}, optionListForADay), {}, {\n                optionTeacherList: newOptionTeacherList\n              }));\n              return _context9.abrupt(\"return\", false);\n\n            case 16:\n              _context9.next = 20;\n              break;\n\n            case 18:\n              _context9.prev = 18;\n              _context9.t0 = _context9[\"catch\"](0);\n\n            case 20:\n              _context9.prev = 20;\n              setIsLoading({\n                type: 'CHECK_SCHEDULE',\n                status: false\n              });\n              return _context9.finish(20);\n\n            case 23:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[0, 18, 20, 23]]);\n    }));\n\n    return function onCheckTeacherAvailable(_x8) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var checkDuplicateStudyTimeInDay = function checkDuplicateStudyTimeInDay(arr, vl) {\n    var scheduleSameStudyTime = arr.filter(function (s) {\n      return s.CaID === vl;\n    });\n\n    if (scheduleSameStudyTime.length > 1) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var getNewValueForSchedule = /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(uid, date, key, vl) {\n      var _optionStudyTimeList$;\n\n      var optionStudyTimeList, CaName, isHasTeacher, newTeacher;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              optionStudyTimeList = optionListForADay.optionStudyTimeList;\n              _context10.t0 = key;\n              _context10.next = _context10.t0 === 'CaID' ? 4 : 10;\n              break;\n\n            case 4:\n              CaName = (_optionStudyTimeList$ = optionStudyTimeList.find(function (o) {\n                return o.value === vl;\n              })) === null || _optionStudyTimeList$ === void 0 ? void 0 : _optionStudyTimeList$.title;\n              _context10.next = 7;\n              return onCheckTeacherAvailable({\n                id: uid,\n                TeacherID: stoneDataToSave.current.TeacherID,\n                CourseID: 0,\n                StudyTimeID: Number(vl),\n                Date: date\n              });\n\n            case 7:\n              isHasTeacher = _context10.sent;\n              newTeacher = isHasTeacher ? {\n                TeacherID: stoneDataToSave.current.TeacherID,\n                TeacherName: optionListForForm.teacherList[0].title\n              } : {\n                TeacherID: 0,\n                TeacherName: 'Giáo viên trống'\n              };\n              return _context10.abrupt(\"return\", _objectSpread(_objectSpread({}, newTeacher), {}, _defineProperty({\n                CaName: CaName\n              }, key, vl)));\n\n            case 10:\n              return _context10.abrupt(\"break\", 11);\n\n            case 11:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function getNewValueForSchedule(_x9, _x10, _x11, _x12) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var getNewUnavailableScheduleList = /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(uid, key, vl) {\n      var unavailable, newUnavailable, idxSchedule, date, schedule, newVl, newSchedule;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              unavailable = scheduleList.unavailable;\n              newUnavailable = _toConsumableArray(unavailable);\n              idxSchedule = newUnavailable.findIndex(function (s) {\n                return s.ID === uid;\n              }); // DATE TO CHECK DUPLICATE VALUE\n\n              date = '';\n\n              if (!(idxSchedule >= 0)) {\n                _context11.next = 12;\n                break;\n              }\n\n              schedule = newUnavailable[idxSchedule];\n              date = schedule.date;\n              _context11.next = 9;\n              return getNewValueForSchedule(uid, date, key, vl);\n\n            case 9:\n              newVl = _context11.sent;\n              newSchedule = _objectSpread(_objectSpread({}, schedule), newVl);\n              newUnavailable.splice(idxSchedule, 1, newSchedule);\n\n            case 12:\n              return _context11.abrupt(\"return\", {\n                date: date,\n                rs: newUnavailable\n              });\n\n            case 13:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function getNewUnavailableScheduleList(_x13, _x14, _x15) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  var changeValueSchedule = /*#__PURE__*/function () {\n    var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(uid, key, vl) {\n      var _yield$getNewUnavaila, newUnavailableScheduleList, date, scheduleList;\n\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return getNewUnavailableScheduleList(uid, key, vl);\n\n            case 2:\n              _yield$getNewUnavaila = _context12.sent;\n              newUnavailableScheduleList = _yield$getNewUnavaila.rs;\n              date = _yield$getNewUnavaila.date;\n              scheduleList = newUnavailableScheduleList.filter(function (s) {\n                return s.date === date;\n              });\n\n              if (checkDuplicateStudyTimeInDay(scheduleList, vl)) {\n                showNoti('danger', 'Dữ liệu trùng lập');\n              }\n\n              setDataModalCalendar(_objectSpread(_objectSpread({}, dataModalCalendar), {}, {\n                scheduleList: scheduleList\n              }));\n              setScheduleList(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  unavailable: newUnavailableScheduleList\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    return function changeValueSchedule(_x16, _x17, _x18) {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n\n  var changeStatusSchedule = /*#__PURE__*/function () {\n    var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(sch) {\n      var type,\n          newScheduleUnavailableList,\n          newScheduleAvailableList,\n          fmDate,\n          fmScheduleUnavailableToObject,\n          idx,\n          newScheduleObj,\n          _fmScheduleUnavailabl,\n          limit,\n          _idx,\n          _newScheduleObj,\n          newTeacher,\n          _args13 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              type = _args13.length > 1 && _args13[1] !== undefined ? _args13[1] : 1;\n              newScheduleUnavailableList = _toConsumableArray(scheduleList.unavailable);\n              newScheduleAvailableList = _toConsumableArray(scheduleList.available);\n              fmDate = moment(dataModalCalendar.dateString).format('YYYY-MM-DD');\n              fmScheduleUnavailableToObject = fmArrayToObjectWithSpecialKey(newScheduleUnavailableList, 'date'); // type = 2 => unavailable to available\n\n              if (type === 2) {\n                idx = newScheduleUnavailableList.findIndex(function (s) {\n                  return s.ID === sch.ID;\n                });\n                newScheduleObj = _objectSpread(_objectSpread({}, newScheduleUnavailableList[idx]), {}, {\n                  date: fmDate\n                });\n                newScheduleUnavailableList.splice(idx, 1);\n                newScheduleAvailableList.push(newScheduleObj);\n              } // type = 1 => available to unavailable\n\n\n              if (!(type === 1)) {\n                _context13.next = 18;\n                break;\n              }\n\n              limit = calendarList.find(function (c) {\n                return c.Day === dataModalCalendar.dateString;\n              }).Limit;\n\n              if (!(((_fmScheduleUnavailabl = fmScheduleUnavailableToObject[fmDate]) === null || _fmScheduleUnavailabl === void 0 ? void 0 : _fmScheduleUnavailabl.length) >= limit)) {\n                _context13.next = 11;\n                break;\n              }\n\n              showNoti('danger', 'Số ca đạt giới hạn');\n              return _context13.abrupt(\"return\", false);\n\n            case 11:\n              _idx = newScheduleAvailableList.findIndex(function (s) {\n                return s.ID === sch.ID;\n              });\n              _newScheduleObj = _objectSpread(_objectSpread({}, newScheduleAvailableList[_idx]), {}, {\n                date: fmDate\n              }); // CHECK AVAILABLE TEACHER\n\n              _context13.next = 15;\n              return getNewValueForSchedule(_newScheduleObj.ID, fmDate, 'CaID', _newScheduleObj.CaID);\n\n            case 15:\n              newTeacher = _context13.sent;\n              newScheduleAvailableList.splice(_idx, 1);\n              newScheduleUnavailableList.push(_objectSpread(_objectSpread({}, _newScheduleObj), newTeacher));\n\n            case 18:\n              setScheduleList(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  available: newScheduleAvailableList,\n                  unavailable: newScheduleUnavailableList\n                });\n              });\n              return _context13.abrupt(\"return\", true);\n\n            case 20:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    return function changeStatusSchedule(_x19) {\n      return _ref15.apply(this, arguments);\n    };\n  }(); // -----------CALENDAR-----------\n\n\n  var calendarDateFormat = function calendarDateFormat(calendarArr) {\n    var unavailable = scheduleList.unavailable;\n    var fmScheduleUnavailableToObject = fmArrayToObjectWithSpecialKey(unavailable, 'date');\n    var rs = calendarArr.map(function (c, idx) {\n      var _fmScheduleUnavailabl2;\n\n      var isValid = true;\n      var limit = c.Limit;\n      var scheduleListForADay = [];\n      var title = \"S\\u1ED1 bu\\u1ED5i tr\\u1ED1ng: \".concat(limit);\n      var calendarHadSchedule = (_fmScheduleUnavailabl2 = fmScheduleUnavailableToObject[c.Day.slice(0, 10)]) === null || _fmScheduleUnavailabl2 === void 0 ? void 0 : _fmScheduleUnavailabl2.length;\n\n      if (calendarHadSchedule) {\n        limit = c.Limit - calendarHadSchedule;\n        scheduleListForADay = fmScheduleUnavailableToObject[c.Day.slice(0, 10)];\n        title = 'Click để xem chi tiết';\n      }\n\n      if (!limit) {\n        isValid = false;\n      }\n\n      return {\n        id: idx + 1,\n        title: title,\n        start: moment(c.Day).toDate(),\n        end: moment(c.Day).toDate(),\n        resource: {\n          dateString: c.Day,\n          valid: isValid,\n          limit: c.Limit,\n          scheduleList: scheduleListForADay\n        }\n      };\n    });\n    return rs;\n  };\n\n  var onToggleSchedule = /*#__PURE__*/function () {\n    var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(sch, type) {\n      var isChangeStatus, newScheduleList, idx;\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return changeStatusSchedule(sch, type);\n\n            case 2:\n              isChangeStatus = _context14.sent;\n\n              if (isChangeStatus) {\n                newScheduleList = _toConsumableArray(dataModalCalendar.scheduleList);\n                idx = newScheduleList.findIndex(function (s) {\n                  return s.ID === sch.ID;\n                });\n\n                if (idx >= 0) {\n                  newScheduleList.splice(idx, 1);\n                } else {\n                  newScheduleList.push(sch);\n                }\n\n                setDataModalCalendar(_objectSpread(_objectSpread({}, dataModalCalendar), {}, {\n                  scheduleInDay: newScheduleList.length,\n                  scheduleList: newScheduleList\n                }));\n              }\n\n            case 4:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }));\n\n    return function onToggleSchedule(_x20, _x21) {\n      return _ref16.apply(this, arguments);\n    };\n  }(); // -----------SAVE COURSE-----------\n\n\n  var getTitle = function getTitle(arr, vl) {\n    return arr.find(function (p) {\n      return p.value === vl;\n    }).title;\n  };\n\n  var getMultiTitle = function getMultiTitle(arrList, arrVl) {\n    var rs = [];\n\n    var _iterator = _createForOfIteratorHelper(arrVl.split(',')),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var r1 = _step.value;\n\n        var _iterator2 = _createForOfIteratorHelper(arrList),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var r2 = _step2.value;\n\n            if (+r1 === r2.value) {\n              rs.push(r2.title);\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return rs.join(', ');\n  };\n\n  var onValidateDataToSave = function onValidateDataToSave() {\n    var unavailable = scheduleList.unavailable;\n    var rs = {\n      show: [],\n      save: [],\n      endDate: 0\n    };\n\n    for (var i = 0, len = unavailable.length; i < len; i++) {\n      var s = unavailable[i]; // get end date of course\n\n      var checkEndDay = moment(s.date).valueOf();\n\n      if (rs.endDate < checkEndDay) {\n        rs.endDate = checkEndDay;\n      }\n\n      var dayArr = ['Chủ Nhật', 'Thứ 2', 'Thứ 3', 'Thứ 4', 'Thứ 5', 'Thứ 6', 'Thứ 7'];\n      var dayOffWeek = dayArr[moment(s.date).day()];\n      var isValid = !s.TeacherID;\n\n      for (var i2 = 0; i2 < len; i2++) {\n        var s2 = scheduleList.unavailable[i2];\n\n        if (i !== i2 && s.date === s2.date && s.CaID === s2.CaID) {\n          isValid = true;\n          break;\n        }\n      }\n\n      rs.show.push({\n        date: s.date,\n        dayOffWeek: dayOffWeek,\n        studyTimeName: s.CaName,\n        teacherName: s.TeacherName,\n        StudyTimeID: s.CaID,\n        isValid: isValid\n      });\n      rs.save.push({\n        CurriculumsDetailID: s.Tiet.CurriculumsDetailID,\n        Date: s.date,\n        StudyTimeID: s.CaID,\n        TeacherID: s.TeacherID,\n        SubjectID: s.Tiet.SubjectID\n      });\n    }\n\n    return rs;\n  };\n\n  var onFetchDataToSave = function onFetchDataToSave() {\n    var branchList = optionListForForm.branchList,\n        programList = optionListForForm.programList,\n        curriculumList = optionListForForm.curriculumList,\n        studyTimeList = optionListForForm.studyTimeList,\n        teacherList = optionListForForm.teacherList;\n\n    var _onValidateDataToSave = onValidateDataToSave(),\n        show = _onValidateDataToSave.show,\n        save = _onValidateDataToSave.save,\n        endDate = _onValidateDataToSave.endDate;\n\n    var scheduleListSorted = show.sort(function (a, b) {\n      return moment(a.date).valueOf() - moment(b.date).valueOf();\n    });\n    var fmScheduleShowToObject = fmArrayToObjectWithSpecialKey(scheduleListSorted, 'date');\n    var _stoneDataToSave$curr = stoneDataToSave.current,\n        BranchID = _stoneDataToSave$curr.BranchID,\n        ProgramID = _stoneDataToSave$curr.ProgramID,\n        CurriculumID = _stoneDataToSave$curr.CurriculumID,\n        StartDay = _stoneDataToSave$curr.StartDay,\n        CourseName = _stoneDataToSave$curr.CourseName,\n        TeacherID = _stoneDataToSave$curr.TeacherID,\n        TimeCourse = _stoneDataToSave$curr.TimeCourse;\n    var BranchName = getTitle(branchList, BranchID);\n    var ProgramName = getTitle(programList, ProgramID);\n    var TeacherName = getTitle(teacherList, TeacherID);\n    var CurriculumName = getTitle(curriculumList, CurriculumID);\n    var daySelectedListString = TimeCourse.map(function (t) {\n      return t.DaySelected;\n    }).join(',');\n    var DaySelectedName = getMultiTitle(dayOfWeek, daySelectedListString);\n    var studyTimeListString = TimeCourse.map(function (t) {\n      return t.StudyTimeID;\n    }).join(',');\n    var StudyTimeName = getMultiTitle(studyTimeList, studyTimeListString);\n    var CourseNameFinal = CourseName ? CourseName : \"[\".concat(BranchName, \"][\").concat(ProgramName, \"][\").concat(CurriculumName, \"][\").concat(StudyTimeName, \"] - \").concat(moment(StartDay).format('DD/MM/YYYY'));\n    setScheduleShow(fmScheduleShowToObject);\n    setSaveCourseInfo(_objectSpread(_objectSpread(_objectSpread({}, saveCourseInfo), stoneDataToSave.current), {}, {\n      CourseName: CourseNameFinal,\n      BranchName: BranchName,\n      ProgramName: ProgramName,\n      TeacherName: TeacherName,\n      CurriculumName: CurriculumName,\n      DaySelectedName: DaySelectedName,\n      StudyTimeName: StudyTimeName,\n      DaySelected: daySelectedListString,\n      StudyTimeID: studyTimeListString,\n      EndDay: moment(endDate).format('YYYY/MM/DD'),\n      Schedule: save\n    }));\n  };\n\n  var onSaveCourse = /*#__PURE__*/function () {\n    var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n      var haveErrors, res;\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              setIsLoading({\n                type: 'SAVE_COURSE',\n                status: true\n              });\n              _context15.prev = 1;\n              haveErrors = Object.keys(scheduleShow).find(function (date, idx) {\n                return scheduleShow[date].find(function (s) {\n                  return s.isValid;\n                });\n              });\n\n              if (!haveErrors) {\n                _context15.next = 6;\n                break;\n              }\n\n              showNoti('danger', 'Đã xảy ra lỗi. Xin kiểm tra lại');\n              return _context15.abrupt(\"return\");\n\n            case 6:\n              console.log('saveCourseInfo: ', saveCourseInfo);\n              _context15.next = 9;\n              return courseApi.add(saveCourseInfo);\n\n            case 9:\n              res = _context15.sent;\n\n              if (!(res.status === 200)) {\n                _context15.next = 14;\n                break;\n              }\n\n              showNoti('success', res.data.message);\n              router.push('/course/course-list/');\n              return _context15.abrupt(\"return\", res);\n\n            case 14:\n              _context15.next = 19;\n              break;\n\n            case 16:\n              _context15.prev = 16;\n              _context15.t0 = _context15[\"catch\"](1);\n              showNoti('error', _context15.t0.message);\n\n            case 19:\n              _context15.prev = 19;\n              setIsLoading({\n                type: 'SAVE_COURSE',\n                status: false\n              });\n              return _context15.finish(19);\n\n            case 22:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, null, [[1, 16, 19, 22]]);\n    }));\n\n    return function onSaveCourse() {\n      return _ref17.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-course\",\n    children: [/*#__PURE__*/_jsxDEV(TitlePage, {\n      title: \"T\\u1EA1o kh\\xF3a h\\u1ECDc online\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 col-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"S\\u1EAFp x\\u1EBFp l\\u1ECBch h\\u1ECDc\",\n          extra: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-page-course\",\n            children: [/*#__PURE__*/_jsxDEV(CreateCourseOnlineForm, {\n              isLoading: isLoading,\n              isUpdate: false //\n              ,\n              optionListForForm: optionListForForm //\n              ,\n              handleGetCourse: getCourse,\n              handleFetchDataByBranch: fetchStaffByBranch,\n              handleFetchProgramByGrade: fetchProgramByGrade,\n              handleGetValueBeforeFetchCurriculum: getValueBeforeFetchCurriculum,\n              handleGetValueBeforeFetchTeacher: getValueBeforeFetchTeacher\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 9\n            }, _this), isSave && /*#__PURE__*/_jsxDEV(SaveCreateCourseOnline, {\n              isLoading: isLoading,\n              saveInfo: saveCourseInfo,\n              scheduleShow: scheduleShow,\n              handleSaveCourse: onSaveCourse,\n              handleFetchDataToSave: onFetchDataToSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 10\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 8\n          }, _this),\n          children: /*#__PURE__*/_jsxDEV(CreateCourseCalendar, {\n            eventList: calendarDateFormat(calendarList) //\n            ,\n            isLoaded: true //\n            ,\n            handleSetDataModalCalendar: setDataModalCalendar,\n            dataModalCalendar: dataModalCalendar //\n            ,\n            unAvailableList: /*#__PURE__*/_jsxDEV(Schedule, {\n              children: /*#__PURE__*/_jsxDEV(ScheduleList, {\n                children: scheduleList.available.map(function (s, idx) {\n                  return /*#__PURE__*/_jsxDEV(ScheduleOnlineItem, {\n                    scheduleObj: s,\n                    handleChangeStatusSchedule: onToggleSchedule\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 844,\n                    columnNumber: 12\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 842,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 9\n            }, _this),\n            children: /*#__PURE__*/_jsxDEV(ScheduleList, {\n              panelActiveListInModal: dataModalCalendar.scheduleList.map(function (_, idx) {\n                return idx;\n              }),\n              children: dataModalCalendar.scheduleList.map(function (s, idx) {\n                var _optionListForADay$op;\n\n                return /*#__PURE__*/_jsxDEV(ScheduleOnlineItem, {\n                  isUnavailable: true,\n                  scheduleObj: s,\n                  isLoading: isLoading,\n                  handleChangeValueSchedule: changeValueSchedule,\n                  handleChangeStatusSchedule: onToggleSchedule,\n                  optionTeacherList: ((_optionListForADay$op = optionListForADay.optionTeacherList.find(function (o) {\n                    return o.id === s.ID;\n                  })) === null || _optionListForADay$op === void 0 ? void 0 : _optionListForADay$op.list) || [],\n                  optionStudyTime: optionListForADay.optionStudyTimeList\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 852,\n                  columnNumber: 10\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 8\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 col-12 d-none d-md-block\",\n        children: /*#__PURE__*/_jsxDEV(Schedule, {\n          children: /*#__PURE__*/_jsxDEV(ScheduleList, {\n            children: scheduleList.available.map(function (s, idx) {\n              return /*#__PURE__*/_jsxDEV(ScheduleOnlineItem, {\n                scheduleObj: s,\n                handleChangeStatusSchedule: onToggleSchedule\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 871,\n                columnNumber: 9\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 800,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(CreateCourseOnline, \"FyGX+I1UYM09dln09ETSSYUcJyY=\", false, function () {\n  return [useRouter, useWrap];\n});\n\n_c = CreateCourseOnline;\nexport default CreateCourseOnline;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCourseOnline\");","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/Global/CreateCourseOnline/CreateCourseOnline.tsx"],"names":["Card","moment","useRouter","React","useEffect","useRef","useState","branchApi","checkTeacherApi","courseApi","curriculumApi","gradeApi","lessonOnlineApi","programApi","staffApi","studyDayOnlineApi","studyTimeApi","teacherApi","TitlePage","useWrap","fmArrayToObjectWithSpecialKey","fmSelectArr","CreateCourseCalendar","Schedule","ScheduleList","CreateCourseOnlineForm","SaveCreateCourseOnline","ScheduleOnlineItem","dayOfWeek","title","value","CreateCourseOnline","router","showNoti","userInformation","type","status","isLoading","setIsLoading","branchList","studyTimeList","gradeList","programList","teacherList","curriculumList","userInformationList","optionListForForm","setOptionListForForm","StudyTimeID","ProgramID","dataToFetchCurriculum","setDataToFetchCurriculum","BranchID","dataToFetchTeacher","setDataToFetchTeacher","available","unavailable","scheduleList","setScheduleList","optionStudyTimeList","optionTeacherList","optionListForADay","setOptionListForADay","calendarList","setCalendarList","isSave","setIsSave","scheduleShow","setScheduleShow","stoneDataToSave","CourseName","AcademicUID","CurriculumID","TeacherID","StartDay","GradeID","SalaryOfLesson","Price","TimeCourse","Avatar","BranchName","StudyTimeName","ProgramName","TeacherName","CurriculumName","EndDay","DaySelected","DaySelectedName","TypeCourse","ImageCourse","saveCourseInfo","setSaveCourseInfo","dateString","limit","scheduleInDay","dataModalCalendar","setDataModalCalendar","fetchData","Promise","all","getAll","pageIndex","pageSize","selectAll","branch","studyTime","grade","newBranchList","data","newStudyTimeList","newGradeList","message","fetchStaffByBranch","id","RoleID","res","newUserInformationList","preState","console","log","fetchProgramByGrade","isNotVideo","newProgramList","getValueBeforeFetchTeacher","key","prevState","fetchTeacher","getTeacherByProgram","newTeacherList","filter","item","UserInformationID","length","getValueBeforeFetchCurriculum","fetchCurriculum","newCurriculum","getCourse","object","StartDate","current","replace","lessonParams","CurriculumnID","map","t","join","studyDayParams","then","lessonList","studyDayList","schedule","finalTeacherList","o","opt","includes","s","ID","list","error","arrRes","onCheckTeacherAvailable","params","rest","idxInOptList","findIndex","newOptionTeacherList","splice","checkDuplicateStudyTimeInDay","arr","vl","scheduleSameStudyTime","CaID","getNewValueForSchedule","uid","date","CaName","find","CourseID","Number","Date","isHasTeacher","newTeacher","getNewUnavailableScheduleList","newUnavailable","idxSchedule","newVl","newSchedule","rs","changeValueSchedule","newUnavailableScheduleList","changeStatusSchedule","sch","newScheduleUnavailableList","newScheduleAvailableList","fmDate","format","fmScheduleUnavailableToObject","idx","newScheduleObj","push","c","Day","Limit","calendarDateFormat","calendarArr","isValid","scheduleListForADay","calendarHadSchedule","slice","start","toDate","end","resource","valid","onToggleSchedule","isChangeStatus","newScheduleList","getTitle","p","getMultiTitle","arrList","arrVl","split","r1","r2","onValidateDataToSave","show","save","endDate","i","len","checkEndDay","valueOf","dayArr","dayOffWeek","day","i2","s2","studyTimeName","teacherName","CurriculumsDetailID","Tiet","SubjectID","onFetchDataToSave","scheduleListSorted","sort","a","b","fmScheduleShowToObject","daySelectedListString","studyTimeListString","CourseNameFinal","onSaveCourse","haveErrors","Object","keys","add","_"],"mappings":"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","sourcesContent":["import { Card } from 'antd'\r\nimport moment from 'moment'\r\nimport { useRouter } from 'next/router'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport {\r\n\tbranchApi,\r\n\tcheckTeacherApi,\r\n\tcourseApi,\r\n\tcurriculumApi,\r\n\tgradeApi,\r\n\tlessonOnlineApi,\r\n\tprogramApi,\r\n\tstaffApi,\r\n\tstudyDayOnlineApi,\r\n\tstudyTimeApi,\r\n\tteacherApi\r\n} from '~/apiBase'\r\nimport TitlePage from '~/components/TitlePage'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { fmArrayToObjectWithSpecialKey, fmSelectArr } from '~/utils/functions'\r\nimport CreateCourseCalendar from '../CreateCourse/Calendar/CreateCourseCalendar'\r\nimport Schedule from '../CreateCourse/Schedule/Schedule'\r\nimport ScheduleList from '../CreateCourse/Schedule/ScheduleList'\r\nimport CreateCourseOnlineForm from './CreateCourseOnlineForm/CreateCourseOnlineForm'\r\nimport SaveCreateCourseOnline from './SaveCreateCourseOnline'\r\nimport ScheduleOnlineItem from './ScheduleOnline/ScheduleOnlineItem'\r\n\r\n// ------------ MAIN COMPONENT ------------------\r\nconst dayOfWeek = [\r\n\t{\r\n\t\ttitle: 'Thứ 2',\r\n\t\tvalue: 1\r\n\t},\r\n\t{\r\n\t\ttitle: 'Thứ 3',\r\n\t\tvalue: 2\r\n\t},\r\n\t{\r\n\t\ttitle: 'Thứ 4',\r\n\t\tvalue: 3\r\n\t},\r\n\t{\r\n\t\ttitle: 'Thứ 5',\r\n\t\tvalue: 4\r\n\t},\r\n\t{\r\n\t\ttitle: 'Thứ 6',\r\n\t\tvalue: 5\r\n\t},\r\n\t{\r\n\t\ttitle: 'Thứ 7',\r\n\t\tvalue: 6\r\n\t},\r\n\t{\r\n\t\ttitle: 'Chủ nhật',\r\n\t\tvalue: 0\r\n\t}\r\n]\r\n\r\nconst CreateCourseOnline = () => {\r\n\tconst router = useRouter()\r\n\t// -----------STATE-----------\r\n\t// FORM\r\n\tconst { showNoti, userInformation } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [optionListForForm, setOptionListForForm] = useState<ICOOptionListForForm>({\r\n\t\tbranchList: [],\r\n\t\tstudyTimeList: [],\r\n\t\tgradeList: [],\r\n\t\tprogramList: [],\r\n\t\tteacherList: [],\r\n\t\tdayOfWeek,\r\n\t\tcurriculumList: [],\r\n\t\tuserInformationList: []\r\n\t})\r\n\tconst [dataToFetchCurriculum, setDataToFetchCurriculum] = useState<{\r\n\t\tStudyTimeID: number\r\n\t\tProgramID: number\r\n\t}>({\r\n\t\tStudyTimeID: null,\r\n\t\tProgramID: null\r\n\t})\r\n\tconst [dataToFetchTeacher, setDataToFetchTeacher] = useState<{ ProgramID: number; BranchID: number }>({\r\n\t\tBranchID: null,\r\n\t\tProgramID: null\r\n\t})\r\n\t//Lesson\r\n\tconst [scheduleList, setScheduleList] = useState<ICOCreateScheduleList>({\r\n\t\tavailable: [],\r\n\t\tunavailable: []\r\n\t})\r\n\tconst [optionListForADay, setOptionListForADay] = useState<ICOOptionListForADay>({\r\n\t\toptionStudyTimeList: [],\r\n\t\toptionTeacherList: []\r\n\t})\r\n\t//StudyDay\r\n\tconst [calendarList, setCalendarList] = useState<IStudyDay[]>([])\r\n\t// SAVE\r\n\tconst [isSave, setIsSave] = useState(false)\r\n\tconst [scheduleShow, setScheduleShow] = useState<ICOCreateScheduleShowList>({})\r\n\tconst stoneDataToSave = useRef<ICOStoneDataToSave>({\r\n\t\tCourseName: '',\r\n\t\tAcademicUID: 0,\r\n\t\tBranchID: 0,\r\n\t\tCurriculumID: 0,\r\n\t\tProgramID: 0,\r\n\t\tTeacherID: 0,\r\n\t\tStartDay: '',\r\n\t\tGradeID: 0,\r\n\t\tSalaryOfLesson: 0,\r\n\t\tPrice: 0,\r\n\t\tTimeCourse: [],\r\n\t\tAvatar: ''\r\n\t})\r\n\tconst [saveCourseInfo, setSaveCourseInfo] = useState<ICOSaveCourseInfo>({\r\n\t\tCourseName: '',\r\n\t\tAcademicUID: 0,\r\n\t\tBranchID: 0,\r\n\t\tBranchName: '',\r\n\t\tGradeID: 0,\r\n\t\tStudyTimeID: '',\r\n\t\tStudyTimeName: '',\r\n\t\tProgramID: 0,\r\n\t\tProgramName: '',\r\n\t\tTeacherID: 0,\r\n\t\tTeacherName: '',\r\n\t\tCurriculumID: 0,\r\n\t\tCurriculumName: '',\r\n\t\tStartDay: '',\r\n\t\tEndDay: '',\r\n\t\tDaySelected: '',\r\n\t\tDaySelectedName: '',\r\n\t\tTypeCourse: 2,\r\n\t\tSalaryOfLesson: 0,\r\n\t\tPrice: 0,\r\n\t\tSchedule: [],\r\n\t\tImageCourse: ''\r\n\t})\r\n\t// CALENDAR MODAL\r\n\tconst [dataModalCalendar, setDataModalCalendar] = useState<ICODataModal>({\r\n\t\tdateString: '',\r\n\t\tlimit: 0,\r\n\t\tscheduleInDay: 0,\r\n\t\tscheduleList: []\r\n\t})\r\n\t// -----------CREATE COURSE FORM-----------\r\n\t// FETCH BRANCH, STUDY TIME, GRADE IN THE FIRST TIME\r\n\tconst fetchData = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'FETCH_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tconst [branch, studyTime, grade] = await Promise.all([\r\n\t\t\t\tbranchApi.getAll({ pageIndex: 1, pageSize: 9999 }),\r\n\t\t\t\tstudyTimeApi.getAll({ selectAll: true }),\r\n\t\t\t\tgradeApi.getAll({ selectAll: true })\r\n\t\t\t])\r\n\t\t\t// BRANCH\r\n\t\t\tconst newBranchList = fmSelectArr(branch.data.data, 'BranchName', 'ID')\r\n\t\t\t// STUDY TIME\r\n\t\t\tconst newStudyTimeList = fmSelectArr(studyTime.data.data, 'Name', 'ID', ['Time', 'TimeStart', 'TimeEnd'])\r\n\t\t\t// GRADE\r\n\t\t\tconst newGradeList = fmSelectArr(grade.data.data, 'GradeName', 'ID')\r\n\t\t\tsetOptionListForForm({\r\n\t\t\t\t...optionListForForm,\r\n\t\t\t\tbranchList: newBranchList,\r\n\t\t\t\tstudyTimeList: newStudyTimeList,\r\n\t\t\t\tgradeList: newGradeList\r\n\t\t\t})\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchData()\r\n\t}, [])\r\n\t// FETCH USER INFORMATION - STAFF\r\n\tconst fetchStaffByBranch = async (id: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'BranchID',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await staffApi.getAll({ BranchID: id, RoleID: 7 })\r\n\t\t\t// USER INFORMATION\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newUserInformationList = fmSelectArr(res.data.data, 'FullNameUnicode', 'UserInformationID')\r\n\t\t\t\tsetOptionListForForm((preState) => ({\r\n\t\t\t\t\t...preState,\r\n\t\t\t\t\tuserInformationList: newUserInformationList\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetOptionListForForm((preState) => ({\r\n\t\t\t\t\t...preState,\r\n\t\t\t\t\tuserInformationList: []\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('FetchDataByBranch - PromiseAll:', error)\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'BranchID',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t// PROGRAM\r\n\tconst fetchProgramByGrade = async (id: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GradeID',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await programApi.getAll({\r\n\t\t\t\tGradeID: id,\r\n\t\t\t\tisNotVideo: true\r\n\t\t\t})\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newProgramList = fmSelectArr(res.data.data, 'ProgramName', 'ID', ['Price'])\r\n\t\t\t\tsetOptionListForForm({\r\n\t\t\t\t\t...optionListForForm,\r\n\t\t\t\t\tprogramList: newProgramList\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetOptionListForForm({\r\n\t\t\t\t\t...optionListForForm,\r\n\t\t\t\t\tprogramList: []\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GradeID',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t// GET ENOUGH 2 VALUE TO GET TEACHER - NEED BRANCH ID - PROGRAM ID\r\n\tconst getValueBeforeFetchTeacher = async (key: string, value: number) => {\r\n\t\tsetDataToFetchTeacher((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\t[key]: value\r\n\t\t}))\r\n\t}\r\n\r\n\tconst fetchTeacher = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ProgramID',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tconst res = await teacherApi.getTeacherByProgram(dataToFetchTeacher)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newTeacherList = fmSelectArr(res.data.data, 'FullNameUnicode', 'UserInformationID')\r\n\t\t\t\tif (userInformation && userInformation.RoleID === 2) {\r\n\t\t\t\t\tsetOptionListForForm((prevState) => ({\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\tteacherList: newTeacherList.filter((item) => item.value === userInformation.UserInformationID)\r\n\t\t\t\t\t}))\r\n\t\t\t\t\tif (newTeacherList.filter((item) => item.value === userInformation.UserInformationID).length == 0) {\r\n\t\t\t\t\t\tshowNoti('danger', 'Giáo viên không được phép dạy chương trình này!')\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetOptionListForForm((prevState) => ({\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\tteacherList: newTeacherList\r\n\t\t\t\t\t}))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', 'Không tìm thấy giáo viên!')\r\n\t\t\t\tsetOptionListForForm((prevState) => ({\r\n\t\t\t\t\t...prevState,\r\n\t\t\t\t\tteacherList: []\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ProgramID',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tif (dataToFetchTeacher.ProgramID && dataToFetchTeacher.BranchID) {\r\n\t\t\tfetchTeacher()\r\n\t\t}\r\n\t}, [dataToFetchTeacher])\r\n\t// CURRICULUM: GET ENOUGH 2 VALUE TO GET CURRICULUM - NEED PROGRAM ID - STUDY TIME ID\r\n\tconst getValueBeforeFetchCurriculum = async (key: string, value: number) => {\r\n\t\tsetDataToFetchCurriculum((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\t[key]: value\r\n\t\t}))\r\n\t}\r\n\tconst fetchCurriculum = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ProgramID',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await curriculumApi.getAll({\r\n\t\t\t\tStudyTimeID: dataToFetchCurriculum.StudyTimeID,\r\n\t\t\t\tProgramID: dataToFetchCurriculum.ProgramID\r\n\t\t\t})\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newCurriculum = fmSelectArr(res.data.data, 'CurriculumName', 'ID')\r\n\t\t\t\tsetOptionListForForm((prevState) => ({\r\n\t\t\t\t\t...prevState,\r\n\t\t\t\t\tcurriculumList: newCurriculum\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetOptionListForForm((prevState) => ({\r\n\t\t\t\t\t...prevState,\r\n\t\t\t\t\tcurriculumList: []\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ProgramID',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tif (dataToFetchCurriculum.ProgramID && dataToFetchCurriculum.StudyTimeID) {\r\n\t\t\tfetchCurriculum()\r\n\t\t}\r\n\t}, [dataToFetchCurriculum])\r\n\t// -----------GET COURSE-----------\r\n\tconst getCourse = async (object: ICOCreateForm) => {\r\n\t\tconsole.log('object of object tracking: ', object)\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tBranchID,\r\n\t\t\t\tCurriculumID,\r\n\t\t\t\tStartDay: StartDate,\r\n\t\t\t\tProgramID,\r\n\t\t\t\tTeacherID,\r\n\t\t\t\tGradeID,\r\n\t\t\t\tCourseName,\r\n\t\t\t\tSalaryOfLesson,\r\n\t\t\t\tPrice,\r\n\t\t\t\tTimeCourse,\r\n\t\t\t\tAvatar\r\n\t\t\t} = object\r\n\t\t\tstoneDataToSave.current = {\r\n\t\t\t\tCourseName,\r\n\t\t\t\tAcademicUID: 0,\r\n\t\t\t\tBranchID,\r\n\t\t\t\tCurriculumID,\r\n\t\t\t\tProgramID,\r\n\t\t\t\tTeacherID,\r\n\t\t\t\tGradeID,\r\n\t\t\t\tStartDay: StartDate,\r\n\t\t\t\tSalaryOfLesson: +SalaryOfLesson.replace(/\\D/g, ''),\r\n\t\t\t\tPrice: +Price.replace(/\\D/g, ''),\r\n\t\t\t\tTimeCourse,\r\n\t\t\t\tAvatar\r\n\t\t\t}\r\n\t\t\tconst lessonParams = {\r\n\t\t\t\tCurriculumnID: CurriculumID,\r\n\t\t\t\tStartDate,\r\n\t\t\t\tBranchID,\r\n\t\t\t\tStudyTimeID: TimeCourse.map((t) => t.StudyTimeID).join(','),\r\n\t\t\t\tDaySelected: TimeCourse.map((t) => t.DaySelected).join(','),\r\n\t\t\t\tTeacherID\r\n\t\t\t}\r\n\t\t\tconst studyDayParams = {\r\n\t\t\t\tBranchID,\r\n\t\t\t\tStartDate,\r\n\t\t\t\tStudyTimeID: TimeCourse.map((t) => t.StudyTimeID).join(','),\r\n\t\t\t\tDaySelected: TimeCourse.map((t) => t.DaySelected).join(',')\r\n\t\t\t}\r\n\t\t\tconst arrRes = await Promise.all([lessonOnlineApi.getAll(lessonParams), studyDayOnlineApi.getAll(studyDayParams)])\r\n\t\t\t\t.then(([lessonList, studyDayList]) => {\r\n\t\t\t\t\tif (lessonList.status === 200) {\r\n\t\t\t\t\t\tsetScheduleList({\r\n\t\t\t\t\t\t\tavailable: [],\r\n\t\t\t\t\t\t\tunavailable: lessonList.data.schedule\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (studyDayList.status === 200) {\r\n\t\t\t\t\t\tsetCalendarList(studyDayList.data.data)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (lessonList.status === 200 && studyDayList.status === 200) {\r\n\t\t\t\t\t\tconst finalTeacherList = optionListForForm.teacherList.filter((o) => o.value === TeacherID)\r\n\t\t\t\t\t\tsetIsSave(true)\r\n\t\t\t\t\t\tsetOptionListForADay({\r\n\t\t\t\t\t\t\toptionStudyTimeList: optionListForForm.studyTimeList.filter((opt) =>\r\n\t\t\t\t\t\t\t\tTimeCourse.map((t) => t.StudyTimeID).includes(opt.value as number)\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\toptionTeacherList: lessonList.data.schedule.map((s) => ({\r\n\t\t\t\t\t\t\t\tid: s.ID,\r\n\t\t\t\t\t\t\t\tlist: finalTeacherList\r\n\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tsetOptionListForForm({\r\n\t\t\t\t\t\t\t...optionListForForm,\r\n\t\t\t\t\t\t\tteacherList: finalTeacherList\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tshowNoti('success', 'Thành công')\r\n\t\t\t\t\t\treturn true\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\terror.status === 400 && showNoti('danger', error.message)\r\n\t\t\t\t})\r\n\t\t\treturn arrRes\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('error', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t// -----------SCHEDULE-----------\r\n\tconst onCheckTeacherAvailable = async (params: {\r\n\t\tid: number\r\n\t\tTeacherID: number\r\n\t\tDate: string\r\n\t\tStudyTimeID: number\r\n\t\tCourseID: number\r\n\t}) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'CHECK_SCHEDULE',\r\n\t\t\t\tstatus: true\r\n\t\t\t})\r\n\t\t\tconst { id, ...rest } = params\r\n\t\t\tconst res = await checkTeacherApi.getAll(rest)\r\n\t\t\tconst idxInOptList = optionListForADay.optionTeacherList.findIndex((o) => o.id === id)\r\n\t\t\tconst newOptionTeacherList = [...optionListForADay.optionTeacherList]\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tnewOptionTeacherList.splice(idxInOptList, 1, {\r\n\t\t\t\t\t...optionListForADay.optionTeacherList[idxInOptList],\r\n\t\t\t\t\tlist: optionListForForm.teacherList\r\n\t\t\t\t})\r\n\t\t\t\tsetOptionListForADay({\r\n\t\t\t\t\t...optionListForADay,\r\n\t\t\t\t\toptionTeacherList: newOptionTeacherList\r\n\t\t\t\t})\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tnewOptionTeacherList.splice(idxInOptList, 1, {\r\n\t\t\t\t\t...optionListForADay.optionTeacherList[idxInOptList],\r\n\t\t\t\t\tlist: [{ title: '----Giáo viên trống----', value: 0 }]\r\n\t\t\t\t})\r\n\t\t\t\tsetOptionListForADay({\r\n\t\t\t\t\t...optionListForADay,\r\n\t\t\t\t\toptionTeacherList: newOptionTeacherList\r\n\t\t\t\t})\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'CHECK_SCHEDULE',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tconst checkDuplicateStudyTimeInDay = (arr: ISchedule[], vl: number) => {\r\n\t\tconst scheduleSameStudyTime = arr.filter((s) => s.CaID === vl)\r\n\t\tif (scheduleSameStudyTime.length > 1) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\tconst getNewValueForSchedule = async (uid: number, date: string, key: 'CaID', vl: number) => {\r\n\t\tconst { optionStudyTimeList } = optionListForADay\r\n\r\n\t\tswitch (key) {\r\n\t\t\tcase 'CaID':\r\n\t\t\t\tconst CaName = optionStudyTimeList.find((o) => o.value === vl)?.title\r\n\r\n\t\t\t\tconst isHasTeacher = await onCheckTeacherAvailable({\r\n\t\t\t\t\tid: uid,\r\n\t\t\t\t\tTeacherID: stoneDataToSave.current.TeacherID,\r\n\t\t\t\t\tCourseID: 0,\r\n\t\t\t\t\tStudyTimeID: Number(vl),\r\n\t\t\t\t\tDate: date\r\n\t\t\t\t})\r\n\r\n\t\t\t\tconst newTeacher = isHasTeacher\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t\tTeacherID: stoneDataToSave.current.TeacherID,\r\n\t\t\t\t\t\t\tTeacherName: optionListForForm.teacherList[0].title\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t: {\r\n\t\t\t\t\t\t\tTeacherID: 0,\r\n\t\t\t\t\t\t\tTeacherName: 'Giáo viên trống'\r\n\t\t\t\t\t  }\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...newTeacher,\r\n\t\t\t\t\tCaName,\r\n\t\t\t\t\t[key]: vl\r\n\t\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\tconst getNewUnavailableScheduleList = async (uid: number, key: 'CaID', vl: number) => {\r\n\t\tconst { unavailable } = scheduleList\r\n\t\tconst newUnavailable = [...unavailable]\r\n\r\n\t\tconst idxSchedule = newUnavailable.findIndex((s) => s.ID === uid)\r\n\r\n\t\t// DATE TO CHECK DUPLICATE VALUE\r\n\t\tlet date: string = ''\r\n\t\tif (idxSchedule >= 0) {\r\n\t\t\tconst schedule = newUnavailable[idxSchedule]\r\n\t\t\tdate = schedule.date\r\n\t\t\tconst newVl = await getNewValueForSchedule(uid, date, key, vl)\r\n\t\t\tconst newSchedule = {\r\n\t\t\t\t...schedule,\r\n\t\t\t\t...newVl\r\n\t\t\t}\r\n\t\t\tnewUnavailable.splice(idxSchedule, 1, newSchedule)\r\n\t\t}\r\n\r\n\t\treturn { date, rs: newUnavailable }\r\n\t}\r\n\tconst changeValueSchedule = async (uid: number, key: 'CaID', vl: number) => {\r\n\t\tconst { rs: newUnavailableScheduleList, date } = await getNewUnavailableScheduleList(uid, key, vl)\r\n\t\tconst scheduleList = newUnavailableScheduleList.filter((s) => s.date === date)\r\n\t\tif (checkDuplicateStudyTimeInDay(scheduleList, vl)) {\r\n\t\t\tshowNoti('danger', 'Dữ liệu trùng lập')\r\n\t\t}\r\n\t\tsetDataModalCalendar({\r\n\t\t\t...dataModalCalendar,\r\n\t\t\tscheduleList: scheduleList\r\n\t\t})\r\n\t\tsetScheduleList((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\tunavailable: newUnavailableScheduleList\r\n\t\t}))\r\n\t}\r\n\tconst changeStatusSchedule = async (sch: ISchedule, type: number = 1) => {\r\n\t\tconst newScheduleUnavailableList = [...scheduleList.unavailable]\r\n\t\tconst newScheduleAvailableList = [...scheduleList.available]\r\n\t\tconst fmDate = moment(dataModalCalendar.dateString).format('YYYY-MM-DD')\r\n\t\tconst fmScheduleUnavailableToObject = fmArrayToObjectWithSpecialKey(newScheduleUnavailableList, 'date')\r\n\t\t// type = 2 => unavailable to available\r\n\t\tif (type === 2) {\r\n\t\t\tconst idx = newScheduleUnavailableList.findIndex((s) => s.ID === sch.ID)\r\n\t\t\tconst newScheduleObj = {\r\n\t\t\t\t...newScheduleUnavailableList[idx],\r\n\t\t\t\tdate: fmDate\r\n\t\t\t}\r\n\t\t\tnewScheduleUnavailableList.splice(idx, 1)\r\n\t\t\tnewScheduleAvailableList.push(newScheduleObj)\r\n\t\t}\r\n\t\t// type = 1 => available to unavailable\r\n\t\tif (type === 1) {\r\n\t\t\tconst limit = calendarList.find((c) => c.Day === dataModalCalendar.dateString).Limit\r\n\t\t\tif (fmScheduleUnavailableToObject[fmDate]?.length >= limit) {\r\n\t\t\t\tshowNoti('danger', 'Số ca đạt giới hạn')\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\tconst idx = newScheduleAvailableList.findIndex((s) => s.ID === sch.ID)\r\n\t\t\tconst newScheduleObj = {\r\n\t\t\t\t...newScheduleAvailableList[idx],\r\n\t\t\t\tdate: fmDate\r\n\t\t\t}\r\n\t\t\t// CHECK AVAILABLE TEACHER\r\n\t\t\tconst newTeacher = await getNewValueForSchedule(newScheduleObj.ID, fmDate, 'CaID', newScheduleObj.CaID)\r\n\r\n\t\t\tnewScheduleAvailableList.splice(idx, 1)\r\n\t\t\tnewScheduleUnavailableList.push({ ...newScheduleObj, ...newTeacher })\r\n\t\t}\r\n\t\tsetScheduleList((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\tavailable: newScheduleAvailableList,\r\n\t\t\tunavailable: newScheduleUnavailableList\r\n\t\t}))\r\n\t\treturn true\r\n\t}\r\n\r\n\t// -----------CALENDAR-----------\r\n\tconst calendarDateFormat = (calendarArr: IStudyDay[]) => {\r\n\t\tconst { unavailable } = scheduleList\r\n\t\tconst fmScheduleUnavailableToObject = fmArrayToObjectWithSpecialKey(unavailable, 'date')\r\n\t\tconst rs = calendarArr.map((c, idx) => {\r\n\t\t\tlet isValid = true\r\n\t\t\tlet limit = c.Limit\r\n\t\t\tlet scheduleListForADay = []\r\n\t\t\tlet title = `Số buổi trống: ${limit}`\r\n\r\n\t\t\tconst calendarHadSchedule = fmScheduleUnavailableToObject[c.Day.slice(0, 10)]?.length\r\n\r\n\t\t\tif (calendarHadSchedule) {\r\n\t\t\t\tlimit = c.Limit - calendarHadSchedule\r\n\t\t\t\tscheduleListForADay = fmScheduleUnavailableToObject[c.Day.slice(0, 10)]\r\n\t\t\t\ttitle = 'Click để xem chi tiết'\r\n\t\t\t}\r\n\r\n\t\t\tif (!limit) {\r\n\t\t\t\tisValid = false\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tid: idx + 1,\r\n\t\t\t\ttitle: title,\r\n\t\t\t\tstart: moment(c.Day).toDate(),\r\n\t\t\t\tend: moment(c.Day).toDate(),\r\n\t\t\t\tresource: {\r\n\t\t\t\t\tdateString: c.Day,\r\n\t\t\t\t\tvalid: isValid,\r\n\t\t\t\t\tlimit: c.Limit,\r\n\t\t\t\t\tscheduleList: scheduleListForADay\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn rs\r\n\t}\r\n\tconst onToggleSchedule = async (sch: ISchedule, type: number) => {\r\n\t\tconst isChangeStatus = await changeStatusSchedule(sch, type)\r\n\t\tif (isChangeStatus) {\r\n\t\t\tconst newScheduleList = [...dataModalCalendar.scheduleList]\r\n\t\t\tconst idx = newScheduleList.findIndex((s) => s.ID === sch.ID)\r\n\t\t\tif (idx >= 0) {\r\n\t\t\t\tnewScheduleList.splice(idx, 1)\r\n\t\t\t} else {\r\n\t\t\t\tnewScheduleList.push(sch)\r\n\t\t\t}\r\n\t\t\tsetDataModalCalendar({\r\n\t\t\t\t...dataModalCalendar,\r\n\t\t\t\tscheduleInDay: newScheduleList.length,\r\n\t\t\t\tscheduleList: newScheduleList\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t// -----------SAVE COURSE-----------\r\n\tconst getTitle = (arr: IOptionCommon[], vl) => arr.find((p) => p.value === vl).title\r\n\tconst getMultiTitle = (arrList: IOptionCommon[], arrVl: string) => {\r\n\t\tconst rs = []\r\n\t\tfor (const r1 of arrVl.split(',')) {\r\n\t\t\tfor (const r2 of arrList) {\r\n\t\t\t\tif (+r1 === r2.value) {\r\n\t\t\t\t\trs.push(r2.title)\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rs.join(', ')\r\n\t}\r\n\tconst onValidateDataToSave = () => {\r\n\t\tconst { unavailable } = scheduleList\r\n\t\tconst rs: {\r\n\t\t\tshow: {\r\n\t\t\t\tdate: string\r\n\t\t\t\tdayOffWeek: string\r\n\t\t\t\tstudyTimeName: string\r\n\t\t\t\tteacherName: string\r\n\t\t\t\tStudyTimeID: number\r\n\t\t\t\tisValid: boolean\r\n\t\t\t}[]\r\n\t\t\tsave: ICOScheduleListToSave[]\r\n\t\t\tendDate: number\r\n\t\t} = {\r\n\t\t\tshow: [],\r\n\t\t\tsave: [],\r\n\t\t\tendDate: 0\r\n\t\t}\r\n\t\tfor (let i = 0, len = unavailable.length; i < len; i++) {\r\n\t\t\tconst s = unavailable[i]\r\n\t\t\t// get end date of course\r\n\t\t\tconst checkEndDay = moment(s.date).valueOf()\r\n\t\t\tif (rs.endDate < checkEndDay) {\r\n\t\t\t\trs.endDate = checkEndDay\r\n\t\t\t}\r\n\t\t\tconst dayArr = ['Chủ Nhật', 'Thứ 2', 'Thứ 3', 'Thứ 4', 'Thứ 5', 'Thứ 6', 'Thứ 7']\r\n\t\t\tconst dayOffWeek = dayArr[moment(s.date).day()]\r\n\t\t\tlet isValid = !s.TeacherID\r\n\t\t\tfor (let i2 = 0; i2 < len; i2++) {\r\n\t\t\t\tconst s2 = scheduleList.unavailable[i2]\r\n\t\t\t\tif (i !== i2 && s.date === s2.date && s.CaID === s2.CaID) {\r\n\t\t\t\t\tisValid = true\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\trs.show.push({\r\n\t\t\t\tdate: s.date,\r\n\t\t\t\tdayOffWeek,\r\n\t\t\t\tstudyTimeName: s.CaName,\r\n\t\t\t\tteacherName: s.TeacherName,\r\n\t\t\t\tStudyTimeID: s.CaID,\r\n\t\t\t\tisValid\r\n\t\t\t})\r\n\t\t\trs.save.push({\r\n\t\t\t\tCurriculumsDetailID: s.Tiet.CurriculumsDetailID,\r\n\t\t\t\tDate: s.date,\r\n\t\t\t\tStudyTimeID: s.CaID,\r\n\t\t\t\tTeacherID: s.TeacherID,\r\n\t\t\t\tSubjectID: s.Tiet.SubjectID\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn rs\r\n\t}\r\n\r\n\tconst onFetchDataToSave = () => {\r\n\t\tconst { branchList, programList, curriculumList, studyTimeList, teacherList } = optionListForForm\r\n\t\tconst { show, save, endDate } = onValidateDataToSave()\r\n\r\n\t\tconst scheduleListSorted = show.sort((a, b) => moment(a.date).valueOf() - moment(b.date).valueOf())\r\n\r\n\t\tconst fmScheduleShowToObject = fmArrayToObjectWithSpecialKey(scheduleListSorted, 'date')\r\n\r\n\t\tconst { BranchID, ProgramID, CurriculumID, StartDay, CourseName, TeacherID, TimeCourse } = stoneDataToSave.current\r\n\r\n\t\tconst BranchName = getTitle(branchList, BranchID)\r\n\t\tconst ProgramName = getTitle(programList, ProgramID)\r\n\t\tconst TeacherName = getTitle(teacherList, TeacherID)\r\n\t\tconst CurriculumName = getTitle(curriculumList, CurriculumID)\r\n\r\n\t\tconst daySelectedListString = TimeCourse.map((t) => t.DaySelected).join(',')\r\n\t\tconst DaySelectedName = getMultiTitle(dayOfWeek, daySelectedListString)\r\n\t\tconst studyTimeListString = TimeCourse.map((t) => t.StudyTimeID).join(',')\r\n\t\tconst StudyTimeName = getMultiTitle(studyTimeList, studyTimeListString)\r\n\r\n\t\tconst CourseNameFinal = CourseName\r\n\t\t\t? CourseName\r\n\t\t\t: `[${BranchName}][${ProgramName}][${CurriculumName}][${StudyTimeName}] - ${moment(StartDay).format('DD/MM/YYYY')}`\r\n\r\n\t\tsetScheduleShow(fmScheduleShowToObject)\r\n\t\tsetSaveCourseInfo({\r\n\t\t\t...saveCourseInfo,\r\n\t\t\t...stoneDataToSave.current,\r\n\t\t\tCourseName: CourseNameFinal,\r\n\t\t\tBranchName,\r\n\t\t\tProgramName,\r\n\t\t\tTeacherName,\r\n\t\t\tCurriculumName,\r\n\t\t\tDaySelectedName,\r\n\t\t\tStudyTimeName,\r\n\t\t\tDaySelected: daySelectedListString,\r\n\t\t\tStudyTimeID: studyTimeListString,\r\n\t\t\tEndDay: moment(endDate).format('YYYY/MM/DD'),\r\n\t\t\tSchedule: save\r\n\t\t})\r\n\t}\r\n\r\n\tconst onSaveCourse = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'SAVE_COURSE',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tconst haveErrors = Object.keys(scheduleShow).find((date, idx) => scheduleShow[date].find((s) => s.isValid))\r\n\t\t\tif (haveErrors) {\r\n\t\t\t\tshowNoti('danger', 'Đã xảy ra lỗi. Xin kiểm tra lại')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tconsole.log('saveCourseInfo: ', saveCourseInfo)\r\n\t\t\tconst res = await courseApi.add(saveCourseInfo)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\trouter.push('/course/course-list/')\r\n\t\t\t\treturn res\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('error', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'SAVE_COURSE',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"create-course\">\r\n\t\t\t<TitlePage title=\"Tạo khóa học online\" />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-8 col-12\">\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\ttitle=\"Sắp xếp lịch học\"\r\n\t\t\t\t\t\textra={\r\n\t\t\t\t\t\t\t<div className=\"btn-page-course\">\r\n\t\t\t\t\t\t\t\t<CreateCourseOnlineForm\r\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\tisUpdate={false}\r\n\t\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\t\toptionListForForm={optionListForForm}\r\n\t\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\t\thandleGetCourse={getCourse}\r\n\t\t\t\t\t\t\t\t\thandleFetchDataByBranch={fetchStaffByBranch}\r\n\t\t\t\t\t\t\t\t\thandleFetchProgramByGrade={fetchProgramByGrade}\r\n\t\t\t\t\t\t\t\t\thandleGetValueBeforeFetchCurriculum={getValueBeforeFetchCurriculum}\r\n\t\t\t\t\t\t\t\t\thandleGetValueBeforeFetchTeacher={getValueBeforeFetchTeacher}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{isSave && (\r\n\t\t\t\t\t\t\t\t\t<SaveCreateCourseOnline\r\n\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\t\tsaveInfo={saveCourseInfo}\r\n\t\t\t\t\t\t\t\t\t\tscheduleShow={scheduleShow}\r\n\t\t\t\t\t\t\t\t\t\thandleSaveCourse={onSaveCourse}\r\n\t\t\t\t\t\t\t\t\t\thandleFetchDataToSave={onFetchDataToSave}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CreateCourseCalendar\r\n\t\t\t\t\t\t\teventList={calendarDateFormat(calendarList)}\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tisLoaded={true}\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\thandleSetDataModalCalendar={setDataModalCalendar}\r\n\t\t\t\t\t\t\tdataModalCalendar={dataModalCalendar}\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tunAvailableList={\r\n\t\t\t\t\t\t\t\t<Schedule>\r\n\t\t\t\t\t\t\t\t\t<ScheduleList>\r\n\t\t\t\t\t\t\t\t\t\t{scheduleList.available.map((s, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<ScheduleOnlineItem key={idx} scheduleObj={s} handleChangeStatusSchedule={onToggleSchedule} />\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</ScheduleList>\r\n\t\t\t\t\t\t\t\t</Schedule>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ScheduleList panelActiveListInModal={dataModalCalendar.scheduleList.map((_, idx) => idx)}>\r\n\t\t\t\t\t\t\t\t{dataModalCalendar.scheduleList.map((s, idx) => (\r\n\t\t\t\t\t\t\t\t\t<ScheduleOnlineItem\r\n\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\tisUnavailable={true}\r\n\t\t\t\t\t\t\t\t\t\tscheduleObj={s}\r\n\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\t\thandleChangeValueSchedule={changeValueSchedule}\r\n\t\t\t\t\t\t\t\t\t\thandleChangeStatusSchedule={onToggleSchedule}\r\n\t\t\t\t\t\t\t\t\t\toptionTeacherList={optionListForADay.optionTeacherList.find((o) => o.id === s.ID)?.list || []}\r\n\t\t\t\t\t\t\t\t\t\toptionStudyTime={optionListForADay.optionStudyTimeList}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</ScheduleList>\r\n\t\t\t\t\t\t</CreateCourseCalendar>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-4 col-12 d-none d-md-block\">\r\n\t\t\t\t\t<Schedule>\r\n\t\t\t\t\t\t<ScheduleList>\r\n\t\t\t\t\t\t\t{scheduleList.available.map((s, idx) => (\r\n\t\t\t\t\t\t\t\t<ScheduleOnlineItem key={idx} scheduleObj={s} handleChangeStatusSchedule={onToggleSchedule} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ScheduleList>\r\n\t\t\t\t\t</Schedule>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CreateCourseOnline\r\n"]},"metadata":{},"sourceType":"module"}
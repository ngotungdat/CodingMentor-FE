{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\ExamList\\\\ExamShow\\\\TypingList.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { useDoingTest } from '~/context/useDoingTest';\nimport { useDoneTest } from '~/context/useDoneTest';\n\nconst TypingList = props => {\n  const {\n    doneTestData\n  } = useDoneTest();\n  const {\n    dataQuestion,\n    listQuestionID,\n    isDoingTest\n  } = props;\n  const {\n    activeID,\n    getActiveID,\n    packageResult,\n    getPackageResult,\n    getListPicked,\n    removeListPicked\n  } = useDoingTest();\n  const {\n    0: listInput,\n    1: setListInput\n  } = useState([]);\n  const {\n    0: listCorrectAnswer,\n    1: setListCorrectAnswer\n  } = useState([]);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(null);\n  const {\n    0: loadFirst,\n    1: setLoadFirst\n  } = useState(false);\n  useEffect(() => {\n    if (dataQuestion.Paragraph !== '') {\n      let spaceEditor = document.querySelectorAll('.box-typing .space-editor');\n\n      if (spaceEditor && spaceEditor.length > 0) {\n        spaceEditor.forEach((item, index) => {\n          let quesID = parseInt(item.getAttribute('ques-id')); // Sắp xếp lại thứ tự các ô input trong đoạn văn\n\n          let indexQues = null;\n\n          if (listQuestionID.includes(quesID)) {\n            indexQues = listQuestionID.indexOf(quesID);\n          }\n\n          if (!!indexQues) {\n            let positionSpace = document.querySelectorAll('.box-typing .position-space');\n\n            if (positionSpace.length < spaceEditor.length) {\n              let span = document.createElement('span');\n              span.classList.add('position-space');\n              span.id = quesID.toString();\n\n              if (quesID === activeID) {\n                span.classList.add('active');\n              } // span.append(`(${indexQues + 1})`)\n\n\n              item.innerHTML = '';\n              item.before(span);\n            }\n          }\n        });\n      }\n    }\n  }, [listQuestionID]); // ----------- ALL ACTION IN DOINGTEST -------------\n\n  const returnPosition = quesID => {\n    let text = '';\n    let indexQuestion = listQuestionID.findIndex(id => id === quesID);\n    text = (indexQuestion + 1).toString();\n    return text;\n  };\n\n  const handleChangeText = (text, quesID) => {\n    // Find index\n    let indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex(item => item.ExamTopicDetailID === dataQuestion.ID);\n    let indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(item => item.ExerciseID === quesID);\n    indexQuestionDetail === -1 && (indexQuestionDetail = 0); // Add new answer to list - Kiểm tra xem mảng có data chưa, nếu chưa thì thêm mới, ngược lại thì cập nhật object\n    // Đối với loại Điền từ thì mảng chỉ có 1 object đáp án\n\n    if (packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList.length == 0) {\n      packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList.push({\n        AnswerID: 0,\n        AnswerContent: text,\n        FileAudio: ''\n      });\n    } else {\n      packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList[0].AnswerContent = text;\n    }\n\n    getPackageResult(_objectSpread({}, packageResult));\n  };\n\n  useEffect(() => {\n    if (!doneTestData) {\n      if (isDoingTest) {\n        if (dataQuestion.Paragraph !== '') {\n          let spaceEditor = document.querySelectorAll('.doingtest-group .box-typing .space-editor');\n\n          if (!!spaceEditor && spaceEditor.length > 0) {\n            spaceEditor.forEach((item, index) => {\n              let quesID = parseInt(item.getAttribute('ques-id')); // Trường hợp điền từ xong một lát quay lại vẫn còn\n\n              let indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex(item => item.ExamTopicDetailID === dataQuestion.ID);\n              let indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(item => item.ExerciseID === quesID);\n              indexQuestionDetail === -1 && (indexQuestionDetail = 0);\n\n              if (packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList.length > 0) {\n                if (!loadFirst) {\n                  item.value = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList[0].AnswerContent;\n                  setLoadFirst(true);\n                } else {\n                  if (activeID === isActive) {\n                    item.value = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList[0].AnswerContent;\n                  }\n                }\n\n                if (!!packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList[0].AnswerContent) {\n                  item.classList.add('auto');\n                  item.setAttribute('size', packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList[0].AnswerContent.length);\n                }\n              } //Tìm và active đúng ô input\n\n\n              item.classList.remove('active-type-input');\n\n              if (quesID === activeID) {\n                item.classList.add('active-type-input');\n              }\n            });\n          }\n        }\n      }\n    } else {\n      if (dataQuestion.Paragraph !== '') {\n        let spaceEditor = document.querySelectorAll('.box-typing  .space-editor');\n        spaceEditor.forEach(item => {\n          let quesID = parseInt(item.getAttribute('ques-id'));\n          dataQuestion.ExerciseTopic.every(ques => {\n            if (ques.ExerciseID === quesID) {\n              // Check this answer is right or wrong\n              if (ques.isTrue) {\n                item.classList.add('right-answer');\n              } else {\n                item.classList.add('wrong-answer');\n              }\n\n              const newItem = document.createElement('DIV');\n              newItem.className = item.className;\n              item.parentNode.replaceChild(newItem, item); // Find answer content of user\n\n              if (ques.ExerciseAnswer.length > 0) {\n                if (ques.ExerciseAnswer[0].AnswerContent && ques.ExerciseAnswer[0].AnswerContent !== '') {\n                  newItem.innerHTML = ques.ExerciseAnswer[0].AnswerContent;\n                } else {\n                  newItem.classList.add('center-row');\n                } // Tạo đáp án đúng để hover\n\n\n                let getNodes = str => new DOMParser().parseFromString(str, 'text/html').body.childNodes;\n\n                let node = getNodes(`<div class=\"tooltip-answer\" id=\"${quesID}\">${ques.ExerciseAnswer[0].ExerciseAnswerContent}</div>`);\n                newItem.appendChild(node[0]);\n                listCorrectAnswer.push({\n                  id: ques.ExerciseAnswer[0].ExerciseAnswerID,\n                  content: ques.ExerciseAnswer[0].ExerciseAnswerContent\n                });\n              }\n\n              return false;\n            }\n\n            return true;\n          });\n          setListCorrectAnswer([...listCorrectAnswer]);\n        });\n      }\n    }\n\n    if (doneTestData || isDoingTest) {\n      // -- Sắp xếp lại vị trí\n      let positionSpace = document.querySelectorAll('.position-space');\n      positionSpace.forEach(item => {\n        item.classList.remove('active');\n\n        if (parseInt(item.id) === activeID) {\n          item.classList.add('active');\n        }\n      });\n    }\n  }, [activeID]);\n  useEffect(() => {\n    if (doneTestData) {\n      if (listCorrectAnswer.length > 0) {\n        let spaceEditor = document.querySelectorAll('.test-wrapper .box-typing .space-editor');\n        let tooltipAns = document.querySelectorAll('.test-wrapper .box-typing .tooltip-answer');\n        spaceEditor.forEach(item => {\n          // Mouse over\n          item.addEventListener('mouseover', event => {\n            let quesID = item.getAttribute('ques-id');\n            tooltipAns.forEach(e => {\n              if (e.id === quesID) {\n                e.classList.remove('d-none');\n                e.classList.add('d-block');\n              }\n            });\n          }); // Mouse out\n\n          item.addEventListener('mouseout', () => {\n            let quesID = item.getAttribute('ques-id');\n            tooltipAns.forEach(e => {\n              if (e.id === quesID) {\n                e.classList.remove('d-block');\n                e.classList.add('d-none');\n              }\n            });\n          });\n        });\n      }\n    }\n  }, [listCorrectAnswer]);\n  useEffect(() => {\n    if (!doneTestData) {\n      let el = document.querySelectorAll('.doingtest-group .box-typing .space-editor');\n      el.forEach(item => {\n        listInput.push(item.value);\n        let quesID = parseInt(item.getAttribute('ques-id'));\n        item.addEventListener('click', event => {\n          event.preventDefault();\n          getActiveID(quesID);\n          setIsActive(quesID);\n        });\n        item.addEventListener('keyup', event => {\n          var _input$value;\n\n          const input = event.target;\n          handleChangeText(input.value, quesID); // Điều kiện đề input co giãn theo text\n\n          let lengthText = (input === null || input === void 0 ? void 0 : (_input$value = input.value) === null || _input$value === void 0 ? void 0 : _input$value.length) || 0;\n\n          if (lengthText > 14) {\n            item.classList.add('auto');\n            item.setAttribute('size', lengthText);\n          } else {\n            item.classList.remove('auto');\n            item.setAttribute('size', 14);\n\n            if (lengthText < 1) {\n              removeListPicked(quesID);\n            } else {\n              getListPicked(quesID);\n            }\n          }\n        });\n      });\n      setListInput([...listInput]);\n    }\n  }, []); // Thay thẻ div = input\n\n  const convertHTML = () => {\n    if ((dataQuestion === null || dataQuestion === void 0 ? void 0 : dataQuestion.ExerciseTopic.length) > 0) {\n      let cloneValueEditor = dataQuestion.Paragraph;\n      const divCont = document.createElement('DIV');\n      divCont.innerHTML = cloneValueEditor;\n      const inputNodeList = divCont.querySelectorAll('input');\n      dataQuestion.ExerciseTopic.forEach((item, index) => {\n        var _inputNodeList$index, _inputNodeList$index2;\n\n        let indexInput = parseInt(item.ExerciseID) + 1;\n        let temp = index + 1;\n        indexInput = indexInput.toString();\n        (_inputNodeList$index = inputNodeList[index]) === null || _inputNodeList$index === void 0 ? void 0 : _inputNodeList$index.setAttribute('placeholder', `(${returnPosition(item.ExerciseID)})`);\n        (_inputNodeList$index2 = inputNodeList[index]) === null || _inputNodeList$index2 === void 0 ? void 0 : _inputNodeList$index2.setAttribute('ques-id', `${item.ExerciseID}`);\n      });\n      return divCont.innerHTML;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: ReactHtmlParser(dataQuestion.Content)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-typing col-lg-6 col-md-12 mt-5\",\n      style: {\n        marginLeft: -15\n      },\n      children: ReactHtmlParser(convertHTML())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 4\n    }, this), doneTestData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-list-answer-typing mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"mb-2\",\n          children: \"\\u0110\\xE1p \\xE1n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-answer-typing w-100  pl-0\",\n          children: dataQuestion === null || dataQuestion === void 0 ? void 0 : dataQuestion.ExerciseTopic.map(item => item.ExerciseAnswer.length > 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"answer-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"number\",\n              children: [returnPosition(item.ExerciseID), \"/\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text\",\n              children: item.ExerciseAnswer[0].ExerciseAnswerContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 6\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\nexport default TypingList;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/ExamList/ExamShow/TypingList.tsx"],"names":["React","useEffect","useState","ReactHtmlParser","useDoingTest","useDoneTest","TypingList","props","doneTestData","dataQuestion","listQuestionID","isDoingTest","activeID","getActiveID","packageResult","getPackageResult","getListPicked","removeListPicked","listInput","setListInput","listCorrectAnswer","setListCorrectAnswer","isActive","setIsActive","loadFirst","setLoadFirst","Paragraph","spaceEditor","document","querySelectorAll","length","forEach","item","index","quesID","parseInt","getAttribute","indexQues","includes","indexOf","positionSpace","span","createElement","classList","add","id","toString","innerHTML","before","returnPosition","text","indexQuestion","findIndex","handleChangeText","SetPackageResultDetailInfoList","ExamTopicDetailID","ID","indexQuestionDetail","SetPackageExerciseStudentInfoList","ExerciseID","SetPackageExerciseAnswerStudentList","push","AnswerID","AnswerContent","FileAudio","value","setAttribute","remove","ExerciseTopic","every","ques","isTrue","newItem","className","parentNode","replaceChild","ExerciseAnswer","getNodes","str","DOMParser","parseFromString","body","childNodes","node","ExerciseAnswerContent","appendChild","ExerciseAnswerID","content","tooltipAns","addEventListener","event","e","el","preventDefault","input","target","lengthText","convertHTML","cloneValueEditor","divCont","inputNodeList","indexInput","temp","Content","marginLeft","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { useDoingTest } from '~/context/useDoingTest'\r\nimport { useDoneTest } from '~/context/useDoneTest'\r\n\r\nconst TypingList = (props: any) => {\r\n\tconst { doneTestData } = useDoneTest()\r\n\tconst { dataQuestion, listQuestionID, isDoingTest } = props\r\n\tconst { activeID, getActiveID, packageResult, getPackageResult, getListPicked, removeListPicked } = useDoingTest()\r\n\tconst [listInput, setListInput] = useState([])\r\n\tconst [listCorrectAnswer, setListCorrectAnswer] = useState([])\r\n\tconst [isActive, setIsActive] = useState(null)\r\n\tconst [loadFirst, setLoadFirst] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dataQuestion.Paragraph !== '') {\r\n\t\t\tlet spaceEditor: any = document.querySelectorAll('.box-typing .space-editor')\r\n\r\n\t\t\tif (spaceEditor && spaceEditor.length > 0) {\r\n\t\t\t\tspaceEditor.forEach((item: any, index: any) => {\r\n\t\t\t\t\tlet quesID: any = parseInt(item.getAttribute('ques-id'))\r\n\r\n\t\t\t\t\t// Sắp xếp lại thứ tự các ô input trong đoạn văn\r\n\t\t\t\t\tlet indexQues: any = null\r\n\r\n\t\t\t\t\tif (listQuestionID.includes(quesID)) {\r\n\t\t\t\t\t\tindexQues = listQuestionID.indexOf(quesID)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!!indexQues) {\r\n\t\t\t\t\t\tlet positionSpace: any = document.querySelectorAll('.box-typing .position-space')\r\n\r\n\t\t\t\t\t\tif (positionSpace.length < spaceEditor.length) {\r\n\t\t\t\t\t\t\tlet span = document.createElement('span')\r\n\t\t\t\t\t\t\tspan.classList.add('position-space')\r\n\t\t\t\t\t\t\tspan.id = quesID.toString()\r\n\t\t\t\t\t\t\tif (quesID === activeID) {\r\n\t\t\t\t\t\t\t\tspan.classList.add('active')\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// span.append(`(${indexQues + 1})`)\r\n\r\n\t\t\t\t\t\t\titem.innerHTML = ''\r\n\t\t\t\t\t\t\titem.before(span)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}, [listQuestionID])\r\n\r\n\t// ----------- ALL ACTION IN DOINGTEST -------------\r\n\tconst returnPosition = (quesID) => {\r\n\t\tlet text = ''\r\n\t\tlet indexQuestion = listQuestionID.findIndex((id) => id === quesID)\r\n\t\ttext = (indexQuestion + 1).toString()\r\n\t\treturn text\r\n\t}\r\n\r\n\tconst handleChangeText = (text: any, quesID: any) => {\r\n\t\t// Find index\r\n\t\tlet indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex((item) => item.ExamTopicDetailID === dataQuestion.ID)\r\n\t\tlet indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(\r\n\t\t\t(item) => item.ExerciseID === quesID\r\n\t\t)\r\n\t\tindexQuestionDetail === -1 && (indexQuestionDetail = 0)\r\n\t\t// Add new answer to list - Kiểm tra xem mảng có data chưa, nếu chưa thì thêm mới, ngược lại thì cập nhật object\r\n\t\t// Đối với loại Điền từ thì mảng chỉ có 1 object đáp án\r\n\t\tif (\r\n\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail]\r\n\t\t\t\t.SetPackageExerciseAnswerStudentList.length == 0\r\n\t\t) {\r\n\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\t\tindexQuestionDetail\r\n\t\t\t].SetPackageExerciseAnswerStudentList.push({\r\n\t\t\t\tAnswerID: 0,\r\n\t\t\t\tAnswerContent: text,\r\n\t\t\t\tFileAudio: ''\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\t\tindexQuestionDetail\r\n\t\t\t].SetPackageExerciseAnswerStudentList[0].AnswerContent = text\r\n\t\t}\r\n\t\tgetPackageResult({ ...packageResult })\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!doneTestData) {\r\n\t\t\tif (isDoingTest) {\r\n\t\t\t\tif (dataQuestion.Paragraph !== '') {\r\n\t\t\t\t\tlet spaceEditor = document.querySelectorAll('.doingtest-group .box-typing .space-editor')\r\n\t\t\t\t\tif (!!spaceEditor && spaceEditor.length > 0) {\r\n\t\t\t\t\t\tspaceEditor.forEach((item: any, index: any) => {\r\n\t\t\t\t\t\t\tlet quesID: any = parseInt(item.getAttribute('ques-id'))\r\n\r\n\t\t\t\t\t\t\t// Trường hợp điền từ xong một lát quay lại vẫn còn\r\n\t\t\t\t\t\t\tlet indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex(\r\n\t\t\t\t\t\t\t\t(item: any) => item.ExamTopicDetailID === dataQuestion.ID\r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\tlet indexQuestionDetail: any = packageResult.SetPackageResultDetailInfoList[\r\n\t\t\t\t\t\t\t\tindexQuestion\r\n\t\t\t\t\t\t\t].SetPackageExerciseStudentInfoList.findIndex((item: any) => item.ExerciseID === quesID)\r\n\t\t\t\t\t\t\tindexQuestionDetail === -1 && (indexQuestionDetail = 0)\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail]\r\n\t\t\t\t\t\t\t\t\t.SetPackageExerciseAnswerStudentList.length > 0\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tif (!loadFirst) {\r\n\t\t\t\t\t\t\t\t\titem.value =\r\n\t\t\t\t\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\t\t\t\t\t\t\t\t\tindexQuestionDetail\r\n\t\t\t\t\t\t\t\t\t\t].SetPackageExerciseAnswerStudentList[0].AnswerContent\r\n\t\t\t\t\t\t\t\t\tsetLoadFirst(true)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (activeID === isActive) {\r\n\t\t\t\t\t\t\t\t\t\titem.value =\r\n\t\t\t\t\t\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\t\t\t\t\t\t\t\t\t\tindexQuestionDetail\r\n\t\t\t\t\t\t\t\t\t\t\t].SetPackageExerciseAnswerStudentList[0].AnswerContent\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t!!packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail]\r\n\t\t\t\t\t\t\t\t\t\t.SetPackageExerciseAnswerStudentList[0].AnswerContent\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\titem.classList.add('auto')\r\n\t\t\t\t\t\t\t\t\titem.setAttribute(\r\n\t\t\t\t\t\t\t\t\t\t'size',\r\n\t\t\t\t\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail]\r\n\t\t\t\t\t\t\t\t\t\t\t.SetPackageExerciseAnswerStudentList[0].AnswerContent.length\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//Tìm và active đúng ô input\r\n\t\t\t\t\t\t\titem.classList.remove('active-type-input')\r\n\t\t\t\t\t\t\tif (quesID === activeID) {\r\n\t\t\t\t\t\t\t\titem.classList.add('active-type-input')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (dataQuestion.Paragraph !== '') {\r\n\t\t\t\tlet spaceEditor = document.querySelectorAll('.box-typing  .space-editor')\r\n\t\t\t\tspaceEditor.forEach((item) => {\r\n\t\t\t\t\tlet quesID = parseInt(item.getAttribute('ques-id'))\r\n\t\t\t\t\tdataQuestion.ExerciseTopic.every((ques) => {\r\n\t\t\t\t\t\tif (ques.ExerciseID === quesID) {\r\n\t\t\t\t\t\t\t// Check this answer is right or wrong\r\n\t\t\t\t\t\t\tif (ques.isTrue) {\r\n\t\t\t\t\t\t\t\titem.classList.add('right-answer')\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\titem.classList.add('wrong-answer')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconst newItem = document.createElement('DIV')\r\n\t\t\t\t\t\t\tnewItem.className = item.className\r\n\t\t\t\t\t\t\titem.parentNode.replaceChild(newItem, item)\r\n\t\t\t\t\t\t\t// Find answer content of user\r\n\t\t\t\t\t\t\tif (ques.ExerciseAnswer.length > 0) {\r\n\t\t\t\t\t\t\t\tif (ques.ExerciseAnswer[0].AnswerContent && ques.ExerciseAnswer[0].AnswerContent !== '') {\r\n\t\t\t\t\t\t\t\t\tnewItem.innerHTML = ques.ExerciseAnswer[0].AnswerContent\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tnewItem.classList.add('center-row')\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// Tạo đáp án đúng để hover\r\n\t\t\t\t\t\t\t\tlet getNodes = (str) => new DOMParser().parseFromString(str, 'text/html').body.childNodes\r\n\t\t\t\t\t\t\t\tlet node = getNodes(`<div class=\"tooltip-answer\" id=\"${quesID}\">${ques.ExerciseAnswer[0].ExerciseAnswerContent}</div>`)\r\n\t\t\t\t\t\t\t\tnewItem.appendChild(node[0])\r\n\t\t\t\t\t\t\t\tlistCorrectAnswer.push({\r\n\t\t\t\t\t\t\t\t\tid: ques.ExerciseAnswer[0].ExerciseAnswerID,\r\n\t\t\t\t\t\t\t\t\tcontent: ques.ExerciseAnswer[0].ExerciseAnswerContent\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetListCorrectAnswer([...listCorrectAnswer])\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (doneTestData || isDoingTest) {\r\n\t\t\t// -- Sắp xếp lại vị trí\r\n\t\t\tlet positionSpace = document.querySelectorAll('.position-space')\r\n\t\t\tpositionSpace.forEach((item) => {\r\n\t\t\t\titem.classList.remove('active')\r\n\t\t\t\tif (parseInt(item.id) === activeID) {\r\n\t\t\t\t\titem.classList.add('active')\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}, [activeID])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (doneTestData) {\r\n\t\t\tif (listCorrectAnswer.length > 0) {\r\n\t\t\t\tlet spaceEditor = document.querySelectorAll('.test-wrapper .box-typing .space-editor')\r\n\t\t\t\tlet tooltipAns = document.querySelectorAll('.test-wrapper .box-typing .tooltip-answer')\r\n\t\t\t\tspaceEditor.forEach((item) => {\r\n\t\t\t\t\t// Mouse over\r\n\t\t\t\t\titem.addEventListener('mouseover', (event: MouseEvent) => {\r\n\t\t\t\t\t\tlet quesID = item.getAttribute('ques-id')\r\n\t\t\t\t\t\ttooltipAns.forEach((e) => {\r\n\t\t\t\t\t\t\tif (e.id === quesID) {\r\n\t\t\t\t\t\t\t\te.classList.remove('d-none')\r\n\t\t\t\t\t\t\t\te.classList.add('d-block')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\t// Mouse out\r\n\t\t\t\t\titem.addEventListener('mouseout', () => {\r\n\t\t\t\t\t\tlet quesID = item.getAttribute('ques-id')\r\n\t\t\t\t\t\ttooltipAns.forEach((e) => {\r\n\t\t\t\t\t\t\tif (e.id === quesID) {\r\n\t\t\t\t\t\t\t\te.classList.remove('d-block')\r\n\t\t\t\t\t\t\t\te.classList.add('d-none')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}, [listCorrectAnswer])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!doneTestData) {\r\n\t\t\tlet el = document.querySelectorAll('.doingtest-group .box-typing .space-editor')\r\n\t\t\tel.forEach((item: any) => {\r\n\t\t\t\tlistInput.push(item.value)\r\n\t\t\t\tlet quesID = parseInt(item.getAttribute('ques-id'))\r\n\t\t\t\titem.addEventListener('click', (event) => {\r\n\t\t\t\t\tevent.preventDefault()\r\n\t\t\t\t\tgetActiveID(quesID)\r\n\t\t\t\t\tsetIsActive(quesID)\r\n\t\t\t\t})\r\n\t\t\t\titem.addEventListener('keyup', (event: any) => {\r\n\t\t\t\t\tconst input = event.target\r\n\t\t\t\t\thandleChangeText(input.value, quesID)\r\n\t\t\t\t\t// Điều kiện đề input co giãn theo text\r\n\t\t\t\t\tlet lengthText = input?.value?.length || 0\r\n\t\t\t\t\tif (lengthText > 14) {\r\n\t\t\t\t\t\titem.classList.add('auto')\r\n\t\t\t\t\t\titem.setAttribute('size', lengthText)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\titem.classList.remove('auto')\r\n\t\t\t\t\t\titem.setAttribute('size', 14)\r\n\t\t\t\t\t\tif (lengthText < 1) {\r\n\t\t\t\t\t\t\tremoveListPicked(quesID)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tgetListPicked(quesID)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\tsetListInput([...listInput])\r\n\t\t}\r\n\t}, [])\r\n\r\n\t// Thay thẻ div = input\r\n\tconst convertHTML = () => {\r\n\t\tif (dataQuestion?.ExerciseTopic.length > 0) {\r\n\t\t\tlet cloneValueEditor = dataQuestion.Paragraph\r\n\t\t\tconst divCont = document.createElement('DIV')\r\n\t\t\tdivCont.innerHTML = cloneValueEditor\r\n\t\t\tconst inputNodeList = divCont.querySelectorAll('input')\r\n\r\n\t\t\tdataQuestion.ExerciseTopic.forEach((item: any, index: any) => {\r\n\t\t\t\tlet indexInput: any = parseInt(item.ExerciseID) + 1\r\n\t\t\t\tlet temp: any = index + 1\r\n\t\t\t\tindexInput = indexInput.toString()\r\n\t\t\t\tinputNodeList[index]?.setAttribute('placeholder', `(${returnPosition(item.ExerciseID)})`)\r\n\t\t\t\tinputNodeList[index]?.setAttribute('ques-id', `${item.ExerciseID}`)\r\n\t\t\t})\r\n\t\t\treturn divCont.innerHTML\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"\">{ReactHtmlParser(dataQuestion.Content)}</div>\r\n\r\n\t\t\t<div className=\"box-typing col-lg-6 col-md-12 mt-5\" style={{ marginLeft: -15 }}>\r\n\t\t\t\t{ReactHtmlParser(convertHTML())}\r\n\t\t\t</div>\r\n\r\n\t\t\t{doneTestData && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"wrap-list-answer-typing mt-4\">\r\n\t\t\t\t\t\t<h6 className=\"mb-2\">Đáp án</h6>\r\n\t\t\t\t\t\t<ul className=\"list-answer-typing w-100  pl-0\">\r\n\t\t\t\t\t\t\t{dataQuestion?.ExerciseTopic.map(\r\n\t\t\t\t\t\t\t\t(item) =>\r\n\t\t\t\t\t\t\t\t\titem.ExerciseAnswer.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"answer-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"number\">{returnPosition(item.ExerciseID)}/</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"text\">{item.ExerciseAnswer[0].ExerciseAnswerContent}</span>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default TypingList\r\n"]},"metadata":{},"sourceType":"module"}
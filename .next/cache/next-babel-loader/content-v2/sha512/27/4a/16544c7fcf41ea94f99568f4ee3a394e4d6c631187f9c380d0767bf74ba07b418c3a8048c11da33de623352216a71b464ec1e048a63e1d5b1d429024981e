{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\QuestionBank\\\\QuestionFormType\\\\TypingForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Form, Input, Spin, Tooltip } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { Plus } from 'react-feather';\nimport { useForm } from 'react-hook-form';\nimport { exerciseGroupApi } from '~/apiBase/';\nimport Editor from '~/components/Elements/Editor';\nimport { useWrap } from '~/context/wrap';\nlet AnsID = 0;\nlet QuesID = -1;\n\nconst TypingForm = props => {\n  var _questionDataForm$Exe3;\n\n  const {\n    isSubmit,\n    questionData,\n    changeIsSubmit,\n    visible\n  } = props;\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    handleSubmit,\n    formState: {\n      isSubmitting,\n      errors,\n      isSubmitted\n    }\n  } = useForm();\n  const [form] = Form.useForm();\n  const {\n    0: questionDataForm,\n    1: setQuestionDataForm\n  } = useState(null);\n  const {\n    0: isResetEditor,\n    1: setIsResetEditor\n  } = useState(false);\n  const {\n    0: linkUpload,\n    1: setLinkUpload\n  } = useState(null);\n  const {\n    0: loadingUpload,\n    1: setLoadingUpload\n  } = useState(false);\n  const {\n    0: loadingForm,\n    1: setLoadingForm\n  } = useState(false);\n  const {\n    0: reloadContent,\n    1: setReloadContent\n  } = useState(false);\n  const {\n    0: dataExercise,\n    1: setDataExercise\n  } = useState([]); // Upload file audio\n\n  const onchange_UploadFile = async info => {\n    // console.log(\"Info File upload: \", info);\n    if (info.file.status === 'uploading') {\n      setLoadingUpload(true);\n      return;\n    }\n\n    setLoadingUpload(true);\n\n    try {\n      let res = await exerciseGroupApi.UploadAudio(info.file.originFileObj);\n\n      if (res.status == 200) {\n        setLinkUpload(res.data.data);\n        showNoti('success', 'Upload file thành công');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoadingUpload(false);\n    }\n  }; // SUBMI FORM\n\n\n  const onSubmit = handleSubmit((data, e) => {// console.log(\"DATA SUBMIT: \", data);\n  }); // GET VALUE IN EDITOR\n\n  const getDataEditor = dataEditor => {\n    if (questionDataForm) {\n      questionDataForm.Paragraph = dataEditor;\n    }\n\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // Reset value in form\n\n\n  const resetForm = () => {\n    questionDataForm.Content = '';\n    questionDataForm.ExerciseAnswer.forEach(item => {\n      item.AnswerContent = '';\n      item.isTrue = false;\n    });\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // HANDLE DELETE ALL QUESTION\n\n\n  const deleteAllQuestion = () => {\n    var _questionDataForm$Exe;\n\n    dataExercise === null || dataExercise === void 0 ? void 0 : dataExercise.splice(0, dataExercise.length);\n    questionDataForm === null || questionDataForm === void 0 ? void 0 : (_questionDataForm$Exe = questionDataForm.ExerciseList) === null || _questionDataForm$Exe === void 0 ? void 0 : _questionDataForm$Exe.forEach(item => {\n      item.Enable = false;\n    });\n    setDataExercise([...dataExercise]);\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // HANDLE DELETE QUESTION\n\n\n  const deleteSingleQuestion = QuestionID => {\n    let QuestionIndex = questionDataForm.ExerciseList.findIndex(item => item.inputID == QuestionID);\n    let ExerciseIndex = dataExercise.findIndex(item => item.inputID == QuestionID);\n    dataExercise.splice(ExerciseIndex, 1);\n\n    if (questionDataForm.ExerciseList[QuestionIndex]) {\n      if (questionDataForm.ExerciseList[QuestionIndex].isAdd) {\n        questionDataForm.ExerciseList.splice(QuestionIndex, 1);\n      } else {\n        questionDataForm.ExerciseList[QuestionIndex].Enable = false;\n      }\n    } else {\n      console.log('Câu hỏi không tồn tại');\n    }\n\n    setDataExercise([...dataExercise]);\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // HANDLE ADD QUESTION\n\n\n  const addQuestion = inputID => {\n    AnsID++;\n    let objAns = {\n      // ID: inputID,\n      inputID: inputID,\n      Content: '',\n      ExerciseGroupID: questionDataForm.ID,\n      SubjectID: questionDataForm.SubjectID,\n      SubjectName: questionDataForm.SubjectName,\n      DescribeAnswer: '',\n      Level: questionDataForm.Level,\n      LevelName: questionDataForm.LevelName,\n      LinkAudio: null,\n      Type: questionDataForm.Type,\n      TypeName: questionDataForm.TypeName,\n      isAdd: true,\n      Enable: true,\n      ExerciseAnswer: [{\n        ID: AnsID,\n        AnswerContent: '',\n        isTrue: true,\n        Enable: true,\n        isAdd: true\n      }]\n    };\n    questionDataForm.ExerciseList.push(objAns);\n    dataExercise.push(objAns);\n    setDataExercise([...dataExercise]);\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // ====== HANDLE ADD ANSWER ======\n\n\n  const handleAddAnswer = questionID => {\n    AnsID++;\n    questionDataForm.ExerciseList.every(item => {\n      if (item.inputID == questionID) {\n        item.ExerciseAnswer.push({\n          ID: AnsID,\n          AnswerContent: '',\n          isTrue: true,\n          Enable: true,\n          isAdd: true\n        });\n        return false;\n      }\n\n      return true;\n    });\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // ====== ON CHANGE TEXT ======\n\n\n  const onChange_text = (e, AnswerID, QuestionID) => {\n    var _questionDataForm$Exe2;\n\n    // - Get value\n    let text = e.target.value; // - Get question index\n\n    let QuestionIndex = questionDataForm === null || questionDataForm === void 0 ? void 0 : (_questionDataForm$Exe2 = questionDataForm.ExerciseList) === null || _questionDataForm$Exe2 === void 0 ? void 0 : _questionDataForm$Exe2.findIndex(item => item.inputID == QuestionID); // - Get answer index\n\n    let AnswerIndex = questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex(item => item.ID == AnswerID); // - add text\n\n    questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].AnswerContent = text;\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // ====== DELETE ANSWER ======\n\n\n  const deleteAnswerItem = (AnswerID, QuestionID) => {\n    // - Get question index\n    let QuestionIndex = questionDataForm.ExerciseList.findIndex(item => item.inputID == QuestionID); // - Get answer index\n\n    let AnswerIndex = questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex(item => item.ID == AnswerID); // Action delete\n\n    if (questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].isAdd) {\n      questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.splice(AnswerIndex, 1);\n    } else {\n      questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].Enable = false;\n    } // setAnswerList([...answerList]);\n\n\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // SUBMIT FORM\n\n\n  const handleSubmitQuestion = async () => {\n    let res = null;\n    let newData = JSON.parse(JSON.stringify(questionDataForm)); // custom data\n\n    newData.ExerciseList.forEach((item, index) => {\n      item.ExerciseAnswer.forEach((ans, ind) => {\n        if (ans.isAdd) {\n          delete ans.ID;\n        }\n      });\n    });\n\n    if (questionDataForm.ExerciseGroupID) {\n      newData.ID = questionDataForm.ExerciseGroupID;\n    }\n\n    newData.ExerciseGroupID = null; // ----------\n\n    try {\n      res = await exerciseGroupApi.update(newData);\n\n      if (res.status == 200) {\n        handleSubmitChange(res.data.data);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    }\n  }; // SUBMIT AND CHANGE PARAGRAPH\n\n\n  const handleSubmitChange = async dataSubmit => {\n    console.log('Data Submit: ', dataSubmit);\n    let res = null;\n    let cloneParagraph = dataSubmit.Paragraph;\n    console.log('Lúc đầu: ', cloneParagraph);\n    dataSubmit.ExerciseList.forEach((item, index) => {\n      let indexInput = parseInt(item.inputID) + 1;\n      indexInput = indexInput.toString();\n      cloneParagraph = cloneParagraph.replace(`<input id=\"${item.inputID}\" class=\"space-editor\" placeholder=\"(${indexInput})\">`, `<div ques-id=\"${item.ID}\" id=\"${indexInput}\" class='space-editor' role='textbox' aria-labelledby='txtboxLabel' aria-multiline='true' contentEditable=\"true\">(${indexInput})</div>`);\n      console.log('Coi thử nha: ', `<input id=\"${item.inputID}\" class=\"space-editor\" placeholder=\"(${indexInput})\">`);\n    });\n    console.log('Lúc sau: ', cloneParagraph);\n    dataSubmit.Paragraph = cloneParagraph; // ----------\n\n    try {\n      res = await exerciseGroupApi.update(dataSubmit);\n\n      if (res.status == 200) {\n        changeIsSubmit(res.data.data);\n\n        if (!questionDataForm.ID) {\n          resetForm();\n        }\n\n        showNoti('success', `Tạo câu hỏi thành công`);\n        setIsResetEditor(true);\n        setTimeout(() => {\n          setIsResetEditor(false);\n        }, 500);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    }\n  }; //RETURN INDEX QUESTION - Trả về thứ tự của từng câu hỏi\n\n\n  const returnIndexQuestion = itemQues => {\n    let title = '';\n    let index = dataExercise.findIndex(ex => ex.inputID == itemQues.inputID);\n    title = `Câu (${index + 1})`;\n    return title;\n  }; // GET GROUP DETAIL DATA\n\n\n  const dataGroupDetail = async () => {\n    setLoadingForm(true);\n    let id = null;\n\n    if (questionData.ID) {\n      id = questionData.ID;\n    } else {\n      id = questionData.ExerciseGroupID;\n    }\n\n    try {\n      let res = await exerciseGroupApi.getWithID(id);\n      res.status == 200 && reloadNewContent(res.data.data);\n      res.status == 204 && showNoti('danger', 'Không có dữ liệu');\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoadingForm(false);\n    }\n  };\n\n  const reloadNewContent = data => {\n    let filterExerciseList = data.ExerciseList.filter(item => item.Enable !== false);\n    data.ExerciseList = [...filterExerciseList];\n    setDataExercise([...filterExerciseList]);\n    setQuestionDataForm(_objectSpread({}, data));\n  };\n\n  useEffect(() => {\n    if (isSubmit) {\n      handleSubmitQuestion();\n      return;\n    }\n  }, [isSubmit]);\n  useEffect(() => {\n    if (visible) {\n      dataGroupDetail();\n    }\n  }, [visible]); // useEffect(() => {\n  //   if (reloadContent) {\n  //     (async function loadData() {\n  //       try {\n  //         let res = await exerciseGroupApi.getWithID(questionDataForm.ID);\n  //         if (res.status == 200) {\n  //           changeIsSubmit(res.data.data);\n  //           showNoti(\"success\", `Thành công`);\n  //           if (!questionDataForm.ID) {\n  //             resetForm();\n  //           }\n  //           setIsResetEditor(true);\n  //           setTimeout(() => {\n  //             setIsResetEditor(false);\n  //           }, 500);\n  //         }\n  //         res.status == 204 && showNoti(\"danger\", \"Không có dữ liệu\");\n  //       } catch (error) {\n  //         showNoti(\"danger\", error.message);\n  //       } finally {\n  //         setReloadContent(false);\n  //       }\n  //     })();\n  //   }\n  // }, [reloadContent]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-create-question\",\n    children: visible && loadingForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 5\n    }, this) : visible && /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      layout: \"vertical\",\n      onFinish: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12\",\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"Question\",\n              label: \"N\\u1ED9i dung\",\n              children: /*#__PURE__*/_jsxDEV(Editor, {\n                exerciseList: dataExercise,\n                deleteAllQuestion: deleteAllQuestion,\n                deleteSingleQuestion: quesID => deleteSingleQuestion(quesID),\n                handleChange: value => getDataEditor(value),\n                isReset: isResetEditor,\n                questionContent: questionDataForm === null || questionDataForm === void 0 ? void 0 : questionDataForm.Paragraph,\n                questionData: questionDataForm,\n                addQuestion: inputID => addQuestion(inputID),\n                visible: visible\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12\",\n            style: {\n              borderLeft: '2px dotted #dbdbdb'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"style-label\",\n              style: {\n                textDecoration: 'underline'\n              },\n              children: \"\\u0110\\xE1p \\xE1n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 10\n            }, this), questionDataForm === null || questionDataForm === void 0 ? void 0 : (_questionDataForm$Exe3 = questionDataForm.ExerciseList) === null || _questionDataForm$Exe3 === void 0 ? void 0 : _questionDataForm$Exe3.map((itemQues, index) => {\n              var _itemQues$ExerciseAns;\n\n              return itemQues.Enable && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mt-4\",\n                  style: {\n                    fontWeight: 500,\n                    color: '#525252'\n                  },\n                  children: returnIndexQuestion(itemQues)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 14\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Th\\xEAm \\u0111\\xE1p \\xE1n\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-add-answer\",\n                    onClick: () => handleAddAnswer(itemQues.inputID),\n                    children: /*#__PURE__*/_jsxDEV(Plus, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 16\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 14\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: (_itemQues$ExerciseAns = itemQues.ExerciseAnswer) === null || _itemQues$ExerciseAns === void 0 ? void 0 : _itemQues$ExerciseAns.map((itemAns, index) => itemAns.Enable && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6 col-12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row-ans mt-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                        className: \"mb-0\",\n                        children: /*#__PURE__*/_jsxDEV(Input, {\n                          value: itemAns.AnswerContent,\n                          className: \"style-input\",\n                          onChange: e => onChange_text(e, itemAns.ID, itemQues.inputID)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 411,\n                          columnNumber: 21\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 410,\n                        columnNumber: 20\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"delete-ans\",\n                        onClick: () => deleteAnswerItem(itemAns.ID, itemQues.inputID),\n                        children: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 418,\n                          columnNumber: 21\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 417,\n                        columnNumber: 20\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 19\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 18\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 14\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 13\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 3\n  }, this);\n};\n\nexport default TypingForm;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/QuestionBank/QuestionFormType/TypingForm.tsx"],"names":["CloseOutlined","Form","Input","Spin","Tooltip","React","useEffect","useState","Plus","useForm","exerciseGroupApi","Editor","useWrap","AnsID","QuesID","TypingForm","props","isSubmit","questionData","changeIsSubmit","visible","showNoti","handleSubmit","formState","isSubmitting","errors","isSubmitted","form","questionDataForm","setQuestionDataForm","isResetEditor","setIsResetEditor","linkUpload","setLinkUpload","loadingUpload","setLoadingUpload","loadingForm","setLoadingForm","reloadContent","setReloadContent","dataExercise","setDataExercise","onchange_UploadFile","info","file","status","res","UploadAudio","originFileObj","data","error","message","onSubmit","e","getDataEditor","dataEditor","Paragraph","resetForm","Content","ExerciseAnswer","forEach","item","AnswerContent","isTrue","deleteAllQuestion","splice","length","ExerciseList","Enable","deleteSingleQuestion","QuestionID","QuestionIndex","findIndex","inputID","ExerciseIndex","isAdd","console","log","addQuestion","objAns","ExerciseGroupID","ID","SubjectID","SubjectName","DescribeAnswer","Level","LevelName","LinkAudio","Type","TypeName","push","handleAddAnswer","questionID","every","onChange_text","AnswerID","text","target","value","AnswerIndex","deleteAnswerItem","handleSubmitQuestion","newData","JSON","parse","stringify","index","ans","ind","update","handleSubmitChange","dataSubmit","cloneParagraph","indexInput","parseInt","toString","replace","setTimeout","returnIndexQuestion","itemQues","title","ex","dataGroupDetail","id","getWithID","reloadNewContent","filterExerciseList","filter","quesID","borderLeft","textDecoration","map","fontWeight","color","itemAns"],"mappings":"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","sourcesContent":["import { CloseOutlined } from '@ant-design/icons'\r\nimport { Form, Input, Spin, Tooltip } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Plus } from 'react-feather'\r\nimport { useForm } from 'react-hook-form'\r\nimport { exerciseGroupApi } from '~/apiBase/'\r\nimport Editor from '~/components/Elements/Editor'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nlet AnsID = 0\r\nlet QuesID = -1\r\n\r\nconst TypingForm = (props) => {\r\n\tconst { isSubmit, questionData, changeIsSubmit, visible } = props\r\n\tconst { showNoti } = useWrap()\r\n\tconst {\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, errors, isSubmitted }\r\n\t} = useForm()\r\n\tconst [form] = Form.useForm()\r\n\tconst [questionDataForm, setQuestionDataForm] = useState(null)\r\n\tconst [isResetEditor, setIsResetEditor] = useState(false)\r\n\tconst [linkUpload, setLinkUpload] = useState(null)\r\n\tconst [loadingUpload, setLoadingUpload] = useState(false)\r\n\tconst [loadingForm, setLoadingForm] = useState(false)\r\n\tconst [reloadContent, setReloadContent] = useState(false)\r\n\tconst [dataExercise, setDataExercise] = useState([])\r\n\r\n\t// Upload file audio\r\n\tconst onchange_UploadFile = async (info) => {\r\n\t\t// console.log(\"Info File upload: \", info);\r\n\t\tif (info.file.status === 'uploading') {\r\n\t\t\tsetLoadingUpload(true)\r\n\t\t\treturn\r\n\t\t}\r\n\t\tsetLoadingUpload(true)\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseGroupApi.UploadAudio(info.file.originFileObj)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetLinkUpload(res.data.data)\r\n\t\t\t\tshowNoti('success', 'Upload file thành công')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingUpload(false)\r\n\t\t}\r\n\t}\r\n\r\n\t// SUBMI FORM\r\n\tconst onSubmit = handleSubmit((data: any, e) => {\r\n\t\t// console.log(\"DATA SUBMIT: \", data);\r\n\t})\r\n\r\n\t// GET VALUE IN EDITOR\r\n\tconst getDataEditor = (dataEditor) => {\r\n\t\tif (questionDataForm) {\r\n\t\t\tquestionDataForm.Paragraph = dataEditor\r\n\t\t}\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// Reset value in form\r\n\tconst resetForm = () => {\r\n\t\tquestionDataForm.Content = ''\r\n\t\tquestionDataForm.ExerciseAnswer.forEach((item) => {\r\n\t\t\titem.AnswerContent = ''\r\n\t\t\titem.isTrue = false\r\n\t\t})\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// HANDLE DELETE ALL QUESTION\r\n\tconst deleteAllQuestion = () => {\r\n\t\tdataExercise?.splice(0, dataExercise.length)\r\n\t\tquestionDataForm?.ExerciseList?.forEach((item) => {\r\n\t\t\titem.Enable = false\r\n\t\t})\r\n\r\n\t\tsetDataExercise([...dataExercise])\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// HANDLE DELETE QUESTION\r\n\tconst deleteSingleQuestion = (QuestionID) => {\r\n\t\tlet QuestionIndex = questionDataForm.ExerciseList.findIndex((item) => item.inputID == QuestionID)\r\n\t\tlet ExerciseIndex = dataExercise.findIndex((item) => item.inputID == QuestionID)\r\n\r\n\t\tdataExercise.splice(ExerciseIndex, 1)\r\n\r\n\t\tif (questionDataForm.ExerciseList[QuestionIndex]) {\r\n\t\t\tif (questionDataForm.ExerciseList[QuestionIndex].isAdd) {\r\n\t\t\t\tquestionDataForm.ExerciseList.splice(QuestionIndex, 1)\r\n\t\t\t} else {\r\n\t\t\t\tquestionDataForm.ExerciseList[QuestionIndex].Enable = false\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log('Câu hỏi không tồn tại')\r\n\t\t}\r\n\r\n\t\tsetDataExercise([...dataExercise])\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// HANDLE ADD QUESTION\r\n\tconst addQuestion = (inputID) => {\r\n\t\tAnsID++\r\n\t\tlet objAns = {\r\n\t\t\t// ID: inputID,\r\n\t\t\tinputID: inputID,\r\n\t\t\tContent: '',\r\n\t\t\tExerciseGroupID: questionDataForm.ID,\r\n\t\t\tSubjectID: questionDataForm.SubjectID,\r\n\t\t\tSubjectName: questionDataForm.SubjectName,\r\n\t\t\tDescribeAnswer: '',\r\n\t\t\tLevel: questionDataForm.Level,\r\n\t\t\tLevelName: questionDataForm.LevelName,\r\n\t\t\tLinkAudio: null,\r\n\t\t\tType: questionDataForm.Type,\r\n\t\t\tTypeName: questionDataForm.TypeName,\r\n\t\t\tisAdd: true,\r\n\t\t\tEnable: true,\r\n\t\t\tExerciseAnswer: [\r\n\t\t\t\t{\r\n\t\t\t\t\tID: AnsID,\r\n\t\t\t\t\tAnswerContent: '',\r\n\t\t\t\t\tisTrue: true,\r\n\t\t\t\t\tEnable: true,\r\n\t\t\t\t\tisAdd: true\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t\tquestionDataForm.ExerciseList.push(objAns)\r\n\t\tdataExercise.push(objAns)\r\n\r\n\t\tsetDataExercise([...dataExercise])\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// ====== HANDLE ADD ANSWER ======\r\n\tconst handleAddAnswer = (questionID: number) => {\r\n\t\tAnsID++\r\n\t\tquestionDataForm.ExerciseList.every((item) => {\r\n\t\t\tif (item.inputID == questionID) {\r\n\t\t\t\titem.ExerciseAnswer.push({\r\n\t\t\t\t\tID: AnsID,\r\n\t\t\t\t\tAnswerContent: '',\r\n\t\t\t\t\tisTrue: true,\r\n\t\t\t\t\tEnable: true,\r\n\t\t\t\t\tisAdd: true\r\n\t\t\t\t})\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// ====== ON CHANGE TEXT ======\r\n\tconst onChange_text = (e: any, AnswerID: number, QuestionID) => {\r\n\t\t// - Get value\r\n\t\tlet text = e.target.value\r\n\r\n\t\t// - Get question index\r\n\t\tlet QuestionIndex = questionDataForm?.ExerciseList?.findIndex((item) => item.inputID == QuestionID)\r\n\r\n\t\t// - Get answer index\r\n\t\tlet AnswerIndex = questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex((item) => item.ID == AnswerID)\r\n\r\n\t\t// - add text\r\n\t\tquestionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].AnswerContent = text\r\n\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// ====== DELETE ANSWER ======\r\n\tconst deleteAnswerItem = (AnswerID: number, QuestionID: number) => {\r\n\t\t// - Get question index\r\n\t\tlet QuestionIndex = questionDataForm.ExerciseList.findIndex((item) => item.inputID == QuestionID)\r\n\r\n\t\t// - Get answer index\r\n\t\tlet AnswerIndex = questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex((item) => item.ID == AnswerID)\r\n\r\n\t\t// Action delete\r\n\t\tif (questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].isAdd) {\r\n\t\t\tquestionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.splice(AnswerIndex, 1)\r\n\t\t} else {\r\n\t\t\tquestionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].Enable = false\r\n\t\t}\r\n\r\n\t\t// setAnswerList([...answerList]);\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// SUBMIT FORM\r\n\tconst handleSubmitQuestion = async () => {\r\n\t\tlet res = null\r\n\r\n\t\tlet newData = JSON.parse(JSON.stringify(questionDataForm))\r\n\r\n\t\t// custom data\r\n\t\tnewData.ExerciseList.forEach((item, index) => {\r\n\t\t\titem.ExerciseAnswer.forEach((ans, ind) => {\r\n\t\t\t\tif (ans.isAdd) {\r\n\t\t\t\t\tdelete ans.ID\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tif (questionDataForm.ExerciseGroupID) {\r\n\t\t\tnewData.ID = questionDataForm.ExerciseGroupID\r\n\t\t}\r\n\r\n\t\tnewData.ExerciseGroupID = null\r\n\r\n\t\t// ----------\r\n\r\n\t\ttry {\r\n\t\t\tres = await exerciseGroupApi.update(newData)\r\n\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\thandleSubmitChange(res.data.data)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t}\r\n\t}\r\n\r\n\t// SUBMIT AND CHANGE PARAGRAPH\r\n\tconst handleSubmitChange = async (dataSubmit) => {\r\n\t\tconsole.log('Data Submit: ', dataSubmit)\r\n\t\tlet res = null\r\n\r\n\t\tlet cloneParagraph = dataSubmit.Paragraph\r\n\r\n\t\tconsole.log('Lúc đầu: ', cloneParagraph)\r\n\r\n\t\tdataSubmit.ExerciseList.forEach((item, index) => {\r\n\t\t\tlet indexInput: any = parseInt(item.inputID) + 1\r\n\t\t\tindexInput = indexInput.toString()\r\n\t\t\tcloneParagraph = cloneParagraph.replace(\r\n\t\t\t\t`<input id=\"${item.inputID}\" class=\"space-editor\" placeholder=\"(${indexInput})\">`,\r\n\t\t\t\t`<div ques-id=\"${item.ID}\" id=\"${indexInput}\" class='space-editor' role='textbox' aria-labelledby='txtboxLabel' aria-multiline='true' contentEditable=\"true\">(${indexInput})</div>`\r\n\t\t\t)\r\n\t\t\tconsole.log('Coi thử nha: ', `<input id=\"${item.inputID}\" class=\"space-editor\" placeholder=\"(${indexInput})\">`)\r\n\t\t})\r\n\r\n\t\tconsole.log('Lúc sau: ', cloneParagraph)\r\n\r\n\t\tdataSubmit.Paragraph = cloneParagraph\r\n\r\n\t\t// ----------\r\n\r\n\t\ttry {\r\n\t\t\tres = await exerciseGroupApi.update(dataSubmit)\r\n\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tchangeIsSubmit(res.data.data)\r\n\t\t\t\tif (!questionDataForm.ID) {\r\n\t\t\t\t\tresetForm()\r\n\t\t\t\t}\r\n\t\t\t\tshowNoti('success', `Tạo câu hỏi thành công`)\r\n\t\t\t\tsetIsResetEditor(true)\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetIsResetEditor(false)\r\n\t\t\t\t}, 500)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t}\r\n\t}\r\n\r\n\t//RETURN INDEX QUESTION - Trả về thứ tự của từng câu hỏi\r\n\tconst returnIndexQuestion = (itemQues) => {\r\n\t\tlet title = ''\r\n\t\tlet index = dataExercise.findIndex((ex) => ex.inputID == itemQues.inputID)\r\n\t\ttitle = `Câu (${index + 1})`\r\n\t\treturn title\r\n\t}\r\n\r\n\t// GET GROUP DETAIL DATA\r\n\tconst dataGroupDetail = async () => {\r\n\t\tsetLoadingForm(true)\r\n\r\n\t\tlet id = null\r\n\t\tif (questionData.ID) {\r\n\t\t\tid = questionData.ID\r\n\t\t} else {\r\n\t\t\tid = questionData.ExerciseGroupID\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseGroupApi.getWithID(id)\r\n\t\t\tres.status == 200 && reloadNewContent(res.data.data)\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu')\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingForm(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst reloadNewContent = (data) => {\r\n\t\tlet filterExerciseList = data.ExerciseList.filter((item) => item.Enable !== false)\r\n\t\tdata.ExerciseList = [...filterExerciseList]\r\n\r\n\t\tsetDataExercise([...filterExerciseList])\r\n\t\tsetQuestionDataForm({ ...data })\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isSubmit) {\r\n\t\t\thandleSubmitQuestion()\r\n\t\t\treturn\r\n\t\t}\r\n\t}, [isSubmit])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (visible) {\r\n\t\t\tdataGroupDetail()\r\n\t\t}\r\n\t}, [visible])\r\n\r\n\t// useEffect(() => {\r\n\t//   if (reloadContent) {\r\n\t//     (async function loadData() {\r\n\t//       try {\r\n\t//         let res = await exerciseGroupApi.getWithID(questionDataForm.ID);\r\n\r\n\t//         if (res.status == 200) {\r\n\t//           changeIsSubmit(res.data.data);\r\n\t//           showNoti(\"success\", `Thành công`);\r\n\t//           if (!questionDataForm.ID) {\r\n\t//             resetForm();\r\n\t//           }\r\n\t//           setIsResetEditor(true);\r\n\r\n\t//           setTimeout(() => {\r\n\t//             setIsResetEditor(false);\r\n\t//           }, 500);\r\n\t//         }\r\n\r\n\t//         res.status == 204 && showNoti(\"danger\", \"Không có dữ liệu\");\r\n\t//       } catch (error) {\r\n\t//         showNoti(\"danger\", error.message);\r\n\t//       } finally {\r\n\t//         setReloadContent(false);\r\n\t//       }\r\n\t//     })();\r\n\t//   }\r\n\t// }, [reloadContent]);\r\n\r\n\treturn (\r\n\t\t<div className=\"form-create-question\">\r\n\t\t\t{visible && loadingForm ? (\r\n\t\t\t\t<div className=\"w-100 text-center mt-3\">\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<Form form={form} layout=\"vertical\" onFinish={onSubmit}>\r\n\t\t\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-12\">\r\n\t\t\t\t\t\t\t\t\t<Form.Item name=\"Question\" label=\"Nội dung\">\r\n\t\t\t\t\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\t\t\t\t\texerciseList={dataExercise}\r\n\t\t\t\t\t\t\t\t\t\t\tdeleteAllQuestion={deleteAllQuestion}\r\n\t\t\t\t\t\t\t\t\t\t\tdeleteSingleQuestion={(quesID: number) => deleteSingleQuestion(quesID)}\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange={(value: string) => getDataEditor(value)}\r\n\t\t\t\t\t\t\t\t\t\t\tisReset={isResetEditor}\r\n\t\t\t\t\t\t\t\t\t\t\tquestionContent={questionDataForm?.Paragraph}\r\n\t\t\t\t\t\t\t\t\t\t\tquestionData={questionDataForm}\r\n\t\t\t\t\t\t\t\t\t\t\taddQuestion={(inputID: number) => addQuestion(inputID)}\r\n\t\t\t\t\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t\t\t\t\t\t{/* <Form.Item label=\"Tải lên link Audio\">\r\n\t\t\t\t\t\t\t\t\t\t<Upload onChange={onchange_UploadFile} showUploadList={false}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-block\">{loadingUpload ? <Spin /> : linkUpload && linkUpload}</div>\r\n\t\t\t\t\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t\t\t\t</Form.Item> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-12\" style={{ borderLeft: '2px dotted #dbdbdb' }}>\r\n\t\t\t\t\t\t\t\t\t<p className=\"style-label\" style={{ textDecoration: 'underline' }}>\r\n\t\t\t\t\t\t\t\t\t\tĐáp án\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t{questionDataForm?.ExerciseList?.map(\r\n\t\t\t\t\t\t\t\t\t\t(itemQues, index) =>\r\n\t\t\t\t\t\t\t\t\t\t\titemQues.Enable && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"mt-4\" style={{ fontWeight: 500, color: '#525252' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{returnIndexQuestion(itemQues)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* {`Câu (${index + 1})`} */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Thêm đáp án\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn-add-answer\" onClick={() => handleAddAnswer(itemQues.inputID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Plus />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{itemQues.ExerciseAnswer?.map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(itemAns, index) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titemAns.Enable && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-12\" key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row-ans mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item className=\"mb-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={itemAns.AnswerContent}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => onChange_text(e, itemAns.ID, itemQues.inputID)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></Input>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"delete-ans\" onClick={() => deleteAnswerItem(itemAns.ID, itemQues.inputID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TypingForm\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\ExamList\\\\ExamShow\\\\MultipleList.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Checkbox, Popconfirm, Tooltip } from 'antd';\nimport { Trash2 } from 'react-feather';\nimport { examDetailApi } from '~/apiBase';\nimport { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]';\nimport { useWrap } from '~/context/wrap';\nimport EditPoint from '../ExamForm/EditPoint';\nimport ChangePosition from '../ExamForm/ChangePosition';\nimport { useDoingTest } from '~/context/useDoingTest';\nimport { useDoneTest } from '~/context/useDoneTest';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\n\nvar MultipleList = function MultipleList(props) {\n  _s();\n\n  var _useExamDetail = useExamDetail(),\n      onDeleteQuestion = _useExamDetail.onDeleteQuestion,\n      isChangePosition = _useExamDetail.isChangePosition;\n\n  var _useDoneTest = useDoneTest(),\n      doneTestData = _useDoneTest.doneTestData;\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var dataQuestion = props.dataQuestion,\n      listAlphabet = props.listAlphabet,\n      listQuestionID = props.listQuestionID,\n      isDoingTest = props.isDoingTest,\n      arPosition = props.arPosition,\n      handleChange = props.handleChange,\n      addOldItem = props.addOldItem;\n\n  var _useState = useState(false),\n      confirmLoading = _useState[0],\n      setConfirmLoading = _useState[1];\n\n  var _useState2 = useState({\n    id: null,\n    status: false\n  }),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useDoingTest = useDoingTest(),\n      activeID = _useDoingTest.activeID,\n      getActiveID = _useDoingTest.getActiveID,\n      packageResult = _useDoingTest.packageResult,\n      getPackageResult = _useDoingTest.getPackageResult,\n      getListPicked = _useDoingTest.getListPicked;\n\n  var _useState3 = useState([]),\n      ansTrue = _useState3[0],\n      setAnsTrue = _useState3[1];\n\n  var returnPosition = function returnPosition(quesID) {\n    var index = listQuestionID.indexOf(quesID);\n    var text = 'Câu ' + (index + 1).toString();\n    return text;\n  }; // Chấp nhận xóa câu hỏi\n\n\n  var handleOk = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(quesItem) {\n      var itemDelete, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              itemDelete = {\n                ID: dataQuestion.ID,\n                Enable: false,\n                ExerciseOrExerciseGroup: [{\n                  Point: quesItem.Point,\n                  ExerciseOrExerciseGroupID: quesItem.ExerciseID\n                }]\n              };\n              setConfirmLoading(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return examDetailApi.update(itemDelete);\n\n            case 5:\n              res = _context.sent;\n\n              if (res.status == 200) {\n                onDeleteQuestion(itemDelete);\n                showNoti('success', 'Xóa thành công');\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              showNoti('danger', _context.t0.message);\n\n            case 12:\n              _context.prev = 12;\n              setConfirmLoading(false);\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9, 12, 15]]);\n    }));\n\n    return function handleOk(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // Handle cancel popup delte\n\n\n  var handleCancel = function handleCancel(quesID) {\n    setVisible({\n      id: quesID,\n      status: false\n    });\n  };\n\n  var deleteQuestionItem = function deleteQuestionItem(quesID) {\n    !visible.status ? setVisible({\n      id: quesID,\n      status: true\n    }) : setVisible({\n      id: quesID,\n      status: false\n    });\n  }; // ----------- ALL ACTION IN DOINGTEST -------------\n\n\n  var returnChecked = function returnChecked(ansID, quesID) {\n    if (!doneTestData) {\n      var checked = false; // Find Index\n\n      var indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex(function (item) {\n        return item.ExamTopicDetailID === dataQuestion.ID;\n      });\n      var indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(function (item) {\n        return item.ExerciseID === quesID;\n      }); // Find anh return checked\n\n      if (packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList.some(function (object) {\n        return object['AnswerID'] === ansID;\n      })) {\n        checked = true;\n      }\n\n      return checked;\n    }\n  };\n\n  var onChange_selectAnswer = function onChange_selectAnswer(dataAns, quesID) {\n    getActiveID(quesID);\n    getListPicked(quesID);\n    ansTrue.every(function (item) {\n      if (item.questionID === quesID) {\n        item.yourTotal = item.yourTotal + 1;\n        return false;\n      }\n\n      return true;\n    });\n    setAnsTrue(_toConsumableArray(ansTrue)); // Find index\n\n    var indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex(function (item) {\n      return item.ExamTopicDetailID === dataQuestion.ID;\n    });\n    var indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(function (item) {\n      return item.ExerciseID === quesID;\n    });\n    var indexAnswer = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList.findIndex(function (item) {\n      return item.AnswerID === dataAns.ID;\n    });\n\n    if (indexAnswer > -1) {\n      packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList.splice(indexAnswer, 1);\n    } else {\n      // Add new answer to list\n      packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList.push({\n        AnswerID: dataAns.ID,\n        AnswerContent: dataAns.AnswerContent,\n        FileAudio: ''\n      });\n    }\n\n    getPackageResult(_objectSpread({}, packageResult));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dataQuestion.ExerciseTopic.map(function (ques, ind) {\n      var _ques$ExerciseAnswer;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-item \".concat(ques.ExerciseID === activeID ? 'active-doing' : ''),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title-ques \",\n              children: returnPosition(ques.ExerciseID)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 8\n            }, _this), ques.LinkAudio !== '' && ques.LinkAudio !== null && /*#__PURE__*/_jsxDEV(\"audio\", {\n              controls: true,\n              children: /*#__PURE__*/_jsxDEV(\"source\", {\n                src: ques.LinkAudio,\n                type: \"audio/mpeg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title-text\",\n              children: ReactHtmlParser(ques.Content)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 8\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-answer\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-single question-wrap w-100\",\n              children: (_ques$ExerciseAnswer = ques.ExerciseAnswer) === null || _ques$ExerciseAnswer === void 0 ? void 0 : _ques$ExerciseAnswer.map(function (ans, i) {\n                return /*#__PURE__*/_jsxDEV(Checkbox, {\n                  className: \"d-block\",\n                  checked: !doneTestData ? !isDoingTest ? false : returnChecked(ans.ID, ques.ExerciseID) : ans.AnswerID !== 0 ? true : false,\n                  onChange: function onChange(e) {\n                    return onChange_selectAnswer(ans, ques.ExerciseID);\n                  },\n                  disabled: !isDoingTest ? true : doneTestData ? true : false,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tick\",\n                    children: listAlphabet[i]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 11\n                  }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text\",\n                    style: {\n                      color: doneTestData ? ans.isTrue ? 'green' : ans.AnswerID !== 0 && 'red' : 'inherit'\n                    },\n                    children: !doneTestData ? ans.AnswerContent : ans.ExerciseAnswerContent\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 11\n                  }, _this), doneTestData && ans.AnswerID !== 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"icon-check \".concat(ans.isTrue ? 'right' : 'wrong'),\n                    children: ans.isTrue ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 27\n                    }, _this) : /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 47\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 12\n                  }, _this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 10\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 8\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 6\n        }, _this), dataQuestion.ExerciseGroupID == 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-action\",\n          children: [!doneTestData && !isDoingTest && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [!isChangePosition && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(EditPoint, {\n                quesItem: ques,\n                dataQuestion: dataQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 12\n              }, _this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n                title: \"B\\u1EA1n c\\xF3 ch\\u1EAFc mu\\u1ED1n x\\xF3a?\",\n                onConfirm: function onConfirm() {\n                  return handleOk(ques);\n                },\n                okButtonProps: {\n                  loading: confirmLoading\n                },\n                onCancel: function onCancel() {\n                  return handleCancel(ques.ID);\n                },\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"X\\xF3a c\\xE2u h\\u1ECFi\",\n                  placement: \"rightTop\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-icon delete\",\n                    onClick: function onClick() {\n                      return deleteQuestionItem(ques.ID);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 15\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 14\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 13\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 12\n              }, _this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(ChangePosition, {\n              dataQuestion: dataQuestion,\n              arPosition: arPosition,\n              questionID: dataQuestion.ID,\n              handleChange: handleChange,\n              addOldItem: addOldItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 10\n            }, _this)]\n          }, void 0, true), !isChangePosition && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"point-question mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text\",\n              children: ques.Point\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 10\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 7\n        }, _this)]\n      }, ind, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, _this);\n    })\n  }, void 0, false);\n};\n\n_s(MultipleList, \"LF3V10iDA8/ktKnIL+qqoJ52e0E=\", false, function () {\n  return [useExamDetail, useDoneTest, useWrap, useDoingTest];\n});\n\n_c = MultipleList;\nexport default MultipleList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleList\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/ExamList/ExamShow/MultipleList.tsx"],"names":["React","useState","ReactHtmlParser","Checkbox","Popconfirm","Tooltip","Trash2","examDetailApi","useExamDetail","useWrap","EditPoint","ChangePosition","useDoingTest","useDoneTest","CheckOutlined","CloseOutlined","MultipleList","props","onDeleteQuestion","isChangePosition","doneTestData","showNoti","dataQuestion","listAlphabet","listQuestionID","isDoingTest","arPosition","handleChange","addOldItem","confirmLoading","setConfirmLoading","id","status","visible","setVisible","activeID","getActiveID","packageResult","getPackageResult","getListPicked","ansTrue","setAnsTrue","returnPosition","quesID","index","indexOf","text","toString","handleOk","quesItem","itemDelete","ID","Enable","ExerciseOrExerciseGroup","Point","ExerciseOrExerciseGroupID","ExerciseID","update","res","message","handleCancel","deleteQuestionItem","returnChecked","ansID","checked","indexQuestion","SetPackageResultDetailInfoList","findIndex","item","ExamTopicDetailID","indexQuestionDetail","SetPackageExerciseStudentInfoList","SetPackageExerciseAnswerStudentList","some","object","onChange_selectAnswer","dataAns","every","questionID","yourTotal","indexAnswer","AnswerID","splice","push","AnswerContent","FileAudio","ExerciseTopic","map","ques","ind","LinkAudio","Content","ExerciseAnswer","ans","i","e","color","isTrue","ExerciseAnswerContent","ExerciseGroupID","loading"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { Checkbox, Popconfirm, Tooltip } from 'antd'\r\nimport { Trash2 } from 'react-feather'\r\nimport { examDetailApi } from '~/apiBase'\r\nimport { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]'\r\nimport { useWrap } from '~/context/wrap'\r\nimport EditPoint from '../ExamForm/EditPoint'\r\nimport ChangePosition from '../ExamForm/ChangePosition'\r\nimport { useDoingTest } from '~/context/useDoingTest'\r\nimport { useDoneTest } from '~/context/useDoneTest'\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons'\r\n\r\ntype ansTrue = {\r\n\tquestionID: number\r\n\ttotalAnsTrue: number\r\n\tyourTotal: number\r\n}\r\n\r\nconst MultipleList = (props) => {\r\n\tconst { onDeleteQuestion, isChangePosition } = useExamDetail()\r\n\tconst { doneTestData } = useDoneTest()\r\n\tconst { showNoti } = useWrap()\r\n\tconst { dataQuestion, listAlphabet, listQuestionID, isDoingTest, arPosition, handleChange, addOldItem } = props\r\n\tconst [confirmLoading, setConfirmLoading] = useState(false)\r\n\tconst [visible, setVisible] = useState({\r\n\t\tid: null,\r\n\t\tstatus: false\r\n\t})\r\n\tconst { activeID, getActiveID, packageResult, getPackageResult, getListPicked } = useDoingTest()\r\n\tconst [ansTrue, setAnsTrue] = useState<ansTrue[]>([])\r\n\r\n\tconst returnPosition = (quesID) => {\r\n\t\tlet index = listQuestionID.indexOf(quesID)\r\n\t\tlet text = 'Câu ' + (index + 1).toString()\r\n\t\treturn text\r\n\t}\r\n\r\n\t// Chấp nhận xóa câu hỏi\r\n\tconst handleOk = async (quesItem) => {\r\n\t\tlet itemDelete = {\r\n\t\t\tID: dataQuestion.ID,\r\n\t\t\tEnable: false,\r\n\t\t\tExerciseOrExerciseGroup: [\r\n\t\t\t\t{\r\n\t\t\t\t\tPoint: quesItem.Point,\r\n\t\t\t\t\tExerciseOrExerciseGroupID: quesItem.ExerciseID\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\tsetConfirmLoading(true)\r\n\t\ttry {\r\n\t\t\tlet res = await examDetailApi.update(itemDelete)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tonDeleteQuestion(itemDelete)\r\n\t\t\t\tshowNoti('success', 'Xóa thành công')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetConfirmLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\t// Handle cancel popup delte\r\n\tconst handleCancel = (quesID) => {\r\n\t\tsetVisible({\r\n\t\t\tid: quesID,\r\n\t\t\tstatus: false\r\n\t\t})\r\n\t}\r\n\r\n\tconst deleteQuestionItem = (quesID) => {\r\n\t\t!visible.status\r\n\t\t\t? setVisible({\r\n\t\t\t\t\tid: quesID,\r\n\t\t\t\t\tstatus: true\r\n\t\t\t  })\r\n\t\t\t: setVisible({\r\n\t\t\t\t\tid: quesID,\r\n\t\t\t\t\tstatus: false\r\n\t\t\t  })\r\n\t}\r\n\r\n\t// ----------- ALL ACTION IN DOINGTEST -------------\r\n\tconst returnChecked = (ansID, quesID) => {\r\n\t\tif (!doneTestData) {\r\n\t\t\tlet checked = false\r\n\t\t\t// Find Index\r\n\t\t\tlet indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex((item) => item.ExamTopicDetailID === dataQuestion.ID)\r\n\t\t\tlet indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(\r\n\t\t\t\t(item) => item.ExerciseID === quesID\r\n\t\t\t)\r\n\t\t\t// Find anh return checked\r\n\t\t\tif (\r\n\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\t\t\tindexQuestionDetail\r\n\t\t\t\t].SetPackageExerciseAnswerStudentList.some((object) => object['AnswerID'] === ansID)\r\n\t\t\t) {\r\n\t\t\t\tchecked = true\r\n\t\t\t}\r\n\t\t\treturn checked\r\n\t\t}\r\n\t}\r\n\r\n\tconst onChange_selectAnswer = (dataAns, quesID) => {\r\n\t\tgetActiveID(quesID)\r\n\t\tgetListPicked(quesID)\r\n\t\tansTrue.every((item) => {\r\n\t\t\tif (item.questionID === quesID) {\r\n\t\t\t\titem.yourTotal = item.yourTotal + 1\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t\tsetAnsTrue([...ansTrue])\r\n\t\t// Find index\r\n\t\tlet indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex((item) => item.ExamTopicDetailID === dataQuestion.ID)\r\n\t\tlet indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(\r\n\t\t\t(item) => item.ExerciseID === quesID\r\n\t\t)\r\n\t\tlet indexAnswer = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\tindexQuestionDetail\r\n\t\t].SetPackageExerciseAnswerStudentList.findIndex((item) => item.AnswerID === dataAns.ID)\r\n\t\tif (indexAnswer > -1) {\r\n\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\t\tindexQuestionDetail\r\n\t\t\t].SetPackageExerciseAnswerStudentList.splice(indexAnswer, 1)\r\n\t\t} else {\r\n\t\t\t// Add new answer to list\r\n\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\t\tindexQuestionDetail\r\n\t\t\t].SetPackageExerciseAnswerStudentList.push({\r\n\t\t\t\tAnswerID: dataAns.ID,\r\n\t\t\t\tAnswerContent: dataAns.AnswerContent,\r\n\t\t\t\tFileAudio: ''\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tgetPackageResult({ ...packageResult })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{dataQuestion.ExerciseTopic.map((ques, ind) => (\r\n\t\t\t\t<div className={`question-item ${ques.ExerciseID === activeID ? 'active-doing' : ''}`} key={ind}>\r\n\t\t\t\t\t<div className=\"box-detail\">\r\n\t\t\t\t\t\t<div className=\"box-title\">\r\n\t\t\t\t\t\t\t<span className={`title-ques `}>{returnPosition(ques.ExerciseID)}</span>\r\n\t\t\t\t\t\t\t{ques.LinkAudio !== '' && ques.LinkAudio !== null && (\r\n\t\t\t\t\t\t\t\t<audio controls>\r\n\t\t\t\t\t\t\t\t\t<source src={ques.LinkAudio} type=\"audio/mpeg\" />\r\n\t\t\t\t\t\t\t\t</audio>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div className=\"title-text\">{ReactHtmlParser(ques.Content)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"box-answer\">\r\n\t\t\t\t\t\t\t<div className=\"question-single question-wrap w-100\">\r\n\t\t\t\t\t\t\t\t{ques.ExerciseAnswer?.map((ans, i) => (\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"d-block\"\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tchecked={\r\n\t\t\t\t\t\t\t\t\t\t\t!doneTestData ? (!isDoingTest ? false : returnChecked(ans.ID, ques.ExerciseID)) : ans.AnswerID !== 0 ? true : false\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onChange_selectAnswer(ans, ques.ExerciseID)}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={!isDoingTest ? true : doneTestData ? true : false}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"tick\">{listAlphabet[i]}</span>\r\n\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: doneTestData ? (ans.isTrue ? 'green' : ans.AnswerID !== 0 && 'red') : 'inherit'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{!doneTestData ? ans.AnswerContent : ans.ExerciseAnswerContent}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t{doneTestData && ans.AnswerID !== 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t<span className={`icon-check ${ans.isTrue ? 'right' : 'wrong'}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{ans.isTrue ? <CheckOutlined /> : <CloseOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{dataQuestion.ExerciseGroupID == 0 && (\r\n\t\t\t\t\t\t<div className=\"box-action\">\r\n\t\t\t\t\t\t\t{!doneTestData && !isDoingTest && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{!isChangePosition && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<EditPoint quesItem={ques} dataQuestion={dataQuestion} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Bạn có chắc muốn xóa?\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleOk(ques)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tokButtonProps={{ loading: confirmLoading }}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonCancel={() => handleCancel(ques.ID)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Xóa câu hỏi\" placement=\"rightTop\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-icon delete\" onClick={() => deleteQuestionItem(ques.ID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Trash2 />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<ChangePosition\r\n\t\t\t\t\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\t\t\t\t\tarPosition={arPosition}\r\n\t\t\t\t\t\t\t\t\t\tquestionID={dataQuestion.ID}\r\n\t\t\t\t\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\taddOldItem={addOldItem}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{!isChangePosition && (\r\n\t\t\t\t\t\t\t\t<div className=\"point-question mt-2\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"text\">{ques.Point}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default MultipleList\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\NewsFeed\\\\NewsFeedItemComponents\\\\Comment.tsx\";\nimport { Spin } from 'antd';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { fmDateFromNow } from '~/utils/functions';\nimport CommentForm from './CommentForm';\nimport ReplyComment from './ReplyComment';\nComment.propTypes = {\n  isLoading: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    status: PropTypes.bool.isRequired\n  }),\n  dataComment: PropTypes.shape({\n    Avatar: PropTypes.string,\n    ID: PropTypes.number,\n    UserInformationID: PropTypes.number,\n    FullNameUnicode: PropTypes.string,\n    NewsFeedID: PropTypes.number,\n    CommentContent: PropTypes.string,\n    isReply: PropTypes.bool\n  }),\n  fetchReplyComment: PropTypes.func,\n  handleReplyComment: PropTypes.func\n};\nComment.defaultProps = {\n  isLoading: {\n    type: '',\n    status: false\n  },\n  dataComment: {\n    Avatar: '',\n    ID: 0,\n    UserInformationID: 0,\n    FullNameUnicode: '',\n    NewsFeedID: 0,\n    CommentContent: '',\n    isReply: false\n  },\n  fetchReplyComment: null,\n  handleReplyComment: null\n};\n\nfunction Comment(props) {\n  const {\n    dataComment,\n    fetchReplyComment,\n    isLoading,\n    handleReplyComment\n  } = props;\n  const {\n    0: addCommentAction,\n    1: setCommentAction\n  } = useState(false);\n  const {\n    0: replyCommentList,\n    1: setReplyCommentList\n  } = useState([]);\n\n  const handleCommentsAction = () => {\n    setCommentAction(!addCommentAction);\n  };\n\n  const checkFetchReplyComment = ID => {\n    if (!fetchReplyComment) return;\n    fetchReplyComment(ID).then(res => {\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        setReplyCommentList(res.data.data);\n      } else {\n        setReplyCommentList([]);\n      }\n    });\n  };\n\n  const checkHandleReplyComment = data => {\n    if (!handleReplyComment) return;\n    return handleReplyComment(data).then(res => {\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        setReplyCommentList([...replyCommentList, res.data.data]);\n        return true;\n      } else {\n        return false;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"item-comment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-current-user\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: dataComment.Avatar || '/images/user.png',\n          alt: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"name-comment font-weight-black\",\n            children: dataComment.FullNameUnicode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this), dataComment.CommentContent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"a-reply\",\n          onClick: handleCommentsAction,\n          children: \"Ph\\u1EA3n h\\u1ED3i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time-comment\",\n          children: fmDateFromNow(dataComment.CreatedOn)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this), replyCommentList.length > 0 && /*#__PURE__*/_jsxDEV(ReplyComment, {\n          replyCommentList: replyCommentList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 38\n        }, this), dataComment.isReply && !replyCommentList.length && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: dataComment.isReply && /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: () => checkFetchReplyComment(dataComment.ID),\n            children: \"Xem c\\xE1c ph\\u1EA3n h\\u1ED3i\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this), addCommentAction && /*#__PURE__*/_jsxDEV(CommentForm, {\n          isReplay: true,\n          newsFeedCommentID: dataComment.ID,\n          handleComment: checkHandleReplyComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this), !replyCommentList.length && dataComment.isReply && isLoading.type === `FETCH_REPLY_COMMENT_${dataComment.ID}` && isLoading.status && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n}\n\nexport default Comment;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/NewsFeed/NewsFeedItemComponents/Comment.tsx"],"names":["Spin","PropTypes","React","useState","fmDateFromNow","CommentForm","ReplyComment","Comment","propTypes","isLoading","shape","type","string","isRequired","status","bool","dataComment","Avatar","ID","number","UserInformationID","FullNameUnicode","NewsFeedID","CommentContent","isReply","fetchReplyComment","func","handleReplyComment","defaultProps","props","addCommentAction","setCommentAction","replyCommentList","setReplyCommentList","handleCommentsAction","checkFetchReplyComment","then","res","data","checkHandleReplyComment","CreatedOn","length"],"mappings":"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","sourcesContent":["import { Spin } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport { fmDateFromNow } from '~/utils/functions';\r\nimport CommentForm from './CommentForm';\r\nimport ReplyComment from './ReplyComment';\r\n\r\nComment.propTypes = {\r\n\tisLoading: PropTypes.shape({\r\n\t\ttype: PropTypes.string.isRequired,\r\n\t\tstatus: PropTypes.bool.isRequired\r\n\t}),\r\n\tdataComment: PropTypes.shape({\r\n\t\tAvatar: PropTypes.string,\r\n\t\tID: PropTypes.number,\r\n\t\tUserInformationID: PropTypes.number,\r\n\t\tFullNameUnicode: PropTypes.string,\r\n\t\tNewsFeedID: PropTypes.number,\r\n\t\tCommentContent: PropTypes.string,\r\n\t\tisReply: PropTypes.bool\r\n\t}),\r\n\tfetchReplyComment: PropTypes.func,\r\n\thandleReplyComment: PropTypes.func\r\n};\r\nComment.defaultProps = {\r\n\tisLoading: { type: '', status: false },\r\n\tdataComment: {\r\n\t\tAvatar: '',\r\n\t\tID: 0,\r\n\t\tUserInformationID: 0,\r\n\t\tFullNameUnicode: '',\r\n\t\tNewsFeedID: 0,\r\n\t\tCommentContent: '',\r\n\t\tisReply: false\r\n\t},\r\n\tfetchReplyComment: null,\r\n\thandleReplyComment: null\r\n};\r\n\r\nfunction Comment(props) {\r\n\tconst { dataComment, fetchReplyComment, isLoading, handleReplyComment } = props;\r\n\tconst [addCommentAction, setCommentAction] = useState(false);\r\n\tconst [replyCommentList, setReplyCommentList] = useState<INewsFeedCommentReply[]>([]);\r\n\r\n\tconst handleCommentsAction = () => {\r\n\t\tsetCommentAction(!addCommentAction);\r\n\t};\r\n\r\n\tconst checkFetchReplyComment = (ID: number) => {\r\n\t\tif (!fetchReplyComment) return;\r\n\t\tfetchReplyComment(ID).then((res) => {\r\n\t\t\tif (res?.status === 200) {\r\n\t\t\t\tsetReplyCommentList(res.data.data);\r\n\t\t\t} else {\r\n\t\t\t\tsetReplyCommentList([]);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\tconst checkHandleReplyComment = (data) => {\r\n\t\tif (!handleReplyComment) return;\r\n\t\treturn handleReplyComment(data).then((res) => {\r\n\t\t\tif (res?.status === 200) {\r\n\t\t\t\tsetReplyCommentList([...replyCommentList, res.data.data]);\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<li className=\"item-comment\">\r\n\t\t\t<div className=\"info-current-user\">\r\n\t\t\t\t<div className=\"avatar\">\r\n\t\t\t\t\t<img src={dataComment.Avatar || '/images/user.png'} alt=\"avatar\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"content-comment\">\r\n\t\t\t\t\t<div className=\"box-comment\">\r\n\t\t\t\t\t\t<p className=\"name-comment font-weight-black\">{dataComment.FullNameUnicode}</p>\r\n\t\t\t\t\t\t{dataComment.CommentContent}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<a className=\"a-reply\" onClick={handleCommentsAction}>\r\n\t\t\t\t\t\tPhản hồi\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<span className=\"time-comment\">{fmDateFromNow(dataComment.CreatedOn)}</span>\r\n\t\t\t\t\t{replyCommentList.length > 0 && <ReplyComment replyCommentList={replyCommentList} />}\r\n\t\t\t\t\t{dataComment.isReply && !replyCommentList.length && (\r\n\t\t\t\t\t\t<div>{dataComment.isReply && <a onClick={() => checkFetchReplyComment(dataComment.ID)}>Xem các phản hồi</a>}</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{addCommentAction && (\r\n\t\t\t\t\t\t<CommentForm isReplay={true} newsFeedCommentID={dataComment.ID} handleComment={checkHandleReplyComment} />\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{!replyCommentList.length &&\r\n\t\t\t\t\t\tdataComment.isReply &&\r\n\t\t\t\t\t\tisLoading.type === `FETCH_REPLY_COMMENT_${dataComment.ID}` &&\r\n\t\t\t\t\t\tisLoading.status && (\r\n\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t<Spin />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nexport default Comment;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\Global\\\\Option\\\\ProgramDetail\\\\AddExamForm.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Modal, Tooltip, Divider, Button } from 'antd';\nimport { curriculumDetailApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport { Select } from 'antd';\nimport { Info } from 'react-feather';\nconst {\n  Option\n} = Select;\n\nconst AddExamForm = props => {\n  const {\n    dataRow,\n    dataExamTopic,\n    onFetchData,\n    currentCheckID,\n    disable\n  } = props;\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: ExamID,\n    1: setExamID\n  } = useState(dataRow.ExamTopicID && dataRow.ExamTopicID !== 0 ? dataRow.ExamTopicID : null);\n  const {\n    showNoti\n  } = useWrap();\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = async () => {\n    if (disable) {\n      setIsModalVisible(false);\n    } else {\n      setIsLoading(true);\n\n      try {\n        let res = await curriculumDetailApi.update({\n          ID: dataRow.ID,\n          ExamTopicID: ExamID,\n          IsExam: true\n        });\n\n        if (res.status == 200) {\n          showNoti('success', 'Cập nhật đề kiểm tra thành công');\n          setIsModalVisible(false);\n          onFetchData && onFetchData();\n        } else {\n          showNoti('danger', 'Đường truyền mạng đang không ổn định');\n        }\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleChange_SelectExam = value => {\n    setExamID(value);\n  };\n\n  useEffect(() => {\n    if (currentCheckID == dataRow.ID) {\n      showModal();\n    }\n  }, [currentCheckID]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-icon\",\n      onClick: showModal,\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Xem th\\xF4ng tin\",\n        children: /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Th\\xEAm \\u0111\\u1EC1 ki\\u1EC3m tra\",\n      visible: isModalVisible,\n      okText: disable ? 'OK' : 'LƯU',\n      cancelText: \"H\\u1EE7y\",\n      cancelButtonProps: null,\n      okButtonProps: {\n        loading: isLoading\n      },\n      onOk: handleOk,\n      footer: null,\n      onCancel: handleCancel,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black mb-2\",\n        children: \"Ch\\u1ECDn \\u0111\\u1EC1 ki\\u1EC3m tra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: ExamID,\n        className: \"style-input\",\n        onChange: handleChange_SelectExam,\n        disabled: disable == true ? true : false,\n        children: dataExamTopic === null || dataExamTopic === void 0 ? void 0 : dataExamTopic.map(item => /*#__PURE__*/_jsxDEV(Option, {\n          value: item.ID,\n          children: item.Name\n        }, item.ID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        style: {\n          width: 550,\n          marginLeft: -25,\n          marginRight: -25,\n          marginBottom: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          width: '100%',\n          alignItems: 'flex-end',\n          justifyContent: 'flex-end'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleOk,\n          className: \"btn btn-primary\",\n          style: {\n            marginTop: 15,\n            marginBottom: -7\n          },\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport default AddExamForm;","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/Global/Option/ProgramDetail/AddExamForm.tsx"],"names":["React","useEffect","useState","Modal","Tooltip","Divider","Button","curriculumDetailApi","useWrap","Select","Info","Option","AddExamForm","props","dataRow","dataExamTopic","onFetchData","currentCheckID","disable","isModalVisible","setIsModalVisible","isLoading","setIsLoading","ExamID","setExamID","ExamTopicID","showNoti","showModal","handleOk","res","update","ID","IsExam","status","error","message","handleCancel","handleChange_SelectExam","value","loading","map","item","Name","width","marginLeft","marginRight","marginBottom","display","alignItems","justifyContent","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Modal, Tooltip, Divider, Button } from 'antd';\r\nimport { curriculumDetailApi } from '~/apiBase';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { Select } from 'antd';\r\nimport { Info } from 'react-feather';\r\n\r\nconst { Option } = Select;\r\n\r\nconst AddExamForm = (props) => {\r\n\tconst { dataRow, dataExamTopic, onFetchData, currentCheckID, disable } = props;\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [ExamID, setExamID] = useState(dataRow.ExamTopicID && dataRow.ExamTopicID !== 0 ? dataRow.ExamTopicID : null);\r\n\tconst { showNoti } = useWrap();\r\n\r\n\tconst showModal = () => {\r\n\t\tsetIsModalVisible(true);\r\n\t};\r\n\r\n\tconst handleOk = async () => {\r\n\t\tif (disable) {\r\n\t\t\tsetIsModalVisible(false);\r\n\t\t} else {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await curriculumDetailApi.update({ ID: dataRow.ID, ExamTopicID: ExamID, IsExam: true });\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tshowNoti('success', 'Cập nhật đề kiểm tra thành công');\r\n\t\t\t\t\tsetIsModalVisible(false);\r\n\t\t\t\t\tonFetchData && onFetchData();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tshowNoti('danger', 'Đường truyền mạng đang không ổn định');\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false);\r\n\t};\r\n\r\n\tconst handleChange_SelectExam = (value) => {\r\n\t\tsetExamID(value);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentCheckID == dataRow.ID) {\r\n\t\t\tshowModal();\r\n\t\t}\r\n\t}, [currentCheckID]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button className=\"btn btn-icon\" onClick={showModal}>\r\n\t\t\t\t<Tooltip title=\"Xem thông tin\">\r\n\t\t\t\t\t<Info />\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</button>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Thêm đề kiểm tra\"\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tokText={disable ? 'OK' : 'LƯU'}\r\n\t\t\t\tcancelText=\"Hủy\"\r\n\t\t\t\tcancelButtonProps={null}\r\n\t\t\t\tokButtonProps={{ loading: isLoading }}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t>\r\n\t\t\t\t<p className=\"font-weight-black mb-2\">Chọn đề kiểm tra</p>\r\n\t\t\t\t<Select value={ExamID} className=\"style-input\" onChange={handleChange_SelectExam} disabled={disable == true ? true : false}>\r\n\t\t\t\t\t{dataExamTopic?.map((item) => (\r\n\t\t\t\t\t\t<Option key={item.ID} value={item.ID}>\r\n\t\t\t\t\t\t\t{item.Name}\r\n\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t\t<Divider style={{ width: 550, marginLeft: -25, marginRight: -25, marginBottom: 0 }} />\r\n\t\t\t\t<div style={{ display: 'flex', width: '100%', alignItems: 'flex-end', justifyContent: 'flex-end' }}>\r\n\t\t\t\t\t<Button onClick={handleOk} className=\"btn btn-primary\" style={{ marginTop: 15, marginBottom: -7 }}>\r\n\t\t\t\t\t\tOK\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AddExamForm;\r\n"]},"metadata":{},"sourceType":"module"}
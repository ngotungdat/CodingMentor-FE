{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Option\\\\ProgramDetail\\\\CurriculumDetail.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Select, Switch } from 'antd';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport { curriculumDetailApi, examTopicApi } from '~/apiBase';\nimport NestedTable from '~/components/Elements/NestedTable';\nimport PowerTable from '~/components/PowerTable';\nimport { useWrap } from '~/context/wrap';\nimport AddExamForm from './AddExamForm';\nimport DetailsModal from './DetailsModal';\nlet pageIndex = 1;\nlet listFieldSearch = {\n  pageIndex: 1\n};\n\nconst CurriculumDetail = props => {\n  const {\n    Option\n  } = Select;\n  const router = useRouter();\n  const {\n    courseID: courseID,\n    slug: slug\n  } = router.query; // const curriculumID = parseInt(router.query.slug as string);\n\n  const {\n    curriculumID,\n    dataSubject,\n    loadingOut,\n    isNested,\n    isFixed,\n    disable\n  } = props;\n  const {\n    0: saveValue,\n    1: setSaveValue\n  } = useState([]);\n  const {\n    0: loadingSelect,\n    1: setLoadingSelect\n  } = useState({\n    id: null,\n    status: false\n  }); // ------ BASE USESTATE TABLE -------\n\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    showNoti,\n    pageSize,\n    isAdmin\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: examTopic,\n    1: setExamTopic\n  } = useState({\n    pageIndex: 1,\n    pageSize: pageSize,\n    // CurriculumID: curriculumID ? curriculumID : null,\n    Type: 3\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    CurriculumID: curriculumID ? curriculumID : null\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi);\n  const {\n    0: dataExamTopic,\n    1: setDataExamTopic\n  } = useState(null);\n  const {\n    0: currentCheckID,\n    1: setCurrentCheckID\n  } = useState(null);\n  const {\n    0: loadingCheck,\n    1: setLoadingCheck\n  } = useState({\n    id: null,\n    status: false\n  }); // GET DATA COURSE\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await curriculumDetailApi.getAll(todoApi);\n\n      if (res.status == 200) {\n        if (res.data.data.length > 0) {\n          setDataSource(res.data.data);\n          setTotalPage(res.data.totalRow); // showNoti(\"success\", \"Thành công\");\n        } else {\n          showNoti('danger', 'Không có dữ liệu');\n        }\n      }\n\n      res.status == 204 && showNoti('danger', 'Không có dữ liệu') && setDataSource([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // ---------------- AFTER SUBMIT -----------------\n\n\n  const afterPost = mes => {\n    showNoti('success', mes);\n    setTodoApi(_objectSpread({}, listTodoApi));\n    setCurrentPage(1);\n  };\n\n  const updateSubject = async (value, data, index) => {\n    let cloneData = _objectSpread({}, data);\n\n    cloneData.SubjectID = value; // let cloneArr = [...saveValue];\n    // cloneArr.push(data);\n    // setSaveValue(cloneArr);\n\n    setLoadingSelect({\n      id: data.ID,\n      status: true\n    });\n\n    try {\n      let res = await curriculumDetailApi.update({\n        ID: data.ID,\n        SubjectID: value\n      });\n\n      if (res.status == 200) {\n        let newDataSource = [...dataSource];\n        newDataSource.splice(index, 1, cloneData);\n        setDataSource(newDataSource);\n        showNoti('success', res.data.message);\n      }\n    } catch (error) {\n      console.log('error: ', error);\n      showNoti('danger', error.message);\n    } finally {\n      setLoadingSelect({\n        id: data.ID,\n        status: false\n      });\n    }\n  };\n\n  const returnValue = ID => {\n    let value = null;\n    dataSource.every((item, index) => {\n      if (item.ID == ID) {\n        value = item.SubjectID;\n        return false;\n      } else {\n        return true;\n      }\n    }); // console.log(\"Value is: \", value);\n\n    return value;\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  const getPagination = pageNumber => {\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      pageIndex: pageNumber\n    }));\n  };\n\n  const onChange_typeLesson = async (ID, checked) => {\n    let res = null;\n    setLoadingCheck({\n      id: ID,\n      status: true\n    });\n\n    try {\n      if (checked) {\n        res = await curriculumDetailApi.update({\n          ID: ID,\n          isExam: true\n        });\n      } else {\n        res = await curriculumDetailApi.update({\n          ID: ID,\n          isExam: false\n        });\n      }\n\n      if (res.status == 200) {\n        showNoti('success', checked ? 'Đã chuyển sang kiểm tra' : 'Đã tắt kiểm tra');\n        setTodoApi(_objectSpread({}, todoApi));\n\n        if (checked) {\n          setCurrentCheckID(ID);\n        } else {\n          setCurrentCheckID(null);\n        }\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoadingCheck({\n        id: ID,\n        status: false\n      });\n    }\n  };\n\n  const getLessonID = async () => {\n    try {\n      let res = await examTopicApi.getAll(examTopic);\n\n      if (res.status == 200) {\n        // showNoti(\"success\", \"Upload file thành công\");\n        setDataExamTopic(res.data.data);\n      } else if (res.status == 204) {// showNoti(\"danger\", \"Không có dữ liệu\");\n      }\n    } catch (error) {} finally {}\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(() => {\n    getDataSource();\n    getLessonID();\n  }, [todoApi]);\n  useEffect(() => {\n    if (loadingOut && loadingOut.status && loadingOut.type === 'GET_ALL') {\n      getDataSource();\n    }\n  }, [loadingOut]);\n  const columns = [{\n    title: 'Môn học',\n    dataIndex: 'SubjectName',\n    key: 'subjectname',\n    className: 'text-center',\n    render: (text, data, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isAdmin ? dataSubject && /*#__PURE__*/_jsxDEV(Select, {\n        loading: data.ID == loadingSelect.id && loadingSelect.status,\n        value: returnValue(data.ID),\n        style: {\n          width: '100%',\n          margin: 'auto'\n        },\n        className: \"style-input\",\n        showSearch: true,\n        optionFilterProp: \"children\",\n        defaultValue: data.SubjectID,\n        onChange: value => updateSubject(value, data, index),\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: 0,\n          children: \"Tr\\u1ED1ng\"\n        }, \"none\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }, this), dataSubject === null || dataSubject === void 0 ? void 0 : dataSubject.map((item, index) => /*#__PURE__*/_jsxDEV(Option, {\n          value: item.ID,\n          children: item.SubjectName\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 10\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  }, {\n    title: 'Trạng thái',\n    dataIndex: 'StatusName',\n    key: 'statusname',\n    className: 'text-center',\n    render: (text, data) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isAdmin ? isFixed ? /*#__PURE__*/_jsxDEV(Switch, {\n        checked: data.IsExam,\n        checkedChildren: \"Ki\\u1EC3m tra\",\n        unCheckedChildren: \"Ki\\u1EC3m tra\",\n        onChange: checked => onChange_typeLesson(data.ID, checked),\n        loading: loadingCheck.id == data.ID && loadingCheck.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data !== null && data !== void 0 && data.IsExam ? 'Kiểm tra' : 'Buổi học'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data !== null && data !== void 0 && data.IsExam ? 'Kiểm tra' : 'Buổi học'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 5\n    }, this)\n  }, {\n    title: 'Buổi học',\n    dataIndex: 'LessonNumber',\n    key: 'lessonnumber',\n    className: 'col-short text-center'\n  }, // {\n  //   title: \"\",\n  //   dataIndex: \"StatusName\",\n  //   key: \"statusname\",\n  //   className: \"text-center\",\n  //   render: (text, data) => (\n  //     <AddCurriculumForm\n  //       curriculumDetailID={data.ID}\n  //       dataExamTopic={dataExamTopic}\n  //       dataCurriculumDetail={dataSource}\n  //       callFrom=\"main\"\n  //       onFetchData={() => setTodoApi({ ...todoApi })}\n  //     />\n  //   ),\n  // },\n  {\n    title: '',\n    dataIndex: 'StatusName',\n    key: 'statusname',\n    className: 'text-center',\n    render: (text, data) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !data.IsExam ? /*#__PURE__*/_jsxDEV(DetailsModal, {\n        isAdmin: isAdmin,\n        curriculumDetailID: data.ID,\n        dataExamTopic: dataExamTopic,\n        dataCurriculumDetail: dataSource,\n        onFetchData: () => setTodoApi(_objectSpread({}, todoApi)),\n        courseID: courseID,\n        dataRow: data,\n        isFixed: isFixed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(AddExamForm, {\n        disable: props.disable,\n        dataExamTopic: dataExamTopic,\n        dataRow: data,\n        onFetchData: () => (setTodoApi(_objectSpread({}, todoApi)), setCurrentCheckID(null)),\n        currentCheckID: currentCheckID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isNested ? /*#__PURE__*/_jsxDEV(NestedTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: pageNumber => getPagination(pageNumber),\n      addClass: \"table-curriculum-detail\",\n      loading: isLoading,\n      dataSource: dataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(PowerTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: pageNumber => getPagination(pageNumber),\n      addClass: \"table-curriculum-detail\",\n      loading: isLoading,\n      dataSource: dataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\nexport default CurriculumDetail;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Option/ProgramDetail/CurriculumDetail.tsx"],"names":["Select","Switch","useRouter","React","useEffect","useState","curriculumDetailApi","examTopicApi","NestedTable","PowerTable","useWrap","AddExamForm","DetailsModal","pageIndex","listFieldSearch","CurriculumDetail","props","Option","router","courseID","slug","query","curriculumID","dataSubject","loadingOut","isNested","isFixed","disable","saveValue","setSaveValue","loadingSelect","setLoadingSelect","id","status","dataSource","setDataSource","showNoti","pageSize","isAdmin","isLoading","setIsLoading","type","examTopic","setExamTopic","Type","totalPage","setTotalPage","currentPage","setCurrentPage","listTodoApi","CurriculumID","todoApi","setTodoApi","dataExamTopic","setDataExamTopic","currentCheckID","setCurrentCheckID","loadingCheck","setLoadingCheck","getDataSource","res","getAll","data","length","totalRow","error","message","afterPost","mes","updateSubject","value","index","cloneData","SubjectID","ID","update","newDataSource","splice","console","log","returnValue","every","item","getPagination","pageNumber","onChange_typeLesson","checked","isExam","getLessonID","columns","title","dataIndex","key","className","render","text","width","margin","map","SubjectName","IsExam"],"mappings":";;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,MAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,WAAlD;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAIC,SAAS,GAAG,CAAhB;AAEA,IAAIC,eAAe,GAAG;AACrBD,EAAAA,SAAS,EAAE;AADU,CAAtB;;AAIA,MAAME,gBAAgB,GAAIC,KAAD,IAAW;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAajB,MAAnB;AACA,QAAMkB,MAAM,GAAGhB,SAAS,EAAxB;AACA,QAAM;AAAEiB,IAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,IAAAA,IAAI,EAAEA;AAA5B,MAAqCF,MAAM,CAACG,KAAlD,CAHmC,CAInC;;AACA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA,UAA7B;AAAyCC,IAAAA,QAAzC;AAAmDC,IAAAA,OAAnD;AAA4DC,IAAAA;AAA5D,MAAwEX,KAA9E;AAEA,QAAM;AAAA,OAACY,SAAD;AAAA,OAAYC;AAAZ,MAA4BxB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACyB,aAAD;AAAA,OAAgBC;AAAhB,MAAoC1B,QAAQ,CAAC;AAClD2B,IAAAA,EAAE,EAAE,IAD8C;AAElDC,IAAAA,MAAM,EAAE;AAF0C,GAAD,CAAlD,CARmC,CAanC;;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8B9B,QAAQ,CAAsB,EAAtB,CAA5C;AACA,QAAM;AAAE+B,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAkC5B,OAAO,EAA/C;AACA,QAAM;AAAA,OAAC6B,SAAD;AAAA,OAAYC;AAAZ,MAA4BnC,QAAQ,CAAC;AAC1CoC,IAAAA,IAAI,EAAE,EADoC;AAE1CR,IAAAA,MAAM,EAAE;AAFkC,GAAD,CAA1C;AAIA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA4BtC,QAAQ,CAAC;AAC1CQ,IAAAA,SAAS,EAAE,CAD+B;AAE1CwB,IAAAA,QAAQ,EAAEA,QAFgC;AAG1C;AACAO,IAAAA,IAAI,EAAE;AAJoC,GAAD,CAA1C;AAMA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BzC,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAA,OAAC0C,WAAD;AAAA,OAAcC;AAAd,MAAgC3C,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM4C,WAAW,GAAG;AACnBZ,IAAAA,QAAQ,EAAEA,QADS;AAEnBxB,IAAAA,SAAS,EAAEA,SAFQ;AAGnBqC,IAAAA,YAAY,EAAE5B,YAAY,GAAGA,YAAH,GAAkB;AAHzB,GAApB;AAKA,QAAM;AAAA,OAAC6B,OAAD;AAAA,OAAUC;AAAV,MAAwB/C,QAAQ,CAAC4C,WAAD,CAAtC;AACA,QAAM;AAAA,OAACI,aAAD;AAAA,OAAgBC;AAAhB,MAAoCjD,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAM;AAAA,OAACkD,cAAD;AAAA,OAAiBC;AAAjB,MAAsCnD,QAAQ,CAAS,IAAT,CAApD;AACA,QAAM;AAAA,OAACoD,YAAD;AAAA,OAAeC;AAAf,MAAkCrD,QAAQ,CAAC;AAChD2B,IAAAA,EAAE,EAAE,IAD4C;AAEhDC,IAAAA,MAAM,EAAE;AAFwC,GAAD,CAAhD,CArCmC,CA0CnC;;AACA,QAAM0B,aAAa,GAAG,YAAY;AACjCnB,IAAAA,YAAY,CAAC;AACZC,MAAAA,IAAI,EAAE,SADM;AAEZR,MAAAA,MAAM,EAAE;AAFI,KAAD,CAAZ;;AAKA,QAAI;AACH,UAAI2B,GAAG,GAAG,MAAMtD,mBAAmB,CAACuD,MAApB,CAA2BV,OAA3B,CAAhB;;AAEA,UAAIS,GAAG,CAAC3B,MAAJ,IAAc,GAAlB,EAAuB;AACtB,YAAI2B,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,MAAd,GAAuB,CAA3B,EAA8B;AAC7B5B,UAAAA,aAAa,CAACyB,GAAG,CAACE,IAAJ,CAASA,IAAV,CAAb;AACAhB,UAAAA,YAAY,CAACc,GAAG,CAACE,IAAJ,CAASE,QAAV,CAAZ,CAF6B,CAG7B;AACA,SAJD,MAIO;AACN5B,UAAAA,QAAQ,CAAC,QAAD,EAAW,kBAAX,CAAR;AACA;AACD;;AAEDwB,MAAAA,GAAG,CAAC3B,MAAJ,IAAc,GAAd,IAAqBG,QAAQ,CAAC,QAAD,EAAW,kBAAX,CAA7B,IAA+DD,aAAa,CAAC,EAAD,CAA5E;AACA,KAdD,CAcE,OAAO8B,KAAP,EAAc;AACf7B,MAAAA,QAAQ,CAAC,QAAD,EAAW6B,KAAK,CAACC,OAAjB,CAAR;AACA,KAhBD,SAgBU;AACT1B,MAAAA,YAAY,CAAC;AACZC,QAAAA,IAAI,EAAE,SADM;AAEZR,QAAAA,MAAM,EAAE;AAFI,OAAD,CAAZ;AAIA;AACD,GA5BD,CA3CmC,CAyEnC;;;AACA,QAAMkC,SAAS,GAAIC,GAAD,IAAS;AAC1BhC,IAAAA,QAAQ,CAAC,SAAD,EAAYgC,GAAZ,CAAR;AACAhB,IAAAA,UAAU,mBACNH,WADM,EAAV;AAIAD,IAAAA,cAAc,CAAC,CAAD,CAAd;AACA,GAPD;;AASA,QAAMqB,aAAa,GAAG,OAAOC,KAAP,EAAcR,IAAd,EAAoBS,KAApB,KAA8B;AACnD,QAAIC,SAAS,qBAAQV,IAAR,CAAb;;AACAU,IAAAA,SAAS,CAACC,SAAV,GAAsBH,KAAtB,CAFmD,CAInD;AACA;AACA;;AAEAvC,IAAAA,gBAAgB,CAAC;AAChBC,MAAAA,EAAE,EAAE8B,IAAI,CAACY,EADO;AAEhBzC,MAAAA,MAAM,EAAE;AAFQ,KAAD,CAAhB;;AAKA,QAAI;AACH,UAAI2B,GAAG,GAAG,MAAMtD,mBAAmB,CAACqE,MAApB,CAA2B;AAC1CD,QAAAA,EAAE,EAAEZ,IAAI,CAACY,EADiC;AAE1CD,QAAAA,SAAS,EAAEH;AAF+B,OAA3B,CAAhB;;AAKA,UAAIV,GAAG,CAAC3B,MAAJ,IAAc,GAAlB,EAAuB;AACtB,YAAI2C,aAAa,GAAG,CAAC,GAAG1C,UAAJ,CAApB;AACA0C,QAAAA,aAAa,CAACC,MAAd,CAAqBN,KAArB,EAA4B,CAA5B,EAA+BC,SAA/B;AACArC,QAAAA,aAAa,CAACyC,aAAD,CAAb;AACAxC,QAAAA,QAAQ,CAAC,SAAD,EAAYwB,GAAG,CAACE,IAAJ,CAASI,OAArB,CAAR;AACA;AACD,KAZD,CAYE,OAAOD,KAAP,EAAc;AACfa,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBd,KAAvB;AACA7B,MAAAA,QAAQ,CAAC,QAAD,EAAW6B,KAAK,CAACC,OAAjB,CAAR;AACA,KAfD,SAeU;AACTnC,MAAAA,gBAAgB,CAAC;AAChBC,QAAAA,EAAE,EAAE8B,IAAI,CAACY,EADO;AAEhBzC,QAAAA,MAAM,EAAE;AAFQ,OAAD,CAAhB;AAIA;AACD,GAlCD;;AAoCA,QAAM+C,WAAW,GAAIN,EAAD,IAAa;AAChC,QAAIJ,KAAK,GAAG,IAAZ;AACApC,IAAAA,UAAU,CAAC+C,KAAX,CAAiB,CAACC,IAAD,EAAOX,KAAP,KAAiB;AACjC,UAAIW,IAAI,CAACR,EAAL,IAAWA,EAAf,EAAmB;AAClBJ,QAAAA,KAAK,GAAGY,IAAI,CAACT,SAAb;AACA,eAAO,KAAP;AACA,OAHD,MAGO;AACN,eAAO,IAAP;AACA;AACD,KAPD,EAFgC,CAWhC;;AACA,WAAOH,KAAP;AACA,GAbD,CAvHmC,CAsInC;;;AACA,QAAMa,aAAa,GAAIC,UAAD,IAAwB;AAC7CpC,IAAAA,cAAc,CAACoC,UAAD,CAAd;AACAhC,IAAAA,UAAU,iCACND,OADM;AAETtC,MAAAA,SAAS,EAAEuE;AAFF,OAAV;AAIA,GAND;;AAQA,QAAMC,mBAAmB,GAAG,OAAOX,EAAP,EAAWY,OAAX,KAAuB;AAClD,QAAI1B,GAAG,GAAG,IAAV;AAEAF,IAAAA,eAAe,CAAC;AACf1B,MAAAA,EAAE,EAAE0C,EADW;AAEfzC,MAAAA,MAAM,EAAE;AAFO,KAAD,CAAf;;AAIA,QAAI;AACH,UAAIqD,OAAJ,EAAa;AACZ1B,QAAAA,GAAG,GAAG,MAAMtD,mBAAmB,CAACqE,MAApB,CAA2B;AAAED,UAAAA,EAAE,EAAEA,EAAN;AAAUa,UAAAA,MAAM,EAAE;AAAlB,SAA3B,CAAZ;AACA,OAFD,MAEO;AACN3B,QAAAA,GAAG,GAAG,MAAMtD,mBAAmB,CAACqE,MAApB,CAA2B;AAAED,UAAAA,EAAE,EAAEA,EAAN;AAAUa,UAAAA,MAAM,EAAE;AAAlB,SAA3B,CAAZ;AACA;;AAED,UAAI3B,GAAG,CAAC3B,MAAJ,IAAc,GAAlB,EAAuB;AACtBG,QAAAA,QAAQ,CAAC,SAAD,EAAYkD,OAAO,GAAG,yBAAH,GAA+B,iBAAlD,CAAR;AAEAlC,QAAAA,UAAU,mBAAMD,OAAN,EAAV;;AAEA,YAAImC,OAAJ,EAAa;AACZ9B,UAAAA,iBAAiB,CAACkB,EAAD,CAAjB;AACA,SAFD,MAEO;AACNlB,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA;AACD;AACD,KAlBD,CAkBE,OAAOS,KAAP,EAAc;AACf7B,MAAAA,QAAQ,CAAC,QAAD,EAAW6B,KAAK,CAACC,OAAjB,CAAR;AACA,KApBD,SAoBU;AACTR,MAAAA,eAAe,CAAC;AACf1B,QAAAA,EAAE,EAAE0C,EADW;AAEfzC,QAAAA,MAAM,EAAE;AAFO,OAAD,CAAf;AAIA;AACD,GAjCD;;AAmCA,QAAMuD,WAAW,GAAG,YAAY;AAC/B,QAAI;AACH,UAAI5B,GAAG,GAAG,MAAMrD,YAAY,CAACsD,MAAb,CAAoBnB,SAApB,CAAhB;;AACA,UAAIkB,GAAG,CAAC3B,MAAJ,IAAc,GAAlB,EAAuB;AACtB;AACAqB,QAAAA,gBAAgB,CAACM,GAAG,CAACE,IAAJ,CAASA,IAAV,CAAhB;AACA,OAHD,MAGO,IAAIF,GAAG,CAAC3B,MAAJ,IAAc,GAAlB,EAAuB,CAC7B;AACA;AACD,KARD,CAQE,OAAOgC,KAAP,EAAc,CACf,CATD,SASU,CACT;AACD,GAZD,CAlLmC,CAgMnC;;;AACA7D,EAAAA,SAAS,CAAC,MAAM;AACfuD,IAAAA,aAAa;AACb6B,IAAAA,WAAW;AACX,GAHQ,EAGN,CAACrC,OAAD,CAHM,CAAT;AAKA/C,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIoB,UAAU,IAAIA,UAAU,CAACS,MAAzB,IAAmCT,UAAU,CAACiB,IAAX,KAAoB,SAA3D,EAAsE;AACrEkB,MAAAA,aAAa;AACb;AACD,GAJQ,EAIN,CAACnC,UAAD,CAJM,CAAT;AAMA,QAAMiE,OAAO,GAAG,CACf;AACCC,IAAAA,KAAK,EAAE,SADR;AAECC,IAAAA,SAAS,EAAE,aAFZ;AAGCC,IAAAA,GAAG,EAAE,aAHN;AAICC,IAAAA,SAAS,EAAE,aAJZ;AAKCC,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOjC,IAAP,EAAaS,KAAb,kBACP;AAAA,gBACEjC,OAAO,GACPf,WAAW,iBACV,QAAC,MAAD;AACC,QAAA,OAAO,EAAEuC,IAAI,CAACY,EAAL,IAAW5C,aAAa,CAACE,EAAzB,IAA+BF,aAAa,CAACG,MADvD;AAEC,QAAA,KAAK,EAAE+C,WAAW,CAAClB,IAAI,CAACY,EAAN,CAFnB;AAGC,QAAA,KAAK,EAAE;AAAEsB,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAHR;AAIC,QAAA,SAAS,EAAC,aAJX;AAKC,QAAA,UAAU,MALX;AAMC,QAAA,gBAAgB,EAAC,UANlB;AAOC,QAAA,YAAY,EAAEnC,IAAI,CAACW,SAPpB;AAQC,QAAA,QAAQ,EAAGH,KAAD,IAAWD,aAAa,CAACC,KAAD,EAAQR,IAAR,EAAcS,KAAd,CARnC;AAAA,gCAUC,QAAC,MAAD;AAAmB,UAAA,KAAK,EAAE,CAA1B;AAAA;AAAA,WAAY,MAAZ;AAAA;AAAA;AAAA;AAAA,gBAVD,EAaEhD,WAbF,aAaEA,WAbF,uBAaEA,WAAW,CAAE2E,GAAb,CAAiB,CAAChB,IAAD,EAAOX,KAAP,kBACjB,QAAC,MAAD;AAAoB,UAAA,KAAK,EAAEW,IAAI,CAACR,EAAhC;AAAA,oBACEQ,IAAI,CAACiB;AADP,WAAa5B,KAAb;AAAA;AAAA;AAAA;AAAA,gBADA,CAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFM,gBAuBP;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA,kBAAkCwB;AAAlC;AAAA;AAAA;AAAA;AAAA;AAxBF;AANF,GADe,EAoCf;AACCL,IAAAA,KAAK,EAAE,YADR;AAECC,IAAAA,SAAS,EAAE,YAFZ;AAGCC,IAAAA,GAAG,EAAE,YAHN;AAICC,IAAAA,SAAS,EAAE,aAJZ;AAKCC,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOjC,IAAP,kBACP;AAAA,gBACExB,OAAO,GACPZ,OAAO,gBACN,QAAC,MAAD;AACC,QAAA,OAAO,EAAEoC,IAAI,CAACsC,MADf;AAEC,QAAA,eAAe,EAAC,eAFjB;AAGC,QAAA,iBAAiB,EAAC,eAHnB;AAIC,QAAA,QAAQ,EAAGd,OAAD,IAAaD,mBAAmB,CAACvB,IAAI,CAACY,EAAN,EAAUY,OAAV,CAJ3C;AAKC,QAAA,OAAO,EAAE7B,YAAY,CAACzB,EAAb,IAAmB8B,IAAI,CAACY,EAAxB,IAA8BjB,YAAY,CAACxB;AALrD;AAAA;AAAA;AAAA;AAAA,cADM,gBASN;AAAA,kBAAI6B,IAAI,SAAJ,IAAAA,IAAI,WAAJ,IAAAA,IAAI,CAAEsC,MAAN,GAAe,UAAf,GAA4B;AAAhC;AAAA;AAAA;AAAA;AAAA,cAVM,gBAaP;AAAA,kBAAItC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,IAAAA,IAAI,CAAEsC,MAAN,GAAe,UAAf,GAA4B;AAAhC;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA;AANF,GApCe,EA6Df;AACCV,IAAAA,KAAK,EAAE,UADR;AAECC,IAAAA,SAAS,EAAE,cAFZ;AAGCC,IAAAA,GAAG,EAAE,cAHN;AAICC,IAAAA,SAAS,EAAE;AAJZ,GA7De,EAmEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCH,IAAAA,KAAK,EAAE,EADR;AAECC,IAAAA,SAAS,EAAE,YAFZ;AAGCC,IAAAA,GAAG,EAAE,YAHN;AAICC,IAAAA,SAAS,EAAE,aAJZ;AAKCC,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOjC,IAAP,kBACP;AAAA,gBAWE,CAACA,IAAI,CAACsC,MAAN,gBACA,QAAC,YAAD;AACC,QAAA,OAAO,EAAE9D,OADV;AAEC,QAAA,kBAAkB,EAAEwB,IAAI,CAACY,EAF1B;AAGC,QAAA,aAAa,EAAErB,aAHhB;AAIC,QAAA,oBAAoB,EAAEnB,UAJvB;AAKC,QAAA,WAAW,EAAE,MAAMkB,UAAU,mBAAMD,OAAN,EAL9B;AAMC,QAAA,QAAQ,EAAEhC,QANX;AAOC,QAAA,OAAO,EAAE2C,IAPV;AAQC,QAAA,OAAO,EAAEpC;AARV;AAAA;AAAA;AAAA;AAAA,cADA,gBAYA,QAAC,WAAD;AACC,QAAA,OAAO,EAAEV,KAAK,CAACW,OADhB;AAEC,QAAA,aAAa,EAAE0B,aAFhB;AAGC,QAAA,OAAO,EAAES,IAHV;AAIC,QAAA,WAAW,EAAE,OAAOV,UAAU,mBAAMD,OAAN,EAAV,EAA4BK,iBAAiB,CAAC,IAAD,CAApD,CAJd;AAKC,QAAA,cAAc,EAAED;AALjB;AAAA;AAAA;AAAA;AAAA;AAvBF;AANF,GAlFe,CAAhB;AA4HA,sBACC;AAAA,cACE9B,QAAQ,gBACR,QAAC,WAAD;AACC,MAAA,WAAW,EAAEsB,WADd;AAEC,MAAA,SAAS,EAAEF,SAAS,IAAIA,SAFzB;AAGC,MAAA,aAAa,EAAGuC,UAAD,IAAwBD,aAAa,CAACC,UAAD,CAHrD;AAIC,MAAA,QAAQ,EAAC,yBAJV;AAKC,MAAA,OAAO,EAAE7C,SALV;AAMC,MAAA,UAAU,EAAEL,UANb;AAOC,MAAA,OAAO,EAAEuD;AAPV;AAAA;AAAA;AAAA;AAAA,YADQ,gBAWR,QAAC,UAAD;AACC,MAAA,WAAW,EAAE1C,WADd;AAEC,MAAA,SAAS,EAAEF,SAAS,IAAIA,SAFzB;AAGC,MAAA,aAAa,EAAGuC,UAAD,IAAwBD,aAAa,CAACC,UAAD,CAHrD;AAIC,MAAA,QAAQ,EAAC,yBAJV;AAKC,MAAA,OAAO,EAAE7C,SALV;AAMC,MAAA,UAAU,EAAEL,UANb;AAOC,MAAA,OAAO,EAAEuD;AAPV;AAAA;AAAA;AAAA;AAAA;AAZF,mBADD;AAyBA,CAjWD;;AAmWA,eAAe1E,gBAAf","sourcesContent":["import { Select, Switch } from 'antd'\r\nimport { useRouter } from 'next/router'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { curriculumDetailApi, examTopicApi } from '~/apiBase'\r\nimport NestedTable from '~/components/Elements/NestedTable'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport { useWrap } from '~/context/wrap'\r\nimport AddExamForm from './AddExamForm'\r\nimport DetailsModal from './DetailsModal'\r\n\r\nlet pageIndex = 1\r\n\r\nlet listFieldSearch = {\r\n\tpageIndex: 1\r\n}\r\n\r\nconst CurriculumDetail = (props) => {\r\n\tconst { Option } = Select\r\n\tconst router = useRouter()\r\n\tconst { courseID: courseID, slug: slug } = router.query\r\n\t// const curriculumID = parseInt(router.query.slug as string);\r\n\tconst { curriculumID, dataSubject, loadingOut, isNested, isFixed, disable } = props\r\n\r\n\tconst [saveValue, setSaveValue] = useState([])\r\n\tconst [loadingSelect, setLoadingSelect] = useState({\r\n\t\tid: null,\r\n\t\tstatus: false\r\n\t})\r\n\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState<ICurriculumDetail[]>([])\r\n\tconst { showNoti, pageSize, isAdmin } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [examTopic, setExamTopic] = useState({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: pageSize,\r\n\t\t// CurriculumID: curriculumID ? curriculumID : null,\r\n\t\tType: 3\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tCurriculumID: curriculumID ? curriculumID : null\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\tconst [dataExamTopic, setDataExamTopic] = useState(null)\r\n\r\n\tconst [currentCheckID, setCurrentCheckID] = useState<number>(null)\r\n\tconst [loadingCheck, setLoadingCheck] = useState({\r\n\t\tid: null,\r\n\t\tstatus: false\r\n\t})\r\n\r\n\t// GET DATA COURSE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await curriculumDetailApi.getAll(todoApi)\r\n\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tif (res.data.data.length > 0) {\r\n\t\t\t\t\tsetDataSource(res.data.data)\r\n\t\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t\t\t// showNoti(\"success\", \"Thành công\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tshowNoti('danger', 'Không có dữ liệu')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu') && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// ---------------- AFTER SUBMIT -----------------\r\n\tconst afterPost = (mes) => {\r\n\t\tshowNoti('success', mes)\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi\r\n\t\t\t// pageIndex: 1,\r\n\t\t})\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\tconst updateSubject = async (value, data, index) => {\r\n\t\tlet cloneData = { ...data }\r\n\t\tcloneData.SubjectID = value\r\n\r\n\t\t// let cloneArr = [...saveValue];\r\n\t\t// cloneArr.push(data);\r\n\t\t// setSaveValue(cloneArr);\r\n\r\n\t\tsetLoadingSelect({\r\n\t\t\tid: data.ID,\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await curriculumDetailApi.update({\r\n\t\t\t\tID: data.ID,\r\n\t\t\t\tSubjectID: value\r\n\t\t\t})\r\n\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tlet newDataSource = [...dataSource]\r\n\t\t\t\tnewDataSource.splice(index, 1, cloneData)\r\n\t\t\t\tsetDataSource(newDataSource)\r\n\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error: ', error)\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingSelect({\r\n\t\t\t\tid: data.ID,\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst returnValue = (ID: any) => {\r\n\t\tlet value = null\r\n\t\tdataSource.every((item, index) => {\r\n\t\t\tif (item.ID == ID) {\r\n\t\t\t\tvalue = item.SubjectID\r\n\t\t\t\treturn false\r\n\t\t\t} else {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// console.log(\"Value is: \", value);\r\n\t\treturn value\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\tpageIndex: pageNumber\r\n\t\t})\r\n\t}\r\n\r\n\tconst onChange_typeLesson = async (ID, checked) => {\r\n\t\tlet res = null\r\n\r\n\t\tsetLoadingCheck({\r\n\t\t\tid: ID,\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tif (checked) {\r\n\t\t\t\tres = await curriculumDetailApi.update({ ID: ID, isExam: true })\r\n\t\t\t} else {\r\n\t\t\t\tres = await curriculumDetailApi.update({ ID: ID, isExam: false })\r\n\t\t\t}\r\n\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tshowNoti('success', checked ? 'Đã chuyển sang kiểm tra' : 'Đã tắt kiểm tra')\r\n\r\n\t\t\t\tsetTodoApi({ ...todoApi })\r\n\r\n\t\t\t\tif (checked) {\r\n\t\t\t\t\tsetCurrentCheckID(ID)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetCurrentCheckID(null)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingCheck({\r\n\t\t\t\tid: ID,\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst getLessonID = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await examTopicApi.getAll(examTopic)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\t// showNoti(\"success\", \"Upload file thành công\");\r\n\t\t\t\tsetDataExamTopic(res.data.data)\r\n\t\t\t} else if (res.status == 204) {\r\n\t\t\t\t// showNoti(\"danger\", \"Không có dữ liệu\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t}\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t\tgetLessonID()\r\n\t}, [todoApi])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (loadingOut && loadingOut.status && loadingOut.type === 'GET_ALL') {\r\n\t\t\tgetDataSource()\r\n\t\t}\r\n\t}, [loadingOut])\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Môn học',\r\n\t\t\tdataIndex: 'SubjectName',\r\n\t\t\tkey: 'subjectname',\r\n\t\t\tclassName: 'text-center',\r\n\t\t\trender: (text, data, index) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{isAdmin ? (\r\n\t\t\t\t\t\tdataSubject && (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tloading={data.ID == loadingSelect.id && loadingSelect.status}\r\n\t\t\t\t\t\t\t\tvalue={returnValue(data.ID)}\r\n\t\t\t\t\t\t\t\tstyle={{ width: '100%', margin: 'auto' }}\r\n\t\t\t\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\toptionFilterProp=\"children\"\r\n\t\t\t\t\t\t\t\tdefaultValue={data.SubjectID}\r\n\t\t\t\t\t\t\t\tonChange={(value) => updateSubject(value, data, index)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Option key=\"none\" value={0}>\r\n\t\t\t\t\t\t\t\t\tTrống\r\n\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t{dataSubject?.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t<Option key={index} value={item.ID}>\r\n\t\t\t\t\t\t\t\t\t\t{item.SubjectName}\r\n\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p className=\"font-weight-black\">{text}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tdataIndex: 'StatusName',\r\n\t\t\tkey: 'statusname',\r\n\t\t\tclassName: 'text-center',\r\n\t\t\trender: (text, data) => (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{isAdmin ? (\r\n\t\t\t\t\t\tisFixed ? (\r\n\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\tchecked={data.IsExam}\r\n\t\t\t\t\t\t\t\tcheckedChildren=\"Kiểm tra\"\r\n\t\t\t\t\t\t\t\tunCheckedChildren=\"Kiểm tra\"\r\n\t\t\t\t\t\t\t\tonChange={(checked) => onChange_typeLesson(data.ID, checked)}\r\n\t\t\t\t\t\t\t\tloading={loadingCheck.id == data.ID && loadingCheck.status}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<p>{data?.IsExam ? 'Kiểm tra' : 'Buổi học'}</p>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p>{data?.IsExam ? 'Kiểm tra' : 'Buổi học'}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Buổi học',\r\n\t\t\tdataIndex: 'LessonNumber',\r\n\t\t\tkey: 'lessonnumber',\r\n\t\t\tclassName: 'col-short text-center'\r\n\t\t},\r\n\t\t// {\r\n\t\t//   title: \"\",\r\n\t\t//   dataIndex: \"StatusName\",\r\n\t\t//   key: \"statusname\",\r\n\t\t//   className: \"text-center\",\r\n\t\t//   render: (text, data) => (\r\n\t\t//     <AddCurriculumForm\r\n\t\t//       curriculumDetailID={data.ID}\r\n\t\t//       dataExamTopic={dataExamTopic}\r\n\t\t//       dataCurriculumDetail={dataSource}\r\n\t\t//       callFrom=\"main\"\r\n\t\t//       onFetchData={() => setTodoApi({ ...todoApi })}\r\n\t\t//     />\r\n\t\t//   ),\r\n\t\t// },\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t\tdataIndex: 'StatusName',\r\n\t\t\tkey: 'statusname',\r\n\t\t\tclassName: 'text-center',\r\n\t\t\trender: (text, data) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{/* {isAdmin && (\r\n\t\t\t\t\t\t<AddCurriculumForm\r\n\t\t\t\t\t\t\tcurriculumDetailID={data.ID}\r\n\t\t\t\t\t\t\tdataExamTopic={dataExamTopic}\r\n\t\t\t\t\t\t\tdataCurriculumDetail={dataSource}\r\n\t\t\t\t\t\t\tcallFrom=\"main\"\r\n\t\t\t\t\t\t\tonFetchData={() => setTodoApi({ ...todoApi })}\r\n\t\t\t\t\t\t\tdataRow={data}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)} */}\r\n\t\t\t\t\t{!data.IsExam ? (\r\n\t\t\t\t\t\t<DetailsModal\r\n\t\t\t\t\t\t\tisAdmin={isAdmin}\r\n\t\t\t\t\t\t\tcurriculumDetailID={data.ID}\r\n\t\t\t\t\t\t\tdataExamTopic={dataExamTopic}\r\n\t\t\t\t\t\t\tdataCurriculumDetail={dataSource}\r\n\t\t\t\t\t\t\tonFetchData={() => setTodoApi({ ...todoApi })}\r\n\t\t\t\t\t\t\tcourseID={courseID}\r\n\t\t\t\t\t\t\tdataRow={data}\r\n\t\t\t\t\t\t\tisFixed={isFixed}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<AddExamForm\r\n\t\t\t\t\t\t\tdisable={props.disable}\r\n\t\t\t\t\t\t\tdataExamTopic={dataExamTopic}\r\n\t\t\t\t\t\t\tdataRow={data}\r\n\t\t\t\t\t\t\tonFetchData={() => (setTodoApi({ ...todoApi }), setCurrentCheckID(null))}\r\n\t\t\t\t\t\t\tcurrentCheckID={currentCheckID}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isNested ? (\r\n\t\t\t\t<NestedTable\r\n\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\t\taddClass=\"table-curriculum-detail\"\r\n\t\t\t\t\tloading={isLoading}\r\n\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<PowerTable\r\n\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\t\taddClass=\"table-curriculum-detail\"\r\n\t\t\t\t\tloading={isLoading}\r\n\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CurriculumDetail\r\n"]},"metadata":{},"sourceType":"module"}
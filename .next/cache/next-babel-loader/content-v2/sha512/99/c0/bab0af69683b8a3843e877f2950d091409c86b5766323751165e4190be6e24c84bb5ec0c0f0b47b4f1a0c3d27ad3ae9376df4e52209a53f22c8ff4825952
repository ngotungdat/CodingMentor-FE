{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\StaffList\\\\ManageTask\\\\Task\\\\TaskForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Checkbox, Form, Modal, Spin, Tooltip } from 'antd';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { FilePlus, UserMinus, UserPlus } from 'react-feather';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport DeleteTableRow from '~/components/Elements/DeleteTableRow/DeleteTableRow';\nimport CheckboxField from '~/components/FormControl/CheckboxField';\nimport InputTextField from '~/components/FormControl/InputTextField';\nimport SelectField from '~/components/FormControl/SelectField';\nimport { optionCommonPropTypes } from '~/utils/proptypes';\nTaskForm.propTypes = {\n  isLoading: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    status: PropTypes.bool.isRequired\n  }),\n  userInformation: PropTypes.object,\n  optionRoleList: optionCommonPropTypes,\n  optionStaffList: optionCommonPropTypes,\n  taskList: PropTypes.arrayOf(PropTypes.shape({\n    ID: PropTypes.number,\n    WorkContent: PropTypes.string,\n    TaskGroupID: PropTypes.number,\n    TaskGroupName: PropTypes.string,\n    StaffID: PropTypes.number,\n    StaffName: PropTypes.string,\n    DoneTask: PropTypes.bool\n  })),\n  handleFetchTask: PropTypes.func,\n  handleSubmit: PropTypes.func,\n  handleUpdateTask: PropTypes.func,\n  handleDeleteTask: PropTypes.func,\n  handleFetchStaffListByRole: PropTypes.func,\n  handleActionOfStaff: PropTypes.func,\n  checkAuthorization: PropTypes.func,\n  handleFetchGroupTask: PropTypes.func\n};\nTaskForm.defaultProps = {\n  isLoading: {\n    type: '',\n    status: false\n  },\n  userInformation: {},\n  optionRoleList: [],\n  optionStaffList: [],\n  taskList: [],\n  handleFetchTask: null,\n  handleSubmit: null,\n  handleUpdateTask: null,\n  handleDeleteTask: null,\n  handleFetchStaffListByRole: null,\n  handleActionOfStaff: null,\n  checkAuthorization: null,\n  handleFetchGroupTask: null\n};\n\nfunction TaskForm(props) {\n  const {\n    isLoading,\n    userInformation,\n    //\n    optionRoleList,\n    optionStaffList,\n    taskList,\n    //\n    handleFetchTask,\n    handleSubmit,\n    handleUpdateTask,\n    handleDeleteTask,\n    handleFetchStaffListByRole,\n    handleActionOfStaff,\n    checkAuthorization,\n    handleFetchGroupTask\n  } = props;\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n\n  const openModal = () => setIsModalVisible(true);\n\n  const closeModal = () => setIsModalVisible(false);\n\n  const {\n    0: isUpdateWorkContent,\n    1: setIsUpdateWorkContent\n  } = useState({\n    idx: -1,\n    item: null,\n    status: false\n  });\n  const {\n    0: showMoreField,\n    1: setShowMoreField\n  } = useState(false);\n  const schema = yup.object().shape({\n    WorkContent: yup.string().required('Bạn không được để trống'),\n    isAddStaff: yup.bool(),\n    RoleID: yup.number().notRequired().when('isAddStaff', (isAddStaff, schema) => {\n      if (isAddStaff) {\n        return yup.number().nullable().required(`Bạn không được để trống`);\n      }\n\n      return yup.number().nullable().notRequired();\n    }),\n    StaffID: yup.number().notRequired().when('isAddStaff', (isAddStaff, schema) => {\n      if (isAddStaff) {\n        return yup.number().nullable().required(`Bạn không được để trống`);\n      }\n\n      return yup.number().nullable().notRequired();\n    })\n  });\n  const defaultValuesInit = {\n    WorkContent: '',\n    isAddStaff: false,\n    RoleID: null,\n    StaffID: null\n  };\n  const form = useForm({\n    defaultValues: defaultValuesInit,\n    resolver: yupResolver(schema)\n  });\n\n  const checkHandleFetchGroupTask = () => {\n    if (!handleFetchGroupTask) return;\n    handleFetchGroupTask();\n  };\n\n  const checkHandleFetchTask = () => {\n    if (!handleFetchTask) return;\n    handleFetchTask();\n  };\n\n  const checkHandleFetchStaffListByRole = id => {\n    if (!handleFetchStaffListByRole) return;\n    form.setValue('StaffID', null);\n    handleFetchStaffListByRole(id);\n  };\n\n  const checkHandleDeleteTask = idx => {\n    if (!handleDeleteTask) return;\n    return handleDeleteTask(idx);\n  };\n\n  const checkHandleActionOfStaff = (obj, idx) => {\n    if (!handleActionOfStaff) return;\n    return handleActionOfStaff(obj, idx);\n  };\n\n  const checkHandleUpdateTask = (obj, idx) => {\n    if (!handleSubmit) return;\n    handleSubmit(obj, idx).then(res => {\n      if (res) {\n        form.reset(_objectSpread({}, defaultValuesInit));\n        setShowMoreField(false);\n        setIsUpdateWorkContent({\n          idx: -1,\n          item: null,\n          status: false\n        });\n      }\n    });\n  };\n\n  const checkHandleSubmit = data => {\n    if (!handleSubmit) return;\n    handleSubmit(data).then(res => {\n      if (res) {\n        form.reset(_objectSpread({}, defaultValuesInit));\n        setShowMoreField(false);\n      }\n    });\n  };\n\n  const taskSubmitSwitch = data => {\n    if (isUpdateWorkContent.status) {\n      checkHandleUpdateTask(_objectSpread(_objectSpread({}, data), {}, {\n        ID: isUpdateWorkContent.item.ID,\n        OldStaffID: isUpdateWorkContent.item.StaffID\n      }), isUpdateWorkContent.idx);\n    } else {\n      checkHandleSubmit(data);\n    }\n  };\n\n  useEffect(() => {\n    form.clearErrors();\n    isModalVisible && checkHandleFetchTask();\n  }, [isModalVisible]);\n  useEffect(() => {\n    const {\n      status,\n      item\n    } = isUpdateWorkContent;\n\n    if (status && item) {\n      form.setValue('WorkContent', item.WorkContent);\n\n      if (item.StaffID) {\n        setShowMoreField(true);\n        checkHandleFetchStaffListByRole(item.RoleID);\n        form.setValue('isAddStaff', true);\n        form.setValue('RoleID', item.RoleID);\n        form.setValue('StaffID', item.StaffID);\n      } else {\n        setShowMoreField(false);\n        form.setValue('isAddStaff', false);\n        form.setValue('RoleID', null);\n        form.setValue('StaffID', null);\n      }\n    } else {\n      setShowMoreField(false);\n      form.reset(_objectSpread({}, defaultValuesInit));\n      form.clearErrors();\n    }\n  }, [isUpdateWorkContent]);\n\n  const checkStatusTask = status => {\n    if (status === true) {\n      return 'item-done';\n    }\n\n    if (status > 0) {\n      return 'item-working';\n    }\n\n    return 'item-empty';\n  };\n\n  const isAuthorization = StaffID => {\n    if (!checkAuthorization) return;\n    return checkAuthorization(StaffID);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-icon view\",\n      onClick: openModal,\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"B\\u1EA3ng c\\xF4ng vi\\u1EC7c\",\n        children: /*#__PURE__*/_jsxDEV(FilePlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: `Công việc`,\n      visible: isModalVisible,\n      onCancel: () => {\n        checkHandleFetchGroupTask();\n        closeModal();\n      },\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          layout: \"vertical\",\n          onFinish: form.handleSubmit(taskSubmitSwitch),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(InputTextField, {\n                style: {\n                  marginBottom: '12px'\n                },\n                form: form,\n                name: \"WorkContent\",\n                label: \"Ti\\xEAu \\u0111\\u1EC1 c\\xF4ng vi\\u1EC7c\",\n                placeholder: \"Nh\\u1EADp ti\\xEAu \\u0111\\u1EC1 c\\xF4ng vi\\u1EC7c\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 7\n          }, this), showMoreField && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: /*#__PURE__*/_jsxDEV(SelectField, {\n                  style: {\n                    marginBottom: '12px'\n                  },\n                  form: form,\n                  name: \"RoleID\",\n                  optionList: optionRoleList,\n                  label: \"Ch\\u1EE9c v\\u1EE5\",\n                  placeholder: \"Ch\\u1ECDn ch\\u1EE9c v\\u1EE5\",\n                  onChangeSelect: checkHandleFetchStaffListByRole\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: /*#__PURE__*/_jsxDEV(SelectField, {\n                  style: {\n                    marginBottom: '12px'\n                  },\n                  form: form,\n                  name: \"StaffID\",\n                  optionList: optionStaffList,\n                  label: \"Nh\\xE2n vi\\xEAn\",\n                  placeholder: \"Ch\\u1ECDn nh\\xE2n vi\\xEAn\",\n                  isLoading: isLoading.type === 'FETCH_STAFF' && isLoading.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 9\n            }, this)\n          }, void 0, false), isAuthorization() === 'Accept' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(CheckboxField, {\n                form: form,\n                name: \"isAddStaff\",\n                text: \"Th\\xEAm nh\\xE2n vi\\xEAn\",\n                handleChangeCheckbox: setShowMoreField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `col-12 list-subtask ${isLoading.type === 'FETCH_TASK' && isLoading.status ? 'list-subtask-wrap' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                label: \"Danh s\\xE1ch c\\xF4ng vi\\u1EC7c\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ant-checkbox-group\",\n                  children: taskList.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `item d-flex justify-content-between  align-items-center ${checkStatusTask(item.DoneTask || item.StaffID)}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"info\",\n                      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                        className: \"d-flex m-0\",\n                        value: item.ID,\n                        checked: item.DoneTask,\n                        disabled: item.StaffID ? isAuthorization(item.StaffID) === 'Accept' ? false : true : true,\n                        onChange: e => checkHandleActionOfStaff({\n                          ID: item.ID,\n                          DoneTask: !item.DoneTask\n                        }, idx),\n                        children: item.WorkContent\n                      }, item.ID, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 14\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"info-item\",\n                        children: [item.DoneTask && item.StaffID ? 'Hoàn thành' : 'Phụ trách', \": \", item.StaffName || 'Trống']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 14\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 13\n                    }, this), isAuthorization(item.StaffID) === 'Accept' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"action d-flex align-items-center justify-content-end\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"action-item\",\n                        children: [!item.DoneTask ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                          title: `${item.StaffID ? 'Hủy' : 'Nhận'} công việc`,\n                          children: /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            className: \"btn btn-icon choice\",\n                            onClick: () => checkHandleActionOfStaff({\n                              ID: item.ID,\n                              StaffID: item.StaffID ? 0 : userInformation.UserInformationID\n                            }, idx),\n                            children: item.StaffID ? /*#__PURE__*/_jsxDEV(UserMinus, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 359,\n                              columnNumber: 35\n                            }, this) : /*#__PURE__*/_jsxDEV(UserPlus, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 359,\n                              columnNumber: 51\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 346,\n                            columnNumber: 18\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 345,\n                          columnNumber: 17\n                        }, this) : '', item.DoneTask ? /*#__PURE__*/_jsxDEV(DeleteTableRow, {\n                          handleDelete: checkHandleDeleteTask(idx)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 366,\n                          columnNumber: 17\n                        }, this) : isAuthorization() === 'Accept' ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                          title: \"C\\u1EADp nh\\u1EADt c\\xF4ng vi\\u1EC7c\",\n                          children: /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            className: \"btn btn-icon choice\",\n                            onClick: () => {\n                              setIsUpdateWorkContent({\n                                idx: idx,\n                                status: isUpdateWorkContent.idx === idx ? !isUpdateWorkContent.status : true,\n                                item: item\n                              });\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-edit\",\n                              style: {\n                                color: '#34c4a4',\n                                fontSize: 16,\n                                marginBottom: -1\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 380,\n                              columnNumber: 19\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 369,\n                            columnNumber: 18\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 368,\n                          columnNumber: 17\n                        }, this) : '']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 343,\n                        columnNumber: 15\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 14\n                    }, this) : !item.StaffID ?\n                    /*#__PURE__*/\n                    // if empty task\n                    _jsxDEV(\"div\", {\n                      className: \"action d-flex align-items-center\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"action-item\",\n                        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                          title: \"Nh\\u1EADn c\\xF4ng vi\\u1EC7c\",\n                          children: /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            className: \"btn btn-icon choice\",\n                            onClick: () => checkHandleActionOfStaff({\n                              ID: item.ID,\n                              StaffID: userInformation.UserInformationID\n                            }, idx),\n                            children: /*#__PURE__*/_jsxDEV(UserPlus, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 406,\n                              columnNumber: 18\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 393,\n                            columnNumber: 17\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 392,\n                          columnNumber: 16\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 391,\n                        columnNumber: 15\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 14\n                    }, this) : '']\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 12\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Spin, {\n                className: \"list-subtask-loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary w-100\",\n                disabled: isLoading.type === 'ADD_DATA' && isLoading.status || isLoading.type === 'FETCH_TASK' && isLoading.status,\n                children: [isUpdateWorkContent.status ? 'Update' : 'Add', (isLoading.type === 'ADD_DATA' && isLoading.status || isLoading.type === 'FETCH_TASK' && isLoading.status) && /*#__PURE__*/_jsxDEV(Spin, {\n                  className: \"loading-base\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 7\n          }, this)]\n        }, \"0\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\nexport default TaskForm;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/StaffList/ManageTask/Task/TaskForm.tsx"],"names":["yupResolver","Checkbox","Form","Modal","Spin","Tooltip","PropTypes","React","useEffect","useState","FilePlus","UserMinus","UserPlus","useForm","yup","DeleteTableRow","CheckboxField","InputTextField","SelectField","optionCommonPropTypes","TaskForm","propTypes","isLoading","shape","type","string","isRequired","status","bool","userInformation","object","optionRoleList","optionStaffList","taskList","arrayOf","ID","number","WorkContent","TaskGroupID","TaskGroupName","StaffID","StaffName","DoneTask","handleFetchTask","func","handleSubmit","handleUpdateTask","handleDeleteTask","handleFetchStaffListByRole","handleActionOfStaff","checkAuthorization","handleFetchGroupTask","defaultProps","props","isModalVisible","setIsModalVisible","openModal","closeModal","isUpdateWorkContent","setIsUpdateWorkContent","idx","item","showMoreField","setShowMoreField","schema","required","isAddStaff","RoleID","notRequired","when","nullable","defaultValuesInit","form","defaultValues","resolver","checkHandleFetchGroupTask","checkHandleFetchTask","checkHandleFetchStaffListByRole","id","setValue","checkHandleDeleteTask","checkHandleActionOfStaff","obj","checkHandleUpdateTask","then","res","reset","checkHandleSubmit","data","taskSubmitSwitch","OldStaffID","clearErrors","checkStatusTask","isAuthorization","marginBottom","map","e","UserInformationID","color","fontSize"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Checkbox, Form, Modal, Spin, Tooltip } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { FilePlus, RotateCcw, UserMinus, UserPlus } from 'react-feather'\r\nimport { useForm } from 'react-hook-form'\r\nimport * as yup from 'yup'\r\nimport DeleteTableRow from '~/components/Elements/DeleteTableRow/DeleteTableRow'\r\nimport CheckboxField from '~/components/FormControl/CheckboxField'\r\nimport InputTextField from '~/components/FormControl/InputTextField'\r\nimport SelectField from '~/components/FormControl/SelectField'\r\nimport { optionCommonPropTypes } from '~/utils/proptypes'\r\n\r\nTaskForm.propTypes = {\r\n\tisLoading: PropTypes.shape({\r\n\t\ttype: PropTypes.string.isRequired,\r\n\t\tstatus: PropTypes.bool.isRequired\r\n\t}),\r\n\tuserInformation: PropTypes.object,\r\n\toptionRoleList: optionCommonPropTypes,\r\n\toptionStaffList: optionCommonPropTypes,\r\n\ttaskList: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tID: PropTypes.number,\r\n\t\t\tWorkContent: PropTypes.string,\r\n\t\t\tTaskGroupID: PropTypes.number,\r\n\t\t\tTaskGroupName: PropTypes.string,\r\n\t\t\tStaffID: PropTypes.number,\r\n\t\t\tStaffName: PropTypes.string,\r\n\t\t\tDoneTask: PropTypes.bool\r\n\t\t})\r\n\t),\r\n\thandleFetchTask: PropTypes.func,\r\n\thandleSubmit: PropTypes.func,\r\n\thandleUpdateTask: PropTypes.func,\r\n\thandleDeleteTask: PropTypes.func,\r\n\thandleFetchStaffListByRole: PropTypes.func,\r\n\thandleActionOfStaff: PropTypes.func,\r\n\tcheckAuthorization: PropTypes.func,\r\n\thandleFetchGroupTask: PropTypes.func\r\n}\r\nTaskForm.defaultProps = {\r\n\tisLoading: { type: '', status: false },\r\n\tuserInformation: {},\r\n\toptionRoleList: [],\r\n\toptionStaffList: [],\r\n\ttaskList: [],\r\n\thandleFetchTask: null,\r\n\thandleSubmit: null,\r\n\thandleUpdateTask: null,\r\n\thandleDeleteTask: null,\r\n\thandleFetchStaffListByRole: null,\r\n\thandleActionOfStaff: null,\r\n\tcheckAuthorization: null,\r\n\thandleFetchGroupTask: null\r\n}\r\nfunction TaskForm(props) {\r\n\tconst {\r\n\t\tisLoading,\r\n\t\tuserInformation,\r\n\t\t//\r\n\t\toptionRoleList,\r\n\t\toptionStaffList,\r\n\t\ttaskList,\r\n\t\t//\r\n\t\thandleFetchTask,\r\n\t\thandleSubmit,\r\n\t\thandleUpdateTask,\r\n\t\thandleDeleteTask,\r\n\t\thandleFetchStaffListByRole,\r\n\t\thandleActionOfStaff,\r\n\t\tcheckAuthorization,\r\n\t\thandleFetchGroupTask\r\n\t} = props\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst openModal = () => setIsModalVisible(true)\r\n\tconst closeModal = () => setIsModalVisible(false)\r\n\tconst [isUpdateWorkContent, setIsUpdateWorkContent] = useState<{\r\n\t\tidx: number\r\n\t\titem: ITask\r\n\t\tstatus: boolean\r\n\t}>({\r\n\t\tidx: -1,\r\n\t\titem: null,\r\n\t\tstatus: false\r\n\t})\r\n\tconst [showMoreField, setShowMoreField] = useState(false)\r\n\r\n\tconst schema = yup.object().shape({\r\n\t\tWorkContent: yup.string().required('Bạn không được để trống'),\r\n\t\tisAddStaff: yup.bool(),\r\n\t\tRoleID: yup\r\n\t\t\t.number()\r\n\t\t\t.notRequired()\r\n\t\t\t.when('isAddStaff', (isAddStaff, schema) => {\r\n\t\t\t\tif (isAddStaff) {\r\n\t\t\t\t\treturn yup.number().nullable().required(`Bạn không được để trống`)\r\n\t\t\t\t}\r\n\t\t\t\treturn yup.number().nullable().notRequired()\r\n\t\t\t}),\r\n\t\tStaffID: yup\r\n\t\t\t.number()\r\n\t\t\t.notRequired()\r\n\t\t\t.when('isAddStaff', (isAddStaff, schema) => {\r\n\t\t\t\tif (isAddStaff) {\r\n\t\t\t\t\treturn yup.number().nullable().required(`Bạn không được để trống`)\r\n\t\t\t\t}\r\n\t\t\t\treturn yup.number().nullable().notRequired()\r\n\t\t\t})\r\n\t})\r\n\r\n\tconst defaultValuesInit = {\r\n\t\tWorkContent: '',\r\n\t\tisAddStaff: false,\r\n\t\tRoleID: null,\r\n\t\tStaffID: null\r\n\t}\r\n\r\n\tconst form = useForm({\r\n\t\tdefaultValues: defaultValuesInit,\r\n\t\tresolver: yupResolver(schema)\r\n\t})\r\n\r\n\tconst checkHandleFetchGroupTask = () => {\r\n\t\tif (!handleFetchGroupTask) return\r\n\t\thandleFetchGroupTask()\r\n\t}\r\n\r\n\tconst checkHandleFetchTask = () => {\r\n\t\tif (!handleFetchTask) return\r\n\t\thandleFetchTask()\r\n\t}\r\n\r\n\tconst checkHandleFetchStaffListByRole = (id: number) => {\r\n\t\tif (!handleFetchStaffListByRole) return\r\n\t\tform.setValue('StaffID', null)\r\n\t\thandleFetchStaffListByRole(id)\r\n\t}\r\n\r\n\tconst checkHandleDeleteTask = (idx: number) => {\r\n\t\tif (!handleDeleteTask) return\r\n\t\treturn handleDeleteTask(idx)\r\n\t}\r\n\r\n\tconst checkHandleActionOfStaff = (obj: { ID: number; StaffID?: number; DoneTask?: boolean }, idx: number) => {\r\n\t\tif (!handleActionOfStaff) return\r\n\t\treturn handleActionOfStaff(obj, idx)\r\n\t}\r\n\r\n\tconst checkHandleUpdateTask = (\r\n\t\tobj: {\r\n\t\t\tID: number\r\n\t\t\tWorkContent: string\r\n\t\t\tisAddStaff: boolean\r\n\t\t\tRoleID: number\r\n\t\t\tStaffID: number\r\n\t\t\tOldStaffID: number\r\n\t\t},\r\n\t\tidx: number\r\n\t) => {\r\n\t\tif (!handleSubmit) return\r\n\t\thandleSubmit(obj, idx).then((res) => {\r\n\t\t\tif (res) {\r\n\t\t\t\tform.reset({ ...defaultValuesInit })\r\n\t\t\t\tsetShowMoreField(false)\r\n\t\t\t\tsetIsUpdateWorkContent({\r\n\t\t\t\t\tidx: -1,\r\n\t\t\t\t\titem: null,\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst checkHandleSubmit = (data: { WorkContent: string; isAddStaff: boolean; RoleID: number; StaffID: number }) => {\r\n\t\tif (!handleSubmit) return\r\n\t\thandleSubmit(data).then((res) => {\r\n\t\t\tif (res) {\r\n\t\t\t\tform.reset({ ...defaultValuesInit })\r\n\t\t\t\tsetShowMoreField(false)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst taskSubmitSwitch = (data: { WorkContent: string; isAddStaff: boolean; RoleID: number; StaffID: number }) => {\r\n\t\tif (isUpdateWorkContent.status) {\r\n\t\t\tcheckHandleUpdateTask(\r\n\t\t\t\t{\r\n\t\t\t\t\t...data,\r\n\t\t\t\t\tID: isUpdateWorkContent.item.ID,\r\n\t\t\t\t\tOldStaffID: isUpdateWorkContent.item.StaffID\r\n\t\t\t\t},\r\n\t\t\t\tisUpdateWorkContent.idx\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\tcheckHandleSubmit(data)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tform.clearErrors()\r\n\t\tisModalVisible && checkHandleFetchTask()\r\n\t}, [isModalVisible])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { status, item } = isUpdateWorkContent\r\n\t\tif (status && item) {\r\n\t\t\tform.setValue('WorkContent', item.WorkContent)\r\n\t\t\tif (item.StaffID) {\r\n\t\t\t\tsetShowMoreField(true)\r\n\t\t\t\tcheckHandleFetchStaffListByRole(item.RoleID)\r\n\t\t\t\tform.setValue('isAddStaff', true)\r\n\t\t\t\tform.setValue('RoleID', item.RoleID)\r\n\t\t\t\tform.setValue('StaffID', item.StaffID)\r\n\t\t\t} else {\r\n\t\t\t\tsetShowMoreField(false)\r\n\t\t\t\tform.setValue('isAddStaff', false)\r\n\t\t\t\tform.setValue('RoleID', null)\r\n\t\t\t\tform.setValue('StaffID', null)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetShowMoreField(false)\r\n\t\t\tform.reset({ ...defaultValuesInit })\r\n\t\t\tform.clearErrors()\r\n\t\t}\r\n\t}, [isUpdateWorkContent])\r\n\r\n\tconst checkStatusTask = (status: number | boolean) => {\r\n\t\tif (status === true) {\r\n\t\t\treturn 'item-done'\r\n\t\t}\r\n\t\tif (status > 0) {\r\n\t\t\treturn 'item-working'\r\n\t\t}\r\n\t\treturn 'item-empty'\r\n\t}\r\n\r\n\tconst isAuthorization = (StaffID?: number) => {\r\n\t\tif (!checkAuthorization) return\r\n\t\treturn checkAuthorization(StaffID)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button className=\"btn btn-icon view\" onClick={openModal}>\r\n\t\t\t\t<Tooltip title=\"Bảng công việc\">\r\n\t\t\t\t\t<FilePlus />\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</button>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={`Công việc`}\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tcheckHandleFetchGroupTask()\r\n\t\t\t\t\tcloseModal()\r\n\t\t\t\t}}\r\n\t\t\t\tfooter={null}\r\n\t\t\t>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Form key=\"0\" layout=\"vertical\" onFinish={form.handleSubmit(taskSubmitSwitch)}>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t<InputTextField\r\n\t\t\t\t\t\t\t\t\tstyle={{ marginBottom: '12px' }}\r\n\t\t\t\t\t\t\t\t\tform={form}\r\n\t\t\t\t\t\t\t\t\tname=\"WorkContent\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Tiêu đề công việc\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Nhập tiêu đề công việc\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{showMoreField && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-6\">\r\n\t\t\t\t\t\t\t\t\t\t<SelectField\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginBottom: '12px' }}\r\n\t\t\t\t\t\t\t\t\t\t\tform={form}\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"RoleID\"\r\n\t\t\t\t\t\t\t\t\t\t\toptionList={optionRoleList}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Chức vụ\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Chọn chức vụ\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChangeSelect={checkHandleFetchStaffListByRole}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-6\">\r\n\t\t\t\t\t\t\t\t\t\t<SelectField\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginBottom: '12px' }}\r\n\t\t\t\t\t\t\t\t\t\t\tform={form}\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"StaffID\"\r\n\t\t\t\t\t\t\t\t\t\t\toptionList={optionStaffList}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Nhân viên\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Chọn nhân viên\"\r\n\t\t\t\t\t\t\t\t\t\t\tisLoading={isLoading.type === 'FETCH_STAFF' && isLoading.status}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{isAuthorization() === 'Accept' && (\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t<CheckboxField form={form} name=\"isAddStaff\" text=\"Thêm nhân viên\" handleChangeCheckbox={setShowMoreField} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className={`col-12 list-subtask ${isLoading.type === 'FETCH_TASK' && isLoading.status ? 'list-subtask-wrap' : ''}`}>\r\n\t\t\t\t\t\t\t\t<Form.Item label=\"Danh sách công việc\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"ant-checkbox-group\">\r\n\t\t\t\t\t\t\t\t\t\t{taskList.map((item: ITask, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`item d-flex justify-content-between  align-items-center ${checkStatusTask(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.DoneTask || item.StaffID\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"info\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"d-flex m-0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={item.ID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={item.ID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={item.DoneTask}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={item.StaffID ? (isAuthorization(item.StaffID) === 'Accept' ? false : true) : true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcheckHandleActionOfStaff(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tID: item.ID,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDoneTask: !item.DoneTask\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tidx\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.WorkContent}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"info-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.DoneTask && item.StaffID ? 'Hoàn thành' : 'Phụ trách'}: {item.StaffName || 'Trống'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{isAuthorization(item.StaffID) === 'Accept' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"action d-flex align-items-center justify-content-end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"action-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!item.DoneTask ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title={`${item.StaffID ? 'Hủy' : 'Nhận'} công việc`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-icon choice\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcheckHandleActionOfStaff(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tID: item.ID,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStaffID: item.StaffID ? 0 : userInformation.UserInformationID\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tidx\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.StaffID ? <UserMinus /> : <UserPlus />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.DoneTask ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteTableRow handleDelete={checkHandleDeleteTask(idx)} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : isAuthorization() === 'Accept' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Cập nhật công việc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-icon choice\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetIsUpdateWorkContent({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tidx: idx,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatus: isUpdateWorkContent.idx === idx ? !isUpdateWorkContent.status : true,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem: item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-edit\" style={{ color: '#34c4a4', fontSize: 16, marginBottom: -1 }}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !item.StaffID ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// if empty task\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"action d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"action-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Nhận công việc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-icon choice\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcheckHandleActionOfStaff(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tID: item.ID,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStaffID: userInformation.UserInformationID\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tidx\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<UserPlus />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t<Spin className=\"list-subtask-loading\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row \">\r\n\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary w-100\"\r\n\t\t\t\t\t\t\t\t\tdisabled={(isLoading.type === 'ADD_DATA' && isLoading.status) || (isLoading.type === 'FETCH_TASK' && isLoading.status)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{isUpdateWorkContent.status ? 'Update' : 'Add'}\r\n\t\t\t\t\t\t\t\t\t{((isLoading.type === 'ADD_DATA' && isLoading.status) || (isLoading.type === 'FETCH_TASK' && isLoading.status)) && (\r\n\t\t\t\t\t\t\t\t\t\t<Spin className=\"loading-base\" />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default TaskForm\r\n"]},"metadata":{},"sourceType":"module"}
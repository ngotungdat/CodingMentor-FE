{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Package\\\\PackageExaminer\\\\PackageExaminer.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { packageExaminerApi, teacherApi } from '~/apiBase';\nimport DeleteTableRow from '~/components/Elements/DeleteTableRow/DeleteTableRow';\nimport SortBox from '~/components/Elements/SortBox';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nimport { numberWithCommas } from '~/utils/functions';\nimport PackageExaminerForm from './PackageExaminerForm/PackageExaminerForm';\nimport PackageExaminerSalary from './PackageExaminerForm/PackageExaminerSalary';\n\nfunction PackageExaminer() {\n  const {\n    0: examinerList,\n    1: setExaminerList\n  } = useState([]);\n  console.log('gia luot cham bai', examinerList);\n  const {\n    0: teacherList,\n    1: setTeacherList\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const {\n    0: activeColumnSearch,\n    1: setActiveColumnSearch\n  } = useState(''); // SORT OPTION\n\n  const sortOptionList = [{\n    dataSort: {\n      sort: 0,\n      sortType: true\n    },\n    value: 1,\n    text: 'Tên tăng dần'\n  }, {\n    dataSort: {\n      sort: 0,\n      sortType: false\n    },\n    value: 2,\n    text: 'Tên giảm dần'\n  }, {\n    dataSort: {\n      sort: 1,\n      sortType: true\n    },\n    value: 3,\n    text: 'Thưởng tăng dần'\n  }, {\n    dataSort: {\n      sort: 1,\n      sortType: false\n    },\n    value: 4,\n    text: 'Thưởng giảm dần'\n  }]; // FILTER\n\n  const listFieldInit = {\n    pageIndex: 1,\n    pageSize: pageSize,\n    sort: -1,\n    sortType: false,\n    TeacherID: null,\n    TeacherName: ''\n  };\n  let refValue = useRef({\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false\n  });\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(listFieldInit); // PAGINATION\n\n  const getPagination = (pageIndex, pageSize) => {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize,\n      pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  }; // SORT\n\n\n  const onSort = option => {\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), refValue.current));\n  }; // RESET SEARCH\n\n\n  const onResetSearch = () => {\n    setActiveColumnSearch('');\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), {}, {\n      pageSize: refValue.current.pageSize\n    }));\n  }; // ACTION SEARCH\n\n\n  const onSearch = (valueSearch, dataIndex) => {\n    setActiveColumnSearch(dataIndex);\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1,\n      [dataIndex]: valueSearch\n    }));\n  };\n\n  const fetchTeacherList = async () => {\n    try {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n      const res = await teacherApi.getAll({\n        pageIndex: 1,\n        pageSize: pageSize\n      });\n\n      if (res.status === 200) {\n        setTeacherList(res.data.data);\n      }\n\n      if (res.status === 204) {\n        setTeacherList([]);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchTeacherList();\n  }, []);\n\n  const fetchExaminerList = async () => {\n    try {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n      const res = await packageExaminerApi.getAll(filters);\n\n      if (res.status === 200) {\n        setExaminerList(res.data.data);\n        setTotalPage(res.data.totalRow);\n      }\n\n      if (res.status === 204) {\n        setExaminerList([]);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchExaminerList();\n  }, [filters]); // CREATE\n\n  const onCreateExaminer = idx => {\n    return async examiner => {\n      try {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: true\n        });\n        const {\n          TeacherID,\n          Salary\n        } = examiner;\n        const newExaminer = {\n          TeacherID,\n          Salary: parseInt(Salary.replace(/\\D/g, ''))\n        };\n        const res = await packageExaminerApi.add(newExaminer);\n\n        if (res.status === 200) {\n          const newTeacherList = [...teacherList];\n\n          const newTeacher = _objectSpread(_objectSpread({}, teacherList[idx]), {}, {\n            isFixSetpacked: true\n          });\n\n          newTeacherList.splice(idx, 1, newTeacher);\n          setTeacherList(newTeacherList);\n          onResetSearch(); // <== khi tạo xong r reset search để trở về trang đầu tiên\n\n          showNoti('success', res.data.message);\n          return true;\n        }\n      } catch (error) {\n        showNoti('danger', error.Message);\n      } finally {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: false\n        });\n      }\n    };\n  }; // UPDATE\n\n\n  const onUpdateExaminer = idx => {\n    return async examiner => {\n      try {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: true\n        });\n        const {\n          TeacherID,\n          Salary\n        } = examiner;\n        const newExaminer = {\n          TeacherID,\n          Salary: parseInt(Salary.replace(/\\D/g, ''))\n        };\n        const res = await packageExaminerApi.update(newExaminer);\n\n        if (res.status === 200) {\n          const newExaminerList = [...examinerList];\n          newExaminerList.splice(idx, 1, _objectSpread(_objectSpread({}, newExaminerList[idx]), newExaminer));\n          setExaminerList(newExaminerList);\n          showNoti('success', res.data.message);\n          return true;\n        }\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: false\n        });\n      }\n    };\n  }; // DELETE\n\n\n  const onDeleteExaminer = idx => {\n    return async () => {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n\n      try {\n        const delObj = examinerList[idx];\n        const newDelObj = {\n          TeacherID: delObj.TeacherID,\n          Salary: delObj.Salary,\n          Enable: false\n        };\n        const res = await packageExaminerApi.delete(newDelObj);\n\n        if (res.status === 200) {\n          const newTeacherList = teacherList.map(t => newDelObj.TeacherID === t.UserInformationID ? _objectSpread(_objectSpread({}, t), {}, {\n            isFixSetpacked: false\n          }) : t);\n          setTeacherList(newTeacherList);\n        }\n\n        if (examinerList.length === 1) {\n          filters.pageIndex === 1 ? (setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n            pageIndex: 1\n          })), setExaminerList([])) : setFilters(_objectSpread(_objectSpread(_objectSpread({}, filters), refValue.current), {}, {\n            pageIndex: filters.pageIndex - 1\n          }));\n          return;\n        }\n\n        fetchExaminerList();\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'GET_ALL',\n          status: false\n        });\n      }\n    };\n  };\n\n  const columns = [_objectSpread(_objectSpread({\n    title: 'Tên giáo viên',\n    dataIndex: 'TeacherName'\n  }, FilterColumn('TeacherName', onSearch, onResetSearch)), {}, {\n    className: activeColumnSearch === 'TeacherName' ? 'active-column-search' : ''\n  }), {\n    title: 'Thưởng chấm bài',\n    dataIndex: 'Salary',\n    render: price => !price ? 0 : numberWithCommas(price)\n  }, {\n    title: 'SĐT',\n    dataIndex: 'Mobile'\n  }, {\n    align: 'center',\n    width: 100,\n    render: (_, record, idx) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PackageExaminerSalary, {\n        isLoading: isLoading,\n        isUpdate: true,\n        examinerObj: record,\n        handleSubmit: onUpdateExaminer(idx)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(DeleteTableRow, {\n        handleDelete: onDeleteExaminer(idx)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(PowerTable, {\n        currentPage: filters.pageIndex,\n        totalPage: totalPage,\n        getPagination: getPagination,\n        loading: isLoading // Size=\"table-small\"\n        ,\n        addClass: \"basic-header\",\n        dataSource: examinerList,\n        columns: columns,\n        TitlePage: \"Danh s\\xE1ch gi\\xE1o vi\\xEAn ch\\u1EA5m b\\u1ED9 \\u0111\\u1EC1\",\n        Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"extra-table\",\n          children: /*#__PURE__*/_jsxDEV(SortBox, {\n            width: 150,\n            handleSort: onSort,\n            dataOption: sortOptionList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 7\n        }, this),\n        TitleCard: /*#__PURE__*/_jsxDEV(PackageExaminerForm, {\n          isLoading: isLoading,\n          teacherList: teacherList,\n          handleCreateExaminer: onCreateExaminer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 3\n  }, this);\n}\n\nexport default PackageExaminer;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Package/PackageExaminer/PackageExaminer.tsx"],"names":["React","useEffect","useRef","useState","packageExaminerApi","teacherApi","DeleteTableRow","SortBox","PowerTable","FilterColumn","useWrap","numberWithCommas","PackageExaminerForm","PackageExaminerSalary","PackageExaminer","examinerList","setExaminerList","console","log","teacherList","setTeacherList","isLoading","setIsLoading","type","status","totalPage","setTotalPage","showNoti","pageSize","activeColumnSearch","setActiveColumnSearch","sortOptionList","dataSort","sort","sortType","value","text","listFieldInit","pageIndex","TeacherID","TeacherName","refValue","filters","setFilters","getPagination","current","onSort","option","title","onResetSearch","onSearch","valueSearch","dataIndex","fetchTeacherList","res","getAll","data","error","message","fetchExaminerList","totalRow","onCreateExaminer","idx","examiner","Salary","newExaminer","parseInt","replace","add","newTeacherList","newTeacher","isFixSetpacked","splice","Message","onUpdateExaminer","update","newExaminerList","onDeleteExaminer","delObj","newDelObj","Enable","delete","map","t","UserInformationID","length","columns","className","render","price","align","width","_","record"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { packageExaminerApi, teacherApi } from '~/apiBase'\r\nimport DeleteTableRow from '~/components/Elements/DeleteTableRow/DeleteTableRow'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\nimport PriceFixExam from '~/pages/option/price-fix-exam'\r\nimport { numberWithCommas } from '~/utils/functions'\r\nimport PackageExaminerForm from './PackageExaminerForm/PackageExaminerForm'\r\nimport PackageExaminerSalary from './PackageExaminerForm/PackageExaminerSalary'\r\n\r\nfunction PackageExaminer() {\r\n\tconst [examinerList, setExaminerList] = useState<IPackageExaminer[]>([])\r\n\tconsole.log('gia luot cham bai', examinerList)\r\n\tconst [teacherList, setTeacherList] = useState<ITeacher[]>([])\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst { showNoti, pageSize } = useWrap()\r\n\tconst [activeColumnSearch, setActiveColumnSearch] = useState('')\r\n\t// SORT OPTION\r\n\tconst sortOptionList = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 1,\r\n\t\t\ttext: 'Tên tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 2,\r\n\t\t\ttext: 'Tên giảm dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 1,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 3,\r\n\t\t\ttext: 'Thưởng tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 1,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 4,\r\n\t\t\ttext: 'Thưởng giảm dần'\r\n\t\t}\r\n\t]\r\n\t// FILTER\r\n\tconst listFieldInit = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: pageSize,\r\n\t\tsort: -1,\r\n\t\tsortType: false,\r\n\r\n\t\tTeacherID: null,\r\n\t\tTeacherName: ''\r\n\t}\r\n\tlet refValue = useRef({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false\r\n\t})\r\n\tconst [filters, setFilters] = useState(listFieldInit)\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tpageSize,\r\n\t\t\tpageIndex\r\n\t\t}\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\t...refValue.current\r\n\t\t})\r\n\t}\r\n\t// SORT\r\n\tconst onSort = (option) => {\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current\r\n\t\t})\r\n\t}\r\n\t// RESET SEARCH\r\n\tconst onResetSearch = () => {\r\n\t\tsetActiveColumnSearch('')\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\tpageSize: refValue.current.pageSize\r\n\t\t})\r\n\t}\r\n\t// ACTION SEARCH\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tsetActiveColumnSearch(dataIndex)\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t[dataIndex]: valueSearch\r\n\t\t})\r\n\t}\r\n\tconst fetchTeacherList = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t})\r\n\t\t\tconst res = await teacherApi.getAll({ pageIndex: 1, pageSize: pageSize })\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetTeacherList(res.data.data)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetTeacherList([])\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchTeacherList()\r\n\t}, [])\r\n\tconst fetchExaminerList = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t})\r\n\t\t\tconst res = await packageExaminerApi.getAll(filters)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetExaminerList(res.data.data)\r\n\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetExaminerList([])\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchExaminerList()\r\n\t}, [filters])\r\n\t// CREATE\r\n\tconst onCreateExaminer = (idx: number) => {\r\n\t\treturn async (examiner: { TeacherID: number; TeacherName?: string; Salary: string }) => {\r\n\t\t\ttry {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t})\r\n\t\t\t\tconst { TeacherID, Salary } = examiner\r\n\t\t\t\tconst newExaminer = {\r\n\t\t\t\t\tTeacherID,\r\n\t\t\t\t\tSalary: parseInt(Salary.replace(/\\D/g, ''))\r\n\t\t\t\t}\r\n\t\t\t\tconst res = await packageExaminerApi.add(newExaminer)\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tconst newTeacherList = [...teacherList]\r\n\t\t\t\t\tconst newTeacher = {\r\n\t\t\t\t\t\t...teacherList[idx],\r\n\t\t\t\t\t\tisFixSetpacked: true\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewTeacherList.splice(idx, 1, newTeacher)\r\n\t\t\t\t\tsetTeacherList(newTeacherList)\r\n\t\t\t\t\tonResetSearch() // <== khi tạo xong r reset search để trở về trang đầu tiên\r\n\t\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.Message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// UPDATE\r\n\tconst onUpdateExaminer = (idx: number) => {\r\n\t\treturn async (examiner: { TeacherID: number; TeacherName?: string; Salary: string }) => {\r\n\t\t\ttry {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t})\r\n\t\t\t\tconst { TeacherID, Salary } = examiner\r\n\t\t\t\tconst newExaminer = {\r\n\t\t\t\t\tTeacherID,\r\n\t\t\t\t\tSalary: parseInt(Salary.replace(/\\D/g, ''))\r\n\t\t\t\t}\r\n\t\t\t\tconst res = await packageExaminerApi.update(newExaminer)\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tconst newExaminerList = [...examinerList]\r\n\t\t\t\t\tnewExaminerList.splice(idx, 1, {\r\n\t\t\t\t\t\t...newExaminerList[idx],\r\n\t\t\t\t\t\t...newExaminer\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetExaminerList(newExaminerList)\r\n\t\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// DELETE\r\n\tconst onDeleteExaminer = (idx: number) => {\r\n\t\treturn async () => {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t})\r\n\t\t\ttry {\r\n\t\t\t\tconst delObj = examinerList[idx]\r\n\t\t\t\tconst newDelObj = {\r\n\t\t\t\t\tTeacherID: delObj.TeacherID,\r\n\t\t\t\t\tSalary: delObj.Salary,\r\n\t\t\t\t\tEnable: false\r\n\t\t\t\t}\r\n\t\t\t\tconst res = await packageExaminerApi.delete(newDelObj)\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tconst newTeacherList = teacherList.map((t) => (newDelObj.TeacherID === t.UserInformationID ? { ...t, isFixSetpacked: false } : t))\r\n\t\t\t\t\tsetTeacherList(newTeacherList)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (examinerList.length === 1) {\r\n\t\t\t\t\tfilters.pageIndex === 1\r\n\t\t\t\t\t\t? (setFilters({\r\n\t\t\t\t\t\t\t\t...listFieldInit,\r\n\t\t\t\t\t\t\t\t...refValue.current,\r\n\t\t\t\t\t\t\t\tpageIndex: 1\r\n\t\t\t\t\t\t  }),\r\n\t\t\t\t\t\t  setExaminerList([]))\r\n\t\t\t\t\t\t: setFilters({\r\n\t\t\t\t\t\t\t\t...filters,\r\n\t\t\t\t\t\t\t\t...refValue.current,\r\n\t\t\t\t\t\t\t\tpageIndex: filters.pageIndex - 1\r\n\t\t\t\t\t\t  })\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tfetchExaminerList()\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Tên giáo viên',\r\n\t\t\tdataIndex: 'TeacherName',\r\n\t\t\t...FilterColumn('TeacherName', onSearch, onResetSearch),\r\n\t\t\tclassName: activeColumnSearch === 'TeacherName' ? 'active-column-search' : ''\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Thưởng chấm bài',\r\n\t\t\tdataIndex: 'Salary',\r\n\t\t\trender: (price) => (!price ? 0 : numberWithCommas(price))\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'SĐT',\r\n\t\t\tdataIndex: 'Mobile'\r\n\t\t},\r\n\t\t{\r\n\t\t\talign: 'center',\r\n\t\t\twidth: 100,\r\n\t\t\trender: (_, record: IPackageExaminer, idx) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<PackageExaminerSalary isLoading={isLoading} isUpdate={true} examinerObj={record} handleSubmit={onUpdateExaminer(idx)} />\r\n\t\t\t\t\t<DeleteTableRow handleDelete={onDeleteExaminer(idx)} />\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-12\">\r\n\t\t\t\t<PowerTable\r\n\t\t\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\t\t\ttotalPage={totalPage}\r\n\t\t\t\t\tgetPagination={getPagination}\r\n\t\t\t\t\tloading={isLoading}\r\n\t\t\t\t\t// Size=\"table-small\"\r\n\t\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\t\tdataSource={examinerList}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tTitlePage=\"Danh sách giáo viên chấm bộ đề\"\r\n\t\t\t\t\tExtra={\r\n\t\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t\t<SortBox width={150} handleSort={onSort} dataOption={sortOptionList} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tTitleCard={<PackageExaminerForm isLoading={isLoading} teacherList={teacherList} handleCreateExaminer={onCreateExaminer} />}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PackageExaminer\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\Global\\\\Option\\\\ProgramDetail\\\\CurriculumDetail.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Popconfirm, Select, Switch } from 'antd';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport { curriculumDetailApi, examTopicApi } from '~/apiBase';\nimport NestedTable from '~/components/Elements/NestedTable';\nimport PowerTable from '~/components/PowerTable';\nimport { useWrap } from '~/context/wrap';\nimport AddExamForm from './AddExamForm';\nimport DetailsModal from './DetailsModal';\nlet pageIndex = 1;\n\nconst CurriculumDetail = props => {\n  const {\n    Option\n  } = Select;\n  const router = useRouter();\n  const {\n    courseID: courseID,\n    slug: slug\n  } = router.query; // const curriculumID = parseInt(router.query.slug as string);\n\n  const {\n    curriculumID,\n    dataSubject,\n    loadingOut,\n    isNested,\n    isFixed\n  } = props;\n  const {\n    0: loadingSelect,\n    1: setLoadingSelect\n  } = useState({\n    id: null,\n    status: false\n  }); // ------ BASE USESTATE TABLE -------\n\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    showNoti,\n    pageSize,\n    isAdmin\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: examTopic,\n    1: setExamTopic\n  } = useState({\n    pageIndex: 1,\n    pageSize: 100,\n    Type: 4 // 4 LÀ BÀI TẬP\n\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    CurriculumID: curriculumID ? curriculumID : null\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi);\n  const {\n    0: dataExamTopic,\n    1: setDataExamTopic\n  } = useState(null);\n  const {\n    0: currentCheckID,\n    1: setCurrentCheckID\n  } = useState(null);\n  const {\n    0: loadingCheck,\n    1: setLoadingCheck\n  } = useState({\n    id: null,\n    status: false\n  }); // GET DATA COURSE\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await curriculumDetailApi.getAll(todoApi);\n\n      if (res.status == 200) {\n        if (res.data.data.length > 0) {\n          setDataSource(res.data.data);\n          setTotalPage(res.data.totalRow);\n        } else {\n          showNoti('danger', 'Không có dữ liệu');\n        }\n      }\n\n      res.status == 204 && showNoti('danger', 'Không có dữ liệu') && setDataSource([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  const updateSubject = async (value, data, index) => {\n    let cloneData = _objectSpread({}, data);\n\n    cloneData.SubjectID = value;\n    setLoadingSelect({\n      id: data.ID,\n      status: true\n    });\n\n    try {\n      let res = await curriculumDetailApi.update({\n        ID: data.ID,\n        SubjectID: value\n      });\n\n      if (res.status == 200) {\n        let newDataSource = [...dataSource];\n        newDataSource.splice(index, 1, cloneData);\n        setDataSource(newDataSource);\n        showNoti('success', res.data.message);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoadingSelect({\n        id: data.ID,\n        status: false\n      });\n    }\n  };\n\n  const returnValue = ID => {\n    let value = null;\n    dataSource.every((item, index) => {\n      if (item.ID == ID) {\n        value = item.SubjectID;\n        return false;\n      } else {\n        return true;\n      }\n    });\n    return value;\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  const getPagination = pageNumber => {\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      pageIndex: pageNumber\n    }));\n  };\n\n  const onChange_typeLesson = async (ID, checked) => {\n    let res = null;\n    setLoadingCheck({\n      id: ID,\n      status: true\n    });\n\n    try {\n      if (checked) {\n        res = await curriculumDetailApi.update({\n          ID: ID,\n          isExam: true\n        });\n      } else {\n        res = await curriculumDetailApi.update({\n          ID: ID,\n          isExam: false\n        });\n      }\n\n      if (res.status == 200) {\n        showNoti('success', checked ? 'Đã chuyển sang kiểm tra' : 'Đã tắt kiểm tra');\n        setTodoApi(_objectSpread({}, todoApi));\n        checked ? setCurrentCheckID(ID) : setCurrentCheckID(null);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoadingCheck({\n        id: ID,\n        status: false\n      });\n    }\n  };\n\n  const getLessonID = async () => {\n    try {\n      let res = await examTopicApi.getAll(examTopic);\n\n      if (res.status == 200) {\n        setDataExamTopic(res.data.data);\n      } else if (res.status == 204) {}\n    } catch (error) {\n      console.log('GetLessonID: ', error);\n    }\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(() => {\n    getDataSource();\n    getLessonID();\n  }, [todoApi]);\n  useEffect(() => {\n    if (loadingOut && loadingOut.status && loadingOut.type === 'GET_ALL') {\n      getDataSource();\n    }\n  }, [loadingOut]);\n  const columns = [{\n    title: 'Bài học',\n    dataIndex: 'SubjectName',\n    key: 'subjectname',\n    className: 'text-center',\n    render: (text, data, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isAdmin ? dataSubject && /*#__PURE__*/_jsxDEV(Select, {\n        loading: data.ID == loadingSelect.id && loadingSelect.status,\n        value: returnValue(data.ID),\n        style: {\n          width: '100%',\n          margin: 'auto'\n        },\n        className: \"style-input\",\n        showSearch: true,\n        optionFilterProp: \"children\",\n        defaultValue: data.SubjectID,\n        onChange: value => updateSubject(value, data, index),\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: 0,\n          children: \"Tr\\u1ED1ng\"\n        }, \"none\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this), dataSubject === null || dataSubject === void 0 ? void 0 : dataSubject.map((item, index) => /*#__PURE__*/_jsxDEV(Option, {\n          value: item.ID,\n          children: item.SubjectName\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 10\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  }, {\n    title: 'Trạng thái',\n    dataIndex: 'StatusName',\n    key: 'statusname',\n    className: 'text-center',\n    render: (text, data) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isAdmin ? isFixed ? /*#__PURE__*/_jsxDEV(Switch, {\n        checked: data.IsExam,\n        checkedChildren: \"Ki\\u1EC3m tra\",\n        unCheckedChildren: \"Ki\\u1EC3m tra\",\n        onChange: checked => onChange_typeLesson(data.ID, checked),\n        loading: loadingCheck.id == data.ID && loadingCheck.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data !== null && data !== void 0 && data.IsExam ? 'Kiểm tra' : 'Buổi học'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data !== null && data !== void 0 && data.IsExam ? 'Kiểm tra' : 'Buổi học'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }, this)\n  }, {\n    title: 'Buổi học',\n    dataIndex: 'LessonNumber',\n    key: 'lessonnumber',\n    className: 'col-short text-center'\n  }, {\n    title: '',\n    dataIndex: 'StatusName',\n    key: 'statusname',\n    className: 'text-center',\n    render: (text, data) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !data.IsExam ? /*#__PURE__*/_jsxDEV(DetailsModal, {\n        isAdmin: isAdmin,\n        curriculumDetailID: data.ID,\n        dataExamTopic: dataExamTopic,\n        dataCurriculumDetail: dataSource,\n        onFetchData: () => setTodoApi(_objectSpread({}, todoApi)),\n        courseID: courseID,\n        dataRow: data,\n        isFixed: isFixed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(AddExamForm, {\n        disable: props.disable,\n        dataExamTopic: dataExamTopic,\n        dataRow: data,\n        onFetchData: () => (setTodoApi(_objectSpread({}, todoApi)), setCurrentCheckID(null)),\n        currentCheckID: currentCheckID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  }];\n\n  async function _insertSubject() {\n    try {\n      const res = await curriculumDetailApi.insert({\n        CurriculumID: curriculumID\n      });\n      res.status == 200 && getDataSource();\n    } catch (error) {\n      showNoti('danger', error === null || error === void 0 ? void 0 : error.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 d-flex mt-2\",\n      children: /*#__PURE__*/_jsxDEV(Popconfirm, {\n        title: \"B\\u1EA1n mu\\u1ED1n th\\xEAm bu\\u1ED5i h\\u1ECDc m\\u1EDBi?\",\n        onConfirm: _insertSubject,\n        okText: \"Th\\xEAm\",\n        cancelText: \"Kh\\xF4ng\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-warning\",\n          children: \"Th\\xEAm bu\\u1ED5i h\\u1ECDc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 4\n    }, this), isNested ? /*#__PURE__*/_jsxDEV(NestedTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: pageNumber => getPagination(pageNumber),\n      addClass: \"table-curriculum-detail\",\n      loading: isLoading,\n      dataSource: dataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(PowerTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: pageNumber => getPagination(pageNumber),\n      addClass: \"table-curriculum-detail\",\n      loading: isLoading,\n      dataSource: dataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\nexport default CurriculumDetail;","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/Global/Option/ProgramDetail/CurriculumDetail.tsx"],"names":["Button","Popconfirm","Select","Switch","useRouter","React","useEffect","useState","curriculumDetailApi","examTopicApi","NestedTable","PowerTable","useWrap","AddExamForm","DetailsModal","pageIndex","CurriculumDetail","props","Option","router","courseID","slug","query","curriculumID","dataSubject","loadingOut","isNested","isFixed","loadingSelect","setLoadingSelect","id","status","dataSource","setDataSource","showNoti","pageSize","isAdmin","isLoading","setIsLoading","type","examTopic","setExamTopic","Type","totalPage","setTotalPage","currentPage","setCurrentPage","listTodoApi","CurriculumID","todoApi","setTodoApi","dataExamTopic","setDataExamTopic","currentCheckID","setCurrentCheckID","loadingCheck","setLoadingCheck","getDataSource","res","getAll","data","length","totalRow","error","message","updateSubject","value","index","cloneData","SubjectID","ID","update","newDataSource","splice","returnValue","every","item","getPagination","pageNumber","onChange_typeLesson","checked","isExam","getLessonID","console","log","columns","title","dataIndex","key","className","render","text","width","margin","map","SubjectName","IsExam","disable","_insertSubject","insert"],"mappings":"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","sourcesContent":["import { Button, Popconfirm, Select, Switch } from 'antd'\r\nimport { useRouter } from 'next/router'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { curriculumDetailApi, examTopicApi } from '~/apiBase'\r\nimport NestedTable from '~/components/Elements/NestedTable'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport { useWrap } from '~/context/wrap'\r\nimport AddExamForm from './AddExamForm'\r\nimport DetailsModal from './DetailsModal'\r\n\r\nlet pageIndex = 1\r\n\r\nconst CurriculumDetail = (props) => {\r\n\tconst { Option } = Select\r\n\tconst router = useRouter()\r\n\tconst { courseID: courseID, slug: slug } = router.query\r\n\t// const curriculumID = parseInt(router.query.slug as string);\r\n\tconst { curriculumID, dataSubject, loadingOut, isNested, isFixed } = props\r\n\tconst [loadingSelect, setLoadingSelect] = useState({ id: null, status: false })\r\n\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState<ICurriculumDetail[]>([])\r\n\tconst { showNoti, pageSize, isAdmin } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({ type: '', status: false })\r\n\tconst [examTopic, setExamTopic] = useState({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 100,\r\n\t\tType: 4 // 4 LÀ BÀI TẬP\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tCurriculumID: curriculumID ? curriculumID : null\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\tconst [dataExamTopic, setDataExamTopic] = useState(null)\r\n\tconst [currentCheckID, setCurrentCheckID] = useState<number>(null)\r\n\tconst [loadingCheck, setLoadingCheck] = useState({ id: null, status: false })\r\n\r\n\t// GET DATA COURSE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({ type: 'GET_ALL', status: true })\r\n\t\ttry {\r\n\t\t\tlet res = await curriculumDetailApi.getAll(todoApi)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tif (res.data.data.length > 0) {\r\n\t\t\t\t\tsetDataSource(res.data.data)\r\n\t\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tshowNoti('danger', 'Không có dữ liệu')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu') && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'GET_ALL', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\tconst updateSubject = async (value, data, index) => {\r\n\t\tlet cloneData = { ...data }\r\n\t\tcloneData.SubjectID = value\r\n\t\tsetLoadingSelect({ id: data.ID, status: true })\r\n\t\ttry {\r\n\t\t\tlet res = await curriculumDetailApi.update({ ID: data.ID, SubjectID: value })\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tlet newDataSource = [...dataSource]\r\n\t\t\t\tnewDataSource.splice(index, 1, cloneData)\r\n\t\t\t\tsetDataSource(newDataSource)\r\n\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingSelect({ id: data.ID, status: false })\r\n\t\t}\r\n\t}\r\n\r\n\tconst returnValue = (ID: any) => {\r\n\t\tlet value = null\r\n\t\tdataSource.every((item, index) => {\r\n\t\t\tif (item.ID == ID) {\r\n\t\t\t\tvalue = item.SubjectID\r\n\t\t\t\treturn false\r\n\t\t\t} else {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn value\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({ ...todoApi, pageIndex: pageNumber })\r\n\t}\r\n\r\n\tconst onChange_typeLesson = async (ID, checked) => {\r\n\t\tlet res = null\r\n\t\tsetLoadingCheck({ id: ID, status: true })\r\n\t\ttry {\r\n\t\t\tif (checked) {\r\n\t\t\t\tres = await curriculumDetailApi.update({ ID: ID, isExam: true })\r\n\t\t\t} else {\r\n\t\t\t\tres = await curriculumDetailApi.update({ ID: ID, isExam: false })\r\n\t\t\t}\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tshowNoti('success', checked ? 'Đã chuyển sang kiểm tra' : 'Đã tắt kiểm tra')\r\n\t\t\t\tsetTodoApi({ ...todoApi })\r\n\t\t\t\tchecked ? setCurrentCheckID(ID) : setCurrentCheckID(null)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingCheck({ id: ID, status: false })\r\n\t\t}\r\n\t}\r\n\r\n\tconst getLessonID = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await examTopicApi.getAll(examTopic)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetDataExamTopic(res.data.data)\r\n\t\t\t} else if (res.status == 204) {\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('GetLessonID: ', error)\r\n\t\t}\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t\tgetLessonID()\r\n\t}, [todoApi])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (loadingOut && loadingOut.status && loadingOut.type === 'GET_ALL') {\r\n\t\t\tgetDataSource()\r\n\t\t}\r\n\t}, [loadingOut])\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Bài học',\r\n\t\t\tdataIndex: 'SubjectName',\r\n\t\t\tkey: 'subjectname',\r\n\t\t\tclassName: 'text-center',\r\n\t\t\trender: (text, data, index) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{isAdmin ? (\r\n\t\t\t\t\t\tdataSubject && (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tloading={data.ID == loadingSelect.id && loadingSelect.status}\r\n\t\t\t\t\t\t\t\tvalue={returnValue(data.ID)}\r\n\t\t\t\t\t\t\t\tstyle={{ width: '100%', margin: 'auto' }}\r\n\t\t\t\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\toptionFilterProp=\"children\"\r\n\t\t\t\t\t\t\t\tdefaultValue={data.SubjectID}\r\n\t\t\t\t\t\t\t\tonChange={(value) => updateSubject(value, data, index)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Option key=\"none\" value={0}>\r\n\t\t\t\t\t\t\t\t\tTrống\r\n\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t{dataSubject?.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t<Option key={index} value={item.ID}>\r\n\t\t\t\t\t\t\t\t\t\t{item.SubjectName}\r\n\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p className=\"font-weight-black\">{text}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tdataIndex: 'StatusName',\r\n\t\t\tkey: 'statusname',\r\n\t\t\tclassName: 'text-center',\r\n\t\t\trender: (text, data) => (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{isAdmin ? (\r\n\t\t\t\t\t\tisFixed ? (\r\n\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\tchecked={data.IsExam}\r\n\t\t\t\t\t\t\t\tcheckedChildren=\"Kiểm tra\"\r\n\t\t\t\t\t\t\t\tunCheckedChildren=\"Kiểm tra\"\r\n\t\t\t\t\t\t\t\tonChange={(checked) => onChange_typeLesson(data.ID, checked)}\r\n\t\t\t\t\t\t\t\tloading={loadingCheck.id == data.ID && loadingCheck.status}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<p>{data?.IsExam ? 'Kiểm tra' : 'Buổi học'}</p>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p>{data?.IsExam ? 'Kiểm tra' : 'Buổi học'}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Buổi học',\r\n\t\t\tdataIndex: 'LessonNumber',\r\n\t\t\tkey: 'lessonnumber',\r\n\t\t\tclassName: 'col-short text-center'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t\tdataIndex: 'StatusName',\r\n\t\t\tkey: 'statusname',\r\n\t\t\tclassName: 'text-center',\r\n\t\t\trender: (text, data) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{!data.IsExam ? (\r\n\t\t\t\t\t\t<DetailsModal\r\n\t\t\t\t\t\t\tisAdmin={isAdmin}\r\n\t\t\t\t\t\t\tcurriculumDetailID={data.ID}\r\n\t\t\t\t\t\t\tdataExamTopic={dataExamTopic}\r\n\t\t\t\t\t\t\tdataCurriculumDetail={dataSource}\r\n\t\t\t\t\t\t\tonFetchData={() => setTodoApi({ ...todoApi })}\r\n\t\t\t\t\t\t\tcourseID={courseID}\r\n\t\t\t\t\t\t\tdataRow={data}\r\n\t\t\t\t\t\t\tisFixed={isFixed}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<AddExamForm\r\n\t\t\t\t\t\t\tdisable={props.disable}\r\n\t\t\t\t\t\t\tdataExamTopic={dataExamTopic}\r\n\t\t\t\t\t\t\tdataRow={data}\r\n\t\t\t\t\t\t\tonFetchData={() => (setTodoApi({ ...todoApi }), setCurrentCheckID(null))}\r\n\t\t\t\t\t\t\tcurrentCheckID={currentCheckID}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\tasync function _insertSubject() {\r\n\t\ttry {\r\n\t\t\tconst res = await curriculumDetailApi.insert({ CurriculumID: curriculumID })\r\n\t\t\tres.status == 200 && getDataSource()\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error?.message)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"w-100 d-flex mt-2\">\r\n\t\t\t\t<Popconfirm title=\"Bạn muốn thêm buổi học mới?\" onConfirm={_insertSubject} okText=\"Thêm\" cancelText=\"Không\">\r\n\t\t\t\t\t<Button className=\"btn btn-warning\">Thêm buổi học</Button>\r\n\t\t\t\t</Popconfirm>\r\n\t\t\t</div>\r\n\t\t\t{isNested ? (\r\n\t\t\t\t<NestedTable\r\n\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\t\taddClass=\"table-curriculum-detail\"\r\n\t\t\t\t\tloading={isLoading}\r\n\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<PowerTable\r\n\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\t\taddClass=\"table-curriculum-detail\"\r\n\t\t\t\t\tloading={isLoading}\r\n\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CurriculumDetail\r\n"]},"metadata":{},"sourceType":"module"}
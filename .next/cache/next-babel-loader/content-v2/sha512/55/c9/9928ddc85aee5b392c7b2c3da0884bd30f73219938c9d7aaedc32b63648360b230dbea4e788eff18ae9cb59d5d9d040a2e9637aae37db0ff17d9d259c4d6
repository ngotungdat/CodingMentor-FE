{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\Global\\\\CourseList\\\\CourseListDetail\\\\EditSelfCourse\\\\EditSelfCourse.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Card } from 'antd';\nimport moment from 'moment';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { cancelScheduleSelfCourse, checkStudyTimeSelfCourse, checkTeacherSelfCourse, courseApi, dayOffApi, getScheduleSelfCourse, studyTimeApi, updateScheduleSelfCourse } from '~/apiBase';\nimport Schedule from '~/components/Global/CreateCourse/Schedule/Schedule';\nimport ScheduleList from '~/components/Global/CreateCourse/Schedule/ScheduleList';\nimport CreateSelfCourseCalendar from '~/components/Global/CreateSelfCourse/Calendar/CreateSelfCourseCalendar';\nimport SaveSelfCourse from '~/components/Global/CreateSelfCourse/SaveSelfCourse';\nimport ScheduleSelfItem from '~/components/Global/CreateSelfCourse/ScheduleSelf/ScheduleSelfItem';\nimport TitlePage from '~/components/TitlePage';\nimport { useWrap } from '~/context/wrap';\nimport { fmArrayToObjectWithSpecialKey, fmSelectArr } from '~/utils/functions'; // Setup the localizer by providing the moment (or globalize) Object\n// to the correct localizer.\n// ------------ MAIN COMPONENT ------------------\n\nvar EditSelfCourse = function EditSelfCourse(props) {\n  _s();\n\n  var router = useRouter();\n  var courseID = router.query.slug; // -----------STATE-----------\n  // CREATE COURSE FORM STATE\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var _useState = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState([]),\n      studyTimeList = _useState2[0],\n      setStudyTimeList = _useState2[1]; //Lesson\n\n\n  var _useState3 = useState({\n    available: [],\n    unavailable: []\n  }),\n      scheduleList = _useState3[0],\n      setScheduleList = _useState3[1];\n\n  var _useState4 = useState({\n    optionStudyTimeList: [],\n    optionTeacherList: []\n  }),\n      optionListForADay = _useState4[0],\n      setOptionListForADay = _useState4[1]; //StudyDay\n\n\n  var _useState5 = useState([]),\n      calendarList = _useState5[0],\n      setCalendarList = _useState5[1]; // SCHEDULE TO SHOW ON MODAL\n\n\n  var _useState6 = useState({}),\n      scheduleShow = _useState6[0],\n      setScheduleShow = _useState6[1]; // CALENDAR MODAL\n\n\n  var _useState7 = useState({\n    dateString: '',\n    scheduleList: []\n  }),\n      dataModalCalendar = _useState7[0],\n      setDataModalCalendar = _useState7[1]; // EDIT\n\n\n  var _useState8 = useState(false),\n      isShowSaveBtnGroup = _useState8[0],\n      setIsShowSaveBtnGroup = _useState8[1];\n\n  var _useState9 = useState([]),\n      scheduleListToSave = _useState9[0],\n      setScheduleListToSave = _useState9[1];\n\n  var stoneScheduleArranged = useRef([]);\n  var stoneScheduleListToFindDifference = useRef([]); // -----------SCHEDULE-----------\n\n  var isValidRegisterCourse = function isValidRegisterCourse(date) {\n    //user must select study time before 24h\n    var checkDate = \"\".concat(dataModalCalendar.dateString, \" \").concat(date);\n    var now = moment(checkDate).format();\n    var nextDay = moment().add(1, 'days').format();\n    var rs = moment(now).isSameOrAfter(nextDay);\n    return rs;\n  };\n\n  var studyTimeOverFlow = function studyTimeOverFlow(scheduleList) {\n    var rs = false;\n    var studyTimeIdList = scheduleList.map(function (s) {\n      return s.StudyTimeID;\n    }).filter(Boolean); // COMPARE STUDY TIME RETURN TRUE IF INVALID\n\n    var _loop = function _loop(i) {\n      var time1 = studyTimeList.find(function (s) {\n        return s.ID === studyTimeIdList[i];\n      });\n      var s1 = +time1.TimeStart.replace(':', '');\n      var e1 = +time1.TimeEnd.replace(':', '');\n\n      var _loop2 = function _loop2(j) {\n        var time2 = studyTimeList.find(function (s) {\n          return s.ID === studyTimeIdList[j];\n        });\n        var s2 = +time2.TimeStart.replace(':', '');\n        var e2 = +time2.TimeEnd.replace(':', '');\n\n        if (time1.ID === time2.ID || s1 < s2 && e1 > e2 && s1 < e2 || s1 > s2 && e1 > e2 && s1 < e2 || s1 < s2 && e1 < e2 && e1 > s2 || s1 > s2 && e1 < e2) {\n          rs = true;\n        }\n      };\n\n      for (var j = i + 1; j < studyTimeIdList.length; j++) {\n        _loop2(j);\n      }\n    };\n\n    for (var i = 0; i < studyTimeIdList.length - 1; i++) {\n      _loop(i);\n    }\n\n    return rs;\n  };\n\n  var getNewValueForSchedule = function getNewValueForSchedule(uid, date, key, vl) {\n    var _optionListForADay$op, _newOptionStudyTimeLi, _optionListForADay$op2, _newOptionTeacherList;\n\n    switch (key) {\n      case 'CaID':\n        var optionStudyTimeList = ((_optionListForADay$op = optionListForADay.optionStudyTimeList.find(function (o) {\n          return o.id === uid;\n        })) === null || _optionListForADay$op === void 0 ? void 0 : _optionListForADay$op.list) || [];\n\n        var newOptionStudyTimeList = _toConsumableArray(optionStudyTimeList);\n\n        var StudyTimeName = (_newOptionStudyTimeLi = newOptionStudyTimeList.find(function (o) {\n          return o.value === vl;\n        })) === null || _newOptionStudyTimeLi === void 0 ? void 0 : _newOptionStudyTimeLi.title;\n        return {\n          TeacherID: 0,\n          TeacherName: 'Giáo viên trống',\n          StudyTimeName: StudyTimeName,\n          StudyTimeID: vl\n        };\n\n      case 'TeacherID':\n        var optionTeacherList = ((_optionListForADay$op2 = optionListForADay.optionTeacherList.find(function (o) {\n          return o.id === uid;\n        })) === null || _optionListForADay$op2 === void 0 ? void 0 : _optionListForADay$op2.list) || [];\n\n        var newOptionTeacherList = _toConsumableArray(optionTeacherList);\n\n        var teacherName = (_newOptionTeacherList = newOptionTeacherList.find(function (o) {\n          return o.value === vl;\n        })) === null || _newOptionTeacherList === void 0 ? void 0 : _newOptionTeacherList.title;\n        return _defineProperty({\n          TeacherName: vl ? teacherName : 'Giáo viên trống'\n        }, key, vl);\n\n      default:\n        break;\n    }\n  };\n\n  var getNewUnavailableScheduleList = function getNewUnavailableScheduleList(uid, key, vl) {\n    var unavailable = scheduleList.unavailable;\n\n    var newUnavailable = _toConsumableArray(unavailable);\n\n    var idxSchedule = newUnavailable.findIndex(function (s) {\n      return s.ID === uid;\n    }); // DATE TO CHECK DUPLICATE VALUE\n\n    var date = '';\n\n    if (idxSchedule >= 0) {\n      var schedule = newUnavailable[idxSchedule];\n      date = schedule.Date;\n      var newVl = getNewValueForSchedule(uid, date, key, vl);\n\n      var newSchedule = _objectSpread(_objectSpread({}, schedule), newVl);\n\n      newUnavailable.splice(idxSchedule, 1, newSchedule);\n    }\n\n    return {\n      date: date,\n      rs: newUnavailable\n    };\n  };\n\n  var changeValueSchedule = function changeValueSchedule(uid, key, vl) {\n    var _getNewUnavailableSch = getNewUnavailableScheduleList(uid, key, vl),\n        newUnavailableScheduleList = _getNewUnavailableSch.rs,\n        date = _getNewUnavailableSch.date;\n\n    var scheduleList = newUnavailableScheduleList.filter(function (s) {\n      return s.Date === date;\n    });\n\n    if (studyTimeOverFlow(scheduleList)) {\n      showNoti('danger', 'Dữ liệu không phù hợp');\n    }\n\n    setDataModalCalendar(_objectSpread(_objectSpread({}, dataModalCalendar), {}, {\n      scheduleList: scheduleList\n    }));\n    setScheduleList(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        unavailable: newUnavailableScheduleList\n      });\n    });\n  };\n\n  var changeStatusSchedule = function changeStatusSchedule(sch) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n    if (!dataModalCalendar.dateString) {\n      showNoti('danger', 'Bạn chưa chọn ngày');\n      return false;\n    }\n\n    var newScheduleUnavailableList = _toConsumableArray(scheduleList.unavailable);\n\n    var newScheduleAvailableList = _toConsumableArray(scheduleList.available);\n\n    var fmDate = moment(dataModalCalendar.dateString).format('YYYY/MM/DD'); // type = 2 => unavailable to available\n\n    if (type === 2) {\n      var idx = newScheduleUnavailableList.findIndex(function (s) {\n        return s.ID === sch.ID;\n      });\n\n      var newScheduleObj = _objectSpread(_objectSpread({}, newScheduleUnavailableList[idx]), {}, {\n        Date: fmDate\n      });\n\n      newScheduleUnavailableList.splice(idx, 1);\n      newScheduleAvailableList.push(newScheduleObj);\n    } // type = 1 => available to unavailable\n\n\n    if (type === 1) {\n      var _idx = newScheduleAvailableList.findIndex(function (s) {\n        return s.ID === sch.ID;\n      });\n\n      var _newScheduleObj = _objectSpread(_objectSpread({}, newScheduleAvailableList[_idx]), {}, {\n        Date: fmDate\n      });\n\n      newScheduleAvailableList.splice(_idx, 1);\n      newScheduleUnavailableList.push(_newScheduleObj);\n    }\n\n    setScheduleList(_objectSpread(_objectSpread({}, scheduleList), {}, {\n      available: newScheduleAvailableList,\n      unavailable: newScheduleUnavailableList\n    }));\n    return true;\n  }; // -----------CALENDAR-----------\n\n\n  var calendarDateFormat = function calendarDateFormat(calendarArr) {\n    var unavailable = scheduleList.unavailable;\n    var fmScheduleUnavailableToObject = fmArrayToObjectWithSpecialKey(unavailable, 'Date');\n    var rs = calendarArr.map(function (c, idx) {\n      var _fmScheduleUnavailabl;\n\n      var scheduleListForADay = (_fmScheduleUnavailabl = fmScheduleUnavailableToObject[c.Day]) !== null && _fmScheduleUnavailabl !== void 0 && _fmScheduleUnavailabl.length ? fmScheduleUnavailableToObject[c.Day] : [];\n      return {\n        id: idx + 1,\n        title: '',\n        start: moment(c.Day).toDate(),\n        end: moment(c.Day).toDate(),\n        resource: {\n          dateString: c.Day,\n          scheduleList: scheduleListForADay\n        }\n      };\n    });\n    return rs;\n  };\n\n  var onToggleSchedule = function onToggleSchedule(sch, type) {\n    if (changeStatusSchedule(sch, type)) {\n      var newScheduleList = _toConsumableArray(dataModalCalendar.scheduleList);\n\n      var idx = newScheduleList.findIndex(function (s) {\n        return s.ID === sch.ID;\n      });\n\n      if (idx >= 0) {\n        newScheduleList.splice(idx, 1);\n      } else {\n        newScheduleList.push(sch);\n      }\n\n      setDataModalCalendar(_objectSpread(_objectSpread({}, dataModalCalendar), {}, {\n        scheduleList: newScheduleList\n      }));\n    }\n  };\n\n  var onCheckTeacherAvailable = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n      var id, teacherID, rest, idxInOptList, res, newList, finalList, isHadTeacherInList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              id = params.id, teacherID = params.teacherID, rest = _objectWithoutProperties(params, [\"id\", \"teacherID\"]);\n              idxInOptList = optionListForADay.optionTeacherList.findIndex(function (o) {\n                return o.id === id;\n              });\n\n              if (params.studyTimeID) {\n                _context.next = 6;\n                break;\n              }\n\n              setOptionListForADay(function (prevState) {\n                var newOptList = _toConsumableArray(prevState.optionTeacherList);\n\n                newOptList.splice(idxInOptList, 1, _objectSpread(_objectSpread({}, prevState.optionTeacherList[idxInOptList]), {}, {\n                  list: [{\n                    title: '----Giáo viên trống----',\n                    value: 0\n                  }]\n                }));\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  optionTeacherList: newOptList\n                });\n              });\n              return _context.abrupt(\"return\", false);\n\n            case 6:\n              _context.next = 8;\n              return checkTeacherSelfCourse(rest);\n\n            case 8:\n              res = _context.sent;\n\n              if (!(res.status === 200)) {\n                _context.next = 16;\n                break;\n              }\n\n              newList = fmSelectArr(res.data.data, 'FullNameUnicode', 'UserInformationID');\n              finalList = [{\n                title: '----Giáo viên trống----',\n                value: 0\n              }].concat(_toConsumableArray(newList));\n              isHadTeacherInList = finalList.some(function (o) {\n                return o.value === teacherID;\n              }); // kiểm tra nếu như trong buổi học còn giữ lại giá trị cũ nhưng api lại không có giá trị thỏa giá trị cũ\n\n              if (!isHadTeacherInList) {\n                changeValueSchedule(id, 'TeacherID', 0);\n              }\n\n              setOptionListForADay(function (prevState) {\n                var newOptList = _toConsumableArray(prevState.optionTeacherList);\n\n                newOptList.splice(idxInOptList, 1, _objectSpread(_objectSpread({}, prevState.optionTeacherList[idxInOptList]), {}, {\n                  list: finalList\n                }));\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  optionTeacherList: newOptList\n                });\n              });\n              return _context.abrupt(\"return\", true);\n\n            case 16:\n              if (!(res.status === 204)) {\n                _context.next = 19;\n                break;\n              }\n\n              setOptionListForADay(function (prevState) {\n                var newOptList = _toConsumableArray(prevState.optionTeacherList);\n\n                newOptList.splice(idxInOptList, 1, _objectSpread(_objectSpread({}, prevState.optionTeacherList[idxInOptList]), {}, {\n                  list: [{\n                    title: '----Giáo viên trống----',\n                    value: 0\n                  }]\n                }));\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  optionTeacherList: newOptList\n                });\n              });\n              return _context.abrupt(\"return\", false);\n\n            case 19:\n              _context.next = 23;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 23:\n              _context.prev = 23;\n              setIsLoading({\n                type: 'CHECK_SCHEDULE',\n                status: false\n              });\n              return _context.finish(23);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 21, 23, 26]]);\n    }));\n\n    return function onCheckTeacherAvailable(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onCheckStudyTimeAvailable = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params) {\n      var id, date, studyTimeID, curriculumsDetailID, idxInOptList, res, validTimeList, newList, finalList, isHadTeacherInList;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setIsLoading({\n                type: 'CHECK_SCHEDULE',\n                status: true\n              });\n              id = params.id, date = params.date, studyTimeID = params.studyTimeID, curriculumsDetailID = params.curriculumsDetailID;\n              idxInOptList = optionListForADay.optionTeacherList.findIndex(function (o) {\n                return o.id === id;\n              });\n              _context2.next = 6;\n              return checkStudyTimeSelfCourse({\n                curriculumsDetailID: curriculumsDetailID,\n                date: date\n              });\n\n            case 6:\n              res = _context2.sent;\n\n              if (!(res.status === 200)) {\n                _context2.next = 15;\n                break;\n              }\n\n              validTimeList = res.data.data.filter(function (s) {\n                return isValidRegisterCourse(s.TimeStart);\n              });\n              newList = fmSelectArr(validTimeList, 'Name', 'ID', ['Time', 'TimeStart', 'TimeEnd']);\n              finalList = [{\n                title: '----Ca học trống----',\n                value: 0\n              }].concat(_toConsumableArray(newList));\n              isHadTeacherInList = finalList.some(function (o) {\n                return o.value === studyTimeID;\n              }); // kiểm tra nếu như trong buổi học còn giữ lại giá trị cũ nhưng api lại không có giá trị thỏa giá trị cũ\n\n              if (!isHadTeacherInList) {\n                changeValueSchedule(id, 'CaID', 0);\n              }\n\n              setOptionListForADay(function (prevState) {\n                var newOptList = _toConsumableArray(prevState.optionStudyTimeList);\n\n                newOptList.splice(idxInOptList, 1, _objectSpread(_objectSpread({}, prevState.optionTeacherList[idxInOptList]), {}, {\n                  list: finalList\n                }));\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  optionStudyTimeList: newOptList\n                });\n              });\n              return _context2.abrupt(\"return\", true);\n\n            case 15:\n              if (!(res.status === 204)) {\n                _context2.next = 18;\n                break;\n              }\n\n              setOptionListForADay(function (prevState) {\n                var newOptList = _toConsumableArray(prevState.optionStudyTimeList);\n\n                newOptList.splice(idxInOptList, 1, _objectSpread(_objectSpread({}, prevState.optionStudyTimeList[idxInOptList]), {}, {\n                  list: [{\n                    title: '----Giáo viên trống----',\n                    value: 0\n                  }]\n                }));\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  optionStudyTimeList: newOptList\n                });\n              });\n              return _context2.abrupt(\"return\", false);\n\n            case 18:\n              _context2.next = 22;\n              break;\n\n            case 20:\n              _context2.prev = 20;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 22:\n              _context2.prev = 22;\n              setIsLoading({\n                type: 'CHECK_SCHEDULE',\n                status: false\n              });\n              return _context2.finish(22);\n\n            case 25:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 20, 22, 25]]);\n    }));\n\n    return function onCheckStudyTimeAvailable(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (Array.isArray(dataModalCalendar.scheduleList) && dataModalCalendar.scheduleList.length >= 1) {\n      setIsLoading({\n        type: 'SCHEDULE_INVALID',\n        status: false\n      });\n      dataModalCalendar.scheduleList.forEach(function (s) {\n        var params = {\n          id: s.ID,\n          date: dataModalCalendar.dateString,\n          studyTimeID: s.StudyTimeID,\n          curriculumsDetailID: s.CurriculumsDetailID,\n          teacherID: s.TeacherID || 0\n        };\n        var now = moment().format();\n        var conditionDate = \"\".concat(dataModalCalendar.dateString, \" \").concat(s.TimeStart || '00:00');\n        var isValid = moment(conditionDate).isSameOrAfter(now);\n\n        if (isValid) {\n          onCheckTeacherAvailable(params);\n          onCheckStudyTimeAvailable(params);\n        } else {\n          setIsLoading({\n            type: 'SCHEDULE_INVALID',\n            status: true\n          });\n        }\n      });\n    }\n  }, [dataModalCalendar.scheduleList]); // -----------SAVE COURSE-----------\n\n  var onFindScheduleChanged = function onFindScheduleChanged(arr) {\n    var list = stoneScheduleListToFindDifference.current;\n    var rs = [];\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      var s = arr[i];\n\n      if (typeof s.ID === 'string') {\n        rs.push(s);\n        continue;\n      }\n\n      for (var i2 = 0; i2 < list.length; i2++) {\n        var s2 = list[i2];\n\n        if (s.ID === s2.ID && (moment(s.Date).format('YYYY/MM/DD') !== moment(s2.Date).format('YYYY/MM/DD') || s.StudyTimeID !== s2.StudyTimeID || s.TeacherID !== s2.TeacherID)) {\n          // Date, StudyTimeID, TeacherID\n          rs.push(s);\n        }\n      }\n    }\n\n    return rs;\n  };\n\n  var onValidateDateToSave = function onValidateDateToSave(arr) {\n    var unavailable = scheduleList.unavailable;\n    var rs = {\n      show: [],\n      save: []\n    };\n\n    var _loop3 = function _loop3(i, len) {\n      var _studyTimeList$find;\n\n      var s = arr[i];\n      var ID = s.ID,\n          Date = s.Date,\n          TeacherID = s.TeacherID,\n          TeacherName = s.TeacherName,\n          StudyTimeID = s.StudyTimeID;\n      var dayArr = ['Chủ Nhật', 'Thứ 2', 'Thứ 3', 'Thứ 4', 'Thứ 5', 'Thứ 6', 'Thứ 7'];\n      var dayOffWeek = dayArr[moment(s.Date).day()];\n      var isValid = !s.TeacherID;\n\n      for (var i2 = 0; i2 < unavailable.length; i2++) {\n        var s2 = unavailable[i2];\n\n        if (s.ID !== s2.ID && s.Date === s2.Date) {\n          if (studyTimeOverFlow([s, s2])) {\n            isValid = true;\n            break;\n          }\n\n          if (s.StudyTimeID === s2.StudyTimeID) {\n            isValid = true;\n            break;\n          }\n        }\n      }\n\n      rs.show.push({\n        ID: typeof ID === 'string' ? 0 : ID,\n        Date: Date,\n        dayOffWeek: dayOffWeek,\n        StudyTimeID: StudyTimeID,\n        studyTimeName: ((_studyTimeList$find = studyTimeList.find(function (s) {\n          return s.ID === StudyTimeID;\n        })) === null || _studyTimeList$find === void 0 ? void 0 : _studyTimeList$find.Name) || '---Ca học trống---',\n        TeacherID: TeacherID,\n        teacherName: TeacherName || '---Giáo viên trống---',\n        isValid: isValid\n      });\n      rs.save.push({\n        ID: typeof ID === 'string' ? 0 : ID,\n        Date: Date,\n        StudyTimeID: StudyTimeID,\n        TeacherID: TeacherID\n      });\n    };\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      _loop3(i, len);\n    }\n\n    return rs;\n  };\n\n  var onFetchDataToSave = function onFetchDataToSave() {\n    var unavailable = scheduleList.unavailable;\n    var scheduleListChanged = onFindScheduleChanged(unavailable);\n\n    var _onValidateDateToSave = onValidateDateToSave(scheduleListChanged),\n        show = _onValidateDateToSave.show,\n        save = _onValidateDateToSave.save;\n\n    var scheduleListSorted = show.sort(function (a, b) {\n      return moment(a.Date).valueOf() - moment(b.Date).valueOf();\n    });\n    var fmScheduleListToShow = fmArrayToObjectWithSpecialKey(scheduleListSorted, 'Date');\n    setScheduleShow(fmScheduleListToShow);\n    setScheduleListToSave(save);\n  };\n\n  var onSaveCourse = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res, haveErrors, _res;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsLoading({\n                type: 'SAVE_COURSE',\n                status: true\n              });\n              _context3.prev = 1;\n              haveErrors = Object.keys(scheduleShow).find(function (date, idx) {\n                return scheduleShow[date].find(function (s) {\n                  return s.isValid;\n                });\n              });\n\n              if (!haveErrors) {\n                _context3.next = 6;\n                break;\n              }\n\n              showNoti('danger', 'Đã xảy ra lỗi. Xin kiểm tra lại');\n              return _context3.abrupt(\"return\");\n\n            case 6:\n              if (scheduleListToSave.length) {\n                _context3.next = 9;\n                break;\n              }\n\n              showNoti('danger', 'Bạn chưa đăng ký buổi học nào');\n              return _context3.abrupt(\"return\");\n\n            case 9:\n              _context3.next = 11;\n              return Promise.all(scheduleListToSave.map(function (s) {\n                return updateScheduleSelfCourse(s);\n              }));\n\n            case 11:\n              _res = _context3.sent;\n\n              if (_res.every(function (r) {\n                return r.status === 200;\n              })) {\n                fetchAvailableSchedule();\n                showNoti('success', 'Đăng ký thành công!');\n              } else {\n                showNoti('danger', 'Có lỗi xảy ra');\n              }\n\n              _context3.next = 19;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](1);\n\n              if (_context3.t0.status === 400) {\n                showNoti('danger', _context3.t0.message);\n              }\n\n              console.log('onSaveCourse', _context3.t0.message);\n\n            case 19:\n              _context3.prev = 19;\n              setIsLoading({\n                type: 'SAVE_COURSE',\n                status: false\n              });\n              return _context3.finish(19);\n\n            case 22:\n              return _context3.abrupt(\"return\", res);\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 15, 19, 22]]);\n    }));\n\n    return function onSaveCourse() {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // -----------EDIT COURSE-----------\n\n\n  var fetchStudyTimeList = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return studyTimeApi.getAll({\n                selectAll: true\n              });\n\n            case 3:\n              res = _context4.sent;\n\n              if (res.status === 200) {\n                setStudyTimeList(res.data.data);\n              }\n\n              return _context4.abrupt(\"return\", []);\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log('fetchDayOffList', _context4.t0.message);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n\n    return function fetchStudyTimeList() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var fetchDayOffList = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(eDate) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return dayOffApi.getAll({\n                selectAll: true,\n                toDate: eDate\n              });\n\n            case 3:\n              res = _context5.sent;\n\n              if (!(res.status === 200)) {\n                _context5.next = 6;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", res.data.data.map(function (r) {\n                return moment(r.DayOff).format('YYYY/MM/DD');\n              }));\n\n            case 6:\n              return _context5.abrupt(\"return\", []);\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log('fetchDayOffList', _context5.t0.message);\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 9]]);\n    }));\n\n    return function fetchDayOffList(_x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var createCalendarBlankList = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(eDate) {\n      var dates, currDate, lastDate, dayOffList, Day;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              dates = [];\n              currDate = moment().startOf('day');\n              lastDate = moment(eDate).startOf('day');\n              _context6.next = 5;\n              return fetchDayOffList(eDate);\n\n            case 5:\n              dayOffList = _context6.sent;\n\n              do {\n                Day = currDate.clone().format('YYYY/MM/DD');\n\n                if (!dayOffList.includes(Day)) {\n                  dates.push({\n                    Day: Day\n                  });\n                }\n              } while (currDate.add(1, 'days').diff(lastDate) <= 0);\n\n              return _context6.abrupt(\"return\", dates);\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function createCalendarBlankList(_x4) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var fmOptionList = function fmOptionList(arranged, inarranged) {\n    var fm = function fm(arr, tt, vl) {\n      return arr.map(function (s) {\n        return {\n          id: +s.ID,\n          list: [{\n            title: s[tt] || '',\n            value: s[vl]\n          }]\n        };\n      });\n    };\n\n    var optionStudyTimeListArranged = fm(arranged, 'StudyTimeName', 'StudyTimeID');\n    var optionStudyTimeListInarranged = fm(inarranged, 'StudyTimeName', 'StudyTimeID');\n    var optionTeacherListSchedulesArranged = fm(arranged, 'TeacherName', 'TeacherID');\n    var optionTeacherListSchedulesInarranged = fm(inarranged, 'TeacherName', 'TeacherID');\n    return {\n      optionStudyTimeList: optionStudyTimeListArranged.concat(optionStudyTimeListInarranged),\n      optionTeacherList: optionTeacherListSchedulesArranged.concat(optionTeacherListSchedulesInarranged)\n    };\n  };\n\n  var fetchAvailableSchedule = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var courseIDInt, _yield$Promise$all, _yield$Promise$all2, courseInfo, courseSchedule, EndDay, calendarBlankList, _courseSchedule$data, courseSchedulesArranged, courseSchedulesInarranged, totalSchedule, optionList;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              setIsShowSaveBtnGroup(false);\n              setIsLoading({\n                type: 'FETCH_SCHEDULE',\n                status: true\n              });\n              _context7.prev = 2;\n              courseIDInt = parseInt(courseID);\n              _context7.next = 6;\n              return Promise.all([courseApi.getById(courseIDInt), getScheduleSelfCourse(courseIDInt)]);\n\n            case 6:\n              _yield$Promise$all = _context7.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              courseInfo = _yield$Promise$all2[0];\n              courseSchedule = _yield$Promise$all2[1];\n\n              if (!(courseInfo.status === 200)) {\n                _context7.next = 16;\n                break;\n              }\n\n              EndDay = courseInfo.data.data.EndDay;\n              _context7.next = 14;\n              return createCalendarBlankList(EndDay);\n\n            case 14:\n              calendarBlankList = _context7.sent;\n              setCalendarList(calendarBlankList);\n\n            case 16:\n              if (courseSchedule.status === 200) {\n                _courseSchedule$data = courseSchedule.data, courseSchedulesArranged = _courseSchedule$data.courseSchedulesArranged, courseSchedulesInarranged = _courseSchedule$data.courseSchedulesInarranged;\n                totalSchedule = [].concat(_toConsumableArray(courseSchedulesArranged), _toConsumableArray(courseSchedulesInarranged));\n                optionList = fmOptionList(courseSchedulesArranged, courseSchedulesInarranged);\n                setScheduleList({\n                  unavailable: courseSchedulesArranged.map(function (s) {\n                    return _objectSpread(_objectSpread({}, s), {}, {\n                      Date: moment(s.Date).format('YYYY/MM/DD')\n                    });\n                  }),\n                  available: courseSchedulesInarranged.map(function (s) {\n                    return _objectSpread(_objectSpread({}, s), {}, {\n                      Date: moment(s.Date).format('YYYY/MM/DD')\n                    });\n                  })\n                });\n                setOptionListForADay(optionList);\n                stoneScheduleArranged.current = courseSchedulesArranged;\n                stoneScheduleListToFindDifference.current = totalSchedule;\n              }\n\n              setIsShowSaveBtnGroup(true);\n              setIsLoading({\n                type: 'FETCH_SCHEDULE',\n                status: false\n              });\n              _context7.next = 24;\n              break;\n\n            case 21:\n              _context7.prev = 21;\n              _context7.t0 = _context7[\"catch\"](2);\n              showNoti('error', _context7.t0.message);\n\n            case 24:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[2, 21]]);\n    }));\n\n    return function fetchAvailableSchedule() {\n      return _ref8.apply(this, arguments);\n    };\n  }(); // -----------CANCEL SCHEDULE-----------\n\n\n  var isValidCancelCourse = function isValidCancelCourse(sch) {\n    //user must cancel study time before 5h\n    var ID = sch.ID,\n        StudyTimeID = sch.StudyTimeID;\n    var checkList = stoneScheduleArranged.current;\n    if (!StudyTimeID || !checkList.some(function (s) {\n      return s.ID === ID;\n    })) return false;\n    var nextFiveHours = moment().add(5, 'hours').format();\n    var rs = moment().isSameOrBefore(nextFiveHours);\n    return rs;\n  };\n\n  var onCancelSchedule = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(sch) {\n      var ID, res;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              setIsLoading({\n                type: 'CANCEL_SCHEDULE',\n                status: false\n              });\n              ID = sch.ID;\n              _context8.next = 5;\n              return cancelScheduleSelfCourse(ID);\n\n            case 5:\n              res = _context8.sent;\n\n              if (res.status === 200) {\n                onToggleSchedule(sch, 2);\n                fetchAvailableSchedule();\n                showNoti('success', 'Hủy lịch học thành công');\n              }\n\n              _context8.next = 12;\n              break;\n\n            case 9:\n              _context8.prev = 9;\n              _context8.t0 = _context8[\"catch\"](0);\n              console.log('onCancelSchedule', _context8.t0.message);\n\n            case 12:\n              _context8.prev = 12;\n              setIsLoading({\n                type: 'CANCEL_SCHEDULE',\n                status: false\n              });\n              return _context8.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[0, 9, 12, 15]]);\n    }));\n\n    return function onCancelSchedule(_x5) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var isMounted = true;\n\n    if (isMounted) {\n      fetchStudyTimeList();\n      fetchAvailableSchedule();\n    }\n\n    return function () {\n      isMounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-course edit-course\",\n    children: [/*#__PURE__*/_jsxDEV(TitlePage, {\n      title: \"C\\u1EADp nh\\u1EADt kh\\xF3a h\\u1ECDc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 col-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: 0\n              },\n              children: \"S\\u1EAFp x\\u1EBFp l\\u1ECBch h\\u1ECDc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: 13,\n                color: '#bfbfcb'\n              },\n              children: \"Ch\\u1EC9 \\u0111\\u01B0\\u1EE3c x\\u1EBFp bu\\u1ED5i h\\u1ECDc tr\\u01B0\\u1EDBc 24 ti\\u1EBFng, h\\u1EE7y bu\\u1ED5i h\\u1ECDc tr\\u01B0\\u1EDBc 5 ti\\u1EBFng.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 9\n            }, _this)]\n          }, void 0, true),\n          extra: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-page-course\",\n              children: isShowSaveBtnGroup && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(SaveSelfCourse, {\n                  isEdit: true,\n                  isLoading: isLoading,\n                  scheduleShow: scheduleShow,\n                  handleSaveCourse: onSaveCourse,\n                  handleFetchDataToSave: onFetchDataToSave\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 12\n                }, _this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 9\n            }, _this)\n          }, void 0, false),\n          children: /*#__PURE__*/_jsxDEV(CreateSelfCourseCalendar, {\n            eventList: calendarDateFormat(calendarList),\n            isLoaded: isLoading.type === 'FETCH_SCHEDULE' && isLoading.status ? false : true //\n            ,\n            handleSetDataModalCalendar: setDataModalCalendar,\n            dataModalCalendar: dataModalCalendar //\n            ,\n            unAvailableList: /*#__PURE__*/_jsxDEV(Schedule, {\n              children: /*#__PURE__*/_jsxDEV(ScheduleList, {\n                children: scheduleList.available.map(function (s, idx) {\n                  return /*#__PURE__*/_jsxDEV(ScheduleSelfItem, {\n                    scheduleObj: s,\n                    handleChangeStatusSchedule: onToggleSchedule,\n                    isEditView: true\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 682,\n                    columnNumber: 12\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 9\n            }, _this),\n            children: /*#__PURE__*/_jsxDEV(ScheduleList, {\n              panelActiveListInModal: dataModalCalendar.scheduleList.map(function (_, idx) {\n                return idx;\n              }),\n              children: dataModalCalendar.scheduleList.map(function (s, idx) {\n                var _optionListForADay$op3, _optionListForADay$op4;\n\n                return /*#__PURE__*/_jsxDEV(ScheduleSelfItem, {\n                  isUnavailable: true,\n                  isEditView: true,\n                  scheduleObj: s,\n                  isLoading: isLoading,\n                  handleChangeValueSchedule: changeValueSchedule,\n                  handleChangeStatusSchedule: onToggleSchedule,\n                  optionTeacherList: ((_optionListForADay$op3 = optionListForADay.optionTeacherList.find(function (o) {\n                    return o.id === s.ID;\n                  })) === null || _optionListForADay$op3 === void 0 ? void 0 : _optionListForADay$op3.list) || [],\n                  optionStudyTime: ((_optionListForADay$op4 = optionListForADay.optionStudyTimeList.find(function (o) {\n                    return o.id === s.ID;\n                  })) === null || _optionListForADay$op4 === void 0 ? void 0 : _optionListForADay$op4.list) || [],\n                  isCancelSchedule: isValidCancelCourse(s),\n                  handleCancelSchedule: onCancelSchedule // handleAheadSchedule={onAheadSchedule}\n                  // isClickAheadSchedule={isClickAheadSchedule}\n\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 10\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 8\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 col-12 d-none d-md-block\",\n        children: /*#__PURE__*/_jsxDEV(Schedule, {\n          children: /*#__PURE__*/_jsxDEV(ScheduleList, {\n            children: scheduleList.available.map(function (s, idx) {\n              return /*#__PURE__*/_jsxDEV(ScheduleSelfItem, {\n                scheduleObj: s,\n                handleChangeStatusSchedule: onToggleSchedule,\n                isEditView: true\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 9\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 640,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(EditSelfCourse, \"Qge6ihcDaGJk1volPbjNwzUmPBo=\", false, function () {\n  return [useRouter, useWrap];\n});\n\n_c = EditSelfCourse;\nexport default EditSelfCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditSelfCourse\");","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/Global/CourseList/CourseListDetail/EditSelfCourse/EditSelfCourse.tsx"],"names":["Card","moment","useRouter","React","useEffect","useRef","useState","cancelScheduleSelfCourse","checkStudyTimeSelfCourse","checkTeacherSelfCourse","courseApi","dayOffApi","getScheduleSelfCourse","studyTimeApi","updateScheduleSelfCourse","Schedule","ScheduleList","CreateSelfCourseCalendar","SaveSelfCourse","ScheduleSelfItem","TitlePage","useWrap","fmArrayToObjectWithSpecialKey","fmSelectArr","EditSelfCourse","props","router","courseID","query","slug","showNoti","type","status","isLoading","setIsLoading","studyTimeList","setStudyTimeList","available","unavailable","scheduleList","setScheduleList","optionStudyTimeList","optionTeacherList","optionListForADay","setOptionListForADay","calendarList","setCalendarList","scheduleShow","setScheduleShow","dateString","dataModalCalendar","setDataModalCalendar","isShowSaveBtnGroup","setIsShowSaveBtnGroup","scheduleListToSave","setScheduleListToSave","stoneScheduleArranged","stoneScheduleListToFindDifference","isValidRegisterCourse","date","checkDate","now","format","nextDay","add","rs","isSameOrAfter","studyTimeOverFlow","studyTimeIdList","map","s","StudyTimeID","filter","Boolean","i","time1","find","ID","s1","TimeStart","replace","e1","TimeEnd","j","time2","s2","e2","length","getNewValueForSchedule","uid","key","vl","o","id","list","newOptionStudyTimeList","StudyTimeName","value","title","TeacherID","TeacherName","newOptionTeacherList","teacherName","getNewUnavailableScheduleList","newUnavailable","idxSchedule","findIndex","schedule","Date","newVl","newSchedule","splice","changeValueSchedule","newUnavailableScheduleList","prevState","changeStatusSchedule","sch","newScheduleUnavailableList","newScheduleAvailableList","fmDate","idx","newScheduleObj","push","calendarDateFormat","calendarArr","fmScheduleUnavailableToObject","c","scheduleListForADay","Day","start","toDate","end","resource","onToggleSchedule","newScheduleList","onCheckTeacherAvailable","params","teacherID","rest","idxInOptList","studyTimeID","newOptList","res","newList","data","finalList","isHadTeacherInList","some","onCheckStudyTimeAvailable","curriculumsDetailID","validTimeList","Array","isArray","forEach","CurriculumsDetailID","conditionDate","isValid","onFindScheduleChanged","arr","current","len","i2","onValidateDateToSave","show","save","dayArr","dayOffWeek","day","studyTimeName","Name","onFetchDataToSave","scheduleListChanged","scheduleListSorted","sort","a","b","valueOf","fmScheduleListToShow","onSaveCourse","haveErrors","Object","keys","Promise","all","every","r","fetchAvailableSchedule","message","console","log","fetchStudyTimeList","getAll","selectAll","fetchDayOffList","eDate","DayOff","createCalendarBlankList","dates","currDate","startOf","lastDate","dayOffList","clone","includes","diff","fmOptionList","arranged","inarranged","fm","tt","optionStudyTimeListArranged","optionStudyTimeListInarranged","optionTeacherListSchedulesArranged","optionTeacherListSchedulesInarranged","concat","courseIDInt","parseInt","getById","courseInfo","courseSchedule","EndDay","calendarBlankList","courseSchedulesArranged","courseSchedulesInarranged","totalSchedule","optionList","isValidCancelCourse","checkList","nextFiveHours","isSameOrBefore","onCancelSchedule","isMounted","marginBottom","fontSize","color","_"],"mappings":"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","sourcesContent":["import { Card } from 'antd';\r\nimport moment from 'moment';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n\tcancelScheduleSelfCourse,\r\n\tcheckStudyTimeSelfCourse,\r\n\tcheckTeacherSelfCourse,\r\n\tcourseApi,\r\n\tdayOffApi,\r\n\tgetScheduleSelfCourse,\r\n\tstudyTimeApi,\r\n\tupdateScheduleSelfCourse\r\n} from '~/apiBase';\r\nimport Schedule from '~/components/Global/CreateCourse/Schedule/Schedule';\r\nimport ScheduleList from '~/components/Global/CreateCourse/Schedule/ScheduleList';\r\nimport CreateSelfCourseCalendar from '~/components/Global/CreateSelfCourse/Calendar/CreateSelfCourseCalendar';\r\nimport SaveSelfCourse from '~/components/Global/CreateSelfCourse/SaveSelfCourse';\r\nimport ScheduleSelfItem from '~/components/Global/CreateSelfCourse/ScheduleSelf/ScheduleSelfItem';\r\nimport TitlePage from '~/components/TitlePage';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { fmArrayToObjectWithSpecialKey, fmSelectArr } from '~/utils/functions';\r\n\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\n\r\n// ------------ MAIN COMPONENT ------------------\r\nconst EditSelfCourse = (props) => {\r\n\tconst router = useRouter();\r\n\tconst { slug: courseID } = router.query;\r\n\t// -----------STATE-----------\r\n\t// CREATE COURSE FORM STATE\r\n\tconst { showNoti } = useWrap();\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t});\r\n\tconst [studyTimeList, setStudyTimeList] = useState<IStudyTime[]>([]);\r\n\t//Lesson\r\n\tconst [scheduleList, setScheduleList] = useState<ISCCreateScheduleList>({\r\n\t\tavailable: [],\r\n\t\tunavailable: []\r\n\t});\r\n\tconst [optionListForADay, setOptionListForADay] = useState<ISCOptionListForADay>({\r\n\t\toptionStudyTimeList: [],\r\n\t\toptionTeacherList: []\r\n\t});\r\n\t//StudyDay\r\n\tconst [calendarList, setCalendarList] = useState<IStudyDay[]>([]);\r\n\t// SCHEDULE TO SHOW ON MODAL\r\n\tconst [scheduleShow, setScheduleShow] = useState<ISCCreateScheduleShowList>({});\r\n\t// CALENDAR MODAL\r\n\tconst [dataModalCalendar, setDataModalCalendar] = useState<ISCDataModal>({\r\n\t\tdateString: '',\r\n\t\tscheduleList: []\r\n\t});\r\n\t// EDIT\r\n\tconst [isShowSaveBtnGroup, setIsShowSaveBtnGroup] = useState(false);\r\n\tconst [scheduleListToSave, setScheduleListToSave] = useState<ICSScheduleToSave[]>([]);\r\n\tconst stoneScheduleArranged = useRef<ISCSchedule[]>([]);\r\n\tconst stoneScheduleListToFindDifference = useRef<ISCSchedule[]>([]);\r\n\t// -----------SCHEDULE-----------\r\n\tconst isValidRegisterCourse = (date?: string) => {\r\n\t\t//user must select study time before 24h\r\n\t\tconst checkDate = `${dataModalCalendar.dateString} ${date}`;\r\n\t\tconst now = moment(checkDate).format();\r\n\t\tconst nextDay = moment().add(1, 'days').format();\r\n\t\tconst rs = moment(now).isSameOrAfter(nextDay);\r\n\t\treturn rs;\r\n\t};\r\n\tconst studyTimeOverFlow = (scheduleList: ISCSchedule[]) => {\r\n\t\tlet rs = false;\r\n\t\tconst studyTimeIdList = scheduleList.map((s) => s.StudyTimeID).filter(Boolean);\r\n\t\t// COMPARE STUDY TIME RETURN TRUE IF INVALID\r\n\t\tfor (let i = 0; i < studyTimeIdList.length - 1; i++) {\r\n\t\t\tconst time1 = studyTimeList.find((s) => s.ID === studyTimeIdList[i]);\r\n\t\t\tconst s1 = +time1.TimeStart.replace(':', '');\r\n\t\t\tconst e1 = +time1.TimeEnd.replace(':', '');\r\n\r\n\t\t\tfor (let j = i + 1; j < studyTimeIdList.length; j++) {\r\n\t\t\t\tconst time2 = studyTimeList.find((s) => s.ID === studyTimeIdList[j]);\r\n\t\t\t\tconst s2 = +time2.TimeStart.replace(':', '');\r\n\t\t\t\tconst e2 = +time2.TimeEnd.replace(':', '');\r\n\t\t\t\tif (\r\n\t\t\t\t\ttime1.ID === time2.ID ||\r\n\t\t\t\t\t(s1 < s2 && e1 > e2 && s1 < e2) ||\r\n\t\t\t\t\t(s1 > s2 && e1 > e2 && s1 < e2) ||\r\n\t\t\t\t\t(s1 < s2 && e1 < e2 && e1 > s2) ||\r\n\t\t\t\t\t(s1 > s2 && e1 < e2)\r\n\t\t\t\t) {\r\n\t\t\t\t\trs = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rs;\r\n\t};\r\n\tconst getNewValueForSchedule = (uid: number, date: string, key: 'CaID' | 'TeacherID', vl: number) => {\r\n\t\tswitch (key) {\r\n\t\t\tcase 'CaID':\r\n\t\t\t\tconst optionStudyTimeList = optionListForADay.optionStudyTimeList.find((o) => o.id === uid)?.list || [];\r\n\t\t\t\tconst newOptionStudyTimeList = [...optionStudyTimeList];\r\n\t\t\t\tconst StudyTimeName = newOptionStudyTimeList.find((o) => o.value === vl)?.title;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tTeacherID: 0,\r\n\t\t\t\t\tTeacherName: 'Giáo viên trống',\r\n\t\t\t\t\tStudyTimeName,\r\n\t\t\t\t\tStudyTimeID: vl\r\n\t\t\t\t};\r\n\t\t\tcase 'TeacherID':\r\n\t\t\t\tconst optionTeacherList = optionListForADay.optionTeacherList.find((o) => o.id === uid)?.list || [];\r\n\t\t\t\tconst newOptionTeacherList = [...optionTeacherList];\r\n\t\t\t\tconst teacherName = newOptionTeacherList.find((o) => o.value === vl)?.title;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tTeacherName: vl ? teacherName : 'Giáo viên trống',\r\n\t\t\t\t\t[key]: vl\r\n\t\t\t\t};\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\tconst getNewUnavailableScheduleList = (uid: number, key: 'CaID' | 'TeacherID', vl: number) => {\r\n\t\tconst { unavailable } = scheduleList;\r\n\t\tconst newUnavailable = [...unavailable];\r\n\r\n\t\tconst idxSchedule = newUnavailable.findIndex((s) => s.ID === uid);\r\n\t\t// DATE TO CHECK DUPLICATE VALUE\r\n\t\tlet date: string = '';\r\n\t\tif (idxSchedule >= 0) {\r\n\t\t\tconst schedule = newUnavailable[idxSchedule];\r\n\t\t\tdate = schedule.Date;\r\n\t\t\tconst newVl = getNewValueForSchedule(uid, date, key, vl);\r\n\t\t\tconst newSchedule = {\r\n\t\t\t\t...schedule,\r\n\t\t\t\t...newVl\r\n\t\t\t};\r\n\t\t\tnewUnavailable.splice(idxSchedule, 1, newSchedule);\r\n\t\t}\r\n\r\n\t\treturn { date, rs: newUnavailable };\r\n\t};\r\n\tconst changeValueSchedule = (uid: number, key: 'CaID' | 'TeacherID', vl: number) => {\r\n\t\tconst { rs: newUnavailableScheduleList, date } = getNewUnavailableScheduleList(uid, key, vl);\r\n\t\tconst scheduleList = newUnavailableScheduleList.filter((s) => s.Date === date);\r\n\t\tif (studyTimeOverFlow(scheduleList)) {\r\n\t\t\tshowNoti('danger', 'Dữ liệu không phù hợp');\r\n\t\t}\r\n\t\tsetDataModalCalendar({\r\n\t\t\t...dataModalCalendar,\r\n\t\t\tscheduleList: scheduleList\r\n\t\t});\r\n\t\tsetScheduleList((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\tunavailable: newUnavailableScheduleList\r\n\t\t}));\r\n\t};\r\n\tconst changeStatusSchedule = (sch: ISCSchedule, type: number = 1) => {\r\n\t\tif (!dataModalCalendar.dateString) {\r\n\t\t\tshowNoti('danger', 'Bạn chưa chọn ngày');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tconst newScheduleUnavailableList = [...scheduleList.unavailable];\r\n\t\tconst newScheduleAvailableList = [...scheduleList.available];\r\n\t\tconst fmDate = moment(dataModalCalendar.dateString).format('YYYY/MM/DD');\r\n\t\t// type = 2 => unavailable to available\r\n\t\tif (type === 2) {\r\n\t\t\tconst idx = newScheduleUnavailableList.findIndex((s) => s.ID === sch.ID);\r\n\t\t\tconst newScheduleObj = {\r\n\t\t\t\t...newScheduleUnavailableList[idx],\r\n\t\t\t\tDate: fmDate\r\n\t\t\t};\r\n\t\t\tnewScheduleUnavailableList.splice(idx, 1);\r\n\t\t\tnewScheduleAvailableList.push(newScheduleObj);\r\n\t\t}\r\n\t\t// type = 1 => available to unavailable\r\n\t\tif (type === 1) {\r\n\t\t\tconst idx = newScheduleAvailableList.findIndex((s) => s.ID === sch.ID);\r\n\t\t\tconst newScheduleObj = {\r\n\t\t\t\t...newScheduleAvailableList[idx],\r\n\t\t\t\tDate: fmDate\r\n\t\t\t};\r\n\t\t\tnewScheduleAvailableList.splice(idx, 1);\r\n\t\t\tnewScheduleUnavailableList.push(newScheduleObj);\r\n\t\t}\r\n\t\tsetScheduleList({\r\n\t\t\t...scheduleList,\r\n\t\t\tavailable: newScheduleAvailableList,\r\n\t\t\tunavailable: newScheduleUnavailableList\r\n\t\t});\r\n\t\treturn true;\r\n\t};\r\n\t// -----------CALENDAR-----------\r\n\tconst calendarDateFormat = (calendarArr: { Day: string }[]) => {\r\n\t\tconst { unavailable } = scheduleList;\r\n\t\tconst fmScheduleUnavailableToObject = fmArrayToObjectWithSpecialKey(unavailable, 'Date');\r\n\t\tconst rs = calendarArr.map((c, idx) => {\r\n\t\t\tconst scheduleListForADay = fmScheduleUnavailableToObject[c.Day]?.length ? fmScheduleUnavailableToObject[c.Day] : [];\r\n\t\t\treturn {\r\n\t\t\t\tid: idx + 1,\r\n\t\t\t\ttitle: '',\r\n\t\t\t\tstart: moment(c.Day).toDate(),\r\n\t\t\t\tend: moment(c.Day).toDate(),\r\n\t\t\t\tresource: {\r\n\t\t\t\t\tdateString: c.Day,\r\n\t\t\t\t\tscheduleList: scheduleListForADay\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn rs;\r\n\t};\r\n\tconst onToggleSchedule = (sch: ISCSchedule, type: number) => {\r\n\t\tif (changeStatusSchedule(sch, type)) {\r\n\t\t\tconst newScheduleList = [...dataModalCalendar.scheduleList];\r\n\t\t\tconst idx = newScheduleList.findIndex((s) => s.ID === sch.ID);\r\n\t\t\tif (idx >= 0) {\r\n\t\t\t\tnewScheduleList.splice(idx, 1);\r\n\t\t\t} else {\r\n\t\t\t\tnewScheduleList.push(sch);\r\n\t\t\t}\r\n\t\t\tsetDataModalCalendar({\r\n\t\t\t\t...dataModalCalendar,\r\n\t\t\t\tscheduleList: newScheduleList\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tconst onCheckTeacherAvailable = async (params: ISCCheckSchedule) => {\r\n\t\ttry {\r\n\t\t\tconst { id, teacherID, ...rest } = params;\r\n\t\t\tconst idxInOptList = optionListForADay.optionTeacherList.findIndex((o) => o.id === id);\r\n\t\t\tif (!params.studyTimeID) {\r\n\t\t\t\tsetOptionListForADay((prevState) => {\r\n\t\t\t\t\tconst newOptList = [...prevState.optionTeacherList];\r\n\t\t\t\t\tnewOptList.splice(idxInOptList, 1, {\r\n\t\t\t\t\t\t...prevState.optionTeacherList[idxInOptList],\r\n\t\t\t\t\t\tlist: [{ title: '----Giáo viên trống----', value: 0 }]\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\toptionTeacherList: newOptList\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tconst res = await checkTeacherSelfCourse(rest);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newList = fmSelectArr(res.data.data, 'FullNameUnicode', 'UserInformationID');\r\n\t\t\t\tconst finalList = [{ title: '----Giáo viên trống----', value: 0 }, ...newList];\r\n\t\t\t\tconst isHadTeacherInList = finalList.some((o) => o.value === teacherID); // kiểm tra nếu như trong buổi học còn giữ lại giá trị cũ nhưng api lại không có giá trị thỏa giá trị cũ\r\n\t\t\t\tif (!isHadTeacherInList) {\r\n\t\t\t\t\tchangeValueSchedule(id, 'TeacherID', 0);\r\n\t\t\t\t}\r\n\t\t\t\tsetOptionListForADay((prevState) => {\r\n\t\t\t\t\tconst newOptList = [...prevState.optionTeacherList];\r\n\t\t\t\t\tnewOptList.splice(idxInOptList, 1, {\r\n\t\t\t\t\t\t...prevState.optionTeacherList[idxInOptList],\r\n\t\t\t\t\t\tlist: finalList\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\toptionTeacherList: newOptList\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetOptionListForADay((prevState) => {\r\n\t\t\t\t\tconst newOptList = [...prevState.optionTeacherList];\r\n\t\t\t\t\tnewOptList.splice(idxInOptList, 1, {\r\n\t\t\t\t\t\t...prevState.optionTeacherList[idxInOptList],\r\n\t\t\t\t\t\tlist: [{ title: '----Giáo viên trống----', value: 0 }]\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\toptionTeacherList: newOptList\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'CHECK_SCHEDULE',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tconst onCheckStudyTimeAvailable = async (params: ISCCheckSchedule) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'CHECK_SCHEDULE',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\tconst { id, date, studyTimeID, curriculumsDetailID } = params;\r\n\t\t\tconst idxInOptList = optionListForADay.optionTeacherList.findIndex((o) => o.id === id);\r\n\t\t\tconst res = await checkStudyTimeSelfCourse({ curriculumsDetailID, date });\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst validTimeList = res.data.data.filter((s) => isValidRegisterCourse(s.TimeStart));\r\n\t\t\t\tconst newList = fmSelectArr(validTimeList, 'Name', 'ID', ['Time', 'TimeStart', 'TimeEnd']);\r\n\t\t\t\tconst finalList = [{ title: '----Ca học trống----', value: 0 }, ...newList];\r\n\r\n\t\t\t\tconst isHadTeacherInList = finalList.some((o) => o.value === studyTimeID); // kiểm tra nếu như trong buổi học còn giữ lại giá trị cũ nhưng api lại không có giá trị thỏa giá trị cũ\r\n\t\t\t\tif (!isHadTeacherInList) {\r\n\t\t\t\t\tchangeValueSchedule(id, 'CaID', 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetOptionListForADay((prevState) => {\r\n\t\t\t\t\tconst newOptList = [...prevState.optionStudyTimeList];\r\n\t\t\t\t\tnewOptList.splice(idxInOptList, 1, {\r\n\t\t\t\t\t\t...prevState.optionTeacherList[idxInOptList],\r\n\t\t\t\t\t\tlist: finalList\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\toptionStudyTimeList: newOptList\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetOptionListForADay((prevState) => {\r\n\t\t\t\t\tconst newOptList = [...prevState.optionStudyTimeList];\r\n\t\t\t\t\tnewOptList.splice(idxInOptList, 1, {\r\n\t\t\t\t\t\t...prevState.optionStudyTimeList[idxInOptList],\r\n\t\t\t\t\t\tlist: [{ title: '----Giáo viên trống----', value: 0 }]\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\toptionStudyTimeList: newOptList\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'CHECK_SCHEDULE',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Array.isArray(dataModalCalendar.scheduleList) && dataModalCalendar.scheduleList.length >= 1) {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'SCHEDULE_INVALID',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t\tdataModalCalendar.scheduleList.forEach((s) => {\r\n\t\t\t\tconst params = {\r\n\t\t\t\t\tid: s.ID,\r\n\t\t\t\t\tdate: dataModalCalendar.dateString,\r\n\t\t\t\t\tstudyTimeID: s.StudyTimeID,\r\n\t\t\t\t\tcurriculumsDetailID: s.CurriculumsDetailID,\r\n\t\t\t\t\tteacherID: s.TeacherID || 0\r\n\t\t\t\t};\r\n\t\t\t\tconst now = moment().format();\r\n\t\t\t\tconst conditionDate = `${dataModalCalendar.dateString} ${s.TimeStart || '00:00'}`;\r\n\t\t\t\tconst isValid = moment(conditionDate).isSameOrAfter(now);\r\n\t\t\t\tif (isValid) {\r\n\t\t\t\t\tonCheckTeacherAvailable(params);\r\n\t\t\t\t\tonCheckStudyTimeAvailable(params);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetIsLoading({\r\n\t\t\t\t\t\ttype: 'SCHEDULE_INVALID',\r\n\t\t\t\t\t\tstatus: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}, [dataModalCalendar.scheduleList]);\r\n\t// -----------SAVE COURSE-----------\r\n\tconst onFindScheduleChanged = (arr: ISCSchedule[]) => {\r\n\t\tconst { current: list } = stoneScheduleListToFindDifference;\r\n\t\tconst rs: ISCSchedule[] = [];\r\n\r\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\r\n\t\t\tconst s = arr[i];\r\n\t\t\tif (typeof s.ID === 'string') {\r\n\t\t\t\trs.push(s);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor (let i2 = 0; i2 < list.length; i2++) {\r\n\t\t\t\tconst s2 = list[i2];\r\n\t\t\t\tif (\r\n\t\t\t\t\ts.ID === s2.ID &&\r\n\t\t\t\t\t(moment(s.Date).format('YYYY/MM/DD') !== moment(s2.Date).format('YYYY/MM/DD') ||\r\n\t\t\t\t\t\ts.StudyTimeID !== s2.StudyTimeID ||\r\n\t\t\t\t\t\ts.TeacherID !== s2.TeacherID)\r\n\t\t\t\t) {\r\n\t\t\t\t\t// Date, StudyTimeID, TeacherID\r\n\t\t\t\t\trs.push(s);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rs;\r\n\t};\r\n\tconst onValidateDateToSave = (arr: ISCSchedule[]) => {\r\n\t\tconst { unavailable } = scheduleList;\r\n\t\tconst rs: {\r\n\t\t\tshow: Array<{\r\n\t\t\t\tID: number;\r\n\t\t\t\tDate: string;\r\n\t\t\t\tdayOffWeek: string;\r\n\t\t\t\tStudyTimeID: number;\r\n\t\t\t\tstudyTimeName: string;\r\n\t\t\t\tTeacherID: number;\r\n\t\t\t\tteacherName: string;\r\n\t\t\t\tisValid: boolean;\r\n\t\t\t}>;\r\n\t\t\tsave: ICSScheduleToSave[];\r\n\t\t} = {\r\n\t\t\tshow: [],\r\n\t\t\tsave: []\r\n\t\t};\r\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\r\n\t\t\tconst s = arr[i];\r\n\t\t\tconst { ID, Date, TeacherID, TeacherName, StudyTimeID } = s;\r\n\t\t\tconst dayArr = ['Chủ Nhật', 'Thứ 2', 'Thứ 3', 'Thứ 4', 'Thứ 5', 'Thứ 6', 'Thứ 7'];\r\n\t\t\tconst dayOffWeek = dayArr[moment(s.Date).day()];\r\n\t\t\tlet isValid = !s.TeacherID;\r\n\t\t\tfor (let i2 = 0; i2 < unavailable.length; i2++) {\r\n\t\t\t\tconst s2 = unavailable[i2];\r\n\t\t\t\tif (s.ID !== s2.ID && s.Date === s2.Date) {\r\n\t\t\t\t\tif (studyTimeOverFlow([s, s2])) {\r\n\t\t\t\t\t\tisValid = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (s.StudyTimeID === s2.StudyTimeID) {\r\n\t\t\t\t\t\tisValid = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\trs.show.push({\r\n\t\t\t\tID: typeof ID === 'string' ? 0 : ID,\r\n\t\t\t\tDate,\r\n\t\t\t\tdayOffWeek,\r\n\t\t\t\tStudyTimeID,\r\n\t\t\t\tstudyTimeName: studyTimeList.find((s) => s.ID === StudyTimeID)?.Name || '---Ca học trống---',\r\n\t\t\t\tTeacherID,\r\n\t\t\t\tteacherName: TeacherName || '---Giáo viên trống---',\r\n\t\t\t\tisValid\r\n\t\t\t});\r\n\t\t\trs.save.push({\r\n\t\t\t\tID: typeof ID === 'string' ? 0 : ID,\r\n\t\t\t\tDate,\r\n\t\t\t\tStudyTimeID,\r\n\t\t\t\tTeacherID\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn rs;\r\n\t};\r\n\tconst onFetchDataToSave = () => {\r\n\t\tconst { unavailable } = scheduleList;\r\n\r\n\t\tconst scheduleListChanged = onFindScheduleChanged(unavailable);\r\n\t\tconst { show, save } = onValidateDateToSave(scheduleListChanged);\r\n\r\n\t\tconst scheduleListSorted = show.sort((a, b) => moment(a.Date).valueOf() - moment(b.Date).valueOf());\r\n\t\tconst fmScheduleListToShow = fmArrayToObjectWithSpecialKey(scheduleListSorted, 'Date');\r\n\r\n\t\tsetScheduleShow(fmScheduleListToShow);\r\n\t\tsetScheduleListToSave(save);\r\n\t};\r\n\tconst onSaveCourse = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'SAVE_COURSE',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\tlet res;\r\n\t\ttry {\r\n\t\t\tconst haveErrors = Object.keys(scheduleShow).find((date, idx) => scheduleShow[date].find((s) => s.isValid));\r\n\t\t\tif (haveErrors) {\r\n\t\t\t\tshowNoti('danger', 'Đã xảy ra lỗi. Xin kiểm tra lại');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!scheduleListToSave.length) {\r\n\t\t\t\tshowNoti('danger', 'Bạn chưa đăng ký buổi học nào');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst res = await Promise.all(scheduleListToSave.map((s) => updateScheduleSelfCourse(s)));\r\n\t\t\tif (res.every((r) => r.status === 200)) {\r\n\t\t\t\tfetchAvailableSchedule();\r\n\t\t\t\tshowNoti('success', 'Đăng ký thành công!');\r\n\t\t\t} else {\r\n\t\t\t\tshowNoti('danger', 'Có lỗi xảy ra');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tif (error.status === 400) {\r\n\t\t\t\tshowNoti('danger', error.message);\r\n\t\t\t}\r\n\t\t\tconsole.log('onSaveCourse', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'SAVE_COURSE',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn res;\r\n\t};\r\n\t// -----------EDIT COURSE-----------\r\n\tconst fetchStudyTimeList = async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await studyTimeApi.getAll({ selectAll: true });\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetStudyTimeList(res.data.data);\r\n\t\t\t}\r\n\t\t\treturn [];\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('fetchDayOffList', error.message);\r\n\t\t}\r\n\t};\r\n\tconst fetchDayOffList = async (eDate: string) => {\r\n\t\ttry {\r\n\t\t\tconst res = await dayOffApi.getAll({ selectAll: true, toDate: eDate });\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\treturn res.data.data.map((r) => moment(r.DayOff).format('YYYY/MM/DD'));\r\n\t\t\t}\r\n\t\t\treturn [];\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('fetchDayOffList', error.message);\r\n\t\t}\r\n\t};\r\n\tconst createCalendarBlankList = async (eDate: string) => {\r\n\t\tconst dates = [];\r\n\t\tconst currDate = moment().startOf('day');\r\n\t\tconst lastDate = moment(eDate).startOf('day');\r\n\t\tconst dayOffList = await fetchDayOffList(eDate);\r\n\t\tdo {\r\n\t\t\tconst Day = currDate.clone().format('YYYY/MM/DD');\r\n\t\t\tif (!dayOffList.includes(Day)) {\r\n\t\t\t\tdates.push({ Day });\r\n\t\t\t}\r\n\t\t} while (currDate.add(1, 'days').diff(lastDate) <= 0);\r\n\r\n\t\treturn dates;\r\n\t};\r\n\ttype IFMOptionList = { id: number; list: IOptionCommon[] }[];\r\n\tconst fmOptionList = (\r\n\t\tarranged: ISCSchedule[],\r\n\t\tinarranged: ISCSchedule[]\r\n\t): { optionStudyTimeList: IFMOptionList; optionTeacherList: IFMOptionList } => {\r\n\t\tconst fm = (arr: ISCSchedule[], tt: string, vl: string) =>\r\n\t\t\tarr.map((s) => ({\r\n\t\t\t\tid: +s.ID,\r\n\t\t\t\tlist: [{ title: s[tt] || '', value: s[vl] }]\r\n\t\t\t}));\r\n\r\n\t\tconst optionStudyTimeListArranged: IFMOptionList = fm(arranged, 'StudyTimeName', 'StudyTimeID');\r\n\t\tconst optionStudyTimeListInarranged: IFMOptionList = fm(inarranged, 'StudyTimeName', 'StudyTimeID');\r\n\r\n\t\tconst optionTeacherListSchedulesArranged: IFMOptionList = fm(arranged, 'TeacherName', 'TeacherID');\r\n\t\tconst optionTeacherListSchedulesInarranged: IFMOptionList = fm(inarranged, 'TeacherName', 'TeacherID');\r\n\r\n\t\treturn {\r\n\t\t\toptionStudyTimeList: optionStudyTimeListArranged.concat(optionStudyTimeListInarranged),\r\n\t\t\toptionTeacherList: optionTeacherListSchedulesArranged.concat(optionTeacherListSchedulesInarranged)\r\n\t\t};\r\n\t};\r\n\tconst fetchAvailableSchedule = async () => {\r\n\t\tsetIsShowSaveBtnGroup(false);\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'FETCH_SCHEDULE',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tconst courseIDInt = parseInt(courseID as string);\r\n\t\t\tconst [courseInfo, courseSchedule] = await Promise.all([courseApi.getById(courseIDInt), getScheduleSelfCourse(courseIDInt)]);\r\n\r\n\t\t\tif (courseInfo.status === 200) {\r\n\t\t\t\tconst { EndDay } = courseInfo.data.data;\r\n\t\t\t\tconst calendarBlankList = await createCalendarBlankList(EndDay);\r\n\t\t\t\tsetCalendarList(calendarBlankList);\r\n\t\t\t}\r\n\t\t\tif (courseSchedule.status === 200) {\r\n\t\t\t\tconst { courseSchedulesArranged, courseSchedulesInarranged } = courseSchedule.data;\r\n\t\t\t\tconst totalSchedule = [...courseSchedulesArranged, ...courseSchedulesInarranged];\r\n\r\n\t\t\t\tconst optionList = fmOptionList(courseSchedulesArranged, courseSchedulesInarranged);\r\n\r\n\t\t\t\tsetScheduleList({\r\n\t\t\t\t\tunavailable: courseSchedulesArranged.map((s) => ({ ...s, Date: moment(s.Date).format('YYYY/MM/DD') })),\r\n\t\t\t\t\tavailable: courseSchedulesInarranged.map((s) => ({ ...s, Date: moment(s.Date).format('YYYY/MM/DD') }))\r\n\t\t\t\t});\r\n\t\t\t\tsetOptionListForADay(optionList);\r\n\t\t\t\tstoneScheduleArranged.current = courseSchedulesArranged;\r\n\t\t\t\tstoneScheduleListToFindDifference.current = totalSchedule;\r\n\t\t\t}\r\n\t\t\tsetIsShowSaveBtnGroup(true);\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_SCHEDULE',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('error', error.message);\r\n\t\t}\r\n\t};\r\n\t// -----------CANCEL SCHEDULE-----------\r\n\tconst isValidCancelCourse = (sch: ISCSchedule) => {\r\n\t\t//user must cancel study time before 5h\r\n\t\tconst { ID, StudyTimeID } = sch;\r\n\t\tconst { current: checkList } = stoneScheduleArranged;\r\n\t\tif (!StudyTimeID || !checkList.some((s) => s.ID === ID)) return false;\r\n\t\tconst nextFiveHours = moment().add(5, 'hours').format();\r\n\t\tconst rs = moment().isSameOrBefore(nextFiveHours);\r\n\t\treturn rs;\r\n\t};\r\n\tconst onCancelSchedule = async (sch: ISCSchedule) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'CANCEL_SCHEDULE',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t\tconst { ID } = sch;\r\n\t\t\tconst res = await cancelScheduleSelfCourse(ID);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tonToggleSchedule(sch, 2);\r\n\t\t\t\tfetchAvailableSchedule();\r\n\t\t\t\tshowNoti('success', 'Hủy lịch học thành công');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('onCancelSchedule', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'CANCEL_SCHEDULE',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tlet isMounted = true;\r\n\t\tif (isMounted) {\r\n\t\t\tfetchStudyTimeList();\r\n\t\t\tfetchAvailableSchedule();\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tisMounted = false;\r\n\t\t};\r\n\t}, []);\r\n\treturn (\r\n\t\t<div className=\"create-course edit-course\">\r\n\t\t\t<TitlePage title=\"Cập nhật khóa học\" />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-8 col-12\">\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<p style={{ marginBottom: 0 }}>Sắp xếp lịch học</p>\r\n\t\t\t\t\t\t\t\t<p style={{ fontSize: 13, color: '#bfbfcb' }}>\r\n\t\t\t\t\t\t\t\t\tChỉ được xếp buổi học trước 24 tiếng, hủy buổi học trước 5 tiếng.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\textra={\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<div className=\"btn-page-course\">\r\n\t\t\t\t\t\t\t\t\t{isShowSaveBtnGroup && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<SaveSelfCourse\r\n\t\t\t\t\t\t\t\t\t\t\t\tisEdit={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\t\t\t\tscheduleShow={scheduleShow}\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleSaveCourse={onSaveCourse}\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleFetchDataToSave={onFetchDataToSave}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CreateSelfCourseCalendar\r\n\t\t\t\t\t\t\teventList={calendarDateFormat(calendarList)}\r\n\t\t\t\t\t\t\tisLoaded={isLoading.type === 'FETCH_SCHEDULE' && isLoading.status ? false : true}\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\thandleSetDataModalCalendar={setDataModalCalendar}\r\n\t\t\t\t\t\t\tdataModalCalendar={dataModalCalendar}\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tunAvailableList={\r\n\t\t\t\t\t\t\t\t<Schedule>\r\n\t\t\t\t\t\t\t\t\t<ScheduleList>\r\n\t\t\t\t\t\t\t\t\t\t{scheduleList.available.map((s, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<ScheduleSelfItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\tscheduleObj={s}\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChangeStatusSchedule={onToggleSchedule}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisEditView={true}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</ScheduleList>\r\n\t\t\t\t\t\t\t\t</Schedule>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ScheduleList panelActiveListInModal={dataModalCalendar.scheduleList.map((_, idx) => idx)}>\r\n\t\t\t\t\t\t\t\t{dataModalCalendar.scheduleList.map((s, idx) => (\r\n\t\t\t\t\t\t\t\t\t<ScheduleSelfItem\r\n\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\tisUnavailable={true}\r\n\t\t\t\t\t\t\t\t\t\tisEditView={true}\r\n\t\t\t\t\t\t\t\t\t\tscheduleObj={s}\r\n\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\t\thandleChangeValueSchedule={changeValueSchedule}\r\n\t\t\t\t\t\t\t\t\t\thandleChangeStatusSchedule={onToggleSchedule}\r\n\t\t\t\t\t\t\t\t\t\toptionTeacherList={optionListForADay.optionTeacherList.find((o) => o.id === s.ID)?.list || []}\r\n\t\t\t\t\t\t\t\t\t\toptionStudyTime={optionListForADay.optionStudyTimeList.find((o) => o.id === s.ID)?.list || []}\r\n\t\t\t\t\t\t\t\t\t\tisCancelSchedule={isValidCancelCourse(s)}\r\n\t\t\t\t\t\t\t\t\t\thandleCancelSchedule={onCancelSchedule}\r\n\t\t\t\t\t\t\t\t\t\t// handleAheadSchedule={onAheadSchedule}\r\n\t\t\t\t\t\t\t\t\t\t// isClickAheadSchedule={isClickAheadSchedule}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</ScheduleList>\r\n\t\t\t\t\t\t</CreateSelfCourseCalendar>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-4 col-12 d-none d-md-block\">\r\n\t\t\t\t\t<Schedule>\r\n\t\t\t\t\t\t<ScheduleList>\r\n\t\t\t\t\t\t\t{scheduleList.available.map((s, idx) => (\r\n\t\t\t\t\t\t\t\t<ScheduleSelfItem\r\n\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\tscheduleObj={s}\r\n\t\t\t\t\t\t\t\t\thandleChangeStatusSchedule={onToggleSchedule}\r\n\t\t\t\t\t\t\t\t\tisEditView={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ScheduleList>\r\n\t\t\t\t\t</Schedule>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EditSelfCourse;\r\n"]},"metadata":{},"sourceType":"module"}
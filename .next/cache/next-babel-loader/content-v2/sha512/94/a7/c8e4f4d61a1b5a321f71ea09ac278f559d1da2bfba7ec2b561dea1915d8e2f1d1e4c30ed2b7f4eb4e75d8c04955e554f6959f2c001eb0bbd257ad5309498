{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\ExpandTable\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Card, Table } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useWrap } from '~/context/wrap';\n\nvar ExpandTable = function ExpandTable(props) {\n  _s();\n\n  var _props$loading, _props$loading2;\n\n  var _useWrap = useWrap(),\n      getTitlePage = _useWrap.getTitlePage;\n\n  var _useState = useState({\n    selectedRowKeys: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState([]),\n      dataSource = _useState2[0],\n      setDataSource = _useState2[1];\n\n  var _useState3 = useState([{\n    currentPage: 1,\n    listKeys: []\n  }]),\n      rowKeys = _useState3[0],\n      setRowKeys = _useState3[1];\n\n  var _useState4 = useState(1),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  var _useState5 = useState(null),\n      activeIndex = _useState5[0],\n      setActiveIndex = _useState5[1];\n\n  var _useState6 = useState(450),\n      heightTable = _useState6[0],\n      setHeightTable = _useState6[1];\n\n  var closeAllExpandFunc = function closeAllExpandFunc() {\n    setRowKeys([{\n      currentPage: 1,\n      listKeys: []\n    }]);\n  };\n\n  var selectRow = function selectRow(record) {\n    var selectedRowKeys = [];\n\n    if (selectedRowKeys.indexOf(record.key) >= 0) {\n      selectedRowKeys.splice(selectedRowKeys.indexOf(record.key), 1);\n    } else {\n      selectedRowKeys.push(record.key);\n    }\n\n    setState({\n      selectedRowKeys: selectedRowKeys\n    });\n  };\n\n  var onSelectedRowKeysChange = function onSelectedRowKeysChange(selectedRowKeys, selectRow) {\n    props.onSelectRow(selectRow) && props.onSelectRow(selectRow);\n    setState({\n      selectedRowKeys: selectedRowKeys\n    });\n  };\n\n  var changePagination = function changePagination(pageNumber, pageSize) {\n    setCurrentPage(pageNumber);\n\n    if (!rowKeys.some(function (object) {\n      return object['currentPage'] == pageNumber;\n    })) {\n      rowKeys.push({\n        currentPage: pageNumber,\n        listKeys: []\n      });\n    }\n\n    setRowKeys(_toConsumableArray(rowKeys));\n\n    if (typeof props.getPagination != 'undefined') {\n      props.getPagination(pageNumber, pageSize);\n    } else {\n      return pageNumber;\n    }\n  };\n\n  var onChangeExpand = function onChangeExpand(expandedRows) {\n    setActiveIndex(parseInt(expandedRows[expandedRows.length - 1]));\n\n    if (rowKeys.some(function (object) {\n      return object['currentPage'] == currentPage;\n    })) {\n      var index = rowKeys.findIndex(function (item) {\n        return item.currentPage == currentPage;\n      });\n      rowKeys[index].listKeys = expandedRows;\n    }\n\n    setRowKeys(_toConsumableArray(rowKeys));\n  };\n\n  var returnRowKeys = function returnRowKeys() {\n    var rowK = null;\n\n    if (rowKeys.some(function (object) {\n      return object['currentPage'] == currentPage;\n    })) {\n      rowK = rowKeys.find(function (item) {\n        return item.currentPage === currentPage;\n      }).listKeys;\n    } else {\n      rowK = [];\n    }\n\n    if (rowK.length > 1) {\n      rowK.splice(rowK.length - 2, 1);\n    }\n\n    return rowK;\n  };\n\n  var onExpand = function onExpand(expand, record) {\n    if (typeof props.handleExpand != 'undefined') {\n      props.handleExpand(record);\n    }\n  }; // const onRowchange = (row) => {\n  //   console.log(\"ROW: \", row);\n  // };\n\n\n  var onShowSizeChange = function onShowSizeChange(current, size) {\n    props.onChangePageSize && props.onChangePageSize(current, size);\n  };\n\n  var rowSelection = {\n    selectedRowKeys: state.selectedRowKeys,\n    onChange: onSelectedRowKeysChange,\n    hideSelectAll: false\n  };\n\n  var onSelect = function onSelect() {};\n\n  useEffect(function () {\n    if (props.TitlePage) {\n      getTitlePage(props.TitlePage);\n    }\n\n    if (props.dataSource) {\n      var dataClone = _toConsumableArray(props.dataSource);\n\n      dataClone.forEach(function (item, index) {\n        item.key = index.toString();\n      });\n      setDataSource(dataClone);\n    }\n  }, [props.dataSource]);\n  useEffect(function () {\n    if (props.closeAllExpand) {\n      closeAllExpandFunc();\n    }\n  }, [props.closeAllExpand]);\n  useEffect(function () {\n    var wS = screen.width;\n\n    if (wS < 800) {// setHeightTable(600);\n      // console.log('start respon');\n    }\n  }, []);\n  useEffect(function () {\n    if (props.isResetKey) {\n      setState({\n        selectedRowKeys: []\n      });\n    }\n  }, [props.isResetKey]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-table table-expand\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"cardRadius \".concat(props.addClass && props.addClass, \" \").concat(props.Size ? props.Size : ''),\n        title: props.Extra,\n        extra: props.TitleCard,\n        children: [props.children, /*#__PURE__*/_jsxDEV(Table, {\n          loading: ((_props$loading = props.loading) === null || _props$loading === void 0 ? void 0 : _props$loading.type) == 'GET_ALL' && ((_props$loading2 = props.loading) === null || _props$loading2 === void 0 ? void 0 : _props$loading2.status),\n          bordered: props.haveBorder ? props.haveBorder : false,\n          scroll: {\n            x: 'max-content',\n            y: heightTable\n          },\n          columns: props.columns,\n          dataSource: dataSource,\n          size: \"middle\",\n          pagination: {\n            pageSize: 30,\n            pageSizeOptions: ['30'],\n            onShowSizeChange: onShowSizeChange,\n            total: props.totalPage && props.totalPage,\n            showTotal: function showTotal() {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-weight-black\",\n                children: [\"T\\u1ED5ng c\\u1ED9ng: \", props.totalPage]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 25\n              }, _this);\n            },\n            onChange: function onChange(pageNumber, pageSize) {\n              return changePagination(pageNumber, pageSize);\n            },\n            current: props.currentPage && props.currentPage\n          } // rowSelection={rowSelection}\n          ,\n          rowClassName: function rowClassName(record, index) {\n            return index == activeIndex ? 'table-row-active' : index % 2 === 0 ? 'table-row-light' : 'table-row-dark';\n          },\n          onRow: function onRow(record, index) {\n            return {\n              onClick: function onClick() {\n                selectRow(record);\n                setActiveIndex(index);\n              }\n            };\n          },\n          expandable: rowKeys[0].listKeys.length > 0 && props.expandable,\n          expandedRowRender: function expandedRowRender(record, index, indent, expaned) {\n            return expaned ? props.expandable : null;\n          },\n          onExpandedRowsChange: onChangeExpand,\n          onExpand: onExpand,\n          expandedRowKeys: returnRowKeys(),\n          rowSelection: props.isSelect ? rowSelection : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false);\n};\n\n_s(ExpandTable, \"j7csvEA7GLbPn9dJaFeshDJPE+I=\", false, function () {\n  return [useWrap];\n});\n\n_c = ExpandTable;\nexport default ExpandTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpandTable\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/ExpandTable/index.tsx"],"names":["Card","Table","React","useEffect","useState","useWrap","ExpandTable","props","getTitlePage","selectedRowKeys","state","setState","dataSource","setDataSource","currentPage","listKeys","rowKeys","setRowKeys","setCurrentPage","activeIndex","setActiveIndex","heightTable","setHeightTable","closeAllExpandFunc","selectRow","record","indexOf","key","splice","push","onSelectedRowKeysChange","onSelectRow","changePagination","pageNumber","pageSize","some","object","getPagination","onChangeExpand","expandedRows","parseInt","length","index","findIndex","item","returnRowKeys","rowK","find","onExpand","expand","handleExpand","onShowSizeChange","current","size","onChangePageSize","rowSelection","onChange","hideSelectAll","onSelect","TitlePage","dataClone","forEach","toString","closeAllExpand","wS","screen","width","isResetKey","addClass","Size","Extra","TitleCard","children","loading","type","status","haveBorder","x","y","columns","pageSizeOptions","total","totalPage","showTotal","onClick","expandable","indent","expaned","isSelect"],"mappings":"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","sourcesContent":["import { Card, Table } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst ExpandTable = (props) => {\r\n\tconst { getTitlePage } = useWrap()\r\n\tconst [state, setState] = useState({ selectedRowKeys: [] })\r\n\tconst [dataSource, setDataSource] = useState([])\r\n\tconst [rowKeys, setRowKeys] = useState([\r\n\t\t{\r\n\t\t\tcurrentPage: 1,\r\n\t\t\tlistKeys: []\r\n\t\t}\r\n\t])\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [activeIndex, setActiveIndex] = useState(null)\r\n\tconst [heightTable, setHeightTable] = useState<number>(450)\r\n\r\n\tconst closeAllExpandFunc = () => {\r\n\t\tsetRowKeys([\r\n\t\t\t{\r\n\t\t\t\tcurrentPage: 1,\r\n\t\t\t\tlistKeys: []\r\n\t\t\t}\r\n\t\t])\r\n\t}\r\n\r\n\tconst selectRow = (record) => {\r\n\t\tconst selectedRowKeys = []\r\n\r\n\t\tif (selectedRowKeys.indexOf(record.key) >= 0) {\r\n\t\t\tselectedRowKeys.splice(selectedRowKeys.indexOf(record.key), 1)\r\n\t\t} else {\r\n\t\t\tselectedRowKeys.push(record.key)\r\n\t\t}\r\n\t\tsetState({ selectedRowKeys })\r\n\t}\r\n\r\n\tconst onSelectedRowKeysChange = (selectedRowKeys, selectRow) => {\r\n\t\tprops.onSelectRow(selectRow) && props.onSelectRow(selectRow)\r\n\t\tsetState({ selectedRowKeys })\r\n\t}\r\n\r\n\tconst changePagination = (pageNumber, pageSize) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tif (!rowKeys.some((object) => object['currentPage'] == pageNumber)) {\r\n\t\t\trowKeys.push({\r\n\t\t\t\tcurrentPage: pageNumber,\r\n\t\t\t\tlistKeys: []\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tsetRowKeys([...rowKeys])\r\n\r\n\t\tif (typeof props.getPagination != 'undefined') {\r\n\t\t\tprops.getPagination(pageNumber, pageSize)\r\n\t\t} else {\r\n\t\t\treturn pageNumber\r\n\t\t}\r\n\t}\r\n\r\n\tconst onChangeExpand = (expandedRows) => {\r\n\t\tsetActiveIndex(parseInt(expandedRows[expandedRows.length - 1]))\r\n\r\n\t\tif (rowKeys.some((object) => object['currentPage'] == currentPage)) {\r\n\t\t\tlet index = rowKeys.findIndex((item) => item.currentPage == currentPage)\r\n\t\t\trowKeys[index].listKeys = expandedRows\r\n\t\t}\r\n\r\n\t\tsetRowKeys([...rowKeys])\r\n\t}\r\n\r\n\tconst returnRowKeys = () => {\r\n\t\tlet rowK = null\r\n\r\n\t\tif (rowKeys.some((object) => object['currentPage'] == currentPage)) {\r\n\t\t\trowK = rowKeys.find((item) => item.currentPage === currentPage).listKeys\r\n\t\t} else {\r\n\t\t\trowK = []\r\n\t\t}\r\n\r\n\t\tif (rowK.length > 1) {\r\n\t\t\trowK.splice(rowK.length - 2, 1)\r\n\t\t}\r\n\r\n\t\treturn rowK\r\n\t}\r\n\r\n\tconst onExpand = (expand, record) => {\r\n\t\tif (typeof props.handleExpand != 'undefined') {\r\n\t\t\tprops.handleExpand(record)\r\n\t\t}\r\n\t}\r\n\r\n\t// const onRowchange = (row) => {\r\n\t//   console.log(\"ROW: \", row);\r\n\t// };\r\n\r\n\tconst onShowSizeChange = (current, size) => {\r\n\t\tprops.onChangePageSize && props.onChangePageSize(current, size)\r\n\t}\r\n\r\n\tconst rowSelection = {\r\n\t\tselectedRowKeys: state.selectedRowKeys,\r\n\t\tonChange: onSelectedRowKeysChange,\r\n\t\thideSelectAll: false\r\n\t}\r\n\r\n\tconst onSelect = () => {}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.TitlePage) {\r\n\t\t\tgetTitlePage(props.TitlePage)\r\n\t\t}\r\n\t\tif (props.dataSource) {\r\n\t\t\tlet dataClone = [...props.dataSource]\r\n\t\t\tdataClone.forEach((item, index) => {\r\n\t\t\t\titem.key = index.toString()\r\n\t\t\t})\r\n\t\t\tsetDataSource(dataClone)\r\n\t\t}\r\n\t}, [props.dataSource])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.closeAllExpand) {\r\n\t\t\tcloseAllExpandFunc()\r\n\t\t}\r\n\t}, [props.closeAllExpand])\r\n\r\n\tuseEffect(() => {\r\n\t\tlet wS = screen.width\r\n\t\tif (wS < 800) {\r\n\t\t\t// setHeightTable(600);\r\n\t\t\t// console.log('start respon');\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.isResetKey) {\r\n\t\t\tsetState({ selectedRowKeys: [] })\r\n\t\t}\r\n\t}, [props.isResetKey])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"wrap-table table-expand\">\r\n\t\t\t\t<Card\r\n\t\t\t\t\tclassName={`cardRadius ${props.addClass && props.addClass} ${props.Size ? props.Size : ''}`}\r\n\t\t\t\t\ttitle={props.Extra}\r\n\t\t\t\t\textra={props.TitleCard}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tloading={props.loading?.type == 'GET_ALL' && props.loading?.status}\r\n\t\t\t\t\t\tbordered={props.haveBorder ? props.haveBorder : false}\r\n\t\t\t\t\t\tscroll={{ x: 'max-content', y: heightTable }}\r\n\t\t\t\t\t\tcolumns={props.columns}\r\n\t\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\t\tsize=\"middle\"\r\n\t\t\t\t\t\tpagination={{\r\n\t\t\t\t\t\t\tpageSize: 30,\r\n\t\t\t\t\t\t\tpageSizeOptions: ['30'],\r\n\t\t\t\t\t\t\tonShowSizeChange: onShowSizeChange,\r\n\t\t\t\t\t\t\ttotal: props.totalPage && props.totalPage,\r\n\t\t\t\t\t\t\tshowTotal: () => <div className=\"font-weight-black\">Tổng cộng: {props.totalPage}</div>,\r\n\t\t\t\t\t\t\tonChange: (pageNumber, pageSize) => changePagination(pageNumber, pageSize),\r\n\t\t\t\t\t\t\tcurrent: props.currentPage && props.currentPage\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t// rowSelection={rowSelection}\r\n\t\t\t\t\t\trowClassName={(record, index) =>\r\n\t\t\t\t\t\t\tindex == activeIndex ? 'table-row-active' : index % 2 === 0 ? 'table-row-light' : 'table-row-dark'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonRow={(record, index) => ({\r\n\t\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\t\tselectRow(record)\r\n\t\t\t\t\t\t\t\tsetActiveIndex(index)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\texpandable={rowKeys[0].listKeys.length > 0 && props.expandable}\r\n\t\t\t\t\t\texpandedRowRender={(record, index, indent, expaned) => (expaned ? props.expandable : null)}\r\n\t\t\t\t\t\tonExpandedRowsChange={onChangeExpand}\r\n\t\t\t\t\t\tonExpand={onExpand}\r\n\t\t\t\t\t\texpandedRowKeys={returnRowKeys()}\r\n\t\t\t\t\t\trowSelection={props.isSelect ? rowSelection : null}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ExpandTable\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\customer\\\\student\\\\student-advisory\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport SortBox from '~/components/Elements/SortBox';\nimport moment from 'moment';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport LayoutBase from '~/components/LayoutBase';\nimport { studentAdviseApi, sourceInfomationApi, areaApi, staffApi, consultationStatusApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport StudentAdviseForm from '~/components/Global/Customer/Student/StudentAdviseForm';\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase';\nimport Link from 'next/link';\nimport { Tooltip } from 'antd';\nimport { CalendarOutlined } from '@ant-design/icons';\nimport ExpandTable from '~/components/ExpandTable';\nimport StudentAdvisoryNote from '~/components/Global/Customer/Student/StudentAdvisory/StudentAdvisoryNote';\nimport StudentAdvisoryMail from '~/components/Global/Customer/Student/StudentAdvisory/StudentAdvisoryMail';\nimport { learningNeeds } from '~/apiBase/options/learning-needs';\nlet pageIndex = 1;\nlet listFieldSearch = {\n  pageIndex: 1,\n  CustomerName: null\n};\nlet listFieldFilter = {\n  pageIndex: 1,\n  SourceInformationID: null,\n  CounselorsID: null,\n  fromDate: null,\n  toDate: null,\n  CustomerConsultationStatusID: null,\n  LearningNeedID: null\n};\nconst dataOption = [{\n  dataSort: {\n    sort: 0,\n    sortType: false\n  },\n  text: 'Tên Z - A'\n}, {\n  dataSort: {\n    sort: 0,\n    sortType: true\n  },\n  text: 'Tên A - Z '\n}]; // -- FOR DIFFERENT VIEW --\n\nconst listApi = [{\n  api: areaApi,\n  text: 'Tỉnh/Tp',\n  name: 'Area'\n}, {\n  api: sourceInfomationApi,\n  text: 'Nguồn khách hàng',\n  name: 'SourceInformation'\n}, {\n  api: staffApi,\n  text: 'Tư vấn viên',\n  name: 'Counselors'\n}, {\n  api: consultationStatusApi,\n  text: 'Tình trạng tư vấn',\n  name: 'ConsultationStatus'\n}, {\n  api: learningNeeds,\n  // api: programApi,\n  text: 'Nhu cầu học',\n  name: 'Program'\n}];\nexport default function StudentAdvisory() {\n  const {\n    0: listDataForm,\n    1: setListDataForm\n  } = useState({\n    Area: [],\n    SourceInformation: [],\n    Counselors: [],\n    ConsultationStatus: [],\n    Program: []\n  });\n  const {\n    0: confirmLoading,\n    1: setConfirmLoading\n  } = useState(false);\n  const {\n    0: showGroup,\n    1: setShowGroup\n  } = useState(false); // ------ BASE USESTATE TABLE -------\n\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    showNoti,\n    pageSize,\n    isAdmin,\n    userInformation\n  } = useWrap();\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    sort: null,\n    sortType: null,\n    SourceInformationID: null,\n    CounselorsID: null,\n    fromDate: null,\n    toDate: null,\n    isGroup: null\n  };\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: indexRow,\n    1: setIndexRow\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi);\n  const {\n    0: listCustomer,\n    1: setListCustomer\n  } = useState([]);\n  const {\n    0: showCheckbox,\n    1: setShowCheckbox\n  } = useState(false);\n  const {\n    0: isResetKey,\n    1: setIsResetKey\n  } = useState(false); // ------ LIST FILTER -------\n\n  const {\n    0: dataFilter,\n    1: setDataFilter\n  } = useState([{\n    name: 'SourceInformationID',\n    title: 'Nguồn khách',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: null,\n    // Gọi api xong trả data vào đây\n    value: null\n  }, {\n    name: 'CounselorsID',\n    title: 'Tư vấn viên',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: null,\n    value: null\n  }, {\n    name: 'CustomerConsultationStatusID',\n    title: 'Trạng thái hoạt động',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: null\n  }, {\n    name: 'LearningNeedID',\n    title: 'Nhu cầu học',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: null\n  }, {\n    name: 'date-range',\n    title: 'Từ - đến',\n    col: 'col-12',\n    type: 'date-range',\n    value: null\n  }]); // ------ SET DATA FUN ------\n\n  const setDataFunc = (name, data) => {\n    dataFilter.every((item, index) => {\n      if (item.name == name) {\n        item.optionList = data;\n        return false;\n      }\n\n      return true;\n    });\n    setDataFilter([...dataFilter]);\n  };\n\n  const makeNewData = (data, name) => {\n    let newData = null;\n\n    switch (name) {\n      case 'Area':\n        newData = data.map(item => ({\n          title: item.AreaName,\n          value: item.AreaID\n        }));\n        break;\n\n      case 'Program':\n        newData = data.map(item => ({\n          title: item.Name,\n          value: item.ID\n        }));\n        setDataFunc('LearningNeedID', newData);\n        break;\n\n      case 'SourceInformation':\n        newData = data.map(item => ({\n          title: item.SourceInformationName,\n          value: item.SourceInformationID\n        }));\n        setDataFunc('SourceInformationID', newData);\n        break;\n\n      case 'Counselors':\n        newData = data.map(item => ({\n          title: item.FullNameUnicode,\n          value: item.UserInformationID\n        }));\n        setDataFunc('CounselorsID', newData);\n        break;\n\n      case 'ConsultationStatus':\n        newData = data.map(item => ({\n          title: item.Name,\n          value: item.ID\n        }));\n        setDataFunc('CustomerConsultationStatusID', newData);\n        break;\n\n      default:\n        break;\n    }\n\n    return newData;\n  };\n\n  const getDataTolist = (data, name) => {\n    let newData = makeNewData(data, name);\n    Object.keys(listDataForm).forEach(function (key) {\n      if (key == name) {\n        listDataForm[key] = newData;\n      }\n    });\n    setListDataForm(_objectSpread({}, listDataForm));\n  }; // ----------- GET DATA SOURCE ---------------\n\n\n  const getDataStudentForm = arrApi => {\n    arrApi.forEach((item, index) => {\n      ;\n\n      (async () => {\n        let res = null;\n\n        try {\n          if (item.name == 'Counselors') {\n            res = await item.api.getAll({\n              pageIndex: 1,\n              pageSize: 99999,\n              RoleID: 6,\n              Enable: true,\n              StatusID: 0\n            });\n          } else {\n            res = await item.api.getAll({\n              pageIndex: 1,\n              pageSize: 99999,\n              Enable: true\n            });\n          }\n\n          res.status == 200 && getDataTolist(res.data.data, item.name);\n          res.status == 204 && console.log(item.text + ' Không có dữ liệu');\n        } catch (error) {\n          // showNoti('danger', error.message);\n          console.log(error.message);\n        } finally {}\n      })();\n    });\n  }; // GET DATA SOURCE\n\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await studentAdviseApi.getAll(todoApi);\n      res.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow), setIsResetKey(true));\n      res.status == 204 && setDataSource([]);\n      setTimeout(() => {\n        setIsResetKey(false);\n      }, 200);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // ---------------- AFTER SUBMIT -----------------\n\n\n  const afterPost = mes => {\n    // showNoti(\"success\", mes);\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // ----------------- ON SUBMIT --------------------\n\n\n  const _onSubmit = async dataSubmit => {\n    console.log('Data submit: ', dataSubmit);\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res = null;\n\n    if (dataSubmit.ID) {\n      try {\n        res = await studentAdviseApi.update(dataSubmit);\n\n        if (res.status == 200) {\n          // let newDataSource = [...dataSource];\n          // newDataSource.splice(indexRow, 1, {\n          // \t...dataSubmit,\n          // \tAreaName: listDataForm.Area.find((item) => item.value == dataSubmit.AreaID)?.title,\n          // \tCounselorsName: listDataForm.Counselors.find((item) => item.value == dataSubmit.CounselorsID)?.title,\n          // \tSourceInformationName:\n          // \t\tdataSubmit.SourceInformationID &&\n          // \t\tlistDataForm.SourceInformation.find((item) => item.value == dataSubmit.SourceInformationID).title\n          // });\n          // setDataSource(newDataSource);\n          setTodoApi(_objectSpread({}, todoApi));\n          showNoti('success', res.data.message);\n        }\n      } catch (error) {\n        console.log('error: ', error);\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: false\n        });\n      }\n    } else {\n      dataSubmit.CounselorsID = 0;\n\n      try {\n        var _res;\n\n        res = await studentAdviseApi.add(dataSubmit);\n        ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && afterPost(res.data.message);\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: false\n        });\n      }\n    }\n\n    return res;\n  };\n\n  const checkEmptyData = () => {\n    let count = 0;\n    let res = false;\n    Object.keys(listDataForm).forEach(function (key) {\n      if (listDataForm[key].length == 0) {\n        count++;\n      }\n    });\n\n    if (count < 1) {\n      res = true;\n    }\n\n    return res;\n  }; // show group customer\n\n\n  const showGroupCustomer = () => {\n    if (!showGroup) {\n      setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n        isGroup: true\n      }));\n      setShowGroup(true);\n    } else {\n      setTodoApi(listTodoApi);\n      setShowGroup(false);\n    }\n  }; // -------------- HANDLE FILTER ------------------\n\n\n  const handleFilter = listFilter => {\n    console.log('List Filter when submit: ', listFilter);\n\n    let newListFilter = _objectSpread({}, listFieldFilter);\n\n    listFilter.forEach((item, index) => {\n      let key = item.name;\n      Object.keys(newListFilter).forEach(keyFilter => {\n        if (keyFilter == key) {\n          newListFilter[key] = item.value;\n        }\n      });\n    });\n    setTodoApi(_objectSpread(_objectSpread(_objectSpread({}, listTodoApi), newListFilter), {}, {\n      pageIndex: 1\n    }));\n  }; // --------------- HANDLE SORT ----------------------\n\n\n  const handleSort = async option => {\n    let newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1,\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n\n    setCurrentPage(1), setTodoApi(newTodoApi);\n  }; // ------------ ON SEARCH -----------------------\n\n\n  const checkField = (valueSearch, dataIndex) => {\n    let newList = _objectSpread({}, listFieldSearch);\n\n    Object.keys(newList).forEach(function (key) {\n      console.log('key: ', key);\n\n      if (key != dataIndex) {\n        if (key != 'pageIndex') {\n          newList[key] = null;\n        }\n      } else {\n        newList[key] = valueSearch;\n      }\n    });\n    return newList;\n  };\n\n  const onSearch = (valueSearch, dataIndex) => {\n    console.log('valueSearch: ', valueSearch);\n    console.log('dataIndex: ', dataIndex);\n    let clearKey = dataIndex == 'CustomerName' ? {\n      CustomerName: valueSearch\n    } : dataIndex == 'Number' ? {\n      Number: valueSearch\n    } : {\n      Email: valueSearch\n    };\n    setTodoApi(_objectSpread(_objectSpread(_objectSpread({}, todoApi), clearKey), listFieldFilter));\n  }; // HANDLE RESET\n\n\n  const resetListFieldSearch = () => {\n    Object.keys(listFieldSearch).forEach(function (key) {\n      if (key != 'pageIndex') {\n        listFieldSearch[key] = null;\n      }\n    });\n  };\n\n  const handleReset = () => {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1), resetListFieldSearch();\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  const getPagination = pageNumber => {\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      // ...listFieldSearch,\n      pageIndex: pageIndex\n    }));\n  }; // --------- ADD TO GROUP ---------\n\n\n  const addToGroup = async data => {\n    let dataSubmit = {\n      ID: data.ID,\n      isGroup: true\n    };\n    setConfirmLoading(true);\n\n    try {\n      let res = await studentAdviseApi.update(dataSubmit);\n\n      if (res.status == 200) {\n        setTodoApi(_objectSpread({}, todoApi));\n        showNoti('success', 'Thêm vào nhóm thành công');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setConfirmLoading(false);\n    }\n  };\n\n  const onChange_sendEmail = (e, ID) => {\n    let checked = e.target.checked;\n\n    if (checked) {\n      listCustomer.push(ID);\n    } else {\n      let index = listCustomer.indexOf(ID);\n      listCustomer.splice(index, 1);\n    }\n\n    setListCustomer([...listCustomer]);\n  };\n\n  const resetListCustomer = () => {\n    setListCustomer([]);\n  }; // -------- ON SELECT ROW ---------\n\n\n  const onSelectRow = selectRow => {\n    let listID = selectRow === null || selectRow === void 0 ? void 0 : selectRow.map(item => item.ID);\n    setListCustomer(listID);\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(() => {\n    getDataSource();\n  }, [todoApi]);\n  useEffect(() => {\n    userInformation && (userInformation.RoleID === 1 || userInformation.RoleID === 6 || userInformation.RoleID === 5) && getDataStudentForm(listApi);\n  }, [userInformation]);\n\n  const expandedRowRender = data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(StudentAdvisoryNote, {\n        onFetchData: () => setTodoApi(_objectSpread({}, todoApi)),\n        dataSource: data.Note,\n        userID: data.ID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  };\n\n  const columns = userInformation && (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) !== 10 ? [{\n    title: 'Mã số',\n    dataIndex: 'CustomerCode',\n    fixed: 'left',\n    render: CustomerCode => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: CustomerCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 33\n    }, this)\n  }, _objectSpread(_objectSpread({\n    title: 'Họ tên',\n    dataIndex: 'CustomerName'\n  }, FilterColumn('CustomerName', onSearch, handleReset, 'text')), {}, {\n    fixed: 'left',\n    render: a => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: a\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 22\n    }, this)\n  }), _objectSpread(_objectSpread({\n    title: 'Số điện thoại',\n    dataIndex: 'Number'\n  }, FilterColumn('Number', onSearch, handleReset, 'text')), {}, {\n    fixed: 'left',\n    render: a => /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        width: 130\n      },\n      children: a\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 22\n    }, this)\n  }), _objectSpread(_objectSpread({\n    title: 'Email',\n    dataIndex: 'Email'\n  }, FilterColumn('Email', onSearch, handleReset, 'text')), {}, {\n    fixed: 'left',\n    render: a => /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        width: 200\n      },\n      children: a\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 22\n    }, this)\n  }), {\n    width: 180,\n    title: 'Nhu cầu học',\n    dataIndex: 'LearningNeedName'\n  }, {\n    width: 150,\n    title: 'Nguồn',\n    dataIndex: 'SourceInformationName'\n  }, {\n    className: 'text-center',\n    width: 200,\n    title: 'Trạng thái',\n    dataIndex: 'CustomerConsultationStatusName',\n    render: (text, data) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 31\n    }, this)\n  }, {\n    width: 150,\n    title: 'Tư vấn viên',\n    dataIndex: 'CounselorsName',\n    render: CounselorsName => /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        width: 200\n      },\n      children: CounselorsName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 35\n    }, this)\n  }, {\n    title: 'Ngày đăng ký',\n    dataIndex: 'CreatedOn',\n    render: date => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: moment(date).format('DD/MM/YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 25\n    }, this),\n    width: 120\n  }, {\n    title: '',\n    dataIndex: 'CustomerConsultationStatusID',\n    width: 135,\n    render: (text, data, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(StudentAdviseForm, {\n          getIndex: () => setIndexRow(index),\n          index: index,\n          rowData: data,\n          rowID: data.ID,\n          listData: listDataForm,\n          isLoading: isLoading,\n          _onSubmit: data => _onSubmit(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(StudentAdvisoryMail, {\n          loadingOutside: isLoading,\n          dataSource: dataSource,\n          onFetchData: () => setTodoApi(_objectSpread({}, todoApi)),\n          dataRow: data,\n          listCustomer: listCustomer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 10\n        }, this), text == 2 && /*#__PURE__*/_jsxDEV(Link, {\n          href: {\n            pathname: '/customer/service/service-info-student/',\n            query: {\n              customerID: data.ID\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"H\\u1EB9n test\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-icon view\",\n              children: /*#__PURE__*/_jsxDEV(CalendarOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 9\n      }, this);\n    }\n  }] : [{\n    title: 'Mã số',\n    dataIndex: 'CustomerCode',\n    fixed: 'left',\n    render: CustomerCode => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: CustomerCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 33\n    }, this)\n  }, _objectSpread(_objectSpread({\n    title: 'Họ tên',\n    dataIndex: 'CustomerName'\n  }, FilterColumn('CustomerName', onSearch, handleReset, 'text')), {}, {\n    fixed: 'left',\n    render: a => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: a\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 22\n    }, this)\n  }), _objectSpread(_objectSpread({\n    title: 'Số điện thoại',\n    dataIndex: 'Number'\n  }, FilterColumn('Number', onSearch, handleReset, 'text')), {}, {\n    fixed: 'left',\n    render: a => /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        width: 130\n      },\n      children: a\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 22\n    }, this)\n  }), _objectSpread(_objectSpread({\n    title: 'Email',\n    dataIndex: 'Email'\n  }, FilterColumn('Email', onSearch, handleReset, 'text')), {}, {\n    fixed: 'left',\n    render: a => /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        width: 200\n      },\n      children: a\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 22\n    }, this)\n  }), {\n    width: 180,\n    title: 'Nhu cầu học',\n    dataIndex: 'LearningNeedName'\n  }, {\n    width: 150,\n    title: 'Nguồn',\n    dataIndex: 'SourceInformationName'\n  }, {\n    className: 'text-center',\n    width: 200,\n    title: 'Trạng thái',\n    dataIndex: 'CustomerConsultationStatusName',\n    render: (text, data) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 31\n    }, this)\n  }, {\n    width: 150,\n    title: 'Tư vấn viên',\n    dataIndex: 'CounselorsName',\n    render: CounselorsName => /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        width: 200\n      },\n      children: CounselorsName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 35\n    }, this)\n  }, {\n    title: 'Ngày đăng ký',\n    dataIndex: 'CreatedOn',\n    render: date => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: moment(date).format('DD/MM/YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 25\n    }, this),\n    width: 120\n  }];\n  return /*#__PURE__*/_jsxDEV(ExpandTable, {\n    currentPage: currentPage,\n    totalPage: totalPage && totalPage,\n    getPagination: pageNumber => getPagination(pageNumber),\n    loading: isLoading,\n    addClass: \"basic-header\",\n    TitlePage: \"Danh s\\xE1ch kh\\xE1ch h\\xE0ng\",\n    TitleCard: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center justify-content-end\",\n      children: userInformation && (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) !== 10 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(StudentAdvisoryMail, {\n          showCheckBox: () => setShowCheckbox(!showCheckbox),\n          loadingOutside: isLoading,\n          dataSource: dataSource,\n          onFetchData: () => setTodoApi(_objectSpread({}, todoApi)),\n          listCustomer: listCustomer,\n          resetListCustomer: () => resetListCustomer()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(StudentAdviseForm, {\n          listData: checkEmptyData && listDataForm,\n          isLoading: isLoading,\n          _onSubmit: data => _onSubmit(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 5\n    }, this),\n    dataSource: dataSource,\n    columns: columns,\n    Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extra-table\",\n      children: [/*#__PURE__*/_jsxDEV(FilterBase, {\n        dataFilter: dataFilter,\n        handleFilter: listFilter => handleFilter(listFilter),\n        handleReset: handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(SortBox, {\n        handleSort: value => handleSort(value),\n        dataOption: dataOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 5\n    }, this),\n    expandable: {\n      expandedRowRender\n    },\n    isSelect: showCheckbox,\n    isResetKey: isResetKey,\n    onSelectRow: selectRows => onSelectRow(selectRows)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 705,\n    columnNumber: 3\n  }, this);\n}\nStudentAdvisory.layout = LayoutBase;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/customer/student/student-advisory/index.tsx"],"names":["React","useState","useEffect","SortBox","moment","FilterColumn","LayoutBase","studentAdviseApi","sourceInfomationApi","areaApi","staffApi","consultationStatusApi","useWrap","StudentAdviseForm","FilterBase","Link","Tooltip","CalendarOutlined","ExpandTable","StudentAdvisoryNote","StudentAdvisoryMail","learningNeeds","pageIndex","listFieldSearch","CustomerName","listFieldFilter","SourceInformationID","CounselorsID","fromDate","toDate","CustomerConsultationStatusID","LearningNeedID","dataOption","dataSort","sort","sortType","text","listApi","api","name","StudentAdvisory","listDataForm","setListDataForm","Area","SourceInformation","Counselors","ConsultationStatus","Program","confirmLoading","setConfirmLoading","showGroup","setShowGroup","dataSource","setDataSource","showNoti","pageSize","isAdmin","userInformation","listTodoApi","isGroup","isLoading","setIsLoading","type","status","totalPage","setTotalPage","indexRow","setIndexRow","currentPage","setCurrentPage","todoApi","setTodoApi","listCustomer","setListCustomer","showCheckbox","setShowCheckbox","isResetKey","setIsResetKey","dataFilter","setDataFilter","title","col","optionList","value","setDataFunc","data","every","item","index","makeNewData","newData","map","AreaName","AreaID","Name","ID","SourceInformationName","FullNameUnicode","UserInformationID","getDataTolist","Object","keys","forEach","key","getDataStudentForm","arrApi","res","getAll","RoleID","Enable","StatusID","console","log","error","message","getDataSource","totalRow","setTimeout","afterPost","mes","_onSubmit","dataSubmit","update","add","checkEmptyData","count","length","showGroupCustomer","handleFilter","listFilter","newListFilter","keyFilter","handleSort","option","newTodoApi","checkField","valueSearch","dataIndex","newList","onSearch","clearKey","Number","Email","resetListFieldSearch","handleReset","getPagination","pageNumber","addToGroup","onChange_sendEmail","e","checked","target","push","indexOf","splice","resetListCustomer","onSelectRow","selectRow","listID","expandedRowRender","Note","columns","fixed","render","CustomerCode","a","width","className","CounselorsName","date","format","pathname","query","customerID","selectRows","layout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport moment from 'moment'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport { studentAdviseApi, sourceInfomationApi, areaApi, staffApi, consultationStatusApi, programApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\nimport StudentAdviseForm from '~/components/Global/Customer/Student/StudentAdviseForm'\r\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase'\r\nimport Link from 'next/link'\r\nimport { Tooltip } from 'antd'\r\nimport { CalendarOutlined } from '@ant-design/icons'\r\nimport ExpandTable from '~/components/ExpandTable'\r\nimport StudentAdvisoryNote from '~/components/Global/Customer/Student/StudentAdvisory/StudentAdvisoryNote'\r\nimport StudentAdvisoryMail from '~/components/Global/Customer/Student/StudentAdvisory/StudentAdvisoryMail'\r\nimport { learningNeeds } from '~/apiBase/options/learning-needs'\r\n\r\nlet pageIndex = 1\r\n\r\nlet listFieldSearch = {\r\n\tpageIndex: 1,\r\n\tCustomerName: null\r\n}\r\n\r\nlet listFieldFilter = {\r\n\tpageIndex: 1,\r\n\tSourceInformationID: null,\r\n\tCounselorsID: null,\r\n\tfromDate: null,\r\n\ttoDate: null,\r\n\tCustomerConsultationStatusID: null,\r\n\tLearningNeedID: null\r\n}\r\n\r\nconst dataOption = [\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Tên Z - A'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Tên A - Z '\r\n\t}\r\n]\r\n\r\n// -- FOR DIFFERENT VIEW --\r\ninterface optionObj {\r\n\ttitle: string\r\n\tvalue: number\r\n}\r\n\r\ninterface listDataForm {\r\n\tArea: Array<optionObj>\r\n\tProgram: Array<optionObj>\r\n\tSourceInformation: Array<optionObj>\r\n\tCounselors: Array<optionObj>\r\n\tConsultationStatus: Array<optionObj>\r\n}\r\n\r\nconst listApi = [\r\n\t{\r\n\t\tapi: areaApi,\r\n\t\ttext: 'Tỉnh/Tp',\r\n\t\tname: 'Area'\r\n\t},\r\n\t{\r\n\t\tapi: sourceInfomationApi,\r\n\t\ttext: 'Nguồn khách hàng',\r\n\t\tname: 'SourceInformation'\r\n\t},\r\n\t{\r\n\t\tapi: staffApi,\r\n\t\ttext: 'Tư vấn viên',\r\n\t\tname: 'Counselors'\r\n\t},\r\n\t{\r\n\t\tapi: consultationStatusApi,\r\n\t\ttext: 'Tình trạng tư vấn',\r\n\t\tname: 'ConsultationStatus'\r\n\t},\r\n\t{\r\n\t\tapi: learningNeeds,\r\n\t\t// api: programApi,\r\n\t\ttext: 'Nhu cầu học',\r\n\t\tname: 'Program'\r\n\t}\r\n]\r\n\r\nexport default function StudentAdvisory() {\r\n\tconst [listDataForm, setListDataForm] = useState<listDataForm>({\r\n\t\tArea: [],\r\n\t\tSourceInformation: [],\r\n\t\tCounselors: [],\r\n\t\tConsultationStatus: [],\r\n\t\tProgram: []\r\n\t})\r\n\tconst [confirmLoading, setConfirmLoading] = useState(false)\r\n\tconst [showGroup, setShowGroup] = useState(false)\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState<IStudentAdvise[]>([])\r\n\tconst { showNoti, pageSize, isAdmin, userInformation } = useWrap()\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tSourceInformationID: null,\r\n\t\tCounselorsID: null,\r\n\t\tfromDate: null,\r\n\t\ttoDate: null,\r\n\t\tisGroup: null\r\n\t}\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [indexRow, setIndexRow] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\tconst [listCustomer, setListCustomer] = useState([])\r\n\tconst [showCheckbox, setShowCheckbox] = useState(false)\r\n\tconst [isResetKey, setIsResetKey] = useState(false)\r\n\r\n\t// ------ LIST FILTER -------\r\n\tconst [dataFilter, setDataFilter] = useState([\r\n\t\t{\r\n\t\t\tname: 'SourceInformationID',\r\n\t\t\ttitle: 'Nguồn khách',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null, // Gọi api xong trả data vào đây\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'CounselorsID',\r\n\t\t\ttitle: 'Tư vấn viên',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null,\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'CustomerConsultationStatusID',\r\n\t\t\ttitle: 'Trạng thái hoạt động',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'LearningNeedID',\r\n\t\t\ttitle: 'Nhu cầu học',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'date-range',\r\n\t\t\ttitle: 'Từ - đến',\r\n\t\t\tcol: 'col-12',\r\n\t\t\ttype: 'date-range',\r\n\t\t\tvalue: null\r\n\t\t}\r\n\t])\r\n\r\n\t// ------ SET DATA FUN ------\r\n\tconst setDataFunc = (name, data) => {\r\n\t\tdataFilter.every((item, index) => {\r\n\t\t\tif (item.name == name) {\r\n\t\t\t\titem.optionList = data\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t\tsetDataFilter([...dataFilter])\r\n\t}\r\n\r\n\tconst makeNewData = (data, name) => {\r\n\t\tlet newData = null\r\n\t\tswitch (name) {\r\n\t\t\tcase 'Area':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.AreaName,\r\n\t\t\t\t\tvalue: item.AreaID\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Program':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.Name,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('LearningNeedID', newData)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 'SourceInformation':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.SourceInformationName,\r\n\t\t\t\t\tvalue: item.SourceInformationID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('SourceInformationID', newData)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Counselors':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.FullNameUnicode,\r\n\t\t\t\t\tvalue: item.UserInformationID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('CounselorsID', newData)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'ConsultationStatus':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.Name,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('CustomerConsultationStatusID', newData)\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\r\n\t\treturn newData\r\n\t}\r\n\r\n\tconst getDataTolist = (data: any, name: any) => {\r\n\t\tlet newData = makeNewData(data, name)\r\n\r\n\t\tObject.keys(listDataForm).forEach(function (key) {\r\n\t\t\tif (key == name) {\r\n\t\t\t\tlistDataForm[key] = newData\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetListDataForm({ ...listDataForm })\r\n\t}\r\n\r\n\t// ----------- GET DATA SOURCE ---------------\r\n\tconst getDataStudentForm = (arrApi) => {\r\n\t\tarrApi.forEach((item, index) => {\r\n\t\t\t;(async () => {\r\n\t\t\t\tlet res = null\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (item.name == 'Counselors') {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tRoleID: 6,\r\n\t\t\t\t\t\t\tEnable: true,\r\n\t\t\t\t\t\t\tStatusID: 0\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tEnable: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tres.status == 200 && getDataTolist(res.data.data, item.name)\r\n\r\n\t\t\t\t\tres.status == 204 && console.log(item.text + ' Không có dữ liệu')\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\t// showNoti('danger', error.message);\r\n\t\t\t\t\tconsole.log(error.message)\r\n\t\t\t\t} finally {\r\n\t\t\t\t}\r\n\t\t\t})()\r\n\t\t})\r\n\t}\r\n\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await studentAdviseApi.getAll(todoApi)\r\n\t\t\tres.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow), setIsResetKey(true))\r\n\t\t\tres.status == 204 && setDataSource([])\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetIsResetKey(false)\r\n\t\t\t}, 200)\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// ---------------- AFTER SUBMIT -----------------\r\n\tconst afterPost = (mes) => {\r\n\t\t// showNoti(\"success\", mes);\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// ----------------- ON SUBMIT --------------------\r\n\tconst _onSubmit = async (dataSubmit: any) => {\r\n\t\tconsole.log('Data submit: ', dataSubmit)\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet res = null\r\n\r\n\t\tif (dataSubmit.ID) {\r\n\t\t\ttry {\r\n\t\t\t\tres = await studentAdviseApi.update(dataSubmit)\r\n\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\t// let newDataSource = [...dataSource];\r\n\t\t\t\t\t// newDataSource.splice(indexRow, 1, {\r\n\t\t\t\t\t// \t...dataSubmit,\r\n\t\t\t\t\t// \tAreaName: listDataForm.Area.find((item) => item.value == dataSubmit.AreaID)?.title,\r\n\t\t\t\t\t// \tCounselorsName: listDataForm.Counselors.find((item) => item.value == dataSubmit.CounselorsID)?.title,\r\n\t\t\t\t\t// \tSourceInformationName:\r\n\t\t\t\t\t// \t\tdataSubmit.SourceInformationID &&\r\n\t\t\t\t\t// \t\tlistDataForm.SourceInformation.find((item) => item.value == dataSubmit.SourceInformationID).title\r\n\t\t\t\t\t// });\r\n\t\t\t\t\t// setDataSource(newDataSource);\r\n\t\t\t\t\tsetTodoApi({ ...todoApi })\r\n\t\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log('error: ', error)\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdataSubmit.CounselorsID = 0\r\n\t\t\ttry {\r\n\t\t\t\tres = await studentAdviseApi.add(dataSubmit)\r\n\t\t\t\tres?.status == 200 && afterPost(res.data.message)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\tconst checkEmptyData = () => {\r\n\t\tlet count = 0\r\n\t\tlet res = false\r\n\t\tObject.keys(listDataForm).forEach(function (key) {\r\n\t\t\tif (listDataForm[key].length == 0) {\r\n\t\t\t\tcount++\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (count < 1) {\r\n\t\t\tres = true\r\n\t\t}\r\n\t\treturn res\r\n\t}\r\n\r\n\t// show group customer\r\n\tconst showGroupCustomer = () => {\r\n\t\tif (!showGroup) {\r\n\t\t\tsetTodoApi({\r\n\t\t\t\t...todoApi,\r\n\t\t\t\tisGroup: true\r\n\t\t\t})\r\n\t\t\tsetShowGroup(true)\r\n\t\t} else {\r\n\t\t\tsetTodoApi(listTodoApi)\r\n\t\t\tsetShowGroup(false)\r\n\t\t}\r\n\t}\r\n\r\n\t// -------------- HANDLE FILTER ------------------\r\n\tconst handleFilter = (listFilter) => {\r\n\t\tconsole.log('List Filter when submit: ', listFilter)\r\n\r\n\t\tlet newListFilter = { ...listFieldFilter }\r\n\t\tlistFilter.forEach((item, index) => {\r\n\t\t\tlet key = item.name\r\n\t\t\tObject.keys(newListFilter).forEach((keyFilter) => {\r\n\t\t\t\tif (keyFilter == key) {\r\n\t\t\t\t\tnewListFilter[key] = item.value\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tsetTodoApi({ ...listTodoApi, ...newListFilter, pageIndex: 1 })\r\n\t}\r\n\r\n\t// --------------- HANDLE SORT ----------------------\r\n\tconst handleSort = async (option) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetCurrentPage(1), setTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// ------------ ON SEARCH -----------------------\r\n\r\n\tconst checkField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = { ...listFieldSearch }\r\n\t\tObject.keys(newList).forEach(function (key) {\r\n\t\t\tconsole.log('key: ', key)\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\t\tnewList[key] = null\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewList[key] = valueSearch\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn newList\r\n\t}\r\n\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tconsole.log('valueSearch: ', valueSearch)\r\n\t\tconsole.log('dataIndex: ', dataIndex)\r\n\r\n\t\tlet clearKey =\r\n\t\t\tdataIndex == 'CustomerName' ? { CustomerName: valueSearch } : dataIndex == 'Number' ? { Number: valueSearch } : { Email: valueSearch }\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t...clearKey,\r\n\t\t\t...listFieldFilter\r\n\t\t})\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tconst resetListFieldSearch = () => {\r\n\t\tObject.keys(listFieldSearch).forEach(function (key) {\r\n\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\tlistFieldSearch[key] = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1), resetListFieldSearch()\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tpageIndex = pageNumber\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t// ...listFieldSearch,\r\n\t\t\tpageIndex: pageIndex\r\n\t\t})\r\n\t}\r\n\r\n\t// --------- ADD TO GROUP ---------\r\n\tconst addToGroup = async (data) => {\r\n\t\tlet dataSubmit = {\r\n\t\t\tID: data.ID,\r\n\t\t\tisGroup: true\r\n\t\t}\r\n\t\tsetConfirmLoading(true)\r\n\t\ttry {\r\n\t\t\tlet res = await studentAdviseApi.update(dataSubmit)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetTodoApi({\r\n\t\t\t\t\t...todoApi\r\n\t\t\t\t})\r\n\t\t\t\tshowNoti('success', 'Thêm vào nhóm thành công')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetConfirmLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onChange_sendEmail = (e, ID) => {\r\n\t\tlet checked = e.target.checked\r\n\t\tif (checked) {\r\n\t\t\tlistCustomer.push(ID)\r\n\t\t} else {\r\n\t\t\tlet index = listCustomer.indexOf(ID)\r\n\t\t\tlistCustomer.splice(index, 1)\r\n\t\t}\r\n\t\tsetListCustomer([...listCustomer])\r\n\t}\r\n\r\n\tconst resetListCustomer = () => {\r\n\t\tsetListCustomer([])\r\n\t}\r\n\r\n\t// -------- ON SELECT ROW ---------\r\n\tconst onSelectRow = (selectRow) => {\r\n\t\tlet listID = selectRow?.map((item) => item.ID)\r\n\t\tsetListCustomer(listID)\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t}, [todoApi])\r\n\r\n\tuseEffect(() => {\r\n\t\tuserInformation &&\r\n\t\t\t(userInformation.RoleID === 1 || userInformation.RoleID === 6 || userInformation.RoleID === 5) &&\r\n\t\t\tgetDataStudentForm(listApi)\r\n\t}, [userInformation])\r\n\r\n\tconst expandedRowRender = (data) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<StudentAdvisoryNote onFetchData={() => setTodoApi({ ...todoApi })} dataSource={data.Note} userID={data.ID} />\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tconst columns =\r\n\t\tuserInformation && userInformation?.RoleID !== 10\r\n\t\t\t? [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: 'Mã số',\r\n\t\t\t\t\t\tdataIndex: 'CustomerCode',\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\trender: (CustomerCode) => <p className=\"font-weight-black\">{CustomerCode}</p>\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: 'Họ tên',\r\n\t\t\t\t\t\tdataIndex: 'CustomerName',\r\n\t\t\t\t\t\t...FilterColumn('CustomerName', onSearch, handleReset, 'text'),\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\trender: (a) => <p className=\"font-weight-primary\">{a}</p>\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: 'Số điện thoại',\r\n\t\t\t\t\t\tdataIndex: 'Number',\r\n\t\t\t\t\t\t...FilterColumn('Number', onSearch, handleReset, 'text'),\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\trender: (a) => <p style={{ width: 130 }}>{a}</p>\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: 'Email',\r\n\t\t\t\t\t\tdataIndex: 'Email',\r\n\t\t\t\t\t\t...FilterColumn('Email', onSearch, handleReset, 'text'),\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\trender: (a) => <p style={{ width: 200 }}>{a}</p>\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twidth: 180,\r\n\t\t\t\t\t\ttitle: 'Nhu cầu học',\r\n\t\t\t\t\t\tdataIndex: 'LearningNeedName'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twidth: 150,\r\n\t\t\t\t\t\ttitle: 'Nguồn',\r\n\t\t\t\t\t\tdataIndex: 'SourceInformationName'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tclassName: 'text-center',\r\n\t\t\t\t\t\twidth: 200,\r\n\t\t\t\t\t\ttitle: 'Trạng thái',\r\n\t\t\t\t\t\tdataIndex: 'CustomerConsultationStatusName',\r\n\r\n\t\t\t\t\t\trender: (text, data) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twidth: 150,\r\n\t\t\t\t\t\ttitle: 'Tư vấn viên',\r\n\t\t\t\t\t\tdataIndex: 'CounselorsName',\r\n\t\t\t\t\t\trender: (CounselorsName) => <p style={{ width: 200 }}>{CounselorsName}</p>\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: 'Ngày đăng ký',\r\n\t\t\t\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\t\t\t\trender: (date) => <p>{moment(date).format('DD/MM/YYYY')}</p>,\r\n\t\t\t\t\t\twidth: 120\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: '',\r\n\t\t\t\t\t\tdataIndex: 'CustomerConsultationStatusID',\r\n\t\t\t\t\t\twidth: 135,\r\n\t\t\t\t\t\trender: (text, data, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<StudentAdviseForm\r\n\t\t\t\t\t\t\t\t\t\tgetIndex={() => setIndexRow(index)}\r\n\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\trowData={data}\r\n\t\t\t\t\t\t\t\t\t\trowID={data.ID}\r\n\t\t\t\t\t\t\t\t\t\tlistData={listDataForm}\r\n\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\t\t_onSubmit={(data: any) => _onSubmit(data)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<StudentAdvisoryMail\r\n\t\t\t\t\t\t\t\t\t\tloadingOutside={isLoading}\r\n\t\t\t\t\t\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\t\t\t\t\t\tonFetchData={() => setTodoApi({ ...todoApi })}\r\n\t\t\t\t\t\t\t\t\t\tdataRow={data}\r\n\t\t\t\t\t\t\t\t\t\tlistCustomer={listCustomer}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{text == 2 && (\r\n\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/customer/service/service-info-student/',\r\n\t\t\t\t\t\t\t\t\t\t\t\tquery: { customerID: data.ID }\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Hẹn test\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-icon view\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t  ]\r\n\t\t\t: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: 'Mã số',\r\n\t\t\t\t\t\tdataIndex: 'CustomerCode',\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\trender: (CustomerCode) => <p className=\"font-weight-black\">{CustomerCode}</p>\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: 'Họ tên',\r\n\t\t\t\t\t\tdataIndex: 'CustomerName',\r\n\t\t\t\t\t\t...FilterColumn('CustomerName', onSearch, handleReset, 'text'),\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\trender: (a) => <p className=\"font-weight-primary\">{a}</p>\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: 'Số điện thoại',\r\n\t\t\t\t\t\tdataIndex: 'Number',\r\n\t\t\t\t\t\t...FilterColumn('Number', onSearch, handleReset, 'text'),\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\trender: (a) => <p style={{ width: 130 }}>{a}</p>\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: 'Email',\r\n\t\t\t\t\t\tdataIndex: 'Email',\r\n\t\t\t\t\t\t...FilterColumn('Email', onSearch, handleReset, 'text'),\r\n\t\t\t\t\t\tfixed: 'left',\r\n\t\t\t\t\t\trender: (a) => <p style={{ width: 200 }}>{a}</p>\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twidth: 180,\r\n\t\t\t\t\t\ttitle: 'Nhu cầu học',\r\n\t\t\t\t\t\tdataIndex: 'LearningNeedName'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twidth: 150,\r\n\t\t\t\t\t\ttitle: 'Nguồn',\r\n\t\t\t\t\t\tdataIndex: 'SourceInformationName'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tclassName: 'text-center',\r\n\t\t\t\t\t\twidth: 200,\r\n\t\t\t\t\t\ttitle: 'Trạng thái',\r\n\t\t\t\t\t\tdataIndex: 'CustomerConsultationStatusName',\r\n\r\n\t\t\t\t\t\trender: (text, data) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twidth: 150,\r\n\t\t\t\t\t\ttitle: 'Tư vấn viên',\r\n\t\t\t\t\t\tdataIndex: 'CounselorsName',\r\n\t\t\t\t\t\trender: (CounselorsName) => <p style={{ width: 200 }}>{CounselorsName}</p>\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: 'Ngày đăng ký',\r\n\t\t\t\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\t\t\t\trender: (date) => <p>{moment(date).format('DD/MM/YYYY')}</p>,\r\n\t\t\t\t\t\twidth: 120\r\n\t\t\t\t\t}\r\n\t\t\t  ]\r\n\r\n\treturn (\r\n\t\t<ExpandTable\r\n\t\t\tcurrentPage={currentPage}\r\n\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\tloading={isLoading}\r\n\t\t\taddClass=\"basic-header\"\r\n\t\t\tTitlePage=\"Danh sách khách hàng\"\r\n\t\t\tTitleCard={\r\n\t\t\t\t<div className=\"d-flex align-items-center justify-content-end\">\r\n\t\t\t\t\t{userInformation && userInformation?.RoleID !== 10 && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<StudentAdvisoryMail\r\n\t\t\t\t\t\t\t\tshowCheckBox={() => setShowCheckbox(!showCheckbox)}\r\n\t\t\t\t\t\t\t\tloadingOutside={isLoading}\r\n\t\t\t\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\t\t\t\tonFetchData={() => setTodoApi({ ...todoApi })}\r\n\t\t\t\t\t\t\t\tlistCustomer={listCustomer}\r\n\t\t\t\t\t\t\t\tresetListCustomer={() => resetListCustomer()}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<StudentAdviseForm\r\n\t\t\t\t\t\t\t\tlistData={checkEmptyData && listDataForm}\r\n\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t_onSubmit={(data: any) => _onSubmit(data)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\tdataSource={dataSource}\r\n\t\t\tcolumns={columns}\r\n\t\t\tExtra={\r\n\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t<FilterBase dataFilter={dataFilter} handleFilter={(listFilter: any) => handleFilter(listFilter)} handleReset={handleReset} />\r\n\t\t\t\t\t<SortBox handleSort={(value) => handleSort(value)} dataOption={dataOption} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\texpandable={{ expandedRowRender }}\r\n\t\t\tisSelect={showCheckbox}\r\n\t\t\tisResetKey={isResetKey}\r\n\t\t\tonSelectRow={(selectRows) => onSelectRow(selectRows)}\r\n\t\t/>\r\n\t)\r\n}\r\nStudentAdvisory.layout = LayoutBase\r\n"]},"metadata":{},"sourceType":"module"}
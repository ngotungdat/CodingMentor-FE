{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\Global\\\\CourseExamStudent\\\\CourseExamStudent.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { courseExamApi } from '~/apiBase/package/course-exam';\nimport { useWrap } from '~/context/wrap';\nimport Link from 'next/link';\nimport { Tooltip, Select } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport CourseExamPoint from '~/components/Global/CourseExam/CourseExamPoint';\nimport LayoutBase from '~/components/LayoutBase';\nimport PowerTable from '~/components/PowerTable';\n\nconst CourseExamStudent = props => {\n  const {\n    Option\n  } = Select;\n  const {\n    studentID\n  } = props; // ------ BASE USESTATE TABLE -------\n\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    showNoti,\n    pageSize,\n    userInformation\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: loadFirst,\n    1: setLoadFirst\n  } = useState(true);\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: 1,\n    sort: null,\n    sortType: 1,\n    ProgramCode: null,\n    ProgramName: null,\n    Type: null,\n    Level: null,\n    fromDate: null,\n    toDate: null,\n    UserInformationID: null\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi); // GET DATA SOURCE\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await courseExamApi.getAll(todoApi);\n      res.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow));\n      res.status == 204 && setDataSource([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  const getPagination = pageNumber => {\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      // ...listFieldSearch,\n      pageIndex: pageNumber\n    }));\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(() => {\n    if (!loadFirst) {\n      getDataSource();\n    }\n  }, [todoApi]); // ---------------- COLUMN --------------------\n\n  const columns = [{\n    title: 'Đề thi',\n    dataIndex: 'ExamTopicName',\n    render: (text, data) => /*#__PURE__*/_jsxDEV(Link, {\n      href: {\n        pathname: '/customer/student/course-exam-student/detail/[slug]',\n        query: {\n          slug: `${data.ID}`\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)\n  }, {\n    title: 'Tổng điểm',\n    dataIndex: 'PointTotal',\n    render: (point, data) => /*#__PURE__*/_jsxDEV(CourseExamPoint, {\n      infoID: data.ID,\n      point: point,\n      detailID: data.ID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }, this)\n  }, {\n    title: 'Dạng đề',\n    dataIndex: 'Type',\n    render: (text, data) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [data.Type == 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-weight-black\",\n          children: \"B\\xE0i t\\u1EADp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 26\n        }, this), data.Type == 2 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-weight-black\",\n          style: {\n            color: '#174898'\n          },\n          children: \"B\\xE0i ki\\u1EC3m tra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true);\n    }\n  }, {\n    title: 'Giáo viên chấm bài',\n    dataIndex: 'TeacherName',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Trạng thái chấm bài',\n    dataIndex: 'isDone',\n    filters: [{\n      text: 'Chưa chấm xong',\n      value: 0\n    }, {\n      text: 'Đã chấm xong',\n      value: 1\n    }],\n    onFilter: (value, record) => record.isDone === value,\n    render: type => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [type == true && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag green\",\n        children: \"\\u0110\\xE3 ch\\u1EA5m xong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 23\n      }, this), type == false && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag gray\",\n        children: \"Ch\\u01B0a ch\\u1EA5m xong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, {\n    render: data => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: {\n          pathname: '/customer/student/course-exam-student/detail/[slug]',\n          query: {\n            slug: `${data.ID}`\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Chi ti\\u1EBFt b\\xE0i l\\xE0m\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-icon\",\n            children: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 6\n      }, this)\n    }, void 0, false)\n  }];\n  useEffect(() => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    if (userInformation) {\n      if (loadFirst) {\n        setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n          UserInformationID: userInformation.UserInformationID\n        }));\n        setLoadFirst(false);\n      }\n    }\n  }, [userInformation]);\n\n  function handleChange(value) {\n    if (value === 0) {\n      setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n        sortType: null\n      }));\n    } else {\n      setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n        sortType: value\n      }));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PowerTable, {\n      Extra: /*#__PURE__*/_jsxDEV(Select, {\n        className: \"style-input\",\n        defaultValue: 1,\n        style: {\n          width: 150\n        },\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: 1,\n          children: \"M\\u1EDBi c\\u1EADp nh\\u1EADt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: 2,\n          children: \"T\\u1EEB d\\u01B0\\u1EDBi l\\xEAn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 6\n      }, this),\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: pageNumber => getPagination(pageNumber),\n      loading: isLoading,\n      addClass: \"basic-header\",\n      TitlePage: \"B\\xE0i ki\\u1EC3m tra\",\n      dataSource: dataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nCourseExamStudent.layout = LayoutBase;\nexport default CourseExamStudent;","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/Global/CourseExamStudent/CourseExamStudent.tsx"],"names":["React","useState","useEffect","courseExamApi","useWrap","Link","Tooltip","Select","ExclamationCircleOutlined","CourseExamPoint","LayoutBase","PowerTable","CourseExamStudent","props","Option","studentID","dataSource","setDataSource","showNoti","pageSize","userInformation","isLoading","setIsLoading","type","status","totalPage","setTotalPage","currentPage","setCurrentPage","loadFirst","setLoadFirst","listTodoApi","pageIndex","sort","sortType","ProgramCode","ProgramName","Type","Level","fromDate","toDate","UserInformationID","todoApi","setTodoApi","getDataSource","res","getAll","data","totalRow","error","message","getPagination","pageNumber","columns","title","dataIndex","render","text","pathname","query","slug","ID","point","color","filters","value","onFilter","record","isDone","handleChange","width","layout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { courseExamApi } from '~/apiBase/package/course-exam'\r\nimport { useWrap } from '~/context/wrap'\r\nimport Link from 'next/link'\r\nimport { Tooltip, Select } from 'antd'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport CourseExamPoint from '~/components/Global/CourseExam/CourseExamPoint'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport PowerTable from '~/components/PowerTable'\r\n\r\nconst CourseExamStudent = (props) => {\r\n\tconst { Option } = Select\r\n\tconst { studentID } = props\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState<ICourseExam[]>([])\r\n\tconst { showNoti, pageSize, userInformation } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [loadFirst, setLoadFirst] = useState(true)\r\n\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: 1,\r\n\t\tsort: null,\r\n\t\tsortType: 1,\r\n\t\tProgramCode: null,\r\n\t\tProgramName: null,\r\n\t\tType: null,\r\n\t\tLevel: null,\r\n\t\tfromDate: null,\r\n\t\ttoDate: null,\r\n\t\tUserInformationID: null\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await courseExamApi.getAll(todoApi)\r\n\t\t\tres.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow))\r\n\r\n\t\t\tres.status == 204 && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t// ...listFieldSearch,\r\n\t\t\tpageIndex: pageNumber\r\n\t\t})\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tif (!loadFirst) {\r\n\t\t\tgetDataSource()\r\n\t\t}\r\n\t}, [todoApi])\r\n\r\n\t// ---------------- COLUMN --------------------\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Đề thi',\r\n\t\t\tdataIndex: 'ExamTopicName',\r\n\t\t\trender: (text, data) => (\r\n\t\t\t\t<Link\r\n\t\t\t\t\thref={{\r\n\t\t\t\t\t\tpathname: '/customer/student/course-exam-student/detail/[slug]',\r\n\t\t\t\t\t\tquery: { slug: `${data.ID}` }\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<a href=\"#\" className=\"font-weight-black\">\r\n\t\t\t\t\t\t{text}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</Link>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tổng điểm',\r\n\t\t\tdataIndex: 'PointTotal',\r\n\t\t\trender: (point, data) => <CourseExamPoint infoID={data.ID} point={point} detailID={data.ID} />\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Dạng đề',\r\n\t\t\tdataIndex: 'Type',\r\n\t\t\trender: (text, data) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{data.Type == 1 && <p className=\"font-weight-black\">Bài tập</p>}\r\n\t\t\t\t\t\t{data.Type == 2 && (\r\n\t\t\t\t\t\t\t<p className=\"font-weight-black\" style={{ color: '#174898' }}>\r\n\t\t\t\t\t\t\t\tBài kiểm tra\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\ttitle: 'Giáo viên chấm bài',\r\n\t\t\tdataIndex: 'TeacherName',\r\n\t\t\trender: (text) => <p className=\"font-weight-primary\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái chấm bài',\r\n\t\t\tdataIndex: 'isDone',\r\n\t\t\tfilters: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Chưa chấm xong',\r\n\t\t\t\t\tvalue: 0\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Đã chấm xong',\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tonFilter: (value, record) => record.isDone === value,\r\n\t\t\trender: (type) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{type == true && <span className=\"tag green\">Đã chấm xong</span>}\r\n\t\t\t\t\t{type == false && <span className=\"tag gray\">Chưa chấm xong</span>}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\trender: (data) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\tpathname: '/customer/student/course-exam-student/detail/[slug]',\r\n\t\t\t\t\t\t\tquery: { slug: `${data.ID}` }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tooltip title=\"Chi tiết bài làm\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-icon\">\r\n\t\t\t\t\t\t\t\t<ExclamationCircleOutlined />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\tif (userInformation) {\r\n\t\t\tif (loadFirst) {\r\n\t\t\t\tsetTodoApi({\r\n\t\t\t\t\t...todoApi,\r\n\t\t\t\t\tUserInformationID: userInformation.UserInformationID\r\n\t\t\t\t})\r\n\t\t\t\tsetLoadFirst(false)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [userInformation])\r\n\r\n\tfunction handleChange(value) {\r\n\t\tif (value === 0) {\r\n\t\t\tsetTodoApi({\r\n\t\t\t\t...todoApi,\r\n\t\t\t\tsortType: null\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tsetTodoApi({\r\n\t\t\t\t...todoApi,\r\n\t\t\t\tsortType: value\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PowerTable\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<Select className=\"style-input\" defaultValue={1} style={{ width: 150 }} onChange={handleChange}>\r\n\t\t\t\t\t\t<Option value={1}>Mới cập nhật</Option>\r\n\t\t\t\t\t\t<Option value={2}>Từ dưới lên</Option>\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t}\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Bài kiểm tra\"\r\n\t\t\t\tdataSource={dataSource}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nCourseExamStudent.layout = LayoutBase\r\nexport default CourseExamStudent\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\ExamList\\\\ExamShow\\\\ChoiceList.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Radio, Tooltip, Popconfirm, Space } from 'antd';\nimport { Trash2 } from 'react-feather';\nimport { examDetailApi } from '~/apiBase';\nimport { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]';\nimport { useWrap } from '~/context/wrap';\nimport EditPoint from '../ExamForm/EditPoint';\nimport ChangePosition from '../ExamForm/ChangePosition';\nimport { useDoingTest } from '~/context/useDoingTest';\nimport { useDoneTest } from '~/context/useDoneTest';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\n\nvar ChoiceList = function ChoiceList(props) {\n  _s();\n\n  var _useExamDetail = useExamDetail(),\n      onDeleteQuestion = _useExamDetail.onDeleteQuestion;\n\n  var _useDoingTest = useDoingTest(),\n      activeID = _useDoingTest.activeID,\n      getActiveID = _useDoingTest.getActiveID,\n      packageResult = _useDoingTest.packageResult,\n      getPackageResult = _useDoingTest.getPackageResult,\n      getListPicked = _useDoingTest.getListPicked;\n\n  var _useDoneTest = useDoneTest(),\n      doneTestData = _useDoneTest.doneTestData;\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var dataQuestion = props.dataQuestion,\n      listAlphabet = props.listAlphabet,\n      listQuestionID = props.listQuestionID,\n      isDoingTest = props.isDoingTest,\n      showScore = props.showScore,\n      arPosition = props.arPosition,\n      handleChange = props.handleChange,\n      addOldItem = props.addOldItem;\n\n  var _useState = useState(false),\n      confirmLoading = _useState[0],\n      setConfirmLoading = _useState[1];\n\n  var _useState2 = useState({\n    id: null,\n    status: false\n  }),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(null),\n      activeValue = _useState3[0],\n      setAcitveValue = _useState3[1];\n\n  var returnPosition = function returnPosition(quesID) {\n    var index = listQuestionID.indexOf(quesID);\n    var text = 'Câu ' + (index + 1).toString();\n    return text;\n  };\n\n  var _useExamDetail2 = useExamDetail(),\n      isChangePosition = _useExamDetail2.isChangePosition; // Chấp nhận xóa câu hỏi\n\n\n  var handleOk = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(quesItem) {\n      var itemDelete, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              itemDelete = {\n                ID: dataQuestion.ID,\n                Enable: false,\n                ExerciseOrExerciseGroup: [{\n                  Point: quesItem.Point,\n                  ExerciseOrExerciseGroupID: quesItem.ExerciseID\n                }]\n              };\n              setConfirmLoading(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return examDetailApi.update(itemDelete);\n\n            case 5:\n              res = _context.sent;\n\n              if (res.status == 200) {\n                onDeleteQuestion(itemDelete);\n                showNoti('success', 'Xóa thành công');\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              showNoti('danger', _context.t0.message);\n\n            case 12:\n              _context.prev = 12;\n              setConfirmLoading(false);\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9, 12, 15]]);\n    }));\n\n    return function handleOk(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // Handle cancel popup delte\n\n\n  var handleCancel = function handleCancel(quesID) {\n    setVisible({\n      id: quesID,\n      status: false\n    });\n  }; // Delete Question in exam\n\n\n  var deleteQuestionItem = function deleteQuestionItem(quesID) {\n    !visible.status ? setVisible({\n      id: quesID,\n      status: true\n    }) : setVisible({\n      id: quesID,\n      status: false\n    });\n  }; // ----------- ALL ACTION IN DOINGTEST -------------\n\n\n  var onChange_selectAnswer = function onChange_selectAnswer(dataAns, quesID) {\n    setAcitveValue(dataAns.ID);\n    getActiveID(quesID);\n    getListPicked(quesID); // Find index\n\n    var indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex(function (item) {\n      return item.ExamTopicDetailID === dataQuestion.ID;\n    });\n    var indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(function (item) {\n      return item.ExerciseID === quesID;\n    }); // Remove all data in list answer (because this single question)\n\n    packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList = []; // Add new answer to list\n\n    packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList.push({\n      AnswerID: dataAns.ID,\n      AnswerContent: dataAns.AnswerContent,\n      FileAudio: ''\n    });\n    getPackageResult(_objectSpread({}, packageResult));\n  };\n\n  useEffect(function () {\n    if (!doneTestData) {\n      if (isDoingTest) {\n        if (packageResult) {\n          var indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex(function (item) {\n            return item.ExamTopicDetailID === dataQuestion.ID;\n          });\n\n          if (packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[0].SetPackageExerciseAnswerStudentList.length > 0) {\n            var AnswerID = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[0].SetPackageExerciseAnswerStudentList[0].AnswerID;\n            setAcitveValue(AnswerID);\n          }\n        }\n      }\n    } else {//\n    }\n  }, [activeID]);\n\n  var isNull = function isNull(params) {\n    if (params == undefined || params == null || params == '') {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dataQuestion.ExerciseTopic.map(function (ques, ind) {\n      var _ques$ExerciseAnswer;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-item \".concat(ques.ExerciseID === activeID ? 'active-doing' : ''),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title-ques \",\n              children: returnPosition(ques.ExerciseID)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 8\n            }, _this), ques.LinkAudio !== '' && ques.LinkAudio !== null && /*#__PURE__*/_jsxDEV(\"audio\", {\n              controls: true,\n              children: /*#__PURE__*/_jsxDEV(\"source\", {\n                src: ques.LinkAudio,\n                type: \"audio/mpeg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title-text\",\n              children: ReactHtmlParser(ques.Content)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 8\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-answer\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-single question-wrap w-100\",\n              children: (_ques$ExerciseAnswer = ques.ExerciseAnswer) === null || _ques$ExerciseAnswer === void 0 ? void 0 : _ques$ExerciseAnswer.map(function (ans, i) {\n                return /*#__PURE__*/_jsxDEV(Radio.Group, {\n                  className: \"d-block\",\n                  value: !doneTestData ? activeValue : ans.AnswerID !== 0 ? ans.ExerciseAnswerID : activeValue,\n                  onChange: function onChange(e) {\n                    return onChange_selectAnswer(ans, ques.ExerciseID);\n                  },\n                  children: (!isNull(ans.AnswerContent) || !isNull(ans.ExerciseAnswerContent)) && /*#__PURE__*/_jsxDEV(Space, {\n                    direction: \"vertical\",\n                    children: /*#__PURE__*/_jsxDEV(Radio, {\n                      className: \"d-block\",\n                      value: !doneTestData ? ans.ID : ans.ExerciseAnswerID,\n                      disabled: !isDoingTest ? true : doneTestData ? true : false,\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"tick\",\n                        children: listAlphabet[i]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 161,\n                        columnNumber: 14\n                      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text\",\n                        style: {\n                          color: doneTestData ? ans.isTrue ? 'green' : ans.AnswerID !== 0 && 'red' : 'inherit'\n                        },\n                        children: !doneTestData ? ans.AnswerContent : ans.ExerciseAnswerContent\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 14\n                      }, _this), doneTestData && ans.AnswerID !== 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"icon-check \".concat(ans.isTrue ? 'right' : 'wrong'),\n                        children: ans.isTrue ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 172,\n                          columnNumber: 30\n                        }, _this) : /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 172,\n                          columnNumber: 50\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 15\n                      }, _this)]\n                    }, i, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 13\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 12\n                  }, _this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 10\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 8\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 7\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 6\n        }, _this), dataQuestion.ExerciseGroupID == 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-action\",\n          children: [!doneTestData && !isDoingTest && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [!isChangePosition && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(EditPoint, {\n                quesItem: ques,\n                dataQuestion: dataQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 12\n              }, _this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n                title: \"B\\u1EA1n c\\xF3 ch\\u1EAFc mu\\u1ED1n x\\xF3a?\",\n                onConfirm: function onConfirm() {\n                  return handleOk(ques);\n                },\n                okButtonProps: {\n                  loading: confirmLoading\n                },\n                onCancel: function onCancel() {\n                  return handleCancel(ques.ID);\n                },\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"X\\xF3a c\\xE2u h\\u1ECFi\",\n                  placement: \"rightTop\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-icon delete\",\n                    onClick: function onClick() {\n                      return deleteQuestionItem(ques.ID);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 15\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 14\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 13\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 12\n              }, _this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(ChangePosition, {\n              dataQuestion: dataQuestion,\n              arPosition: arPosition,\n              questionID: dataQuestion.ID,\n              handleChange: handleChange,\n              addOldItem: addOldItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 10\n            }, _this)]\n          }, void 0, true), !isChangePosition && showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"point-question mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text\",\n              children: ques.Point\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 10\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 7\n        }, _this)]\n      }, ind, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, _this);\n    })\n  }, void 0, false);\n};\n\n_s(ChoiceList, \"TWaQptR53AEqZTQFYpIbFauqflI=\", false, function () {\n  return [useExamDetail, useDoingTest, useDoneTest, useWrap, useExamDetail];\n});\n\n_c = ChoiceList;\nexport default ChoiceList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChoiceList\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/ExamList/ExamShow/ChoiceList.tsx"],"names":["React","useEffect","useState","ReactHtmlParser","Radio","Tooltip","Popconfirm","Space","Trash2","examDetailApi","useExamDetail","useWrap","EditPoint","ChangePosition","useDoingTest","useDoneTest","CheckOutlined","CloseOutlined","ChoiceList","props","onDeleteQuestion","activeID","getActiveID","packageResult","getPackageResult","getListPicked","doneTestData","showNoti","dataQuestion","listAlphabet","listQuestionID","isDoingTest","showScore","arPosition","handleChange","addOldItem","confirmLoading","setConfirmLoading","id","status","visible","setVisible","activeValue","setAcitveValue","returnPosition","quesID","index","indexOf","text","toString","isChangePosition","handleOk","quesItem","itemDelete","ID","Enable","ExerciseOrExerciseGroup","Point","ExerciseOrExerciseGroupID","ExerciseID","update","res","message","handleCancel","deleteQuestionItem","onChange_selectAnswer","dataAns","indexQuestion","SetPackageResultDetailInfoList","findIndex","item","ExamTopicDetailID","indexQuestionDetail","SetPackageExerciseStudentInfoList","SetPackageExerciseAnswerStudentList","push","AnswerID","AnswerContent","FileAudio","length","isNull","params","undefined","ExerciseTopic","map","ques","ind","LinkAudio","Content","ExerciseAnswer","ans","i","ExerciseAnswerID","e","ExerciseAnswerContent","color","isTrue","ExerciseGroupID","loading"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { Radio, Tooltip, Popconfirm, Space } from 'antd'\r\nimport { Trash2 } from 'react-feather'\r\nimport { examDetailApi } from '~/apiBase'\r\nimport { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]'\r\nimport { useWrap } from '~/context/wrap'\r\nimport EditPoint from '../ExamForm/EditPoint'\r\nimport ChangePosition from '../ExamForm/ChangePosition'\r\nimport { useDoingTest } from '~/context/useDoingTest'\r\nimport { useDoneTest } from '~/context/useDoneTest'\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons'\r\n\r\nconst ChoiceList = (props) => {\r\n\tconst { onDeleteQuestion } = useExamDetail()\r\n\tconst { activeID, getActiveID, packageResult, getPackageResult, getListPicked } = useDoingTest()\r\n\tconst { doneTestData } = useDoneTest()\r\n\tconst { showNoti } = useWrap()\r\n\tconst { dataQuestion, listAlphabet, listQuestionID, isDoingTest, showScore, arPosition, handleChange, addOldItem } = props\r\n\tconst [confirmLoading, setConfirmLoading] = useState(false)\r\n\tconst [visible, setVisible] = useState({ id: null, status: false })\r\n\tconst [activeValue, setAcitveValue] = useState(null)\r\n\r\n\tconst returnPosition = (quesID) => {\r\n\t\tlet index = listQuestionID.indexOf(quesID)\r\n\t\tlet text = 'Câu ' + (index + 1).toString()\r\n\t\treturn text\r\n\t}\r\n\r\n\tconst { isChangePosition } = useExamDetail()\r\n\r\n\t// Chấp nhận xóa câu hỏi\r\n\tconst handleOk = async (quesItem) => {\r\n\t\tlet itemDelete = {\r\n\t\t\tID: dataQuestion.ID,\r\n\t\t\tEnable: false,\r\n\t\t\tExerciseOrExerciseGroup: [\r\n\t\t\t\t{\r\n\t\t\t\t\tPoint: quesItem.Point,\r\n\t\t\t\t\tExerciseOrExerciseGroupID: quesItem.ExerciseID\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\tsetConfirmLoading(true)\r\n\t\ttry {\r\n\t\t\tlet res = await examDetailApi.update(itemDelete)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tonDeleteQuestion(itemDelete)\r\n\t\t\t\tshowNoti('success', 'Xóa thành công')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetConfirmLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\t// Handle cancel popup delte\r\n\tconst handleCancel = (quesID) => {\r\n\t\tsetVisible({ id: quesID, status: false })\r\n\t}\r\n\r\n\t// Delete Question in exam\r\n\tconst deleteQuestionItem = (quesID) => {\r\n\t\t!visible.status ? setVisible({ id: quesID, status: true }) : setVisible({ id: quesID, status: false })\r\n\t}\r\n\r\n\t// ----------- ALL ACTION IN DOINGTEST -------------\r\n\r\n\tconst onChange_selectAnswer = (dataAns, quesID) => {\r\n\t\tsetAcitveValue(dataAns.ID)\r\n\t\tgetActiveID(quesID)\r\n\t\tgetListPicked(quesID)\r\n\r\n\t\t// Find index\r\n\t\tlet indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex((item) => item.ExamTopicDetailID === dataQuestion.ID)\r\n\r\n\t\tlet indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(\r\n\t\t\t(item) => item.ExerciseID === quesID\r\n\t\t)\r\n\r\n\t\t// Remove all data in list answer (because this single question)\r\n\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\tindexQuestionDetail\r\n\t\t].SetPackageExerciseAnswerStudentList = []\r\n\r\n\t\t// Add new answer to list\r\n\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\tindexQuestionDetail\r\n\t\t].SetPackageExerciseAnswerStudentList.push({\r\n\t\t\tAnswerID: dataAns.ID,\r\n\t\t\tAnswerContent: dataAns.AnswerContent,\r\n\t\t\tFileAudio: ''\r\n\t\t})\r\n\r\n\t\tgetPackageResult({ ...packageResult })\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!doneTestData) {\r\n\t\t\tif (isDoingTest) {\r\n\t\t\t\tif (packageResult) {\r\n\t\t\t\t\tlet indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex((item) => item.ExamTopicDetailID === dataQuestion.ID)\r\n\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[0]\r\n\t\t\t\t\t\t\t.SetPackageExerciseAnswerStudentList.length > 0\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tlet AnswerID =\r\n\t\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[0]\r\n\t\t\t\t\t\t\t\t.SetPackageExerciseAnswerStudentList[0].AnswerID\r\n\t\t\t\t\t\tsetAcitveValue(AnswerID)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//\r\n\t\t}\r\n\t}, [activeID])\r\n\r\n\tconst isNull = (params: any) => {\r\n\t\tif (params == undefined || params == null || params == '') {\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{dataQuestion.ExerciseTopic.map((ques, ind) => (\r\n\t\t\t\t<div className={`question-item ${ques.ExerciseID === activeID ? 'active-doing' : ''}`} key={ind}>\r\n\t\t\t\t\t<div className=\"box-detail\">\r\n\t\t\t\t\t\t<div className=\"box-title\">\r\n\t\t\t\t\t\t\t<span className={`title-ques `}>{returnPosition(ques.ExerciseID)}</span>\r\n\t\t\t\t\t\t\t{ques.LinkAudio !== '' && ques.LinkAudio !== null && (\r\n\t\t\t\t\t\t\t\t<audio controls>\r\n\t\t\t\t\t\t\t\t\t<source src={ques.LinkAudio} type=\"audio/mpeg\" />\r\n\t\t\t\t\t\t\t\t</audio>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div className=\"title-text\">{ReactHtmlParser(ques.Content)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"box-answer\">\r\n\t\t\t\t\t\t\t<div className=\"question-single question-wrap w-100\">\r\n\t\t\t\t\t\t\t\t{ques.ExerciseAnswer?.map((ans, i) => (\r\n\t\t\t\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"d-block\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={!doneTestData ? activeValue : ans.AnswerID !== 0 ? ans.ExerciseAnswerID : activeValue}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onChange_selectAnswer(ans, ques.ExerciseID)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{(!isNull(ans.AnswerContent) || !isNull(ans.ExerciseAnswerContent)) && (\r\n\t\t\t\t\t\t\t\t\t\t\t<Space direction=\"vertical\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Radio\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"d-block\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={!doneTestData ? ans.ID : ans.ExerciseAnswerID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!isDoingTest ? true : doneTestData ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"tick\">{listAlphabet[i]}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: doneTestData ? (ans.isTrue ? 'green' : ans.AnswerID !== 0 && 'red') : 'inherit'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!doneTestData ? ans.AnswerContent : ans.ExerciseAnswerContent}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{doneTestData && ans.AnswerID !== 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={`icon-check ${ans.isTrue ? 'right' : 'wrong'}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ans.isTrue ? <CheckOutlined /> : <CloseOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Radio>\r\n\t\t\t\t\t\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{dataQuestion.ExerciseGroupID == 0 && (\r\n\t\t\t\t\t\t<div className=\"box-action\">\r\n\t\t\t\t\t\t\t{!doneTestData && !isDoingTest && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{!isChangePosition && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<EditPoint quesItem={ques} dataQuestion={dataQuestion} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Bạn có chắc muốn xóa?\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleOk(ques)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tokButtonProps={{ loading: confirmLoading }}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonCancel={() => handleCancel(ques.ID)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Xóa câu hỏi\" placement=\"rightTop\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-icon delete\" onClick={() => deleteQuestionItem(ques.ID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Trash2 />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<ChangePosition\r\n\t\t\t\t\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\t\t\t\t\tarPosition={arPosition}\r\n\t\t\t\t\t\t\t\t\t\tquestionID={dataQuestion.ID}\r\n\t\t\t\t\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\taddOldItem={addOldItem}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{!isChangePosition && showScore && (\r\n\t\t\t\t\t\t\t\t<div className=\"point-question mt-2\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"text\">{ques.Point}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ChoiceList\r\n"]},"metadata":{},"sourceType":"module"}
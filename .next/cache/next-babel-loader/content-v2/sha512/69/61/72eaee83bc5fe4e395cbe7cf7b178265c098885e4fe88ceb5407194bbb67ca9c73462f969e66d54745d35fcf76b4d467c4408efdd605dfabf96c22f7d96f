{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\ExamDetail\\\\AddQuestionModal.tsx\";\nimport React, { useState } from 'react';\nimport { Modal, Spin } from 'antd';\nimport QuestionCreate from '../QuestionBank/QuestionCreate';\nimport { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]';\nimport { examDetailApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport { Plus } from 'react-feather';\n\nconst AddQuestionModal = props => {\n  const {\n    dataExam,\n    onFetchData\n  } = props;\n  const {\n    onAddQuestion,\n    listQuestionAddOutside\n  } = useExamDetail();\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    showNoti\n  } = useWrap();\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleAddQuestion = async () => {\n    // onAddQuestion();\n    if (listQuestionAddOutside.length > 0) {\n      setIsLoading(true);\n\n      try {\n        let res = await examDetailApi.add({\n          ExamTopicID: dataExam.ID,\n          ExerciseOrExerciseGroup: listQuestionAddOutside\n        });\n\n        if (res.status == 200) {\n          showNoti('success', 'Thêm câu hỏi thành công');\n          onFetchData && onFetchData();\n        }\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsModalVisible(false);\n        setIsLoading(false);\n      }\n    } else {\n      showNoti('danger', 'Bạn chưa chọn câu hỏi nào!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success d-block w-100 text-center\",\n      onClick: showModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center w-100\",\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          className: \"mr-2\",\n          style: {\n            width: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this), \"Th\\xEAm c\\xE2u h\\u1ECFi\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      centered: true,\n      style: {\n        top: 10\n      },\n      width: '90%',\n      title: \"Th\\xEAm c\\xE2u h\\u1ECFi v\\xE0o \\u0111\\u1EC1\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      className: \"modal-add-question\",\n      footer: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-light mr-2\",\n          onClick: handleCancel,\n          children: \"\\u0110\\xF3ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleAddQuestion,\n          children: [\"L\\u01B0u\", isLoading && /*#__PURE__*/_jsxDEV(Spin, {\n            className: \"loading-base\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(QuestionCreate, {\n        isOpenModal: isModalVisible,\n        dataExam: dataExam\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport default AddQuestionModal;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/ExamDetail/AddQuestionModal.tsx"],"names":["React","useState","Modal","Spin","QuestionCreate","useExamDetail","examDetailApi","useWrap","Plus","AddQuestionModal","props","dataExam","onFetchData","onAddQuestion","listQuestionAddOutside","isModalVisible","setIsModalVisible","isLoading","setIsLoading","showNoti","showModal","handleOk","handleCancel","handleAddQuestion","length","res","add","ExamTopicID","ID","ExerciseOrExerciseGroup","status","error","message","width","top"],"mappings":";;;AAAA,OAAOA,KAAP,IAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,MAA5B;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAAqBC,aAArB,QAA0C,oDAA1C;AACA,SAASC,aAAT,QAA4C,WAA5C;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,IAAT,QAAqB,eAArB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AACnC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BF,KAAlC;AACA,QAAM;AAAEG,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA4CT,aAAa,EAA/D;AACA,QAAM;AAAA,OAACU,cAAD;AAAA,OAAiBC;AAAjB,MAAsCf,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAA,OAACgB,SAAD;AAAA,OAAYC;AAAZ,MAA4BjB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAeZ,OAAO,EAA5B;;AAEA,QAAMa,SAAS,GAAG,MAAM;AACvBJ,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,GAFD;;AAIA,QAAMK,QAAQ,GAAG,MAAM;AACtBL,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA,GAFD;;AAIA,QAAMM,YAAY,GAAG,MAAM;AAC1BN,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA,GAFD;;AAIA,QAAMO,iBAAiB,GAAG,YAAY;AACrC;AACA,QAAIT,sBAAsB,CAACU,MAAvB,GAAgC,CAApC,EAAuC;AACtCN,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAI;AACH,YAAIO,GAAG,GAAG,MAAMnB,aAAa,CAACoB,GAAd,CAAkB;AACjCC,UAAAA,WAAW,EAAEhB,QAAQ,CAACiB,EADW;AAEjCC,UAAAA,uBAAuB,EAAEf;AAFQ,SAAlB,CAAhB;;AAIA,YAAIW,GAAG,CAACK,MAAJ,IAAc,GAAlB,EAAuB;AACtBX,UAAAA,QAAQ,CAAC,SAAD,EAAY,yBAAZ,CAAR;AAEAP,UAAAA,WAAW,IAAIA,WAAW,EAA1B;AACA;AACD,OAVD,CAUE,OAAOmB,KAAP,EAAc;AACfZ,QAAAA,QAAQ,CAAC,QAAD,EAAWY,KAAK,CAACC,OAAjB,CAAR;AACA,OAZD,SAYU;AACThB,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;AACD,KAlBD,MAkBO;AACNC,MAAAA,QAAQ,CAAC,QAAD,EAAW,4BAAX,CAAR;AACA;AACD,GAvBD;;AAyBA,sBACC;AAAA,4BACC;AAAQ,MAAA,SAAS,EAAC,2CAAlB;AAA8D,MAAA,OAAO,EAAEC,SAAvE;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA,gCACC,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAuB,UAAA,KAAK,EAAE;AAAEa,YAAAA,KAAK,EAAE;AAAT;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAOC,QAAC,KAAD;AACC,MAAA,QAAQ,EAAE,IADX;AAEC,MAAA,KAAK,EAAE;AAAEC,QAAAA,GAAG,EAAE;AAAP,OAFR;AAGC,MAAA,KAAK,EAAE,KAHR;AAIC,MAAA,KAAK,EAAC,6CAJP;AAKC,MAAA,OAAO,EAAEnB,cALV;AAMC,MAAA,IAAI,EAAEM,QANP;AAOC,MAAA,QAAQ,EAAEC,YAPX;AAQC,MAAA,SAAS,EAAC,oBARX;AASC,MAAA,MAAM,eACL;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACC;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAuC,UAAA,OAAO,EAAEA,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAEC,iBAA7C;AAAA,iCAEEN,SAAS,iBAAI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAFf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA,6BAqBC,QAAC,cAAD;AAAgB,QAAA,WAAW,EAAEF,cAA7B;AAA6C,QAAA,QAAQ,EAAEJ;AAAvD;AAAA;AAAA;AAAA;AAAA;AArBD;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA,kBADD;AAiCA,CA7ED;;AA+EA,eAAeF,gBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Modal, Spin } from 'antd';\r\nimport QuestionCreate from '../QuestionBank/QuestionCreate';\r\nimport ExamDetail, { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]';\r\nimport { examDetailApi, examTopicApi } from '~/apiBase';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { Plus } from 'react-feather';\r\n\r\nconst AddQuestionModal = (props) => {\r\n\tconst { dataExam, onFetchData } = props;\r\n\tconst { onAddQuestion, listQuestionAddOutside } = useExamDetail();\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst { showNoti } = useWrap();\r\n\r\n\tconst showModal = () => {\r\n\t\tsetIsModalVisible(true);\r\n\t};\r\n\r\n\tconst handleOk = () => {\r\n\t\tsetIsModalVisible(false);\r\n\t};\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false);\r\n\t};\r\n\r\n\tconst handleAddQuestion = async () => {\r\n\t\t// onAddQuestion();\r\n\t\tif (listQuestionAddOutside.length > 0) {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await examDetailApi.add({\r\n\t\t\t\t\tExamTopicID: dataExam.ID,\r\n\t\t\t\t\tExerciseOrExerciseGroup: listQuestionAddOutside\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tshowNoti('success', 'Thêm câu hỏi thành công');\r\n\r\n\t\t\t\t\tonFetchData && onFetchData();\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsModalVisible(false);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tshowNoti('danger', 'Bạn chưa chọn câu hỏi nào!');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button className=\"btn btn-success d-block w-100 text-center\" onClick={showModal}>\r\n\t\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t\t<Plus className=\"mr-2\" style={{ width: '20px' }} />\r\n\t\t\t\t\tThêm câu hỏi\r\n\t\t\t\t</div>\r\n\t\t\t</button>\r\n\t\t\t<Modal\r\n\t\t\t\tcentered={true}\r\n\t\t\t\tstyle={{ top: 10 }}\r\n\t\t\t\twidth={'90%'}\r\n\t\t\t\ttitle=\"Thêm câu hỏi vào đề\"\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\tclassName=\"modal-add-question\"\r\n\t\t\t\tfooter={\r\n\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t<button className=\"btn btn-light mr-2\" onClick={handleCancel}>\r\n\t\t\t\t\t\t\tĐóng\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={handleAddQuestion}>\r\n\t\t\t\t\t\t\tLưu\r\n\t\t\t\t\t\t\t{isLoading && <Spin className=\"loading-base\" />}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<QuestionCreate isOpenModal={isModalVisible} dataExam={dataExam} />\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AddQuestionModal;\r\n"]},"metadata":{},"sourceType":"module"}
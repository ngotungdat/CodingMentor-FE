{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\customer\\\\student\\\\student-list\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Tooltip } from 'antd';\nimport Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\nimport { Check, Eye } from 'react-feather';\nimport { areaApi, branchApi, jobApi, parentsApi, puroseApi, sourceInfomationApi, staffApi, studentApi } from '~/apiBase';\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport ExpandTable from '~/components/ExpandTable';\nimport CourseOfStudentDetail from '~/components/Global/Customer/Student/CourseOfStudentDetail';\nimport ResetPassStudent from '~/components/Global/Customer/Student/ResetPassStudent';\nimport StudentAdvisoryMail from '~/components/Global/Customer/Student/StudentAdvisory/StudentAdvisoryMail';\nimport StudentFormModal from '~/components/Global/Customer/Student/StudentFormModal';\nimport LayoutBase from '~/components/LayoutBase';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nlet listFieldSearch = {\n  pageIndex: 1,\n  FullNameUnicode: null,\n  Mobile: null,\n  Email: null\n};\nlet listFieldFilter = {\n  pageIndex: 1,\n  SourceInformationID: null,\n  BranchID: null,\n  fromDate: null,\n  toDate: null,\n  isRegisteredCourse: null\n};\nconst dataOption = [{\n  dataSort: {\n    sort: 0,\n    sortType: true\n  },\n  text: 'Tên A-Z'\n}, {\n  dataSort: {\n    sort: 0,\n    sortType: false\n  },\n  text: 'Tên Z-A'\n}]; // -- FOR DIFFERENT VIEW --\n\nconst listApi = [{\n  api: areaApi,\n  text: 'Tỉnh/Tp',\n  name: 'Area'\n}, {\n  api: jobApi,\n  text: 'Công việc',\n  name: 'Job'\n}, {\n  api: puroseApi,\n  text: 'Mục đích học',\n  name: 'Purposes'\n}, {\n  api: branchApi,\n  text: 'Trung tâm',\n  name: 'Branch'\n}, {\n  api: parentsApi,\n  text: 'Phụ huynh',\n  name: 'Parent'\n}, {\n  api: sourceInfomationApi,\n  text: 'Nguồn khách hàng',\n  name: 'SourceInformation'\n}, {\n  api: staffApi,\n  text: 'Tư vấn viên',\n  name: 'Counselors'\n}];\n\nconst StudentData = () => {\n  const {\n    showNoti,\n    pageSize,\n    isAdmin,\n    userInformation\n  } = useWrap();\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: showCheckbox,\n    1: setShowCheckbox\n  } = useState(false);\n  const {\n    0: listCustomer,\n    1: setListCustomer\n  } = useState([]);\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: 1,\n    sort: null,\n    sortType: null,\n    FullNameUnicode: null,\n    SourceInformationID: null,\n    BranchID: null,\n    fromDate: null,\n    toDate: null,\n    isRegisteredCourse: null\n  };\n  const {\n    0: listDataForm,\n    1: setListDataForm\n  } = useState({\n    Area: [],\n    DistrictID: [],\n    WardID: [],\n    Job: [],\n    Branch: [],\n    Purposes: [],\n    SourceInformation: [],\n    Parent: [],\n    Counselors: []\n  }); // ------ LIST FILTER -------\n\n  const {\n    0: dataFilter,\n    1: setDataFilter\n  } = useState([{\n    name: 'SourceInformationID',\n    title: 'Nguồn khách',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: null,\n    // Gọi api xong trả data vào đây\n    value: null\n  }, {\n    name: 'BranchID',\n    title: 'Trung tâm',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: null,\n    value: null\n  }, {\n    name: 'isRegisteredCourse',\n    title: 'Trạng thái đăng ký',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: [{\n      value: null,\n      title: 'Tất cả'\n    }, {\n      value: true,\n      title: 'Đã đăng ký khóa học'\n    }, {\n      value: false,\n      title: 'Chưa đăng ký khóa học'\n    }],\n    value: null\n  }, {\n    name: 'date-range',\n    title: 'Từ - đến',\n    col: 'col-12',\n    type: 'date-range',\n    value: null\n  }]); // ------ BASE USESTATE TABLE -------\n\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi); // ------------- ADD data to list --------------\n\n  const makeNewData = (data, name) => {\n    let newData = null;\n\n    switch (name) {\n      case 'Area':\n        newData = data.map(item => ({\n          title: item.AreaName,\n          value: item.AreaID\n        }));\n        break;\n\n      case 'DistrictID':\n        newData = data.map(item => ({\n          title: item.DistrictName,\n          value: item.ID\n        }));\n        break;\n\n      case 'WardID':\n        newData = data.map(item => ({\n          title: item.WardName,\n          value: item.ID\n        }));\n        break;\n\n      case 'Branch':\n        newData = data.map(item => ({\n          title: item.BranchName,\n          value: item.ID\n        }));\n        setDataFunc('BranchID', newData);\n        break;\n\n      case 'Job':\n        newData = data.map(item => ({\n          title: item.JobName,\n          value: item.JobID\n        }));\n        break;\n\n      case 'Purposes':\n        newData = data.map(item => ({\n          title: item.PurposesName,\n          value: item.PurposesID\n        }));\n        break;\n\n      case 'Parent':\n        newData = data.map(item => ({\n          title: item.FullNameUnicode,\n          value: item.UserInformationID\n        }));\n        break;\n\n      case 'SourceInformation':\n        newData = data.map(item => ({\n          title: item.SourceInformationName,\n          value: item.SourceInformationID\n        }));\n        setDataFunc('SourceInformationID', newData);\n        break;\n\n      case 'Counselors':\n        newData = data.map(item => ({\n          title: item.FullNameUnicode,\n          value: item.UserInformationID\n        }));\n        break;\n\n      default:\n        break;\n    }\n\n    return newData;\n  };\n\n  const getDataTolist = (data, name) => {\n    let newData = makeNewData(data, name);\n    Object.keys(listDataForm).forEach(function (key) {\n      if (key == name) {\n        listDataForm[key] = newData;\n      }\n    });\n    setListDataForm(_objectSpread({}, listDataForm));\n  }; // ----------- GET DATA SOURCE ---------------\n\n\n  const getDataStudentForm = arrApi => {\n    arrApi.forEach((item, index) => {\n      ;\n\n      (async () => {\n        let res = null;\n\n        try {\n          if (item.name == 'Counselors') {\n            res = await item.api.getAll({\n              pageIndex: 1,\n              pageSize: 99999,\n              RoleID: 6,\n              StatusID: 0,\n              Enable: true\n            });\n          } else {\n            res = await item.api.getAll({\n              pageIndex: 1,\n              pageSize: 99999,\n              Enable: true\n            });\n          }\n\n          res.status == 200 && getDataTolist(res.data.data, item.name);\n        } catch (error) {\n          console.log(error.message);\n        } finally {}\n      })();\n    });\n  }; // GET DATA SOURCE\n\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await studentApi.getAll(todoApi);\n      console.log('getDataSource: ', res);\n      res.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow), showNoti('success', 'Thành công'));\n      res.status == 204 && setDataSource([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // ------ SET DATA FUN ------\n\n\n  const setDataFunc = (name, data) => {\n    dataFilter.every((item, index) => {\n      if (item.name == name) {\n        item.optionList = data;\n        return false;\n      }\n\n      return true;\n    });\n    setDataFilter([...dataFilter]);\n  }; // -------------- HANDLE FILTER ------------------\n\n\n  const handleFilter = listFilter => {\n    let newListFilter = _objectSpread({}, listFieldFilter);\n\n    listFilter.forEach((item, index) => {\n      let key = item.name;\n      Object.keys(newListFilter).forEach(keyFilter => {\n        if (keyFilter == key) {\n          newListFilter[key] = item.value;\n        }\n      });\n    });\n    setTodoApi(_objectSpread(_objectSpread(_objectSpread({}, listTodoApi), newListFilter), {}, {\n      pageIndex: 1\n    }));\n  }; // --------------- HANDLE SORT ----------------------\n\n\n  const handleSort = async option => {\n    let newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1,\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n\n    setCurrentPage(1), setTodoApi(newTodoApi);\n  }; // ------------ ON SEARCH -----------------------\n\n\n  const onSearch = (valueSearch, dataIndex) => {\n    let clearKey = dataIndex == 'FullNameUnicode' ? {\n      FullNameUnicode: valueSearch\n    } : dataIndex == 'ChineseName' ? {\n      ChineseName: valueSearch\n    } : dataIndex == 'Mobile' ? {\n      Mobile: valueSearch\n    } : {\n      Email: valueSearch\n    };\n    setCurrentPage(1);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), clearKey));\n  }; // HANDLE RESET\n\n\n  const resetListFieldSearch = () => {\n    Object.keys(listFieldSearch).forEach(function (key) {\n      if (key != 'pageIndex') {\n        listFieldSearch[key] = null;\n      }\n    });\n  };\n\n  const handleReset = () => {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1), resetListFieldSearch();\n  };\n\n  const checkEmptyData = () => {\n    let count = 0;\n    let res = false;\n    Object.keys(listDataForm).forEach(function (key) {\n      if (listDataForm[key].length == 0) {\n        count++;\n      }\n    });\n\n    if (count < 3) {\n      res = true;\n    }\n\n    return res;\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  const getPagination = pageNumber => {\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      pageIndex: pageNumber\n    }));\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(() => {\n    getDataSource();\n  }, [todoApi]);\n\n  const isFetch = () => {\n    return (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) == 1 || (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) == 6 ? true : false;\n  };\n\n  useEffect(() => {\n    userInformation && isFetch() && getDataStudentForm(listApi);\n  }, [userInformation]);\n  useEffect(() => {\n    userInformation && isFetch() && getDataStudentForm(listApi);\n  }, []); // EXPAND ROW\n\n  const expandedRowRender = (data, index) => {\n    return /*#__PURE__*/_jsxDEV(CourseOfStudentDetail, {\n      studentID: data.UserInformationID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 10\n    }, this);\n  }; // -------- ON SELECT ROW ---------\n\n\n  const onSelectRow = selectRow => {\n    let listID = selectRow === null || selectRow === void 0 ? void 0 : selectRow.map(item => item.UserInformationID);\n    setListCustomer(listID);\n  }; // Columns\n\n\n  const columns = [{\n    width: 120,\n    title: 'Mã học viên',\n    dataIndex: 'UserCode',\n    fixed: 'left',\n    render: UserCode => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: UserCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 26\n    }, this)\n  }, _objectSpread({\n    title: 'Họ tên',\n    dataIndex: 'FullNameUnicode',\n    fixed: 'left',\n    render: nameStudent => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: nameStudent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 29\n    }, this)\n  }, FilterColumn('FullNameUnicode', onSearch, handleReset, 'text')), _objectSpread({\n    title: 'Tên tiếng Trung',\n    width: 150,\n    dataIndex: 'ChineseName',\n    fixed: 'left',\n    render: nameStudent => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: nameStudent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 29\n    }, this)\n  }, FilterColumn('ChineseName', onSearch, handleReset, 'text')), {\n    title: 'Đang học',\n    width: 100,\n    dataIndex: 'isRegisteredCourse',\n    render: (text, data) => data.isRegisteredCourse ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"btn btn-icon edit\",\n      children: /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 6\n    }, this) : ''\n  }, _objectSpread({\n    title: 'SĐT',\n    dataIndex: 'Mobile'\n  }, FilterColumn('Mobile', onSearch, handleReset, 'text')), _objectSpread({\n    title: 'Email',\n    dataIndex: 'Email',\n    render: nameStudent => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: nameStudent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 29\n    }, this)\n  }, FilterColumn('Email', onSearch, handleReset, 'text')), {\n    width: 150,\n    title: 'Nguồn',\n    dataIndex: 'SourceInformationName'\n  }, {\n    title: 'Trạng thái',\n    dataIndex: 'StatusID',\n    align: 'center',\n    render: status => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: status == 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag green\",\n          children: \"Ho\\u1EA1t \\u0111\\u1ED9ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag gray\",\n          children: \"\\u0110\\xE3 kh\\xF3a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 76\n        }, this)\n      }, void 0, false);\n    }\n  }, {\n    title: '',\n    width: 160,\n    render: (record, _, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => e.stopPropagation(),\n      style: {\n        flexDirection: 'row',\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(StudentFormModal, {\n        index: index,\n        dataRow: record,\n        listDataForm: checkEmptyData && listDataForm,\n        _handleSubmit: (dataSubmit, index) => {\n          let newDataSource = [...dataSource];\n          newDataSource.splice(index, 1, _objectSpread(_objectSpread({}, dataSubmit), {}, {\n            AreaName: dataSubmit.AreaID && listDataForm.Area.find(item => item.value == dataSubmit.AreaID).title,\n            SourceInformationName: dataSubmit.SourceInformationName,\n            Branch: dataSubmit.Branch == '' ? [] : dataSubmit.Branch.split(',').map(item => ({\n              ID: parseInt(item)\n            }))\n          }));\n          setDataSource(newDataSource);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ResetPassStudent, {\n        dataRow: record\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: {\n          pathname: '/customer/student/student-list/student-detail/[slug]',\n          query: {\n            slug: record.UserInformationID\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Xem chi ti\\u1EBFt\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-icon\",\n            children: /*#__PURE__*/_jsxDEV(Eye, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(StudentAdvisoryMail, {\n        loadingOutside: isLoading,\n        dataSource: dataSource,\n        onFetchData: () => setTodoApi(_objectSpread({}, todoApi)),\n        dataRow: _,\n        listCustomer: dataSource,\n        isStudent: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 5\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(ExpandTable, {\n    currentPage: currentPage,\n    totalPage: totalPage && totalPage,\n    getPagination: pageNumber => getPagination(pageNumber),\n    loading: isLoading,\n    addClass: \"basic-header\",\n    TitlePage: \"DANH S\\xC1CH H\\u1ECCC VI\\xCAN\",\n    dataSource: dataSource,\n    columns: columns,\n    TitleCard: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center justify-content-end\",\n      children: userInformation && (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) !== 10 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(StudentAdvisoryMail, {\n          showCheckBox: () => setShowCheckbox(!showCheckbox),\n          loadingOutside: isLoading,\n          dataSource: dataSource,\n          onFetchData: () => setTodoApi(_objectSpread({}, todoApi)),\n          listCustomer: listCustomer,\n          resetListCustomer: () => setListCustomer([]),\n          isStudent: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 8\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 5\n    }, this),\n    Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extra-table\",\n      children: [/*#__PURE__*/_jsxDEV(FilterBase, {\n        dataFilter: dataFilter,\n        handleFilter: listFilter => handleFilter(listFilter),\n        handleReset: handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(SortBox, {\n        handleSort: value => handleSort(value),\n        dataOption: dataOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 5\n    }, this),\n    isSelect: showCheckbox,\n    onSelectRow: selectRows => onSelectRow(selectRows),\n    expandable: {\n      expandedRowRender\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 545,\n    columnNumber: 3\n  }, this);\n};\n\nStudentData.layout = LayoutBase;\nexport default StudentData;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/customer/student/student-list/index.tsx"],"names":["Tooltip","Link","React","useEffect","useState","Check","Eye","areaApi","branchApi","jobApi","parentsApi","puroseApi","sourceInfomationApi","staffApi","studentApi","FilterBase","SortBox","ExpandTable","CourseOfStudentDetail","ResetPassStudent","StudentAdvisoryMail","StudentFormModal","LayoutBase","FilterColumn","useWrap","listFieldSearch","pageIndex","FullNameUnicode","Mobile","Email","listFieldFilter","SourceInformationID","BranchID","fromDate","toDate","isRegisteredCourse","dataOption","dataSort","sort","sortType","text","listApi","api","name","StudentData","showNoti","pageSize","isAdmin","userInformation","currentPage","setCurrentPage","showCheckbox","setShowCheckbox","listCustomer","setListCustomer","listTodoApi","listDataForm","setListDataForm","Area","DistrictID","WardID","Job","Branch","Purposes","SourceInformation","Parent","Counselors","dataFilter","setDataFilter","title","col","type","optionList","value","dataSource","setDataSource","isLoading","setIsLoading","status","totalPage","setTotalPage","todoApi","setTodoApi","makeNewData","data","newData","map","item","AreaName","AreaID","DistrictName","ID","WardName","BranchName","setDataFunc","JobName","JobID","PurposesName","PurposesID","UserInformationID","SourceInformationName","getDataTolist","Object","keys","forEach","key","getDataStudentForm","arrApi","index","res","getAll","RoleID","StatusID","Enable","error","console","log","message","getDataSource","totalRow","every","handleFilter","listFilter","newListFilter","keyFilter","handleSort","option","newTodoApi","onSearch","valueSearch","dataIndex","clearKey","ChineseName","resetListFieldSearch","handleReset","checkEmptyData","count","length","getPagination","pageNumber","isFetch","expandedRowRender","onSelectRow","selectRow","listID","columns","width","fixed","render","UserCode","nameStudent","align","record","_","e","stopPropagation","flexDirection","display","dataSubmit","newDataSource","splice","find","split","parseInt","pathname","query","slug","selectRows","layout"],"mappings":"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","sourcesContent":["import { Tooltip } from 'antd'\r\nimport Link from 'next/link'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Check, Eye } from 'react-feather'\r\nimport { areaApi, branchApi, jobApi, parentsApi, puroseApi, sourceInfomationApi, staffApi, studentApi } from '~/apiBase'\r\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport ExpandTable from '~/components/ExpandTable'\r\nimport CourseOfStudentDetail from '~/components/Global/Customer/Student/CourseOfStudentDetail'\r\nimport ResetPassStudent from '~/components/Global/Customer/Student/ResetPassStudent'\r\nimport StudentAdvisoryMail from '~/components/Global/Customer/Student/StudentAdvisory/StudentAdvisoryMail'\r\nimport StudentFormModal from '~/components/Global/Customer/Student/StudentFormModal'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nlet listFieldSearch = {\r\n\tpageIndex: 1,\r\n\tFullNameUnicode: null,\r\n\tMobile: null,\r\n\tEmail: null\r\n}\r\n\r\nlet listFieldFilter = {\r\n\tpageIndex: 1,\r\n\tSourceInformationID: null,\r\n\tBranchID: null,\r\n\tfromDate: null,\r\n\ttoDate: null,\r\n\tisRegisteredCourse: null\r\n}\r\n\r\nconst dataOption = [\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Tên A-Z'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Tên Z-A'\r\n\t}\r\n]\r\n\r\n// -- FOR DIFFERENT VIEW --\r\ninterface optionObj {\r\n\ttitle: string\r\n\tvalue: number\r\n}\r\n\r\ninterface listDataForm {\r\n\tArea: Array<optionObj>\r\n\tDistrictID: Array<optionObj>\r\n\tWardID: Array<optionObj>\r\n\tJob: Array<optionObj>\r\n\tBranch: Array<optionObj>\r\n\tPurposes: Array<optionObj>\r\n\tSourceInformation: Array<optionObj>\r\n\tParent: Array<optionObj>\r\n\tCounselors: Array<optionObj>\r\n}\r\n\r\nconst listApi = [\r\n\t{\r\n\t\tapi: areaApi,\r\n\t\ttext: 'Tỉnh/Tp',\r\n\t\tname: 'Area'\r\n\t},\r\n\r\n\t{\r\n\t\tapi: jobApi,\r\n\t\ttext: 'Công việc',\r\n\t\tname: 'Job'\r\n\t},\r\n\t{\r\n\t\tapi: puroseApi,\r\n\t\ttext: 'Mục đích học',\r\n\t\tname: 'Purposes'\r\n\t},\r\n\t{\r\n\t\tapi: branchApi,\r\n\t\ttext: 'Trung tâm',\r\n\t\tname: 'Branch'\r\n\t},\r\n\t{\r\n\t\tapi: parentsApi,\r\n\t\ttext: 'Phụ huynh',\r\n\t\tname: 'Parent'\r\n\t},\r\n\t{\r\n\t\tapi: sourceInfomationApi,\r\n\t\ttext: 'Nguồn khách hàng',\r\n\t\tname: 'SourceInformation'\r\n\t},\r\n\t{\r\n\t\tapi: staffApi,\r\n\t\ttext: 'Tư vấn viên',\r\n\t\tname: 'Counselors'\r\n\t}\r\n]\r\n\r\nconst StudentData = () => {\r\n\tconst { showNoti, pageSize, isAdmin, userInformation } = useWrap()\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [showCheckbox, setShowCheckbox] = useState(false)\r\n\tconst [listCustomer, setListCustomer] = useState([])\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: 1,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tFullNameUnicode: null,\r\n\t\tSourceInformationID: null,\r\n\t\tBranchID: null,\r\n\t\tfromDate: null,\r\n\t\ttoDate: null,\r\n\t\tisRegisteredCourse: null\r\n\t}\r\n\tconst [listDataForm, setListDataForm] = useState<listDataForm>({\r\n\t\tArea: [],\r\n\t\tDistrictID: [],\r\n\t\tWardID: [],\r\n\t\tJob: [],\r\n\t\tBranch: [],\r\n\t\tPurposes: [],\r\n\t\tSourceInformation: [],\r\n\t\tParent: [],\r\n\t\tCounselors: []\r\n\t})\r\n\r\n\t// ------ LIST FILTER -------\r\n\tconst [dataFilter, setDataFilter] = useState([\r\n\t\t{\r\n\t\t\tname: 'SourceInformationID',\r\n\t\t\ttitle: 'Nguồn khách',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null, // Gọi api xong trả data vào đây\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'BranchID',\r\n\t\t\ttitle: 'Trung tâm',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null,\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'isRegisteredCourse',\r\n\t\t\ttitle: 'Trạng thái đăng ký',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: [\r\n\t\t\t\t{ value: null, title: 'Tất cả' },\r\n\t\t\t\t{ value: true, title: 'Đã đăng ký khóa học' },\r\n\t\t\t\t{ value: false, title: 'Chưa đăng ký khóa học' }\r\n\t\t\t],\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'date-range',\r\n\t\t\ttitle: 'Từ - đến',\r\n\t\t\tcol: 'col-12',\r\n\t\t\ttype: 'date-range',\r\n\t\t\tvalue: null\r\n\t\t}\r\n\t])\r\n\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState<IStudent[]>([])\r\n\tconst [isLoading, setIsLoading] = useState({ type: '', status: false })\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// ------------- ADD data to list --------------\r\n\tconst makeNewData = (data, name) => {\r\n\t\tlet newData = null\r\n\t\tswitch (name) {\r\n\t\t\tcase 'Area':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.AreaName,\r\n\t\t\t\t\tvalue: item.AreaID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'DistrictID':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.DistrictName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'WardID':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.WardName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Branch':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.BranchName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('BranchID', newData)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Job':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.JobName,\r\n\t\t\t\t\tvalue: item.JobID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Purposes':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.PurposesName,\r\n\t\t\t\t\tvalue: item.PurposesID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Parent':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.FullNameUnicode,\r\n\t\t\t\t\tvalue: item.UserInformationID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'SourceInformation':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.SourceInformationName,\r\n\t\t\t\t\tvalue: item.SourceInformationID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('SourceInformationID', newData)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Counselors':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.FullNameUnicode,\r\n\t\t\t\t\tvalue: item.UserInformationID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t\treturn newData\r\n\t}\r\n\r\n\tconst getDataTolist = (data: any, name: any) => {\r\n\t\tlet newData = makeNewData(data, name)\r\n\t\tObject.keys(listDataForm).forEach(function (key) {\r\n\t\t\tif (key == name) {\r\n\t\t\t\tlistDataForm[key] = newData\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetListDataForm({ ...listDataForm })\r\n\t}\r\n\r\n\t// ----------- GET DATA SOURCE ---------------\r\n\tconst getDataStudentForm = (arrApi) => {\r\n\t\tarrApi.forEach((item, index) => {\r\n\t\t\t;(async () => {\r\n\t\t\t\tlet res = null\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (item.name == 'Counselors') {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tRoleID: 6,\r\n\t\t\t\t\t\t\tStatusID: 0,\r\n\t\t\t\t\t\t\tEnable: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tEnable: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tres.status == 200 && getDataTolist(res.data.data, item.name)\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.log(error.message)\r\n\t\t\t\t} finally {\r\n\t\t\t\t}\r\n\t\t\t})()\r\n\t\t})\r\n\t}\r\n\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tlet res = await studentApi.getAll(todoApi)\r\n\t\t\tconsole.log('getDataSource: ', res)\r\n\t\t\tres.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow), showNoti('success', 'Thành công'))\r\n\t\t\tres.status == 204 && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// ------ SET DATA FUN ------\r\n\tconst setDataFunc = (name, data) => {\r\n\t\tdataFilter.every((item, index) => {\r\n\t\t\tif (item.name == name) {\r\n\t\t\t\titem.optionList = data\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t\tsetDataFilter([...dataFilter])\r\n\t}\r\n\r\n\t// -------------- HANDLE FILTER ------------------\r\n\tconst handleFilter = (listFilter) => {\r\n\t\tlet newListFilter = { ...listFieldFilter }\r\n\t\tlistFilter.forEach((item, index) => {\r\n\t\t\tlet key = item.name\r\n\t\t\tObject.keys(newListFilter).forEach((keyFilter) => {\r\n\t\t\t\tif (keyFilter == key) {\r\n\t\t\t\t\tnewListFilter[key] = item.value\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tsetTodoApi({ ...listTodoApi, ...newListFilter, pageIndex: 1 })\r\n\t}\r\n\r\n\t// --------------- HANDLE SORT ----------------------\r\n\tconst handleSort = async (option) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetCurrentPage(1), setTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// ------------ ON SEARCH -----------------------\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tlet clearKey =\r\n\t\t\tdataIndex == 'FullNameUnicode'\r\n\t\t\t\t? { FullNameUnicode: valueSearch }\r\n\t\t\t\t: dataIndex == 'ChineseName'\r\n\t\t\t\t? { ChineseName: valueSearch }\r\n\t\t\t\t: dataIndex == 'Mobile'\r\n\t\t\t\t? { Mobile: valueSearch }\r\n\t\t\t\t: { Email: valueSearch }\r\n\t\tsetCurrentPage(1)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t...clearKey\r\n\t\t})\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tconst resetListFieldSearch = () => {\r\n\t\tObject.keys(listFieldSearch).forEach(function (key) {\r\n\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\tlistFieldSearch[key] = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1), resetListFieldSearch()\r\n\t}\r\n\r\n\tconst checkEmptyData = () => {\r\n\t\tlet count = 0\r\n\t\tlet res = false\r\n\t\tObject.keys(listDataForm).forEach(function (key) {\r\n\t\t\tif (listDataForm[key].length == 0) {\r\n\t\t\t\tcount++\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (count < 3) {\r\n\t\t\tres = true\r\n\t\t}\r\n\t\treturn res\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\tpageIndex: pageNumber\r\n\t\t})\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t}, [todoApi])\r\n\r\n\tconst isFetch = () => {\r\n\t\treturn userInformation?.RoleID == 1 || userInformation?.RoleID == 6 ? true : false\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tuserInformation && isFetch() && getDataStudentForm(listApi)\r\n\t}, [userInformation])\r\n\r\n\tuseEffect(() => {\r\n\t\tuserInformation && isFetch() && getDataStudentForm(listApi)\r\n\t}, [])\r\n\r\n\t// EXPAND ROW\r\n\tconst expandedRowRender = (data, index) => {\r\n\t\treturn <CourseOfStudentDetail studentID={data.UserInformationID} />\r\n\t}\r\n\r\n\t// -------- ON SELECT ROW ---------\r\n\tconst onSelectRow = (selectRow) => {\r\n\t\tlet listID = selectRow?.map((item) => item.UserInformationID)\r\n\t\tsetListCustomer(listID)\r\n\t}\r\n\r\n\t// Columns\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\twidth: 120,\r\n\t\t\ttitle: 'Mã học viên',\r\n\t\t\tdataIndex: 'UserCode',\r\n\t\t\tfixed: 'left',\r\n\t\t\trender: (UserCode) => <p className=\"font-weight-black\">{UserCode}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Họ tên',\r\n\t\t\tdataIndex: 'FullNameUnicode',\r\n\t\t\tfixed: 'left',\r\n\t\t\trender: (nameStudent) => <p className=\"font-weight-primary\">{nameStudent}</p>,\r\n\t\t\t...FilterColumn('FullNameUnicode', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tên tiếng Trung',\r\n\t\t\twidth: 150,\r\n\t\t\tdataIndex: 'ChineseName',\r\n\t\t\tfixed: 'left',\r\n\t\t\trender: (nameStudent) => <p className=\"font-weight-primary\">{nameStudent}</p>,\r\n\t\t\t...FilterColumn('ChineseName', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Đang học',\r\n\t\t\twidth: 100,\r\n\t\t\tdataIndex: 'isRegisteredCourse',\r\n\t\t\trender: (text, data) =>\r\n\t\t\t\tdata.isRegisteredCourse ? (\r\n\t\t\t\t\t<p className=\"btn btn-icon edit\">\r\n\t\t\t\t\t\t<Check />\r\n\t\t\t\t\t</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t''\r\n\t\t\t\t)\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\ttitle: 'SĐT',\r\n\t\t\tdataIndex: 'Mobile',\r\n\t\t\t...FilterColumn('Mobile', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Email',\r\n\t\t\tdataIndex: 'Email',\r\n\t\t\trender: (nameStudent) => <p className=\"font-weight-primary\">{nameStudent}</p>,\r\n\t\t\t...FilterColumn('Email', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 150,\r\n\t\t\ttitle: 'Nguồn',\r\n\t\t\tdataIndex: 'SourceInformationName'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tdataIndex: 'StatusID',\r\n\t\t\talign: 'center',\r\n\t\t\trender: (status) => {\r\n\t\t\t\treturn <>{status == 0 ? <span className=\"tag green\">Hoạt động</span> : <span className=\"tag gray\">Đã khóa</span>}</>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t\twidth: 160,\r\n\t\t\trender: (record, _, index) => (\r\n\t\t\t\t<div onClick={(e) => e.stopPropagation()} style={{ flexDirection: 'row', display: 'flex' }}>\r\n\t\t\t\t\t<StudentFormModal\r\n\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\tdataRow={record}\r\n\t\t\t\t\t\tlistDataForm={checkEmptyData && listDataForm}\r\n\t\t\t\t\t\t_handleSubmit={(dataSubmit, index) => {\r\n\t\t\t\t\t\t\tlet newDataSource = [...dataSource]\r\n\t\t\t\t\t\t\tnewDataSource.splice(index, 1, {\r\n\t\t\t\t\t\t\t\t...dataSubmit,\r\n\t\t\t\t\t\t\t\tAreaName: dataSubmit.AreaID && listDataForm.Area.find((item) => item.value == dataSubmit.AreaID).title,\r\n\t\t\t\t\t\t\t\tSourceInformationName: dataSubmit.SourceInformationName,\r\n\t\t\t\t\t\t\t\tBranch:\r\n\t\t\t\t\t\t\t\t\tdataSubmit.Branch == ''\r\n\t\t\t\t\t\t\t\t\t\t? []\r\n\t\t\t\t\t\t\t\t\t\t: dataSubmit.Branch.split(',').map((item) => ({\r\n\t\t\t\t\t\t\t\t\t\t\t\tID: parseInt(item)\r\n\t\t\t\t\t\t\t\t\t\t  }))\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tsetDataSource(newDataSource)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ResetPassStudent dataRow={record} />\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\tpathname: '/customer/student/student-list/student-detail/[slug]',\r\n\t\t\t\t\t\t\tquery: { slug: record.UserInformationID }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tooltip title=\"Xem chi tiết\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-icon\">\r\n\t\t\t\t\t\t\t\t<Eye />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<StudentAdvisoryMail\r\n\t\t\t\t\t\tloadingOutside={isLoading}\r\n\t\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\t\tonFetchData={() => setTodoApi({ ...todoApi })}\r\n\t\t\t\t\t\tdataRow={_}\r\n\t\t\t\t\t\tlistCustomer={dataSource}\r\n\t\t\t\t\t\tisStudent={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\treturn (\r\n\t\t<ExpandTable\r\n\t\t\tcurrentPage={currentPage}\r\n\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\tloading={isLoading}\r\n\t\t\taddClass=\"basic-header\"\r\n\t\t\tTitlePage=\"DANH SÁCH HỌC VIÊN\"\r\n\t\t\tdataSource={dataSource}\r\n\t\t\tcolumns={columns}\r\n\t\t\tTitleCard={\r\n\t\t\t\t<div className=\"d-flex align-items-center justify-content-end\">\r\n\t\t\t\t\t{userInformation && userInformation?.RoleID !== 10 && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<StudentAdvisoryMail\r\n\t\t\t\t\t\t\t\tshowCheckBox={() => setShowCheckbox(!showCheckbox)}\r\n\t\t\t\t\t\t\t\tloadingOutside={isLoading}\r\n\t\t\t\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\t\t\t\tonFetchData={() => setTodoApi({ ...todoApi })}\r\n\t\t\t\t\t\t\t\tlistCustomer={listCustomer}\r\n\t\t\t\t\t\t\t\tresetListCustomer={() => setListCustomer([])}\r\n\t\t\t\t\t\t\t\tisStudent={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\tExtra={\r\n\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t<FilterBase dataFilter={dataFilter} handleFilter={(listFilter: any) => handleFilter(listFilter)} handleReset={handleReset} />\r\n\t\t\t\t\t<SortBox handleSort={(value) => handleSort(value)} dataOption={dataOption} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\tisSelect={showCheckbox}\r\n\t\t\tonSelectRow={(selectRows) => onSelectRow(selectRows)}\r\n\t\t\texpandable={{ expandedRowRender }}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nStudentData.layout = LayoutBase\r\nexport default StudentData\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Sales\\\\Revenue\\\\SalerRevenue.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Spin } from 'antd';\nimport moment from 'moment';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { salerRevenueApi, salerTotalRevenueApi, staffApi } from '~/apiBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport ExpandTable from '~/components/ExpandTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nimport { fmSelectArr, numberWithCommas } from '~/utils/functions';\nimport SalerRevenueChart from './Chart/SalerRevenueChart';\nimport SalerRevenueSearch from './Chart/SalerRevenueSearch';\n\nfunction SalerRevenue(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      salerTotalRevenueList = _useState[0],\n      setSalerTotalRevenueList = _useState[1];\n\n  var _useState2 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      totalPage = _useState3[0],\n      setTotalPage = _useState3[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var _useState4 = useState(''),\n      activeColumnSearch = _useState4[0],\n      setActiveColumnSearch = _useState4[1];\n\n  var _useState5 = useState([]),\n      salerList = _useState5[0],\n      setSalerList = _useState5[1]; // SORT OPTION\n\n\n  var sortOptionList = [{\n    dataSort: {\n      sort: 0,\n      sortType: true\n    },\n    value: 1,\n    text: 'Doanh thu tăng dần'\n  }, {\n    dataSort: {\n      sort: 0,\n      sortType: false\n    },\n    value: 2,\n    text: 'Doanh thu giảm dần'\n  }, {\n    dataSort: {\n      sort: 1,\n      sortType: true\n    },\n    value: 3,\n    text: 'Tổng hóa đơn tăng dần'\n  }, {\n    dataSort: {\n      sort: 1,\n      sortType: false\n    },\n    value: 4,\n    text: 'Tổng hóa đơn giảm dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: true\n    },\n    value: 5,\n    text: 'Tổng khách hàng tăng dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: false\n    },\n    value: 6,\n    text: 'Tổng khách hàng giảm dần'\n  }]; // FILTER\n\n  var listFieldInit = {\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false,\n    CounselorsName: null,\n    CounselorsID: null\n  };\n  var refValue = useRef({\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false\n  });\n\n  var _useState6 = useState(listFieldInit),\n      filters = _useState6[0],\n      setFilters = _useState6[1];\n\n  var _useState7 = useState({\n    id: null,\n    data: []\n  }),\n      salerRevenue = _useState7[0],\n      setSalerRevenue = _useState7[1]; // FILTER\n\n\n  var onFilter = function onFilter(obj) {\n    setFilters(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1\n    }, obj), {}, {\n      fromDate: moment(obj.fromDate).format('YYYY/MM/DD'),\n      toDate: moment(obj.toDate).format('YYYY/MM/DD')\n    }));\n  }; // PAGINATION\n\n\n  var getPagination = function getPagination(pageIndex, pageSize) {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize: pageSize,\n      pageIndex: pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  }; // SORT\n\n\n  var onSort = function onSort(option) {\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), refValue.current));\n  }; // RESET SEARCH\n\n\n  var onResetSearch = function onResetSearch() {\n    setActiveColumnSearch('');\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), {}, {\n      pageSize: refValue.current.pageSize\n    }));\n  }; // ACTION SEARCH\n\n\n  var onSearch = function onSearch(valueSearch, dataIndex) {\n    setActiveColumnSearch(dataIndex);\n\n    if (dataIndex === 'CreatedOn') {\n      setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n        pageIndex: 1\n      }, valueSearch));\n    } else {\n      setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, _defineProperty({\n        pageIndex: 1\n      }, dataIndex, valueSearch)));\n    }\n  };\n\n  var fetchSalerTotalRevenueList = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context.next = 4;\n              return salerTotalRevenueApi.getAll(filters);\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                setSalerTotalRevenueList(res.data.data);\n                setTotalPage(res.data.totalRow);\n              }\n\n              if (res.status === 204) {\n                setSalerTotalRevenueList([]);\n                setTotalPage(0);\n              }\n\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('fetchSalerTotalRevenueList', _context.t0.message);\n              showNoti('danger', _context.t0.message);\n\n            case 13:\n              _context.prev = 13;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9, 13, 16]]);\n    }));\n\n    return function fetchSalerTotalRevenueList() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchSalerTotalRevenueList();\n  }, [filters]);\n\n  var fetchSalerList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res, fmSelectOptionList;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context2.next = 4;\n              return staffApi.getAll({\n                selectAll: true,\n                RoleID: 6\n              });\n\n            case 4:\n              res = _context2.sent;\n\n              if (res.status === 200) {\n                fmSelectOptionList = fmSelectArr(res.data.data, 'FullNameUnicode', 'UserInformationID');\n                setSalerList(fmSelectOptionList);\n              }\n\n              _context2.next = 12;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log('fetchSalerList', _context2.t0.message);\n              showNoti('danger', _context2.t0.message);\n\n            case 12:\n              _context2.prev = 12;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context2.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8, 12, 15]]);\n    }));\n\n    return function fetchSalerList() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchSalerList();\n  }, []);\n\n  var fetchSalerRevenue = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(SalerID) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              setIsLoading({\n                type: 'FETCH_SALER_REVENUE',\n                status: true\n              });\n              _context3.next = 4;\n              return salerRevenueApi.getAll({\n                selectAll: true,\n                CounselorsID: SalerID\n              });\n\n            case 4:\n              res = _context3.sent;\n\n              if (res.status === 200) {\n                setSalerRevenue({\n                  id: SalerID,\n                  data: res.data.data\n                });\n              }\n\n              if (res.status === 204) {\n                setSalerRevenue(_objectSpread(_objectSpread({}, salerRevenue), {}, {\n                  id: SalerID\n                }));\n              }\n\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log('fetchTotalRevenueSaler', _context3.t0.message);\n\n            case 12:\n              _context3.prev = 12;\n              setIsLoading({\n                type: 'FETCH_SALER_REVENUE',\n                status: false\n              });\n              return _context3.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 9, 12, 15]]);\n    }));\n\n    return function fetchSalerRevenue(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var filterSalerRevenue = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data) {\n      var newData, res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              setIsLoading({\n                type: 'FETCH_SALER_REVENUE',\n                status: true\n              });\n              newData = {\n                fromDate: moment(data.fromDate).format('YYYY/MM/DD'),\n                toDate: moment(data.toDate).format('YYYY/MM/DD')\n              };\n              _context4.next = 5;\n              return salerRevenueApi.getAll(_objectSpread({\n                selectAll: true,\n                CounselorsID: salerRevenue.id\n              }, newData));\n\n            case 5:\n              res = _context4.sent;\n\n              if (res.status === 200) {\n                setSalerRevenue(_objectSpread(_objectSpread({}, salerRevenue), {}, {\n                  data: res.data.data\n                }));\n              }\n\n              if (res.status === 204) {\n                showNoti('danger', 'Dữ liệu trống');\n              }\n\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log('fetchTotalRevenueSaler', _context4.t0.message);\n\n            case 13:\n              _context4.prev = 13;\n              setIsLoading({\n                type: 'FETCH_SALER_REVENUE',\n                status: false\n              });\n              return _context4.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 10, 13, 16]]);\n    }));\n\n    return function filterSalerRevenue(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var columns = [_objectSpread(_objectSpread({\n    title: 'Tư vấn viên',\n    dataIndex: 'CounselorsName',\n    render: function render(text) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 22\n      }, _this);\n    }\n  }, FilterColumn('CounselorsID', onSearch, onResetSearch, 'select', salerList)), {}, {\n    className: activeColumnSearch === 'CounselorsID' ? 'active-column-search' : ''\n  }), {\n    title: 'Tổng số hóa đơn',\n    dataIndex: 'InvoiceNumber'\n  }, {\n    title: 'Tổng số khách hàng',\n    dataIndex: 'CustomersNumber'\n  }, {\n    title: 'Doanh thu',\n    dataIndex: 'Revenue',\n    render: function render(price) {\n      return numberWithCommas(price);\n    }\n  }];\n  var expandableObj = {\n    expandedRowRender: function expandedRowRender(record) {\n      return /*#__PURE__*/_jsxDEV(Spin, {\n        spinning: isLoading.type === 'FETCH_SALER_REVENUE' && isLoading.status,\n        children: [/*#__PURE__*/_jsxDEV(SalerRevenueSearch, {\n          handleSubmit: filterSalerRevenue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 5\n        }, _this), /*#__PURE__*/_jsxDEV(SalerRevenueChart, {\n          revenueList: salerRevenue.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 5\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 4\n      }, _this);\n    },\n    onExpand: function onExpand(expanded, record) {\n      if (expanded && salerRevenue.id !== record.CounselorsID) {\n        fetchSalerRevenue(record.CounselorsID);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ExpandTable, {\n    TitlePage: \"Doanh thu\",\n    loading: isLoading,\n    totalPage: totalPage,\n    currentPage: filters.pageIndex,\n    getPagination: getPagination,\n    noScroll: true,\n    Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extra-table\",\n      children: /*#__PURE__*/_jsxDEV(SortBox, {\n        handleSort: onSort,\n        dataOption: sortOptionList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 5\n    }, this),\n    dataSource: salerTotalRevenueList,\n    columns: columns,\n    expandable: expandableObj\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SalerRevenue, \"NK+w1TAGOkxBH1BERDOzajjDMJk=\", false, function () {\n  return [useWrap];\n});\n\n_c = SalerRevenue;\nexport default SalerRevenue;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalerRevenue\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Sales/Revenue/SalerRevenue.tsx"],"names":["Spin","moment","React","useEffect","useRef","useState","salerRevenueApi","salerTotalRevenueApi","staffApi","SortBox","ExpandTable","FilterColumn","useWrap","fmSelectArr","numberWithCommas","SalerRevenueChart","SalerRevenueSearch","SalerRevenue","props","salerTotalRevenueList","setSalerTotalRevenueList","type","status","isLoading","setIsLoading","totalPage","setTotalPage","showNoti","activeColumnSearch","setActiveColumnSearch","salerList","setSalerList","sortOptionList","dataSort","sort","sortType","value","text","listFieldInit","pageIndex","pageSize","CounselorsName","CounselorsID","refValue","filters","setFilters","id","data","salerRevenue","setSalerRevenue","onFilter","obj","current","fromDate","format","toDate","getPagination","onSort","option","title","onResetSearch","onSearch","valueSearch","dataIndex","fetchSalerTotalRevenueList","getAll","res","totalRow","console","log","message","fetchSalerList","selectAll","RoleID","fmSelectOptionList","fetchSalerRevenue","SalerID","filterSalerRevenue","newData","columns","render","className","price","expandableObj","expandedRowRender","record","onExpand","expanded"],"mappings":"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","sourcesContent":["import {Spin} from 'antd';\r\nimport moment from 'moment';\r\nimport React, {useEffect, useRef, useState} from 'react';\r\nimport {salerRevenueApi, salerTotalRevenueApi, staffApi} from '~/apiBase';\r\nimport SortBox from '~/components/Elements/SortBox';\r\nimport ExpandTable from '~/components/ExpandTable';\r\nimport FilterColumn from '~/components/Tables/FilterColumn';\r\nimport {useWrap} from '~/context/wrap';\r\nimport {fmSelectArr, numberWithCommas} from '~/utils/functions';\r\nimport SalerRevenueChart from './Chart/SalerRevenueChart';\r\nimport SalerRevenueSearch from './Chart/SalerRevenueSearch';\r\n\r\nfunction SalerRevenue(props) {\r\n\tconst [salerTotalRevenueList, setSalerTotalRevenueList] = useState<\r\n\t\tISalerTotalRevenue[]\r\n\t>([]);\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false,\r\n\t});\r\n\tconst [totalPage, setTotalPage] = useState(null);\r\n\tconst {showNoti} = useWrap();\r\n\tconst [activeColumnSearch, setActiveColumnSearch] = useState('');\r\n\tconst [salerList, setSalerList] = useState<IOptionCommon[]>([]);\r\n\t// SORT OPTION\r\n\tconst sortOptionList = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: true,\r\n\t\t\t},\r\n\t\t\tvalue: 1,\r\n\t\t\ttext: 'Doanh thu tăng dần',\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: false,\r\n\t\t\t},\r\n\t\t\tvalue: 2,\r\n\t\t\ttext: 'Doanh thu giảm dần',\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 1,\r\n\t\t\t\tsortType: true,\r\n\t\t\t},\r\n\t\t\tvalue: 3,\r\n\t\t\ttext: 'Tổng hóa đơn tăng dần',\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 1,\r\n\t\t\t\tsortType: false,\r\n\t\t\t},\r\n\t\t\tvalue: 4,\r\n\t\t\ttext: 'Tổng hóa đơn giảm dần',\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: true,\r\n\t\t\t},\r\n\t\t\tvalue: 5,\r\n\t\t\ttext: 'Tổng khách hàng tăng dần',\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: false,\r\n\t\t\t},\r\n\t\t\tvalue: 6,\r\n\t\t\ttext: 'Tổng khách hàng giảm dần',\r\n\t\t},\r\n\t];\r\n\t// FILTER\r\n\tconst listFieldInit = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false,\r\n\r\n\t\tCounselorsName: null,\r\n\t\tCounselorsID: null,\r\n\t};\r\n\tlet refValue = useRef({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false,\r\n\t});\r\n\tconst [filters, setFilters] = useState(listFieldInit);\r\n\tconst [salerRevenue, setSalerRevenue] = useState<{\r\n\t\tid: number;\r\n\t\tdata: ISalerRevenue[];\r\n\t}>({\r\n\t\tid: null,\r\n\t\tdata: [],\r\n\t});\r\n\t// FILTER\r\n\tconst onFilter = (obj) => {\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t...obj,\r\n\t\t\tfromDate: moment(obj.fromDate).format('YYYY/MM/DD'),\r\n\t\t\ttoDate: moment(obj.toDate).format('YYYY/MM/DD'),\r\n\t\t});\r\n\t};\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10;\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tpageSize,\r\n\t\t\tpageIndex,\r\n\t\t};\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\t...refValue.current,\r\n\t\t});\r\n\t};\r\n\t// SORT\r\n\tconst onSort = (option) => {\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType,\r\n\t\t};\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t});\r\n\t};\r\n\t// RESET SEARCH\r\n\tconst onResetSearch = () => {\r\n\t\tsetActiveColumnSearch('');\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\tpageSize: refValue.current.pageSize,\r\n\t\t});\r\n\t};\r\n\t// ACTION SEARCH\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tsetActiveColumnSearch(dataIndex);\r\n\t\tif (dataIndex === 'CreatedOn') {\r\n\t\t\tsetFilters({\r\n\t\t\t\t...listFieldInit,\r\n\t\t\t\t...refValue.current,\r\n\t\t\t\tpageIndex: 1,\r\n\t\t\t\t...valueSearch,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetFilters({\r\n\t\t\t\t...listFieldInit,\r\n\t\t\t\t...refValue.current,\r\n\t\t\t\tpageIndex: 1,\r\n\t\t\t\t[dataIndex]: valueSearch,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst fetchSalerTotalRevenueList = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true,\r\n\t\t\t});\r\n\t\t\tconst res = await salerTotalRevenueApi.getAll(filters);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetSalerTotalRevenueList(res.data.data);\r\n\t\t\t\tsetTotalPage(res.data.totalRow);\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetSalerTotalRevenueList([]);\r\n\t\t\t\tsetTotalPage(0);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('fetchSalerTotalRevenueList', error.message);\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchSalerTotalRevenueList();\r\n\t}, [filters]);\r\n\r\n\tconst fetchSalerList = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true,\r\n\t\t\t});\r\n\t\t\tconst res = await staffApi.getAll({\r\n\t\t\t\tselectAll: true,\r\n\t\t\t\tRoleID: 6,\r\n\t\t\t});\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst fmSelectOptionList = fmSelectArr(\r\n\t\t\t\t\tres.data.data,\r\n\t\t\t\t\t'FullNameUnicode',\r\n\t\t\t\t\t'UserInformationID'\r\n\t\t\t\t);\r\n\t\t\t\tsetSalerList(fmSelectOptionList);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('fetchSalerList', error.message);\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tfetchSalerList();\r\n\t}, []);\r\n\tconst fetchSalerRevenue = async (SalerID: number) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_SALER_REVENUE',\r\n\t\t\t\tstatus: true,\r\n\t\t\t});\r\n\t\t\tconst res = await salerRevenueApi.getAll({\r\n\t\t\t\tselectAll: true,\r\n\t\t\t\tCounselorsID: SalerID,\r\n\t\t\t});\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetSalerRevenue({\r\n\t\t\t\t\tid: SalerID,\r\n\t\t\t\t\tdata: res.data.data,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetSalerRevenue({\r\n\t\t\t\t\t...salerRevenue,\r\n\t\t\t\t\tid: SalerID,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('fetchTotalRevenueSaler', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_SALER_REVENUE',\r\n\t\t\t\tstatus: false,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tconst filterSalerRevenue = async (data: {\r\n\t\tfromDate: string;\r\n\t\ttoDate: string;\r\n\t}) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_SALER_REVENUE',\r\n\t\t\t\tstatus: true,\r\n\t\t\t});\r\n\t\t\tconst newData = {\r\n\t\t\t\tfromDate: moment(data.fromDate).format('YYYY/MM/DD'),\r\n\t\t\t\ttoDate: moment(data.toDate).format('YYYY/MM/DD'),\r\n\t\t\t};\r\n\t\t\tconst res = await salerRevenueApi.getAll({\r\n\t\t\t\tselectAll: true,\r\n\t\t\t\tCounselorsID: salerRevenue.id,\r\n\t\t\t\t...newData,\r\n\t\t\t});\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetSalerRevenue({\r\n\t\t\t\t\t...salerRevenue,\r\n\t\t\t\t\tdata: res.data.data,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', 'Dữ liệu trống');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('fetchTotalRevenueSaler', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_SALER_REVENUE',\r\n\t\t\t\tstatus: false,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Tư vấn viên',\r\n\t\t\tdataIndex: 'CounselorsName',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>,\r\n\t\t\t...FilterColumn(\r\n\t\t\t\t'CounselorsID',\r\n\t\t\t\tonSearch,\r\n\t\t\t\tonResetSearch,\r\n\t\t\t\t'select',\r\n\t\t\t\tsalerList\r\n\t\t\t),\r\n\t\t\tclassName:\r\n\t\t\t\tactiveColumnSearch === 'CounselorsID' ? 'active-column-search' : '',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tổng số hóa đơn',\r\n\t\t\tdataIndex: 'InvoiceNumber',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tổng số khách hàng',\r\n\t\t\tdataIndex: 'CustomersNumber',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Doanh thu',\r\n\t\t\tdataIndex: 'Revenue',\r\n\t\t\trender: (price) => numberWithCommas(price),\r\n\t\t},\r\n\t];\r\n\r\n\tconst expandableObj = {\r\n\t\texpandedRowRender: (record: ISalerRevenue) => (\r\n\t\t\t<Spin\r\n\t\t\t\tspinning={isLoading.type === 'FETCH_SALER_REVENUE' && isLoading.status}\r\n\t\t\t>\r\n\t\t\t\t<SalerRevenueSearch handleSubmit={filterSalerRevenue} />\r\n\t\t\t\t<SalerRevenueChart revenueList={salerRevenue.data} />\r\n\t\t\t</Spin>\r\n\t\t),\r\n\t\tonExpand: (expanded, record: ISalerRevenue) => {\r\n\t\t\tif (expanded && salerRevenue.id !== record.CounselorsID) {\r\n\t\t\t\tfetchSalerRevenue(record.CounselorsID);\r\n\t\t\t}\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<ExpandTable\r\n\t\t\tTitlePage=\"Doanh thu\"\r\n\t\t\tloading={isLoading}\r\n\t\t\ttotalPage={totalPage}\r\n\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\tgetPagination={getPagination}\r\n\t\t\tnoScroll\r\n\t\t\tExtra={\r\n\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t<SortBox handleSort={onSort} dataOption={sortOptionList} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\tdataSource={salerTotalRevenueList}\r\n\t\t\tcolumns={columns}\r\n\t\t\texpandable={expandableObj}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default SalerRevenue;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\QuestionBank\\\\QuestionShow\\\\QuestionMap.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Tooltip, Skeleton, Popconfirm } from 'antd';\nimport { Trash2 } from 'react-feather';\nimport CreateQuestionForm from '~/components/Global/QuestionBank/CreateQuestionForm';\nimport ReactHtmlParser from 'react-html-parser';\nimport { exerciseApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\n\nconst QuestionMap = props => {\n  const {\n    listQuestion,\n    loadingQuestion,\n    onFetchData,\n    onRemoveData,\n    isGroup,\n    onEditData,\n    listAlphabet,\n    groupID\n  } = props;\n  const [value, setValue] = React.useState(1);\n  const {\n    0: dataListQuestion,\n    1: setDataListQuestion\n  } = useState(null);\n  const {\n    showNoti,\n    userInformation\n  } = useWrap();\n  const {\n    0: visible,\n    1: setVisible\n  } = useState({\n    id: null,\n    status: false\n  });\n  const {\n    0: confirmLoading,\n    1: setConfirmLoading\n  } = useState(false);\n  const {\n    0: loadingInGroup,\n    1: setLoadingInGroup\n  } = useState(false);\n  const {\n    0: loadingAudio,\n    1: setLoadingAudio\n  } = useState(null);\n  const {\n    0: activeID,\n    1: setActiveID\n  } = useState(null);\n  const {\n    0: lengthData,\n    1: setLengthData\n  } = useState(null);\n\n  const onChange = e => {\n    e.preventDefault(); // setValue(e.target.value);\n  }; // ON EDIT\n\n\n  const onEdit = dataEdit => {\n    if (!isGroup.status) {\n      onEditData(dataEdit);\n    } else {\n      let index = dataListQuestion.findIndex(item => item.ID == dataEdit.ID);\n      dataListQuestion.splice(index, 1, dataEdit);\n      setDataListQuestion([...dataListQuestion]);\n    }\n  };\n\n  const deleteQuestionItem = quesID => {\n    !visible.status ? setVisible({\n      id: quesID,\n      status: true\n    }) : setVisible({\n      id: quesID,\n      status: false\n    });\n  }; // Chấp nhận xóa câu hỏi\n\n\n  const handleOk = async quesItem => {\n    setConfirmLoading(true);\n    quesItem.Enable = false;\n\n    try {\n      let res = await exerciseApi.update(quesItem);\n\n      if (res.status == 200) {\n        setVisible(_objectSpread(_objectSpread({}, visible), {}, {\n          status: false\n        }));\n        onRemoveData(quesItem);\n        showNoti('success', 'Xóa thành công');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setConfirmLoading(false);\n    }\n  };\n\n  const handleCancel = quesID => {\n    setVisible({\n      id: quesID,\n      status: false\n    });\n  };\n\n  const getQuestionInGroup = async () => {\n    setLoadingInGroup(true);\n\n    try {\n      let res = await exerciseApi.getAll({\n        pageIndex: 1,\n        pageSize: 9999,\n        ExerciseGroupID: isGroup.id\n      });\n      res.status == 200 && setDataListQuestion(res.data.data);\n      res.status == 204 && setDataListQuestion([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoadingInGroup(false);\n    }\n  };\n\n  const onHover = ID => {\n    setActiveID(ID);\n  };\n\n  const returnAudio = item => {\n    const audioHTML = item => {\n      return /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: item.LinkAudio,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !activeID ? item.LinkAudio !== '' && audioHTML(item) : item.ID == activeID ? !loadingAudio ? item.LinkAudio !== '' && audioHTML(item) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : item.LinkAudio !== '' && audioHTML(item)\n    }, void 0, false);\n  };\n\n  useEffect(() => {\n    // Check active item when add new data\n    if ((dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.length) > 0) {\n      if (listQuestion.length > lengthData) {\n        setActiveID(listQuestion[0].ID);\n      }\n    }\n\n    setLengthData(listQuestion.length); // Loading audio for change html audio (because the link not change when update state)\n\n    setLoadingAudio(true);\n    setTimeout(() => {\n      setLoadingAudio(false);\n    }, 100); // Check all situations between no group and have group\n\n    !isGroup.status ? setDataListQuestion(listQuestion) : isGroup.id && isGroup.id === groupID && getQuestionInGroup();\n  }, [listQuestion]);\n  useEffect(() => {\n    isGroup.status && setDataListQuestion([]);\n    isGroup.status && isGroup.id && isGroup.id === groupID && getQuestionInGroup();\n  }, [isGroup]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [(dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.length) == 0 ? !isGroup.status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Danh s\\xE1ch c\\xF2n tr\\u1ED1ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-question mt-3 w-100\",\n      style: {\n        maxWidth: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"C\\xE2u h\\u1ECFi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0110\\xE1p \\xE1n \\u0111\\xFAng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0110\\xE1p \\xE1n g\\xE2y nhi\\u1EC5u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.map((item, index) => {\n          var _item$ExerciseAnswer, _item$ExerciseAnswer2;\n\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              style: {\n                width: '5%'\n              },\n              children: index + 1 + '/'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: '40%'\n              },\n              children: ReactHtmlParser(item.Content)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_item$ExerciseAnswer = item.ExerciseAnswer) === null || _item$ExerciseAnswer === void 0 ? void 0 : _item$ExerciseAnswer.map((ans, i) => ans.Enable && ans.isTrue && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text\",\n                  children: ans.AnswerContent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 14\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 13\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_item$ExerciseAnswer2 = item.ExerciseAnswer) === null || _item$ExerciseAnswer2 === void 0 ? void 0 : _item$ExerciseAnswer2.map((ans, i) => ans.Enable && !ans.isTrue && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text\",\n                  children: ans.AnswerContent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 14\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 13\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(CreateQuestionForm, {\n                questionData: item,\n                onFetchData: onFetchData,\n                onEditData: dataEdit => onEdit(dataEdit),\n                isGroup: {\n                  status: false,\n                  id: null\n                },\n                getActiveID: ID => setActiveID(ID)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 10\n              }, this), userInformation && userInformation.RoleID !== 2 && /*#__PURE__*/_jsxDEV(Popconfirm, {\n                title: \"B\\u1EA1n c\\xF3 ch\\u1EAFc mu\\u1ED1n x\\xF3a?\",\n                onConfirm: () => handleOk(item),\n                okButtonProps: {\n                  loading: confirmLoading\n                },\n                onCancel: () => handleCancel(item.ID),\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"X\\xF3a c\\xE2u h\\u1ECFi\",\n                  placement: \"rightTop\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-icon delete\",\n                    onClick: () => deleteQuestionItem(item.ID),\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 14\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 9\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }, this), isGroup !== null && isGroup !== void 0 && isGroup.status && loadingInGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 5\n    }, this) : (isGroup === null || isGroup === void 0 ? void 0 : isGroup.status) && (dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.length) == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: '#dd4667'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"Nh\\xF3m n\\xE0y ch\\u01B0a c\\xF3 c\\xE2u h\\u1ECFi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 6\n    }, this), loadingQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\nexport default QuestionMap;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/QuestionBank/QuestionShow/QuestionMap.tsx"],"names":["React","useEffect","useState","Tooltip","Skeleton","Popconfirm","Trash2","CreateQuestionForm","ReactHtmlParser","exerciseApi","useWrap","QuestionMap","props","listQuestion","loadingQuestion","onFetchData","onRemoveData","isGroup","onEditData","listAlphabet","groupID","value","setValue","dataListQuestion","setDataListQuestion","showNoti","userInformation","visible","setVisible","id","status","confirmLoading","setConfirmLoading","loadingInGroup","setLoadingInGroup","loadingAudio","setLoadingAudio","activeID","setActiveID","lengthData","setLengthData","onChange","e","preventDefault","onEdit","dataEdit","index","findIndex","item","ID","splice","deleteQuestionItem","quesID","handleOk","quesItem","Enable","res","update","error","message","handleCancel","getQuestionInGroup","getAll","pageIndex","pageSize","ExerciseGroupID","data","onHover","returnAudio","audioHTML","LinkAudio","length","setTimeout","maxWidth","map","width","Content","ExerciseAnswer","ans","i","isTrue","AnswerContent","RoleID","loading","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Radio, Tooltip, Skeleton, Popconfirm, Spin } from 'antd'\r\nimport { Info, Bookmark, Edit, Trash2 } from 'react-feather'\r\nimport CreateQuestionForm from '~/components/Global/QuestionBank/CreateQuestionForm'\r\n\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser'\r\nimport { exerciseApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst QuestionMap = (props: any) => {\r\n\tconst { listQuestion, loadingQuestion, onFetchData, onRemoveData, isGroup, onEditData, listAlphabet, groupID } = props\r\n\tconst [value, setValue] = React.useState(1)\r\n\tconst [dataListQuestion, setDataListQuestion] = useState(null)\r\n\tconst { showNoti, userInformation } = useWrap()\r\n\tconst [visible, setVisible] = useState({\r\n\t\tid: null,\r\n\t\tstatus: false\r\n\t})\r\n\tconst [confirmLoading, setConfirmLoading] = useState(false)\r\n\tconst [loadingInGroup, setLoadingInGroup] = useState(false)\r\n\tconst [loadingAudio, setLoadingAudio] = useState(null)\r\n\tconst [activeID, setActiveID] = useState(null)\r\n\tconst [lengthData, setLengthData] = useState(null)\r\n\r\n\tconst onChange = (e) => {\r\n\t\te.preventDefault()\r\n\t\t// setValue(e.target.value);\r\n\t}\r\n\r\n\t// ON EDIT\r\n\tconst onEdit = (dataEdit) => {\r\n\t\tif (!isGroup.status) {\r\n\t\t\tonEditData(dataEdit)\r\n\t\t} else {\r\n\t\t\tlet index = dataListQuestion.findIndex((item) => item.ID == dataEdit.ID)\r\n\t\t\tdataListQuestion.splice(index, 1, dataEdit)\r\n\r\n\t\t\tsetDataListQuestion([...dataListQuestion])\r\n\t\t}\r\n\t}\r\n\r\n\tconst deleteQuestionItem = (quesID) => {\r\n\t\t!visible.status\r\n\t\t\t? setVisible({\r\n\t\t\t\t\tid: quesID,\r\n\t\t\t\t\tstatus: true\r\n\t\t\t  })\r\n\t\t\t: setVisible({\r\n\t\t\t\t\tid: quesID,\r\n\t\t\t\t\tstatus: false\r\n\t\t\t  })\r\n\t}\r\n\r\n\t// Chấp nhận xóa câu hỏi\r\n\tconst handleOk = async (quesItem) => {\r\n\t\tsetConfirmLoading(true)\r\n\t\tquesItem.Enable = false\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseApi.update(quesItem)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetVisible({\r\n\t\t\t\t\t...visible,\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t\tonRemoveData(quesItem)\r\n\t\t\t\tshowNoti('success', 'Xóa thành công')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetConfirmLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleCancel = (quesID) => {\r\n\t\tsetVisible({\r\n\t\t\tid: quesID,\r\n\t\t\tstatus: false\r\n\t\t})\r\n\t}\r\n\r\n\tconst getQuestionInGroup = async () => {\r\n\t\tsetLoadingInGroup(true)\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseApi.getAll({\r\n\t\t\t\tpageIndex: 1,\r\n\t\t\t\tpageSize: 9999,\r\n\t\t\t\tExerciseGroupID: isGroup.id\r\n\t\t\t})\r\n\t\t\tres.status == 200 && setDataListQuestion(res.data.data)\r\n\t\t\tres.status == 204 && setDataListQuestion([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingInGroup(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onHover = (ID: number) => {\r\n\t\tsetActiveID(ID)\r\n\t}\r\n\r\n\tconst returnAudio = (item) => {\r\n\t\tconst audioHTML = (item) => {\r\n\t\t\treturn (\r\n\t\t\t\t<audio controls>\r\n\t\t\t\t\t<source src={item.LinkAudio} type=\"audio/mpeg\" />\r\n\t\t\t\t</audio>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{!activeID ? (\r\n\t\t\t\t\titem.LinkAudio !== '' && audioHTML(item)\r\n\t\t\t\t) : item.ID == activeID ? (\r\n\t\t\t\t\t!loadingAudio ? (\r\n\t\t\t\t\t\titem.LinkAudio !== '' && audioHTML(item)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<></>\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\titem.LinkAudio !== '' && audioHTML(item)\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t// Check active item when add new data\r\n\t\tif (dataListQuestion?.length > 0) {\r\n\t\t\tif (listQuestion.length > lengthData) {\r\n\t\t\t\tsetActiveID(listQuestion[0].ID)\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetLengthData(listQuestion.length)\r\n\r\n\t\t// Loading audio for change html audio (because the link not change when update state)\r\n\t\tsetLoadingAudio(true)\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLoadingAudio(false)\r\n\t\t}, 100)\r\n\r\n\t\t// Check all situations between no group and have group\r\n\t\t!isGroup.status ? setDataListQuestion(listQuestion) : isGroup.id && isGroup.id === groupID && getQuestionInGroup()\r\n\t}, [listQuestion])\r\n\r\n\tuseEffect(() => {\r\n\t\tisGroup.status && setDataListQuestion([])\r\n\t\tisGroup.status && isGroup.id && isGroup.id === groupID && getQuestionInGroup()\r\n\t}, [isGroup])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{dataListQuestion?.length == 0 ? (\r\n\t\t\t\t!isGroup.status && (\r\n\t\t\t\t\t<p className=\"text-center\">\r\n\t\t\t\t\t\t<b>Danh sách còn trống</b>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)\r\n\t\t\t) : (\r\n\t\t\t\t<table className=\"table-question mt-3 w-100\" style={{ maxWidth: '100%' }}>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t<th>Câu hỏi</th>\r\n\t\t\t\t\t\t\t<th>Đáp án đúng</th>\r\n\t\t\t\t\t\t\t<th>Đáp án gây nhiễu</th>\r\n\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{dataListQuestion?.map((item, index) => (\r\n\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t<td className=\"text-center\" style={{ width: '5%' }}>\r\n\t\t\t\t\t\t\t\t\t{index + 1 + '/'}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td style={{ width: '40%' }}>{ReactHtmlParser(item.Content)}</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t{item.ExerciseAnswer?.map(\r\n\t\t\t\t\t\t\t\t\t\t(ans, i) =>\r\n\t\t\t\t\t\t\t\t\t\t\tans.Enable &&\r\n\t\t\t\t\t\t\t\t\t\t\tans.isTrue && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span className=\"tick\">- </span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text\">{ans.AnswerContent}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t{item.ExerciseAnswer?.map(\r\n\t\t\t\t\t\t\t\t\t\t(ans, i) =>\r\n\t\t\t\t\t\t\t\t\t\t\tans.Enable &&\r\n\t\t\t\t\t\t\t\t\t\t\t!ans.isTrue && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span className=\"tick\">- </span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text\">{ans.AnswerContent}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<CreateQuestionForm\r\n\t\t\t\t\t\t\t\t\t\tquestionData={item}\r\n\t\t\t\t\t\t\t\t\t\tonFetchData={onFetchData}\r\n\t\t\t\t\t\t\t\t\t\tonEditData={(dataEdit: any) => onEdit(dataEdit)}\r\n\t\t\t\t\t\t\t\t\t\tisGroup={{ status: false, id: null }}\r\n\t\t\t\t\t\t\t\t\t\tgetActiveID={(ID: any) => setActiveID(ID)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{userInformation && userInformation.RoleID !== 2 && (\r\n\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Bạn có chắc muốn xóa?\"\r\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleOk(item)}\r\n\t\t\t\t\t\t\t\t\t\t\tokButtonProps={{ loading: confirmLoading }}\r\n\t\t\t\t\t\t\t\t\t\t\tonCancel={() => handleCancel(item.ID)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Xóa câu hỏi\" placement=\"rightTop\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-icon delete\" onClick={() => deleteQuestionItem(item.ID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Trash2 />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t)}\r\n\r\n\t\t\t{isGroup?.status && loadingInGroup ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Skeleton />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\tisGroup?.status &&\r\n\t\t\t\tdataListQuestion?.length == 0 && (\r\n\t\t\t\t\t<p style={{ color: '#dd4667' }}>\r\n\t\t\t\t\t\t<i>Nhóm này chưa có câu hỏi</i>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t\t{loadingQuestion && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Skeleton />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default QuestionMap\r\n"]},"metadata":{},"sourceType":"module"}
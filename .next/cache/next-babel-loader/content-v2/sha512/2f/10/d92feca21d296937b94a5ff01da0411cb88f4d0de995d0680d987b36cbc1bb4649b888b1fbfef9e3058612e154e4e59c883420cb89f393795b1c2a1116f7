{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\option\\\\learning-needs\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport LearningNeedsForm from '~/components/Global/Option/LearningNeedsForm';\nimport LayoutBase from '~/components/LayoutBase';\nimport PowerTable from '~/components/PowerTable';\nimport { useWrap } from '~/context/wrap';\nimport { learningNeeds } from './../../../apiBase/options/learning-needs';\n\nconst LearningNeeds = () => {\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState({\n    pageIndex: 1,\n    pageSize: pageSize\n  });\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await learningNeeds.getAll(todoApi);\n\n      if (res.status == 200) {\n        setDataSource(res.data.data);\n        setTotalPage(res.data.totalRow);\n      }\n\n      if (res.status == 204) {\n        setDataSource([]);\n      }\n    } catch (error) {} finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  const handleDeleteRow = async record => {\n    setIsLoading({\n      type: 'DELETE',\n      status: true\n    });\n\n    try {\n      let res = await learningNeeds.update({\n        ID: record.ID,\n        Name: record.Name,\n        Enable: false\n      });\n\n      if (res.status == 200) {\n        console.log('delete');\n        showNoti('success', 'Xóa thành công!');\n      }\n    } catch (error) {} finally {\n      setIsLoading({\n        type: 'DELETE',\n        status: false\n      });\n    }\n  };\n\n  const columns = [{\n    title: 'Nhu cầu học',\n    dataIndex: 'Name',\n    width: 200,\n    render: text => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    title: 'ID',\n    dataIndex: 'ID',\n    width: 80,\n    render: text => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    title: 'Người tạo',\n    dataIndex: 'CreatedBy',\n    width: 150,\n    render: text => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    title: 'Thao tác',\n    dataIndex: 'Action',\n    width: 150,\n    render: (text, record) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(LearningNeedsForm, {\n          setTodoApi: () => setTodoApi(_objectSpread({}, todoApi)),\n          type: \"edit\",\n          record: record\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(LearningNeedsForm, {\n          setTodoApi: () => setTodoApi(_objectSpread({}, todoApi)),\n          type: \"deleterow\",\n          record: record\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  useEffect(() => {\n    getDataSource();\n  }, [todoApi]); // PAGINATION\n\n  const getPagination = (pageNumber, pageSize) => {\n    if (!pageSize) pageSize = 10;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      pageIndex: pageNumber,\n      pageSize: pageSize\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PowerTable, {\n      loading: isLoading,\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: getPagination,\n      dataSource: dataSource,\n      columns: columns,\n      TitlePage: \"B\\u1EA3ng nhu c\\u1EA7u h\\u1ECDc\",\n      TitleCard: /*#__PURE__*/_jsxDEV(LearningNeedsForm, {\n        setTodoApi: () => setTodoApi(_objectSpread({}, todoApi)),\n        type: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nLearningNeeds.layout = LayoutBase;\nexport default LearningNeeds;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/option/learning-needs/index.tsx"],"names":["React","useEffect","useState","LearningNeedsForm","LayoutBase","PowerTable","useWrap","learningNeeds","LearningNeeds","showNoti","pageSize","dataSource","setDataSource","currentPage","setCurrentPage","totalPage","setTotalPage","isLoading","setIsLoading","type","status","todoApi","setTodoApi","pageIndex","getDataSource","res","getAll","data","totalRow","error","handleDeleteRow","record","update","ID","Name","Enable","console","log","columns","title","dataIndex","width","render","text","getPagination","pageNumber","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport LearningNeedsForm from '~/components/Global/Option/LearningNeedsForm';\r\nimport LayoutBase from '~/components/LayoutBase';\r\nimport PowerTable from '~/components/PowerTable';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { learningNeeds } from './../../../apiBase/options/learning-needs';\r\nimport DeleteTableRow from '~/components/Elements/DeleteTableRow/DeleteTableRow';\r\n\r\nconst LearningNeeds = () => {\r\n\tconst { showNoti, pageSize } = useWrap();\r\n\tconst [dataSource, setDataSource] = useState<ILearningNeeds[]>([]);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\tconst [totalPage, setTotalPage] = useState(null);\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t});\r\n\tconst [todoApi, setTodoApi] = useState({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: pageSize\r\n\t});\r\n\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({ type: 'GET_ALL', status: true });\r\n\t\ttry {\r\n\t\t\tlet res = await learningNeeds.getAll(todoApi);\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetDataSource(res.data.data);\r\n\t\t\t\tsetTotalPage(res.data.totalRow);\r\n\t\t\t}\r\n\t\t\tif (res.status == 204) {\r\n\t\t\t\tsetDataSource([]);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'GET_ALL', status: false });\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDeleteRow = async (record) => {\r\n\t\tsetIsLoading({ type: 'DELETE', status: true });\r\n\t\ttry {\r\n\t\t\tlet res = await learningNeeds.update({ ID: record.ID, Name: record.Name, Enable: false });\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tconsole.log('delete');\r\n\t\t\t\tshowNoti('success', 'Xóa thành công!');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'DELETE', status: false });\r\n\t\t}\r\n\t};\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Nhu cầu học',\r\n\t\t\tdataIndex: 'Name',\r\n\t\t\twidth: 200,\r\n\t\t\trender: (text) => {\r\n\t\t\t\treturn <p className=\"font-weight-black\">{text}</p>;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'ID',\r\n\t\t\tdataIndex: 'ID',\r\n\t\t\twidth: 80,\r\n\t\t\trender: (text) => {\r\n\t\t\t\treturn <p>{text}</p>;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Người tạo',\r\n\t\t\tdataIndex: 'CreatedBy',\r\n\t\t\twidth: 150,\r\n\t\t\trender: (text) => {\r\n\t\t\t\treturn <p>{text}</p>;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Thao tác',\r\n\t\t\tdataIndex: 'Action',\r\n\t\t\twidth: 150,\r\n\t\t\trender: (text, record) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<LearningNeedsForm setTodoApi={() => setTodoApi({ ...todoApi })} type=\"edit\" record={record} />\r\n\t\t\t\t\t\t<LearningNeedsForm setTodoApi={() => setTodoApi({ ...todoApi })} type=\"deleterow\" record={record} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t];\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataSource();\r\n\t}, [todoApi]);\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageNumber: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10;\r\n\t\tsetCurrentPage(pageNumber);\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\tpageIndex: pageNumber,\r\n\t\t\tpageSize: pageSize\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PowerTable\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={getPagination}\r\n\t\t\t\tdataSource={dataSource}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tTitlePage=\"Bảng nhu cầu học\"\r\n\t\t\t\tTitleCard={<LearningNeedsForm setTodoApi={() => setTodoApi({ ...todoApi })} type=\"add\" />}\r\n\t\t\t></PowerTable>\r\n\t\t</>\r\n\t);\r\n};\r\nLearningNeeds.layout = LayoutBase;\r\nexport default LearningNeeds;\r\n"]},"metadata":{},"sourceType":"module"}
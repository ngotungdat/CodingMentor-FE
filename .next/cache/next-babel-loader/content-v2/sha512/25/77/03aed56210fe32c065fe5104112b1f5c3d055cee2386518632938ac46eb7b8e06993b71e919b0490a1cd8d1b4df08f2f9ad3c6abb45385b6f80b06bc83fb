{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\context\\\\useDoneTest.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useContext, useState } from 'react';\nvar DoneTestContext = /*#__PURE__*/createContext({\n  doneTestData: null,\n  dataMarking: null,\n  getDoneTestData: function getDoneTestData() {},\n  getDataMarking: function getDataMarking() {}\n});\nexport var DoneTestProvider = function DoneTestProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      doneTestData = _useState[0],\n      setDoneTestData = _useState[1];\n\n  var _useState2 = useState(null),\n      dataMarking = _useState2[0],\n      setDataMarking = _useState2[1];\n\n  var getDoneTestData = function getDoneTestData(data) {\n    setDoneTestData(data);\n  };\n\n  console.log('Data Marking: ', dataMarking);\n\n  var getDataMarking = function getDataMarking(data) {\n    setDataMarking(_objectSpread({}, data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DoneTestContext.Provider, {\n      value: {\n        dataMarking: dataMarking,\n        doneTestData: doneTestData,\n        getDoneTestData: getDoneTestData,\n        getDataMarking: getDataMarking\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false);\n};\n\n_s(DoneTestProvider, \"2egHNvYPhNesp/LJsefFNcDdFEg=\");\n\n_c = DoneTestProvider;\nexport var useDoneTest = function useDoneTest() {\n  _s2();\n\n  return useContext(DoneTestContext);\n};\n\n_s2(useDoneTest, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"DoneTestProvider\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/context/useDoneTest.tsx"],"names":["React","createContext","useContext","useState","DoneTestContext","doneTestData","dataMarking","getDoneTestData","getDataMarking","DoneTestProvider","children","setDoneTestData","setDataMarking","data","console","log","useDoneTest"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAAsDC,QAAtD,QAAsE,OAAtE;AAsEA,IAAMC,eAAe,gBAAGH,aAAa,CAAS;AAC7CI,EAAAA,YAAY,EAAE,IAD+B;AAE7CC,EAAAA,WAAW,EAAE,IAFgC;AAG7CC,EAAAA,eAAe,EAAE,2BAAM,CAAE,CAHoB;AAI7CC,EAAAA,cAAc,EAAE,0BAAM,CAAE;AAJqB,CAAT,CAArC;AAOA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACTP,QAAQ,CAAiB,IAAjB,CADC;AAAA,MAC1CE,YAD0C;AAAA,MAC5BM,eAD4B;;AAAA,mBAEXR,QAAQ,CAAM,IAAN,CAFG;AAAA,MAE1CG,WAF0C;AAAA,MAE7BM,cAF6B;;AAIjD,MAAML,eAAe,GAAG,SAAlBA,eAAkB,CAACM,IAAD,EAAU;AACjCF,IAAAA,eAAe,CAACE,IAAD,CAAf;AACA,GAFD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BT,WAA9B;;AAEA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACK,IAAD,EAAU;AAChCD,IAAAA,cAAc,mBAAMC,IAAN,EAAd;AACA,GAFD;;AAIA,sBACC;AAAA,2BACC,QAAC,eAAD,CAAiB,QAAjB;AACC,MAAA,KAAK,EAAE;AACNP,QAAAA,WAAW,EAAEA,WADP;AAEND,QAAAA,YAAY,EAAEA,YAFR;AAGNE,QAAAA,eAAe,EAAfA,eAHM;AAINC,QAAAA,cAAc,EAAdA;AAJM,OADR;AAAA,gBAQEE;AARF;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAcA,CA5BM;;GAAMD,gB;;KAAAA,gB;AA8Bb,OAAO,IAAMO,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA,SAAMd,UAAU,CAACE,eAAD,CAAhB;AAAA,CAApB;;IAAMY,W","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\n\r\ntype SetPackageExerciseAnswerStudent = {\r\n\tID: number;\r\n\tExerciseAnswerID: number;\r\n\tExerciseAnswerContent: string;\r\n\tisTrue: boolean;\r\n\tAnswerID: number;\r\n\tAnswerContent: string;\r\n\tisResult: boolean;\r\n\tFileAudio: string;\r\n\tAnswerComment: Array<any>;\r\n};\r\n\r\ntype SetPackageExerciseStudent = {\r\n\tID: number;\r\n\tExerciseID: number;\r\n\tPoint: number;\r\n\tisDone: boolean;\r\n\tContent: string;\r\n\tinputID: number;\r\n\tLinkAudio: string;\r\n\tDescribeAnswer: string;\r\n\tisTrue: boolean;\r\n\tLevel: number;\r\n\tLevelName: string;\r\n\tType: number;\r\n\tTypeName: string;\r\n\tSkillID: number;\r\n\tSkillName: string;\r\n\tSetPackageExerciseAnswerStudent: Array<SetPackageExerciseAnswerStudent>;\r\n};\r\n\r\ntype dataMarking = {\r\n\tSetPackageResultID: number;\r\n\tNote: string;\r\n\tsetPackageExerciseStudentsList: Array<{\r\n\t\tID: number;\r\n\t\tPoint: number;\r\n\t}>;\r\n};\r\n\r\ntype doneTestData = {\r\n\tID: 7;\r\n\tSetPackageResultID: number;\r\n\tExamTopicDetailID: number;\r\n\tExerciseGroupID: number;\r\n\tContent: string;\r\n\tParagraph: string;\r\n\tIntroduce: string;\r\n\tLinkAudio: string;\r\n\tLevel: number;\r\n\tLevelName: string;\r\n\tType: number;\r\n\tTypeName: string;\r\n\tSkillID: number;\r\n\tSkillName: string;\r\n\tExerciseType: number;\r\n\tExerciseTypeName: string;\r\n\tIndex: number;\r\n\tSetPackageExerciseStudent: Array<SetPackageExerciseStudent>;\r\n};\r\n\r\nexport type IProps = {\r\n\tdoneTestData: Array<doneTestData>;\r\n\tgetDoneTestData: Function;\r\n\tdataMarking: any;\r\n\tgetDataMarking: Function;\r\n};\r\n\r\nconst DoneTestContext = createContext<IProps>({\r\n\tdoneTestData: null,\r\n\tdataMarking: null,\r\n\tgetDoneTestData: () => {},\r\n\tgetDataMarking: () => {}\r\n});\r\n\r\nexport const DoneTestProvider = ({ children }) => {\r\n\tconst [doneTestData, setDoneTestData] = useState<doneTestData[]>(null);\r\n\tconst [dataMarking, setDataMarking] = useState<any>(null);\r\n\r\n\tconst getDoneTestData = (data) => {\r\n\t\tsetDoneTestData(data);\r\n\t};\r\n\r\n\tconsole.log('Data Marking: ', dataMarking);\r\n\r\n\tconst getDataMarking = (data) => {\r\n\t\tsetDataMarking({ ...data });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<DoneTestContext.Provider\r\n\t\t\t\tvalue={{\r\n\t\t\t\t\tdataMarking: dataMarking,\r\n\t\t\t\t\tdoneTestData: doneTestData,\r\n\t\t\t\t\tgetDoneTestData,\r\n\t\t\t\t\tgetDataMarking\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</DoneTestContext.Provider>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport const useDoneTest = () => useContext(DoneTestContext);\r\n"]},"metadata":{},"sourceType":"module"}
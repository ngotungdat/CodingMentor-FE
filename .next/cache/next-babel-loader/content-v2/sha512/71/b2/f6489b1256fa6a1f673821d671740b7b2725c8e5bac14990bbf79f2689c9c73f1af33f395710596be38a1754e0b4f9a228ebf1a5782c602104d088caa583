{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\FormControl\\\\InputPassField\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form, Input } from 'antd';\nimport React from 'react';\nimport { Controller } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\n\nconst InputPassField = props => {\n  var _errors$name;\n\n  const {\n    form,\n    name,\n    label,\n    placeholder,\n    disabled,\n    handleChange,\n    style,\n    className\n  } = props;\n  const {\n    errors\n  } = form.formState;\n  const hasError = errors[name];\n\n  const checkHandleChange = value => {\n    if (!handleChange) return;\n    handleChange(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form.Item, {\n    style: style,\n    label: label,\n    className: `${className} ${hasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      name: name,\n      control: form.control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(Input.Password, _objectSpread(_objectSpread({}, field), {}, {\n        className: \"style-input\",\n        allowClear: true,\n        placeholder: placeholder // disabled={disabled}\n        ,\n        onChange: e => disabled ? null : (checkHandleChange(e.target.value), field.onChange(e.target.value)),\n        iconRender: visible => visible ? /*#__PURE__*/_jsxDEV(EyeTwoTone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 43\n        }, this) : /*#__PURE__*/_jsxDEV(EyeInvisibleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 60\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ant-form-item-explain ant-form-item-explain-error font-color-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n\nInputPassField.propTypes = {\n  form: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  handleChange: PropTypes.func,\n  style: PropTypes.shape({}),\n  className: PropTypes.string\n};\nInputPassField.defaultProps = {\n  label: '',\n  placeholder: '',\n  disabled: false,\n  handleChange: null,\n  style: {},\n  className: ''\n};\nexport default InputPassField;","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/FormControl/InputPassField/index.tsx"],"names":["Form","Input","React","Controller","PropTypes","EyeInvisibleOutlined","EyeTwoTone","InputPassField","props","form","name","label","placeholder","disabled","handleChange","style","className","errors","formState","hasError","checkHandleChange","value","control","field","e","target","onChange","visible","message","propTypes","object","isRequired","string","bool","func","shape","defaultProps"],"mappings":"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","sourcesContent":["import { Form, Input } from 'antd'\r\nimport React from 'react'\r\nimport { Controller } from 'react-hook-form'\r\nimport PropTypes from 'prop-types'\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons'\r\n\r\nconst InputPassField = (props) => {\r\n\tconst { form, name, label, placeholder, disabled, handleChange, style, className } = props\r\n\r\n\tconst { errors } = form.formState\r\n\tconst hasError = errors[name]\r\n\r\n\tconst checkHandleChange = (value) => {\r\n\t\tif (!handleChange) return\r\n\t\thandleChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form.Item style={style} label={label} className={`${className} ${hasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''}`}>\r\n\t\t\t<Controller\r\n\t\t\t\tname={name}\r\n\t\t\t\tcontrol={form.control}\r\n\t\t\t\trender={({ field }) => (\r\n\t\t\t\t\t<Input.Password\r\n\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\t\tallowClear={true}\r\n\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\t// disabled={disabled}\r\n\t\t\t\t\t\tonChange={(e) => (disabled ? null : (checkHandleChange(e.target.value), field.onChange(e.target.value)))}\r\n\t\t\t\t\t\ticonRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t\t{hasError && (\r\n\t\t\t\t<div className=\"ant-form-item-explain ant-form-item-explain-error font-color-error\">\r\n\t\t\t\t\t<div role=\"alert\">{errors[name]?.message}</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Form.Item>\r\n\t)\r\n}\r\nInputPassField.propTypes = {\r\n\tform: PropTypes.object.isRequired,\r\n\tname: PropTypes.string.isRequired,\r\n\tlabel: PropTypes.string,\r\n\tplaceholder: PropTypes.string,\r\n\tdisabled: PropTypes.bool,\r\n\thandleChange: PropTypes.func,\r\n\tstyle: PropTypes.shape({}),\r\n\tclassName: PropTypes.string\r\n}\r\nInputPassField.defaultProps = {\r\n\tlabel: '',\r\n\tplaceholder: '',\r\n\tdisabled: false,\r\n\thandleChange: null,\r\n\tstyle: {},\r\n\tclassName: ''\r\n}\r\nexport default InputPassField\r\n"]},"metadata":{},"sourceType":"module"}
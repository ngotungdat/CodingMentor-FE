{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\CourseList\\\\CourseListDetail\\\\NotificationCourse\\\\NotificationCourse.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { notificationCourseApi } from '~/apiBase/course-detail/notification-course';\nimport PowerTable from '~/components/PowerTable';\nimport { useWrap } from '~/context/wrap';\nimport NotificationCourseForm from './NotificationCourseForm';\nNotificationCourse.propTypes = {\n  courseID: PropTypes.number\n};\nNotificationCourse.defaultProps = {\n  courseID: 0\n};\n\nfunction NotificationCourse(props) {\n  _s();\n\n  var _this = this;\n\n  var courseID = props.courseID;\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var _useState = useState(),\n      notificationList = _useState[0],\n      setNotificationList = _useState[1];\n\n  var _useState2 = useState({\n    type: 'GET_ALL',\n    status: false\n  }),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      totalPage = _useState3[0],\n      setTotalPage = _useState3[1];\n\n  var listFieldInit = {\n    pageSize: 10,\n    pageIndex: 1,\n    CourseID: courseID\n  };\n\n  var _useState4 = useState(listFieldInit),\n      filters = _useState4[0],\n      setFilters = _useState4[1]; // PAGINATION\n\n\n  var getPagination = function getPagination(pageIndex) {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      pageIndex: pageIndex\n    }));\n  };\n\n  var getDataNotificationCourse = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context.next = 4;\n              return notificationCourseApi.getAll(filters);\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                setNotificationList(res.data.data);\n                setTotalPage(res.data['TotalRow']);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              showNoti('danger', _context.t0.message);\n\n            case 11:\n              _context.prev = 11;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8, 11, 14]]);\n    }));\n\n    return function getDataNotificationCourse() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getDataNotificationCourse();\n  }, [filters]);\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n      var newData, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setIsLoading({\n                type: 'ADD_NOTI',\n                status: true\n              });\n              newData = _objectSpread(_objectSpread({}, data), {}, {\n                CourseID: courseID\n              });\n              _context2.next = 5;\n              return notificationCourseApi.add(newData);\n\n            case 5:\n              res = _context2.sent;\n\n              if (!(res.status === 200)) {\n                _context2.next = 10;\n                break;\n              }\n\n              showNoti('success', res.data.message);\n              setFilters(_objectSpread({}, listFieldInit));\n              return _context2.abrupt(\"return\", true);\n\n            case 10:\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              showNoti('danger', _context2.t0.message);\n\n            case 15:\n              _context2.prev = 15;\n              setIsLoading({\n                type: 'ADD_NOTI',\n                status: false\n              });\n              return _context2.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 12, 15, 18]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var columns = [{\n    title: 'Thông báo qua email',\n    dataIndex: 'NotificationTitle',\n    render: function render(text) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-primary\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 22\n      }, _this);\n    }\n  }, {\n    title: 'Nội dung',\n    dataIndex: 'NotificationContent'\n  }, {\n    title: 'Người tạo',\n    dataIndex: 'CreatedBy'\n  }, {\n    title: 'Ngày tạo',\n    dataIndex: 'CreatedOn',\n    render: function render(CreatedOn) {\n      return moment(CreatedOn).format('DD/MM/YYYY');\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(PowerTable, {\n    currentPage: filters.pageIndex,\n    totalPage: totalPage,\n    getPagination: getPagination,\n    loading: isLoading,\n    addClass: \"basic-header\",\n    TitleCard: /*#__PURE__*/_jsxDEV(NotificationCourseForm, {\n      isLoading: isLoading,\n      handleSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }, this),\n    dataSource: notificationList,\n    columns: columns,\n    Extra: \"Th\\xF4ng b\\xE1o kh\\xF3a h\\u1ECDc\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 3\n  }, this);\n}\n\n_s(NotificationCourse, \"yvu+aiKGqKv4HbSWXp1X77enTnI=\", false, function () {\n  return [useWrap];\n});\n\n_c = NotificationCourse;\nexport default NotificationCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationCourse\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/CourseList/CourseListDetail/NotificationCourse/NotificationCourse.tsx"],"names":["moment","PropTypes","React","useEffect","useState","notificationCourseApi","PowerTable","useWrap","NotificationCourseForm","NotificationCourse","propTypes","courseID","number","defaultProps","props","showNoti","notificationList","setNotificationList","type","status","isLoading","setIsLoading","totalPage","setTotalPage","listFieldInit","pageSize","pageIndex","CourseID","filters","setFilters","getPagination","getDataNotificationCourse","getAll","res","data","message","onSubmit","newData","add","columns","title","dataIndex","render","text","CreatedOn","format"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { notificationCourseApi } from '~/apiBase/course-detail/notification-course';\r\nimport PowerTable from '~/components/PowerTable';\r\nimport { useWrap } from '~/context/wrap';\r\nimport NotificationCourseForm from './NotificationCourseForm';\r\n\r\nNotificationCourse.propTypes = {\r\n\tcourseID: PropTypes.number\r\n};\r\nNotificationCourse.defaultProps = {\r\n\tcourseID: 0\r\n};\r\nfunction NotificationCourse(props) {\r\n\tconst { courseID } = props;\r\n\tconst { showNoti } = useWrap();\r\n\tconst [notificationList, setNotificationList] = useState<INotificationCourse[]>();\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: 'GET_ALL',\r\n\t\tstatus: false\r\n\t});\r\n\tconst [totalPage, setTotalPage] = useState(null);\r\n\tconst listFieldInit = {\r\n\t\tpageSize: 10,\r\n\t\tpageIndex: 1,\r\n\t\tCourseID: courseID\r\n\t};\r\n\tconst [filters, setFilters] = useState(listFieldInit);\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number) => {\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\tpageIndex\r\n\t\t});\r\n\t};\r\n\r\n\tconst getDataNotificationCourse = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\tconst res = await notificationCourseApi.getAll(filters);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetNotificationList(res.data.data);\r\n\t\t\t\tsetTotalPage(res.data['TotalRow']);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataNotificationCourse();\r\n\t}, [filters]);\r\n\r\n\tconst onSubmit = async (data: { NotificationTitle: string; NotificationContent: string }) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_NOTI',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\tconst newData = {\r\n\t\t\t\t...data,\r\n\t\t\t\tCourseID: courseID\r\n\t\t\t};\r\n\t\t\tconst res = await notificationCourseApi.add(newData);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tshowNoti('success', res.data.message);\r\n\t\t\t\tsetFilters({\r\n\t\t\t\t\t...listFieldInit\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_NOTI',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Thông báo qua email',\r\n\t\t\tdataIndex: 'NotificationTitle',\r\n\t\t\trender: (text) => <p className=\"font-weight-primary\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Nội dung',\r\n\t\t\tdataIndex: 'NotificationContent'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Người tạo',\r\n\t\t\tdataIndex: 'CreatedBy'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày tạo',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\trender: (CreatedOn) => moment(CreatedOn).format('DD/MM/YYYY')\r\n\t\t}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<PowerTable\r\n\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\ttotalPage={totalPage}\r\n\t\t\tgetPagination={getPagination}\r\n\t\t\tloading={isLoading}\r\n\t\t\taddClass=\"basic-header\"\r\n\t\t\tTitleCard={<NotificationCourseForm isLoading={isLoading} handleSubmit={onSubmit} />}\r\n\t\t\tdataSource={notificationList}\r\n\t\t\tcolumns={columns}\r\n\t\t\tExtra=\"Thông báo khóa học\"\r\n\t\t/>\r\n\t);\r\n}\r\nexport default NotificationCourse;\r\n"]},"metadata":{},"sourceType":"module"}
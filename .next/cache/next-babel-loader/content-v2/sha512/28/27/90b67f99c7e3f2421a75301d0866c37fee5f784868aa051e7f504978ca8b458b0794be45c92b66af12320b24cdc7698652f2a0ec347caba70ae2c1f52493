{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\QuestionBank\\\\QuestionShow\\\\QuestionWritting.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Popconfirm, Tooltip, Checkbox } from 'antd';\nimport { Trash2 } from 'react-feather';\nimport CreateQuestionForm from '~/components/Global/QuestionBank/CreateQuestionForm';\nimport ReactHtmlParser from 'react-html-parser';\nimport { exerciseApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]';\nimport { CheckOutlined } from '@ant-design/icons';\n\nvar QuestionWritting = function QuestionWritting(props) {\n  _s();\n\n  var _useExamDetail = useExamDetail(),\n      onGetListQuestionID = _useExamDetail.onGetListQuestionID,\n      listQuestionID = _useExamDetail.listQuestionID,\n      onRemoveQuestionAdd = _useExamDetail.onRemoveQuestionAdd,\n      listQuestionAddOutside = _useExamDetail.listQuestionAddOutside;\n\n  var listQuestion = props.listQuestion,\n      onFetchData = props.onFetchData,\n      onRemoveData = props.onRemoveData,\n      isGroup = props.isGroup,\n      onEditData = props.onEditData,\n      dataExam = props.dataExam;\n\n  var _useState = useState(null),\n      dataListQuestion = _useState[0],\n      setDataListQuestion = _useState[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      userInformation = _useWrap.userInformation;\n\n  var _useState2 = useState({\n    id: null,\n    status: false\n  }),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      confirmLoading = _useState3[0],\n      setConfirmLoading = _useState3[1];\n\n  var _useState4 = useState(null),\n      loadingAudio = _useState4[0],\n      setLoadingAudio = _useState4[1];\n\n  var _useState5 = useState(null),\n      activeID = _useState5[0],\n      setActiveID = _useState5[1];\n\n  var _useState6 = useState(0),\n      lengthData = _useState6[0],\n      setLengthData = _useState6[1]; // ON EDIT\n\n\n  var onEdit = function onEdit(dataEdit) {\n    if (!isGroup.status) {\n      onEditData(dataEdit);\n    } else {\n      var index = dataListQuestion.findIndex(function (item) {\n        return item.ID == dataEdit.ID;\n      });\n      dataListQuestion.splice(index, 1, dataEdit);\n      setDataListQuestion(_toConsumableArray(dataListQuestion));\n    }\n  };\n\n  var deleteQuestionItem = function deleteQuestionItem(quesID) {\n    !visible.status ? setVisible({\n      id: quesID,\n      status: true\n    }) : setVisible({\n      id: quesID,\n      status: false\n    });\n  }; // Chấp nhận xóa câu hỏi\n\n\n  var handleOk = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(quesItem) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setConfirmLoading(true);\n              quesItem.Enable = false;\n              _context.prev = 2;\n              _context.next = 5;\n              return exerciseApi.update(quesItem);\n\n            case 5:\n              res = _context.sent;\n\n              if (res.status == 200) {\n                setVisible(_objectSpread(_objectSpread({}, visible), {}, {\n                  status: false\n                }));\n                onRemoveData(quesItem);\n                showNoti('success', 'Xóa thành công');\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              showNoti('danger', _context.t0.message);\n\n            case 12:\n              _context.prev = 12;\n              setConfirmLoading(false);\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9, 12, 15]]);\n    }));\n\n    return function handleOk(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleCancel = function handleCancel(quesID) {\n    setVisible({\n      id: quesID,\n      status: false\n    });\n  };\n\n  var onHover = function onHover(ID) {\n    setActiveID(ID);\n  };\n\n  var returnAudio = function returnAudio(item) {\n    var audioHTML = function audioHTML(item) {\n      return /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: item.LinkAudio,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, _this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !activeID ? item.LinkAudio !== '' && audioHTML(item) : item.ID == activeID ? !loadingAudio ? item.LinkAudio !== '' && audioHTML(item) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : item.LinkAudio !== '' && audioHTML(item)\n    }, void 0, false);\n  };\n\n  useEffect(function () {\n    // Check active item when add new data\n    if ((dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.length) > 0) {\n      if (listQuestion.length > lengthData) {\n        setActiveID(listQuestion[0].ID);\n      }\n    }\n\n    setLengthData(listQuestion.length); // Loading audio for change html audio (because the link not change when update state)\n\n    setLoadingAudio(true);\n    setTimeout(function () {\n      setLoadingAudio(false);\n    }, 100);\n    setDataListQuestion(listQuestion);\n  }, [listQuestion]); // On change - add question\n\n  var onChange_AddQuestion = function onChange_AddQuestion(checked, quesID) {\n    var objectQuestion = {\n      type: 1,\n      ExerciseOrExerciseGroupID: quesID\n    }; // Call function to get ID of question\n\n    if (checked) {\n      onGetListQuestionID(objectQuestion);\n    } else {\n      onRemoveQuestionAdd(objectQuestion);\n    }\n  };\n\n  useEffect(function () {\n    if ((dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.length) > 0) {\n      if ((listQuestionAddOutside === null || listQuestionAddOutside === void 0 ? void 0 : listQuestionAddOutside.length) > 0) {\n        dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.forEach(function (item) {\n          if (listQuestionAddOutside.some(function (object) {\n            return object['ExerciseOrExerciseGroupID'] == item.ID;\n          })) {\n            item.isChecked = true;\n          } else {\n            item.isChecked = false;\n          }\n        });\n      } else {\n        dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.forEach(function (item) {\n          item.isChecked = false;\n        });\n      }\n\n      setDataListQuestion(_toConsumableArray(dataListQuestion));\n    }\n  }, [listQuestionAddOutside]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.length) == 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Danh s\\xE1ch c\\xF2n tr\\u1ED1ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }, _this) : dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.map(function (item, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-item \".concat(item.ID == activeID ? 'active' : ''),\n        onMouseEnter: function onMouseEnter() {\n          return onHover(item.ID);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-detail\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title-ques\",\n              children: [\"C\\xE2u h\\u1ECFi \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 9\n            }, _this), item.LinkAudio && returnAudio(item), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title-text\",\n              children: ReactHtmlParser(item.Content)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 9\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }, _this), (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) !== 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-action\",\n          children: [/*#__PURE__*/_jsxDEV(CreateQuestionForm, {\n            questionData: item,\n            onFetchData: onFetchData,\n            onEditData: function onEditData(dataEdit) {\n              return onEdit(dataEdit);\n            },\n            isGroup: {\n              status: false,\n              id: null\n            },\n            getActiveID: function getActiveID(ID) {\n              return setActiveID(ID);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n            title: \"B\\u1EA1n c\\xF3 ch\\u1EAFc mu\\u1ED1n x\\xF3a?\",\n            onConfirm: function onConfirm() {\n              return handleOk(item);\n            },\n            okButtonProps: {\n              loading: confirmLoading\n            },\n            onCancel: function onCancel() {\n              return handleCancel(item.ID);\n            },\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"X\\xF3a c\\xE2u h\\u1ECFi\",\n              placement: \"rightTop\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-icon delete\",\n                onClick: function onClick() {\n                  return deleteQuestionItem(item.ID);\n                },\n                children: /*#__PURE__*/_jsxDEV(Trash2, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 12\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 11\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 10\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 9\n          }, _this), dataExam && (listQuestionID.includes(item.ID) ? /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"\\u0110\\xE3 c\\xF3 trong \\u0111\\u1EC1 thi\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-icon edit\",\n              children: /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 13\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 12\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 11\n          }, _this) : /*#__PURE__*/_jsxDEV(Checkbox, {\n            className: \"checkbox-addquestion\",\n            checked: item.isChecked,\n            onChange: function onChange(e) {\n              return onChange_AddQuestion(e.target.checked, item.ID);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, _this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 8\n        }, _this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 6\n      }, _this);\n    })\n  }, void 0, false);\n};\n\n_s(QuestionWritting, \"C2ScMvNQlsj4nxW1tbts62ew2aw=\", false, function () {\n  return [useExamDetail, useWrap];\n});\n\n_c = QuestionWritting;\nexport default QuestionWritting;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionWritting\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/QuestionBank/QuestionShow/QuestionWritting.tsx"],"names":["React","useEffect","useState","Popconfirm","Tooltip","Checkbox","Trash2","CreateQuestionForm","ReactHtmlParser","exerciseApi","useWrap","useExamDetail","CheckOutlined","QuestionWritting","props","onGetListQuestionID","listQuestionID","onRemoveQuestionAdd","listQuestionAddOutside","listQuestion","onFetchData","onRemoveData","isGroup","onEditData","dataExam","dataListQuestion","setDataListQuestion","showNoti","userInformation","id","status","visible","setVisible","confirmLoading","setConfirmLoading","loadingAudio","setLoadingAudio","activeID","setActiveID","lengthData","setLengthData","onEdit","dataEdit","index","findIndex","item","ID","splice","deleteQuestionItem","quesID","handleOk","quesItem","Enable","update","res","message","handleCancel","onHover","returnAudio","audioHTML","LinkAudio","length","setTimeout","onChange_AddQuestion","checked","objectQuestion","type","ExerciseOrExerciseGroupID","forEach","some","object","isChecked","map","Content","RoleID","loading","includes","e","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Popconfirm, Tooltip, Checkbox } from 'antd'\r\nimport { Trash2 } from 'react-feather'\r\nimport CreateQuestionForm from '~/components/Global/QuestionBank/CreateQuestionForm'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { exerciseApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]'\r\nimport { CheckOutlined } from '@ant-design/icons'\r\nimport _ from '~/appConfig'\r\n\r\nconst QuestionWritting = (props: any) => {\r\n\tconst { onGetListQuestionID, listQuestionID, onRemoveQuestionAdd, listQuestionAddOutside } = useExamDetail()\r\n\tconst { listQuestion, onFetchData, onRemoveData, isGroup, onEditData, dataExam } = props\r\n\tconst [dataListQuestion, setDataListQuestion] = useState(null)\r\n\tconst { showNoti, userInformation } = useWrap()\r\n\tconst [visible, setVisible] = useState({\r\n\t\tid: null,\r\n\t\tstatus: false\r\n\t})\r\n\tconst [confirmLoading, setConfirmLoading] = useState(false)\r\n\tconst [loadingAudio, setLoadingAudio] = useState(null)\r\n\tconst [activeID, setActiveID] = useState(null)\r\n\tconst [lengthData, setLengthData] = useState(0)\r\n\r\n\t// ON EDIT\r\n\tconst onEdit = (dataEdit) => {\r\n\t\tif (!isGroup.status) {\r\n\t\t\tonEditData(dataEdit)\r\n\t\t} else {\r\n\t\t\tlet index = dataListQuestion.findIndex((item) => item.ID == dataEdit.ID)\r\n\t\t\tdataListQuestion.splice(index, 1, dataEdit)\r\n\t\t\tsetDataListQuestion([...dataListQuestion])\r\n\t\t}\r\n\t}\r\n\r\n\tconst deleteQuestionItem = (quesID) => {\r\n\t\t!visible.status\r\n\t\t\t? setVisible({\r\n\t\t\t\t\tid: quesID,\r\n\t\t\t\t\tstatus: true\r\n\t\t\t  })\r\n\t\t\t: setVisible({\r\n\t\t\t\t\tid: quesID,\r\n\t\t\t\t\tstatus: false\r\n\t\t\t  })\r\n\t}\r\n\r\n\t// Chấp nhận xóa câu hỏi\r\n\tconst handleOk = async (quesItem) => {\r\n\t\tsetConfirmLoading(true)\r\n\t\tquesItem.Enable = false\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseApi.update(quesItem)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetVisible({\r\n\t\t\t\t\t...visible,\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t\tonRemoveData(quesItem)\r\n\t\t\t\tshowNoti('success', 'Xóa thành công')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetConfirmLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleCancel = (quesID) => {\r\n\t\tsetVisible({\r\n\t\t\tid: quesID,\r\n\t\t\tstatus: false\r\n\t\t})\r\n\t}\r\n\r\n\tconst onHover = (ID: number) => {\r\n\t\tsetActiveID(ID)\r\n\t}\r\n\r\n\tconst returnAudio = (item) => {\r\n\t\tconst audioHTML = (item) => {\r\n\t\t\treturn (\r\n\t\t\t\t<audio controls>\r\n\t\t\t\t\t<source src={item.LinkAudio} type=\"audio/mpeg\" />\r\n\t\t\t\t</audio>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{!activeID ? (\r\n\t\t\t\t\titem.LinkAudio !== '' && audioHTML(item)\r\n\t\t\t\t) : item.ID == activeID ? (\r\n\t\t\t\t\t!loadingAudio ? (\r\n\t\t\t\t\t\titem.LinkAudio !== '' && audioHTML(item)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<></>\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\titem.LinkAudio !== '' && audioHTML(item)\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t// Check active item when add new data\r\n\t\tif (dataListQuestion?.length > 0) {\r\n\t\t\tif (listQuestion.length > lengthData) {\r\n\t\t\t\tsetActiveID(listQuestion[0].ID)\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetLengthData(listQuestion.length)\r\n\t\t// Loading audio for change html audio (because the link not change when update state)\r\n\t\tsetLoadingAudio(true)\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLoadingAudio(false)\r\n\t\t}, 100)\r\n\t\tsetDataListQuestion(listQuestion)\r\n\t}, [listQuestion])\r\n\r\n\t// On change - add question\r\n\tconst onChange_AddQuestion = (checked, quesID) => {\r\n\t\tlet objectQuestion = {\r\n\t\t\ttype: 1,\r\n\t\t\tExerciseOrExerciseGroupID: quesID\r\n\t\t}\r\n\r\n\t\t// Call function to get ID of question\r\n\t\tif (checked) {\r\n\t\t\tonGetListQuestionID(objectQuestion)\r\n\t\t} else {\r\n\t\t\tonRemoveQuestionAdd(objectQuestion)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dataListQuestion?.length > 0) {\r\n\t\t\tif (listQuestionAddOutside?.length > 0) {\r\n\t\t\t\tdataListQuestion?.forEach((item) => {\r\n\t\t\t\t\tif (listQuestionAddOutside.some((object) => object['ExerciseOrExerciseGroupID'] == item.ID)) {\r\n\t\t\t\t\t\titem.isChecked = true\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\titem.isChecked = false\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tdataListQuestion?.forEach((item) => {\r\n\t\t\t\t\titem.isChecked = false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tsetDataListQuestion([...dataListQuestion])\r\n\t\t}\r\n\t}, [listQuestionAddOutside])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{dataListQuestion?.length == 0 ? (\r\n\t\t\t\t<p className=\"text-center\">\r\n\t\t\t\t\t<b>Danh sách còn trống</b>\r\n\t\t\t\t</p>\r\n\t\t\t) : (\r\n\t\t\t\tdataListQuestion?.map((item, index) => (\r\n\t\t\t\t\t<div className={`question-item ${item.ID == activeID ? 'active' : ''}`} key={index} onMouseEnter={() => onHover(item.ID)}>\r\n\t\t\t\t\t\t<div className=\"box-detail\">\r\n\t\t\t\t\t\t\t<div className=\"box-title\">\r\n\t\t\t\t\t\t\t\t<span className=\"title-ques\">Câu hỏi {index + 1}</span>\r\n\t\t\t\t\t\t\t\t{item.LinkAudio && returnAudio(item)}\r\n\t\t\t\t\t\t\t\t<div className=\"title-text\">{ReactHtmlParser(item.Content)}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{userInformation?.RoleID !== 2 && (\r\n\t\t\t\t\t\t\t<div className=\"box-action\">\r\n\t\t\t\t\t\t\t\t<CreateQuestionForm\r\n\t\t\t\t\t\t\t\t\tquestionData={item}\r\n\t\t\t\t\t\t\t\t\tonFetchData={onFetchData}\r\n\t\t\t\t\t\t\t\t\tonEditData={(dataEdit) => onEdit(dataEdit)}\r\n\t\t\t\t\t\t\t\t\tisGroup={{ status: false, id: null }}\r\n\t\t\t\t\t\t\t\t\tgetActiveID={(ID: any) => setActiveID(ID)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\t\ttitle=\"Bạn có chắc muốn xóa?\"\r\n\t\t\t\t\t\t\t\t\tonConfirm={() => handleOk(item)}\r\n\t\t\t\t\t\t\t\t\tokButtonProps={{ loading: confirmLoading }}\r\n\t\t\t\t\t\t\t\t\tonCancel={() => handleCancel(item.ID)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip title=\"Xóa câu hỏi\" placement=\"rightTop\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-icon delete\" onClick={() => deleteQuestionItem(item.ID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Trash2 />\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t\t\t{dataExam &&\r\n\t\t\t\t\t\t\t\t\t(listQuestionID.includes(item.ID) ? (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Đã có trong đề thi\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-icon edit\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"checkbox-addquestion\"\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={item.isChecked}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => onChange_AddQuestion(e.target.checked, item.ID)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default QuestionWritting\r\n"]},"metadata":{},"sourceType":"module"}
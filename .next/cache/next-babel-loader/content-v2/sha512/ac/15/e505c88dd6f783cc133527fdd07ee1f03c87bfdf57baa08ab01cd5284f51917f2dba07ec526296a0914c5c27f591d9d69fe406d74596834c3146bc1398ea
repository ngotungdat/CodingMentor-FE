{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\QuestionBank\\\\QuestionFormType\\\\MapForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useWrap } from '~/context/wrap';\nimport { Form, Input, Checkbox, Tooltip } from 'antd';\nimport { exerciseApi } from '~/apiBase/';\nimport EditorSimple from '~/components/Elements/EditorSimple';\nimport UploadAudio from '~/components/Elements/UploadAudio';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Plus } from 'react-feather';\nvar AnsID = 0;\n\nvar MapForm = function MapForm(props) {\n  _s();\n\n  var isSubmit = props.isSubmit,\n      questionData = props.questionData,\n      changeIsSubmit = props.changeIsSubmit,\n      visible = props.visible,\n      isGroup = props.isGroup,\n      changeData = props.changeData;\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var _useForm = useForm(),\n      _useForm$formState = _useForm.formState,\n      isSubmitting = _useForm$formState.isSubmitting,\n      errors = _useForm$formState.errors,\n      isSubmitted = _useForm$formState.isSubmitted;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState(null),\n      questionDataForm = _useState[0],\n      setQuestionDataForm = _useState[1];\n\n  var _useState2 = useState(false),\n      isResetEditor = _useState2[0],\n      setIsResetEditor = _useState2[1];\n\n  var _useState3 = useState(true),\n      loadAtFirst = _useState3[0],\n      setLoadAtFirst = _useState3[1]; // GET VALUE IN EDITOR\n\n\n  var getDataEditor = function getDataEditor(dataEditor) {\n    if (questionDataForm) {\n      questionDataForm.Content = dataEditor;\n    }\n\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  };\n\n  var getDescribeAnswer = function getDescribeAnswer(dataEditor) {\n    if (questionDataForm) {\n      questionDataForm.DescribeAnswer = dataEditor;\n    }\n\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // Reset value in form\n\n\n  var resetForm = function resetForm() {\n    questionDataForm.Content = '';\n    questionDataForm.ExerciseAnswer.forEach(function (item) {\n      item.AnswerContent = '';\n      item.isTrue = false;\n    });\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // ON CHANGE IS CORRECT\n\n\n  var onChange_isCorrect = function onChange_isCorrect(e, AnswerID) {\n    e.preventDefault();\n    var checked = e.target.checked; // Xóa các isTrue còn lại\n\n    questionDataForm.ExerciseAnswer.forEach(function (item) {\n      item.isTrue = false;\n    }); // Tìm vị trí sau đó gán correct vào\n\n    var AnswerIndex = questionDataForm.ExerciseAnswer.findIndex(function (item) {\n      return item.ID == AnswerID;\n    });\n    questionDataForm.ExerciseAnswer[AnswerIndex].isTrue = checked;\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // ON CHANGE TEXT\n\n\n  var onChange_text = function onChange_text(e, AnswerID) {\n    var text = e.target.value;\n    var AnswerIndex = questionDataForm.ExerciseAnswer.findIndex(function (item) {\n      return item.ID == AnswerID;\n    });\n    questionDataForm.ExerciseAnswer[AnswerIndex].AnswerContent = text;\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // ON ADD QUESTION\n\n\n  var handleAddAnswer = function handleAddAnswer() {\n    AnsID++;\n    questionDataForm.ExerciseAnswer.push({\n      ID: AnsID,\n      AnswerContent: '',\n      isTrue: false,\n      Enable: true,\n      isAdd: true\n    });\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // ON DELETE ITEM\n\n\n  var deleteAnswerItem = function deleteAnswerItem(AnswerID) {\n    var AnswerIndex = questionDataForm.ExerciseAnswer.findIndex(function (item) {\n      return item.ID == AnswerID;\n    });\n\n    if (questionDataForm.ExerciseAnswer[AnswerIndex].isAdd) {\n      questionDataForm.ExerciseAnswer.splice(AnswerIndex, 1);\n    } else {\n      questionDataForm.ExerciseAnswer[AnswerIndex].Enable = false;\n    }\n\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // SUBMIT FORM\n\n\n  var handleSubmitQuestion = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('Question SUBMIT in form: ', questionDataForm);\n              res = null;\n              _context.prev = 2;\n\n              if (!questionDataForm.ID) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 6;\n              return exerciseApi.update(questionDataForm);\n\n            case 6:\n              res = _context.sent;\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.next = 11;\n              return exerciseApi.add(questionDataForm);\n\n            case 11:\n              res = _context.sent;\n\n            case 12:\n              if (res.status == 200) {\n                changeIsSubmit(questionDataForm.ID ? questionDataForm : res.data.data);\n                showNoti('success', \"\".concat(questionDataForm.ID ? 'Cập nhật' : 'Thêm', \" Th\\xE0nh c\\xF4ng\"));\n\n                if (!questionDataForm.ID) {\n                  resetForm();\n                }\n\n                setIsResetEditor(true);\n                setTimeout(function () {\n                  setIsResetEditor(false);\n                }, 500);\n              }\n\n              _context.next = 17;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](2);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 15]]);\n    }));\n\n    return function handleSubmitQuestion() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    isSubmit && handleSubmitQuestion();\n  }, [isSubmit]);\n  useEffect(function () {\n    if (visible) {\n      if (!questionData.ID) {\n        questionData.Content = '';\n        questionData.ExerciseAnswer.forEach(function (item) {\n          item.AnswerContent = '';\n        });\n      }\n\n      setQuestionDataForm(questionData);\n    } else {\n      setQuestionDataForm(null);\n      setLoadAtFirst(true);\n    }\n  }, [visible]);\n  useEffect(function () {\n    if (questionDataForm) {\n      if (!loadAtFirst) {\n        changeData && changeData();\n      }\n\n      setLoadAtFirst(false);\n    }\n  }, [questionDataForm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-create-question\",\n    children: visible && questionDataForm && /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      layout: \"vertical\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"Question\",\n              label: \"C\\xE2u h\\u1ECFi\",\n              children: /*#__PURE__*/_jsxDEV(EditorSimple, {\n                isTranslate: true,\n                visible: visible,\n                handleChange: function handleChange(value) {\n                  return getDataEditor(value);\n                },\n                isReset: isResetEditor,\n                questionContent: questionDataForm === null || questionDataForm === void 0 ? void 0 : questionDataForm.Content,\n                questionData: questionData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 9\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 8\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"File nghe\",\n              children: /*#__PURE__*/_jsxDEV(UploadAudio, {\n                getFile: function getFile(file) {\n                  questionDataForm.LinkAudio = file;\n                  setQuestionDataForm(_objectSpread({}, questionDataForm));\n                },\n                valueFile: questionDataForm === null || questionDataForm === void 0 ? void 0 : questionDataForm.LinkAudio\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 9\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 8\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"style-label\",\n              children: \"\\u0110\\xE1p \\xE1n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Th\\xEAm \\u0111\\xE1p \\xE1n\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-add-answer\",\n                onClick: handleAddAnswer,\n                children: /*#__PURE__*/_jsxDEV(Plus, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 11\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 9\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 8\n          }, _this), questionDataForm === null || questionDataForm === void 0 ? void 0 : questionDataForm.ExerciseAnswer.map(function (item, index) {\n            return item.Enable && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row-ans\",\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: item.isTrue,\n                  onChange: function onChange(e) {\n                    return onChange_isCorrect(e, item.ID);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 13\n                }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    placeholder: \"Nh\\u1EADp \\u0111\\xE1p \\xE1n \",\n                    value: item.AnswerContent,\n                    className: \"style-input\",\n                    onChange: function onChange(e) {\n                      return onChange_text(e, item.ID);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 14\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 13\n                }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-ans\",\n                  onClick: function onClick() {\n                    return deleteAnswerItem(item.ID);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 14\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 13\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 12\n              }, _this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 11\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 7\n        }, _this), !(isGroup !== null && isGroup !== void 0 && isGroup.status) && /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Gi\\u1EA3i th\\xEDch \\u0111\\xE1p \\xE1n\",\n          name: \"DescribeAnswer\",\n          children: /*#__PURE__*/_jsxDEV(EditorSimple, {\n            handleChange: function handleChange(value) {\n              return getDescribeAnswer(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 9\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 8\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(MapForm, \"CmGQjEvxWtlLEx+csD8cwxiycwo=\", false, function () {\n  return [useWrap, useForm, Form.useForm];\n});\n\n_c = MapForm;\nexport default MapForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapForm\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/QuestionBank/QuestionFormType/MapForm.tsx"],"names":["React","useEffect","useState","useForm","useWrap","Form","Input","Checkbox","Tooltip","exerciseApi","EditorSimple","UploadAudio","CloseOutlined","Plus","AnsID","MapForm","props","isSubmit","questionData","changeIsSubmit","visible","isGroup","changeData","showNoti","formState","isSubmitting","errors","isSubmitted","form","questionDataForm","setQuestionDataForm","isResetEditor","setIsResetEditor","loadAtFirst","setLoadAtFirst","getDataEditor","dataEditor","Content","getDescribeAnswer","DescribeAnswer","resetForm","ExerciseAnswer","forEach","item","AnswerContent","isTrue","onChange_isCorrect","e","AnswerID","preventDefault","checked","target","AnswerIndex","findIndex","ID","onChange_text","text","value","handleAddAnswer","push","Enable","isAdd","deleteAnswerItem","splice","handleSubmitQuestion","console","log","res","update","add","status","data","setTimeout","file","LinkAudio","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { Form, Input, Checkbox, Tooltip } from 'antd'\r\nimport { exerciseApi } from '~/apiBase/'\r\nimport EditorSimple from '~/components/Elements/EditorSimple'\r\nimport UploadAudio from '~/components/Elements/UploadAudio'\r\nimport { CloseOutlined } from '@ant-design/icons'\r\nimport { Plus } from 'react-feather'\r\n\r\nlet AnsID = 0\r\n\r\nconst MapForm = (props) => {\r\n\tconst { isSubmit, questionData, changeIsSubmit, visible, isGroup, changeData } = props\r\n\tconst { showNoti } = useWrap()\r\n\tconst {\r\n\t\tformState: { isSubmitting, errors, isSubmitted }\r\n\t} = useForm()\r\n\tconst [form] = Form.useForm()\r\n\tconst [questionDataForm, setQuestionDataForm] = useState(null)\r\n\tconst [isResetEditor, setIsResetEditor] = useState(false)\r\n\tconst [loadAtFirst, setLoadAtFirst] = useState(true)\r\n\r\n\t// GET VALUE IN EDITOR\r\n\tconst getDataEditor = (dataEditor) => {\r\n\t\tif (questionDataForm) {\r\n\t\t\tquestionDataForm.Content = dataEditor\r\n\t\t}\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\tconst getDescribeAnswer = (dataEditor) => {\r\n\t\tif (questionDataForm) {\r\n\t\t\tquestionDataForm.DescribeAnswer = dataEditor\r\n\t\t}\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// Reset value in form\r\n\tconst resetForm = () => {\r\n\t\tquestionDataForm.Content = ''\r\n\t\tquestionDataForm.ExerciseAnswer.forEach((item) => {\r\n\t\t\titem.AnswerContent = ''\r\n\t\t\titem.isTrue = false\r\n\t\t})\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// ON CHANGE IS CORRECT\r\n\tconst onChange_isCorrect = (e, AnswerID) => {\r\n\t\te.preventDefault()\r\n\t\tlet checked = e.target.checked\r\n\r\n\t\t// Xóa các isTrue còn lại\r\n\t\tquestionDataForm.ExerciseAnswer.forEach((item) => {\r\n\t\t\titem.isTrue = false\r\n\t\t})\r\n\r\n\t\t// Tìm vị trí sau đó gán correct vào\r\n\t\tlet AnswerIndex = questionDataForm.ExerciseAnswer.findIndex((item) => item.ID == AnswerID)\r\n\t\tquestionDataForm.ExerciseAnswer[AnswerIndex].isTrue = checked\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// ON CHANGE TEXT\r\n\tconst onChange_text = (e, AnswerID) => {\r\n\t\tlet text = e.target.value\r\n\t\tlet AnswerIndex = questionDataForm.ExerciseAnswer.findIndex((item) => item.ID == AnswerID)\r\n\t\tquestionDataForm.ExerciseAnswer[AnswerIndex].AnswerContent = text\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// ON ADD QUESTION\r\n\tconst handleAddAnswer = () => {\r\n\t\tAnsID++\r\n\t\tquestionDataForm.ExerciseAnswer.push({\r\n\t\t\tID: AnsID,\r\n\t\t\tAnswerContent: '',\r\n\t\t\tisTrue: false,\r\n\t\t\tEnable: true,\r\n\t\t\tisAdd: true\r\n\t\t})\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// ON DELETE ITEM\r\n\tconst deleteAnswerItem = (AnswerID) => {\r\n\t\tlet AnswerIndex = questionDataForm.ExerciseAnswer.findIndex((item) => item.ID == AnswerID)\r\n\r\n\t\tif (questionDataForm.ExerciseAnswer[AnswerIndex].isAdd) {\r\n\t\t\tquestionDataForm.ExerciseAnswer.splice(AnswerIndex, 1)\r\n\t\t} else {\r\n\t\t\tquestionDataForm.ExerciseAnswer[AnswerIndex].Enable = false\r\n\t\t}\r\n\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// SUBMIT FORM\r\n\tconst handleSubmitQuestion = async () => {\r\n\t\tconsole.log('Question SUBMIT in form: ', questionDataForm)\r\n\r\n\t\tlet res = null\r\n\t\ttry {\r\n\t\t\tif (questionDataForm.ID) {\r\n\t\t\t\tres = await exerciseApi.update(questionDataForm)\r\n\t\t\t} else {\r\n\t\t\t\tres = await exerciseApi.add(questionDataForm)\r\n\t\t\t}\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tchangeIsSubmit(questionDataForm.ID ? questionDataForm : res.data.data)\r\n\t\t\t\tshowNoti('success', `${questionDataForm.ID ? 'Cập nhật' : 'Thêm'} Thành công`)\r\n\t\t\t\tif (!questionDataForm.ID) {\r\n\t\t\t\t\tresetForm()\r\n\t\t\t\t}\r\n\t\t\t\tsetIsResetEditor(true)\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetIsResetEditor(false)\r\n\t\t\t\t}, 500)\r\n\t\t\t}\r\n\t\t} catch (error) {}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tisSubmit && handleSubmitQuestion()\r\n\t}, [isSubmit])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (visible) {\r\n\t\t\tif (!questionData.ID) {\r\n\t\t\t\tquestionData.Content = ''\r\n\t\t\t\tquestionData.ExerciseAnswer.forEach((item: any) => {\r\n\t\t\t\t\titem.AnswerContent = ''\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tsetQuestionDataForm(questionData)\r\n\t\t} else {\r\n\t\t\tsetQuestionDataForm(null)\r\n\t\t\tsetLoadAtFirst(true)\r\n\t\t}\r\n\t}, [visible])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (questionDataForm) {\r\n\t\t\tif (!loadAtFirst) {\r\n\t\t\t\tchangeData && changeData()\r\n\t\t\t}\r\n\t\t\tsetLoadAtFirst(false)\r\n\t\t}\r\n\t}, [questionDataForm])\r\n\r\n\treturn (\r\n\t\t<div className=\"form-create-question\">\r\n\t\t\t{visible && questionDataForm && (\r\n\t\t\t\t<Form form={form} layout=\"vertical\">\r\n\t\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t<Form.Item name=\"Question\" label=\"Câu hỏi\">\r\n\t\t\t\t\t\t\t\t\t<EditorSimple\r\n\t\t\t\t\t\t\t\t\t\tisTranslate={true}\r\n\t\t\t\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\t\t\t\thandleChange={(value) => getDataEditor(value)}\r\n\t\t\t\t\t\t\t\t\t\tisReset={isResetEditor}\r\n\t\t\t\t\t\t\t\t\t\tquestionContent={questionDataForm?.Content}\r\n\t\t\t\t\t\t\t\t\t\tquestionData={questionData}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t<Form.Item label=\"File nghe\">\r\n\t\t\t\t\t\t\t\t\t<UploadAudio\r\n\t\t\t\t\t\t\t\t\t\tgetFile={(file) => {\r\n\t\t\t\t\t\t\t\t\t\t\tquestionDataForm.LinkAudio = file\r\n\t\t\t\t\t\t\t\t\t\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tvalueFile={questionDataForm?.LinkAudio}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-12 mb-3\">\r\n\t\t\t\t\t\t\t\t<p className=\"style-label\">Đáp án</p>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Thêm đáp án\">\r\n\t\t\t\t\t\t\t\t\t<button className=\"btn-add-answer\" onClick={handleAddAnswer}>\r\n\t\t\t\t\t\t\t\t\t\t<Plus />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{questionDataForm?.ExerciseAnswer.map(\r\n\t\t\t\t\t\t\t\t(item, index) =>\r\n\t\t\t\t\t\t\t\t\titem.Enable && (\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-12\" key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"row-ans\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox checked={item.isTrue} onChange={(e) => onChange_isCorrect(e, item.ID)}></Checkbox>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Nhập đáp án \"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={item.AnswerContent}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => onChange_text(e, item.ID)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t></Input>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"delete-ans\" onClick={() => deleteAnswerItem(item.ID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{!isGroup?.status && (\r\n\t\t\t\t\t\t\t<Form.Item label=\"Giải thích đáp án\" name=\"DescribeAnswer\">\r\n\t\t\t\t\t\t\t\t<EditorSimple handleChange={(value: any) => getDescribeAnswer(value)} />\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MapForm\r\n"]},"metadata":{},"sourceType":"module"}
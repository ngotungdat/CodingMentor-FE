{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\notification\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport PowerTable from '~/components/PowerTable';\nimport LayoutBase from '~/components/LayoutBase';\nimport { AlertCircle } from 'react-feather';\nimport { notificationApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport moment from 'moment';\nimport { Checkbox, Tooltip } from 'antd';\nimport ReactHtmlParser from 'react-html-parser';\nimport Modal from 'antd/lib/modal/Modal';\n\nvar Notification = function Notification() {\n  _s();\n\n  var _useState = useState([]),\n      dataTable = _useState[0],\n      setDataTable = _useState[1];\n\n  var _useState2 = useState({\n    ID: null\n  }),\n      dataSeen = _useState2[0],\n      setDataSeen = _useState2[1];\n\n  var _useState3 = useState({\n    content: null,\n    title: null,\n    status: null\n  }),\n      contentRow = _useState3[0],\n      setContentRow = _useState3[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      handleReloadNoti = _useWrap.handleReloadNoti;\n\n  var _useState4 = useState(false),\n      isModalVisible = _useState4[0],\n      setIsModalVisible = _useState4[1];\n\n  var _useState5 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState5[0],\n      setIsLoading = _useState5[1];\n\n  var _useState6 = useState(null),\n      totalPage = _useState6[0],\n      setTotalPage = _useState6[1];\n\n  var _useState7 = useState(1),\n      currentPage = _useState7[0],\n      setCurrentPage = _useState7[1];\n\n  var pageIndex = 1; // PARAMS API GETALL\n\n  var listTodoApi = {\n    pageSize: 10,\n    pageIndex: pageIndex\n  };\n\n  var _useState8 = useState(listTodoApi),\n      todoApi = _useState8[0],\n      setTodoApi = _useState8[1]; // GET DATA\n\n\n  var getDataTable = function getDataTable() {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return notificationApi.getAllWithUser(todoApi);\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status == 204) {\n                showNoti('danger', 'Không có dữ liệu');\n              }\n\n              if (res.status == 200) {\n                setTotalPage(res.data.totalRow);\n                setDataTable(res.data.data);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              showNoti('danger', _context.t0.message);\n\n            case 11:\n              _context.prev = 11;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8, 11, 14]]);\n    }))();\n  }; // PAGINATION\n\n\n  var _getPagination = function getPagination(pageNumber) {\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      //   ...listFieldSearch,\n      pageIndex: pageIndex\n    }));\n  };\n\n  var _onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n      var res, _res;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsLoading({\n                type: 'UPDATE_DATA',\n                status: true\n              });\n              res = null;\n              _context2.prev = 2;\n              _context2.next = 5;\n              return notificationApi.updateSeen(data);\n\n            case 5:\n              res = _context2.sent;\n              ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && (showNoti('success', 'Cập nhật thành công'), getDataTable());\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              showNoti('danger', _context2.t0.message);\n\n            case 12:\n              _context2.prev = 12;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context2.finish(12);\n\n            case 15:\n              return _context2.abrupt(\"return\", res);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 9, 12, 15]]);\n    }));\n\n    return function _onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onChange = function onChange(e) {\n    console.log('Checked Value: ', e.target.value);\n    var data = {\n      ID: e.target.value\n    };\n\n    _onSubmit(data);\n  };\n\n  var columns = [{\n    title: function title() {\n      return /*#__PURE__*/_jsxDEV(Checkbox, {\n        value: 0,\n        onChange: onChange,\n        defaultChecked: false,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"color-white\",\n          children: \"Xem t\\u1EA5t c\\u1EA3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, _this);\n    },\n    dataIndex: 'Status',\n    // render: (record) => (\n    //     record.Status == 0\n    //     ? ( <Checkbox value={record.ID} onChange={onChange}><span className=\"font-weight-black\">Xem</span></Checkbox>)\n    //     : (<Checkbox checked><span className=\"font-weight-black\">Xem</span></Checkbox>)\n    // ),\n    render: function render(text, record) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: text == 0 ? /*#__PURE__*/_jsxDEV(Checkbox, {\n          className: \"uncheck\",\n          value: record.ID,\n          onChange: onChange,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Xem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, _this) : /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: true,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Xem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, _this);\n    }\n  }, {\n    title: 'Tên thông báo',\n    dataIndex: 'NotificationTitle',\n    // ...FilterColumn(\"center\")\n    render: function render(text) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 22\n      }, _this);\n    }\n  }, {\n    title: 'Nội dung thông báo',\n    dataIndex: 'NotificationContent',\n    render: function render(text) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-notification\",\n        children: ReactHtmlParser(text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 22\n      }, _this);\n    } // ...FilterColumn(\"supplier\")\n\n  }, {\n    title: 'Thời gian',\n    dataIndex: 'CreatedOn',\n    render: function render(date) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-weight-primary\",\n        children: moment(date).format('DD/MM/YYYY')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 22\n      }, _this);\n    }\n  }, {\n    render: function render(record) {\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Chi ti\\u1EBFt\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-icon delete\",\n          onClick: function onClick() {\n            setIsModalVisible(true);\n            setDataSeen({\n              ID: record.ID\n            });\n            setContentRow({\n              content: record.NotificationContent,\n              title: record.NotificationTitle,\n              status: record.Status\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(AlertCircle, {\n            color: \"#32c6a4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, _this);\n    }\n  }];\n  useEffect(function () {\n    getDataTable();\n  }, [todoApi]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      title: /*#__PURE__*/_jsxDEV(AlertCircle, {\n        color: \"#32c6a4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 12\n      }, _this),\n      visible: isModalVisible,\n      onOk: function onOk() {\n        setIsModalVisible(false);\n        contentRow.status == 0 && _onSubmit(dataSeen);\n      },\n      onCancel: function onCancel() {\n        setIsModalVisible(false);\n        contentRow.status == 0 && _onSubmit(dataSeen);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: contentRow.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ReactHtmlParser(contentRow.content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(PowerTable, {\n      loading: isLoading,\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: function getPagination(pageNumber) {\n        return _getPagination(pageNumber);\n      },\n      addClass: \"basic-header\",\n      TitlePage: \"Danh s\\xE1ch th\\xF4ng b\\xE1o\" // TitleCard={\n      //     <PurposeForm\n      //         showAdd={true}\n      //         isLoading={isLoading}\n      //         _onSubmit={(data: any) => _onSubmit(data)}\n      //     />}\n      ,\n      dataSource: dataTable,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Notification, \"9+vozo3ZFMn50e4FQUzFOcJX/so=\", false, function () {\n  return [useWrap];\n});\n\n_c = Notification;\nNotification.layout = LayoutBase;\nexport default Notification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/notification/index.tsx"],"names":["React","useEffect","useState","PowerTable","LayoutBase","AlertCircle","notificationApi","useWrap","moment","Checkbox","Tooltip","ReactHtmlParser","Modal","Notification","dataTable","setDataTable","ID","dataSeen","setDataSeen","content","title","status","contentRow","setContentRow","showNoti","handleReloadNoti","isModalVisible","setIsModalVisible","type","isLoading","setIsLoading","totalPage","setTotalPage","currentPage","setCurrentPage","pageIndex","listTodoApi","pageSize","todoApi","setTodoApi","getDataTable","getAllWithUser","res","data","totalRow","message","getPagination","pageNumber","_onSubmit","updateSeen","onChange","e","console","log","target","value","columns","dataIndex","render","text","record","date","format","NotificationContent","NotificationTitle","Status","layout"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport { AlertCircle } from 'react-feather'\r\n\r\nimport { notificationApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\nimport moment from 'moment'\r\nimport { Checkbox, Row, Col, Tooltip } from 'antd'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport Modal from 'antd/lib/modal/Modal'\r\n\r\nconst Notification = () => {\r\n\tconst [dataTable, setDataTable] = useState([])\r\n\tconst [dataSeen, setDataSeen] = useState({\r\n\t\tID: null\r\n\t})\r\n\tconst [contentRow, setContentRow] = useState({\r\n\t\tcontent: null,\r\n\t\ttitle: null,\r\n\t\tstatus: null\r\n\t})\r\n\tconst { showNoti, handleReloadNoti } = useWrap()\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\r\n\tlet pageIndex = 1\r\n\t// PARAMS API GETALL\r\n\tconst listTodoApi = {\r\n\t\tpageSize: 10,\r\n\t\tpageIndex: pageIndex\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// GET DATA\r\n\tconst getDataTable = () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\t;(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await notificationApi.getAllWithUser(todoApi)\r\n\t\t\t\tif (res.status == 204) {\r\n\t\t\t\t\tshowNoti('danger', 'Không có dữ liệu')\r\n\t\t\t\t}\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t\t\tsetDataTable(res.data.data)\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})()\r\n\t}\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tpageIndex = pageNumber\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t//   ...listFieldSearch,\r\n\t\t\tpageIndex: pageIndex\r\n\t\t})\r\n\t}\r\n\r\n\tconst _onSubmit = async (data: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'UPDATE_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet res = null\r\n\t\ttry {\r\n\t\t\tres = await notificationApi.updateSeen(data)\r\n\t\t\tres?.status == 200 && (showNoti('success', 'Cập nhật thành công'), getDataTable())\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\tconst onChange = (e) => {\r\n\t\tconsole.log('Checked Value: ', e.target.value)\r\n\t\tconst data = {\r\n\t\t\tID: e.target.value\r\n\t\t}\r\n\t\t_onSubmit(data)\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: () => (\r\n\t\t\t\t<Checkbox value={0} onChange={onChange} defaultChecked={false}>\r\n\t\t\t\t\t<span className=\"color-white\">Xem tất cả</span>\r\n\t\t\t\t</Checkbox>\r\n\t\t\t),\r\n\t\t\tdataIndex: 'Status',\r\n\t\t\t// render: (record) => (\r\n\t\t\t//     record.Status == 0\r\n\t\t\t//     ? ( <Checkbox value={record.ID} onChange={onChange}><span className=\"font-weight-black\">Xem</span></Checkbox>)\r\n\t\t\t//     : (<Checkbox checked><span className=\"font-weight-black\">Xem</span></Checkbox>)\r\n\t\t\t// ),\r\n\t\t\trender: (text, record) => (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{text == 0 ? (\r\n\t\t\t\t\t\t<Checkbox className=\"uncheck\" value={record.ID} onChange={onChange}>\r\n\t\t\t\t\t\t\t<span>Xem</span>\r\n\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Checkbox checked>\r\n\t\t\t\t\t\t\t<span>Xem</span>\r\n\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tên thông báo',\r\n\t\t\tdataIndex: 'NotificationTitle',\r\n\t\t\t// ...FilterColumn(\"center\")\r\n\t\t\trender: (text) => <span className=\"font-weight-black\">{text}</span>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Nội dung thông báo',\r\n\t\t\tdataIndex: 'NotificationContent',\r\n\t\t\trender: (text) => <div className=\"content-notification\">{ReactHtmlParser(text)}</div>\r\n\t\t\t// ...FilterColumn(\"supplier\")\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Thời gian',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\trender: (date) => <span className=\"font-weight-primary\">{moment(date).format('DD/MM/YYYY')}</span>\r\n\t\t},\r\n\t\t{\r\n\t\t\trender: (record) => (\r\n\t\t\t\t<Tooltip title=\"Chi tiết\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn btn-icon delete\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetIsModalVisible(true)\r\n\t\t\t\t\t\t\tsetDataSeen({\r\n\t\t\t\t\t\t\t\tID: record.ID\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tsetContentRow({\r\n\t\t\t\t\t\t\t\tcontent: record.NotificationContent,\r\n\t\t\t\t\t\t\t\ttitle: record.NotificationTitle,\r\n\t\t\t\t\t\t\t\tstatus: record.Status\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<AlertCircle color=\"#32c6a4\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataTable()\r\n\t}, [todoApi])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={<AlertCircle color=\"#32c6a4\" />}\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\t\tcontentRow.status == 0 && _onSubmit(dataSeen)\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\t\tcontentRow.status == 0 && _onSubmit(dataSeen)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<h4>{contentRow.title}</h4>\r\n\t\t\t\t<div>{ReactHtmlParser(contentRow.content)}</div>\r\n\t\t\t</Modal>\r\n\t\t\t<PowerTable\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Danh sách thông báo\"\r\n\t\t\t\t// TitleCard={\r\n\t\t\t\t//     <PurposeForm\r\n\t\t\t\t//         showAdd={true}\r\n\t\t\t\t//         isLoading={isLoading}\r\n\t\t\t\t//         _onSubmit={(data: any) => _onSubmit(data)}\r\n\t\t\t\t//     />}\r\n\t\t\t\tdataSource={dataTable}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\nNotification.layout = LayoutBase\r\nexport default Notification\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\QuestionBank\\\\QuestionFormType\\\\DragForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useWrap } from '~/context/wrap';\nimport { Form, Spin, Checkbox, Input, Tooltip } from 'antd';\nimport Editor from '~/components/Elements/Editor';\nimport { exerciseGroupApi } from '~/apiBase/';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Plus } from 'react-feather';\nvar AnsID = 0;\n\nvar DragForm = function DragForm(props) {\n  _s();\n\n  var _question$ExerciseLis3;\n\n  var questionData = props.questionData,\n      changeIsSubmit = props.changeIsSubmit,\n      visible = props.visible,\n      onChange = props.onChange;\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState(null),\n      question = _useState[0],\n      setQuestion = _useState[1]; // Dữ liệu câu hỏi + câu trả lời\n\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      dataExercise = _useState3[0],\n      setDataExercise = _useState3[1]; // VỪA VÔ LẤY DỮ LIỆU\n\n\n  useEffect(function () {\n    visible ? dataGroupDetail() : setLoading(true);\n  }, [visible]);\n  useEffect(function () {\n    onChange(question);\n  }, [question]); // GET GROUP DETAIL DATA\n\n  var dataGroupDetail = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              changeIsSubmit(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return exerciseGroupApi.getWithID(questionData.ID ? questionData.ID : questionData.ExerciseGroupID);\n\n            case 4:\n              res = _context.sent;\n              res.status == 200 && setQuestion(res.data.data);\n              res.status == 204 && showNoti('danger', 'Không có dữ liệu');\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              showNoti('danger', _context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.message);\n\n            case 12:\n              _context.prev = 12;\n              setLoading(false);\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function dataGroupDetail() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var setDataEditor = function setDataEditor(e) {\n    setQuestion(_objectSpread(_objectSpread({}, question), {}, {\n      Paragraph: e\n    }));\n    onChange(_objectSpread(_objectSpread({}, question), {}, {\n      Paragraph: e\n    }));\n  }; // HANDLE ADD QUESTION\n\n\n  var _addQuestion = function addQuestion(p) {\n    AnsID++;\n    var exerciseList = question === null || question === void 0 ? void 0 : question.ExerciseList;\n    var tempData = dataExercise;\n    var temp = {\n      inputID: p,\n      Content: '',\n      ExerciseGroupID: question.ID,\n      SubjectID: question.SubjectID,\n      SubjectName: question.SubjectName,\n      DescribeAnswer: '',\n      Level: question.Level,\n      LevelName: question.LevelName,\n      LinkAudio: null,\n      Type: question.Type,\n      TypeName: question.TypeName,\n      isAdd: true,\n      Enable: true,\n      ExerciseAnswer: [{\n        ID: AnsID,\n        AnswerContent: '',\n        isTrue: true,\n        Enable: true,\n        isAdd: true\n      }]\n    };\n    tempData.push(temp);\n    exerciseList.push(temp);\n    setDataExercise(tempData);\n    setQuestion(_objectSpread(_objectSpread({}, question), {}, {\n      ExerciseList: exerciseList\n    }));\n    onChange(_objectSpread(_objectSpread({}, question), {}, {\n      ExerciseList: exerciseList\n    }));\n  }; // HANDLE DELETE QUESTION\n\n\n  var _deleteSingleQuestion = function deleteSingleQuestion(ID) {\n    var questionIndex = question.ExerciseList.findIndex(function (item) {\n      return item.inputID == ID;\n    }); // Lấy vị trí của cái ID truyền vào\n\n    var exerciseIndex = dataExercise.findIndex(function (item) {\n      return item.inputID == ID;\n    }); // Xóa bên Ex nếu nó khác -1\n\n    if (dataExercise[exerciseIndex]) {\n      dataExercise.splice(exerciseIndex, 1);\n    } // Xóa bên Quest nếu nó khác -1\n\n\n    if (question.ExerciseList[questionIndex]) {\n      if (question.ExerciseList[questionIndex].isAdd) {\n        question.ExerciseList.splice(questionIndex, 1);\n      } else {\n        question.ExerciseList[questionIndex].Enable = false;\n      }\n    } else {\n      console.log('Câu hỏi không tồn tại');\n    }\n\n    setDataExercise(_toConsumableArray(dataExercise));\n    setQuestion(_objectSpread({}, question));\n    onChange(_objectSpread({}, question));\n  }; // HANDLE DELETE ALL QUESTION\n\n\n  var deleteAllQuestion = function deleteAllQuestion() {\n    dataExercise === null || dataExercise === void 0 ? void 0 : dataExercise.splice(0, dataExercise.length); // Xóa tất cả tụi bên Ex\n\n    question.ExerciseList.forEach(function (item) {\n      item.Enable = false; // Xóa tất cả tụi bên này - gọi vậy để xóa trên data\n    });\n    setDataExercise(_toConsumableArray(dataExercise));\n    setQuestion(_objectSpread(_objectSpread({}, question), {}, {\n      Paragraph: ''\n    }));\n    onChange(_objectSpread(_objectSpread({}, question), {}, {\n      Paragraph: ''\n    }));\n  }; // Lấy cái số hiện ra bên câu trả lời\n\n\n  var getQuestIndex = function getQuestIndex(ar, i) {\n    var temp = [];\n\n    for (var _i = 0; _i < ar.length; _i++) {\n      ar[_i].Enable && temp.push(ar[_i]);\n    }\n\n    return parseInt(temp.indexOf(i)) + 1;\n  }; // HANDLE ADD ANSWER\n\n\n  var handleAddAnswer = function handleAddAnswer(ID) {\n    AnsID++;\n    question.ExerciseList.every(function (item) {\n      if (item.inputID == ID) {\n        item.ExerciseAnswer.push({\n          ID: AnsID,\n          AnswerContent: '',\n          isTrue: true,\n          Enable: true,\n          isAdd: true\n        });\n        return false;\n      }\n\n      return true;\n    });\n    setQuestion(_objectSpread({}, question));\n  }; // ON CHANGE TEXT\n\n\n  var onChange_text = function onChange_text(e, AnswerID, QuestionID) {\n    var _question$ExerciseLis;\n\n    var QuestionIndex = question === null || question === void 0 ? void 0 : (_question$ExerciseLis = question.ExerciseList) === null || _question$ExerciseLis === void 0 ? void 0 : _question$ExerciseLis.findIndex(function (item) {\n      return item.Enable && item.inputID == QuestionID;\n    }); // Get question index\n\n    var AnswerIndex = question.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex(function (item) {\n      return item.Enable && item.ID == AnswerID;\n    }); // Get answer index\n\n    question.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].AnswerContent = e.target.value; // Add text\n\n    setQuestion(_objectSpread({}, question));\n  }; // DELETE ANSWER\n\n\n  var deleteAnswerItem = function deleteAnswerItem(AnswerID, QuestionID) {\n    var QuestionIndex = question.ExerciseList.findIndex(function (item) {\n      return item.inputID == QuestionID;\n    }); // - Get question index\n\n    var AnswerIndex = question.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex(function (item) {\n      return item.ID == AnswerID;\n    }); // - Get answer index\n    // Action delete\n\n    if (question.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].isAdd) {\n      question.ExerciseList[QuestionIndex].ExerciseAnswer.splice(AnswerIndex, 1);\n    } else {\n      question.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].Enable = false;\n    }\n\n    setQuestion(_objectSpread({}, question));\n  };\n\n  var onChange_isCorrect = function onChange_isCorrect(e, AnswerID, QuestionID) {\n    var _question$ExerciseLis2;\n\n    var checked = e.target.checked;\n    var QuestionIndex = question === null || question === void 0 ? void 0 : (_question$ExerciseLis2 = question.ExerciseList) === null || _question$ExerciseLis2 === void 0 ? void 0 : _question$ExerciseLis2.findIndex(function (item) {\n      return item.inputID == QuestionID;\n    });\n    var AnswerIndex = question.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex(function (item) {\n      return item.ID == AnswerID;\n    });\n    question.ExerciseList[QuestionIndex].ExerciseAnswer.forEach(function (item) {\n      item.isTrue = false;\n    });\n    question.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].isTrue = checked;\n    setQuestion(_objectSpread({}, question));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-create-question\",\n    children: visible && loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }, _this) : visible && /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      layout: \"vertical\",\n      onFinish: function onFinish() {},\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12\",\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"Question\",\n              label: \"N\\u1ED9i dung\",\n              children: /*#__PURE__*/_jsxDEV(Editor, {\n                exerciseList: dataExercise,\n                deleteAllQuestion: deleteAllQuestion,\n                deleteSingleQuestion: function deleteSingleQuestion(quesID) {\n                  return _deleteSingleQuestion(quesID);\n                },\n                handleChange: function handleChange(value) {\n                  return setDataEditor(value);\n                },\n                questionContent: question === null || question === void 0 ? void 0 : question.Paragraph // Câu hỏi được truyền vô\n                ,\n                questionData: question,\n                addQuestion: function addQuestion(inputID) {\n                  return _addQuestion(inputID);\n                },\n                visible: visible\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 11\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 10\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12\",\n            style: {\n              borderLeft: '2px dotted #dbdbdb'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"style-label\",\n              style: {\n                textDecoration: 'underline'\n              },\n              children: \"\\u0110\\xE1p \\xE1n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 10\n            }, _this), question === null || question === void 0 ? void 0 : (_question$ExerciseLis3 = question.ExerciseList) === null || _question$ExerciseLis3 === void 0 ? void 0 : _question$ExerciseLis3.map(function (itemQues, index) {\n              var _itemQues$ExerciseAns;\n\n              return itemQues.Enable && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-item-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"\",\n                  style: {\n                    fontWeight: 500,\n                    color: '#525252'\n                  },\n                  children: [\"C\\xE2u: \", getQuestIndex(question.ExerciseList, itemQues)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 14\n                }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Th\\xEAm \\u0111\\xE1p \\xE1n\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-add-answer\",\n                    onClick: function onClick() {\n                      return handleAddAnswer(itemQues.inputID);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Plus, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 16\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 15\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 14\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: (_itemQues$ExerciseAns = itemQues.ExerciseAnswer) === null || _itemQues$ExerciseAns === void 0 ? void 0 : _itemQues$ExerciseAns.map(function (itemAns, index) {\n                    return itemAns.Enable && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-6 col-12\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"row-ans mt-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                          checked: itemAns.isTrue,\n                          onChange: function onChange(e) {\n                            return onChange_isCorrect(e, itemAns.ID, itemQues.inputID);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 225,\n                          columnNumber: 20\n                        }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                          className: \"mb-0\",\n                          children: /*#__PURE__*/_jsxDEV(Input, {\n                            value: itemAns.AnswerContent,\n                            className: \"style-input\",\n                            onChange: function onChange(e) {\n                              return onChange_text(e, itemAns.ID, itemQues.inputID);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 230,\n                            columnNumber: 21\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 229,\n                          columnNumber: 20\n                        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"delete-ans\",\n                          onClick: function onClick() {\n                            return deleteAnswerItem(itemAns.ID, itemQues.inputID);\n                          },\n                          children: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 237,\n                            columnNumber: 21\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 236,\n                          columnNumber: 20\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 19\n                      }, _this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 18\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 14\n                }, _this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 13\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 8\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 6\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(DragForm, \"mMbbILw2bLEgdhwiFI/5a7QndDg=\", false, function () {\n  return [useWrap, Form.useForm];\n});\n\n_c = DragForm;\nexport default DragForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragForm\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/QuestionBank/QuestionFormType/DragForm.tsx"],"names":["React","useEffect","useState","useWrap","Form","Spin","Checkbox","Input","Tooltip","Editor","exerciseGroupApi","CloseOutlined","Plus","AnsID","DragForm","props","questionData","changeIsSubmit","visible","onChange","showNoti","useForm","form","question","setQuestion","loading","setLoading","dataExercise","setDataExercise","dataGroupDetail","getWithID","ID","ExerciseGroupID","res","status","data","message","setDataEditor","e","Paragraph","addQuestion","p","exerciseList","ExerciseList","tempData","temp","inputID","Content","SubjectID","SubjectName","DescribeAnswer","Level","LevelName","LinkAudio","Type","TypeName","isAdd","Enable","ExerciseAnswer","AnswerContent","isTrue","push","deleteSingleQuestion","questionIndex","findIndex","item","exerciseIndex","splice","console","log","deleteAllQuestion","length","forEach","getQuestIndex","ar","i","parseInt","indexOf","handleAddAnswer","every","onChange_text","AnswerID","QuestionID","QuestionIndex","AnswerIndex","target","value","deleteAnswerItem","onChange_isCorrect","checked","quesID","borderLeft","textDecoration","map","itemQues","index","fontWeight","color","itemAns"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { Form, Spin, Checkbox, Input, Tooltip } from 'antd'\r\nimport Editor from '~/components/Elements/Editor'\r\nimport { exerciseGroupApi } from '~/apiBase/'\r\nimport { CloseOutlined } from '@ant-design/icons'\r\nimport { Plus } from 'react-feather'\r\n\r\nlet AnsID = 0\r\n\r\nconst DragForm = (props: any) => {\r\n\tconst { questionData, changeIsSubmit, visible, onChange } = props\r\n\tconst { showNoti } = useWrap()\r\n\tconst [form] = Form.useForm()\r\n\tconst [question, setQuestion] = useState<any>(null) // Dữ liệu câu hỏi + câu trả lời\r\n\tconst [loading, setLoading] = useState<any>(true)\r\n\tconst [dataExercise, setDataExercise] = useState<any>([])\r\n\r\n\t// VỪA VÔ LẤY DỮ LIỆU\r\n\tuseEffect(() => {\r\n\t\tvisible ? dataGroupDetail() : setLoading(true)\r\n\t}, [visible])\r\n\r\n\tuseEffect(() => {\r\n\t\tonChange(question)\r\n\t}, [question])\r\n\r\n\t// GET GROUP DETAIL DATA\r\n\tconst dataGroupDetail = async () => {\r\n\t\tchangeIsSubmit(true)\r\n\t\ttry {\r\n\t\t\tlet res: any = await exerciseGroupApi.getWithID(questionData.ID ? questionData.ID : questionData.ExerciseGroupID)\r\n\t\t\tres.status == 200 && setQuestion(res.data.data)\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu')\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error?.message)\r\n\t\t} finally {\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst setDataEditor = (e: any) => {\r\n\t\tsetQuestion({ ...question, Paragraph: e })\r\n\t\tonChange({ ...question, Paragraph: e })\r\n\t}\r\n\r\n\t// HANDLE ADD QUESTION\r\n\tconst addQuestion = (p: any) => {\r\n\t\tAnsID++\r\n\t\tlet exerciseList: any = question?.ExerciseList\r\n\t\tlet tempData: any = dataExercise\r\n\t\tlet temp: any = {\r\n\t\t\tinputID: p,\r\n\t\t\tContent: '',\r\n\t\t\tExerciseGroupID: question.ID,\r\n\t\t\tSubjectID: question.SubjectID,\r\n\t\t\tSubjectName: question.SubjectName,\r\n\t\t\tDescribeAnswer: '',\r\n\t\t\tLevel: question.Level,\r\n\t\t\tLevelName: question.LevelName,\r\n\t\t\tLinkAudio: null,\r\n\t\t\tType: question.Type,\r\n\t\t\tTypeName: question.TypeName,\r\n\t\t\tisAdd: true,\r\n\t\t\tEnable: true,\r\n\t\t\tExerciseAnswer: [\r\n\t\t\t\t{\r\n\t\t\t\t\tID: AnsID,\r\n\t\t\t\t\tAnswerContent: '',\r\n\t\t\t\t\tisTrue: true,\r\n\t\t\t\t\tEnable: true,\r\n\t\t\t\t\tisAdd: true\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t\ttempData.push(temp)\r\n\t\texerciseList.push(temp)\r\n\t\tsetDataExercise(tempData)\r\n\t\tsetQuestion({ ...question, ExerciseList: exerciseList })\r\n\t\tonChange({ ...question, ExerciseList: exerciseList })\r\n\t}\r\n\r\n\t// HANDLE DELETE QUESTION\r\n\tconst deleteSingleQuestion = (ID: any) => {\r\n\t\tlet questionIndex: any = question.ExerciseList.findIndex((item: any) => item.inputID == ID) // Lấy vị trí của cái ID truyền vào\r\n\t\tlet exerciseIndex: any = dataExercise.findIndex((item: any) => item.inputID == ID)\r\n\t\t// Xóa bên Ex nếu nó khác -1\r\n\t\tif (dataExercise[exerciseIndex]) {\r\n\t\t\tdataExercise.splice(exerciseIndex, 1)\r\n\t\t}\r\n\t\t// Xóa bên Quest nếu nó khác -1\r\n\t\tif (question.ExerciseList[questionIndex]) {\r\n\t\t\tif (question.ExerciseList[questionIndex].isAdd) {\r\n\t\t\t\tquestion.ExerciseList.splice(questionIndex, 1)\r\n\t\t\t} else {\r\n\t\t\t\tquestion.ExerciseList[questionIndex].Enable = false\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log('Câu hỏi không tồn tại')\r\n\t\t}\r\n\t\tsetDataExercise([...dataExercise])\r\n\t\tsetQuestion({ ...question })\r\n\t\tonChange({ ...question })\r\n\t}\r\n\r\n\t// HANDLE DELETE ALL QUESTION\r\n\tconst deleteAllQuestion = () => {\r\n\t\tdataExercise?.splice(0, dataExercise.length) // Xóa tất cả tụi bên Ex\r\n\t\tquestion.ExerciseList.forEach((item: any) => {\r\n\t\t\titem.Enable = false // Xóa tất cả tụi bên này - gọi vậy để xóa trên data\r\n\t\t})\r\n\t\tsetDataExercise([...dataExercise])\r\n\t\tsetQuestion({ ...question, Paragraph: '' })\r\n\t\tonChange({ ...question, Paragraph: '' })\r\n\t}\r\n\r\n\t// Lấy cái số hiện ra bên câu trả lời\r\n\tconst getQuestIndex = (ar: any, i: any) => {\r\n\t\tlet temp: any = []\r\n\t\tfor (let i = 0; i < ar.length; i++) {\r\n\t\t\tar[i].Enable && temp.push(ar[i])\r\n\t\t}\r\n\t\treturn parseInt(temp.indexOf(i)) + 1\r\n\t}\r\n\r\n\t// HANDLE ADD ANSWER\r\n\tconst handleAddAnswer = (ID: number) => {\r\n\t\tAnsID++\r\n\t\tquestion.ExerciseList.every((item: any) => {\r\n\t\t\tif (item.inputID == ID) {\r\n\t\t\t\titem.ExerciseAnswer.push({\r\n\t\t\t\t\tID: AnsID,\r\n\t\t\t\t\tAnswerContent: '',\r\n\t\t\t\t\tisTrue: true,\r\n\t\t\t\t\tEnable: true,\r\n\t\t\t\t\tisAdd: true\r\n\t\t\t\t})\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t\tsetQuestion({ ...question })\r\n\t}\r\n\r\n\t// ON CHANGE TEXT\r\n\tconst onChange_text = (e: any, AnswerID: number, QuestionID: any) => {\r\n\t\tlet QuestionIndex: any = question?.ExerciseList?.findIndex((item: any) => item.Enable && item.inputID == QuestionID) // Get question index\r\n\t\tlet AnswerIndex: any = question.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex((item: any) => item.Enable && item.ID == AnswerID) // Get answer index\r\n\t\tquestion.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].AnswerContent = e.target.value // Add text\r\n\t\tsetQuestion({ ...question })\r\n\t}\r\n\r\n\t// DELETE ANSWER\r\n\tconst deleteAnswerItem = (AnswerID: number, QuestionID: number) => {\r\n\t\tlet QuestionIndex: any = question.ExerciseList.findIndex((item: any) => item.inputID == QuestionID) // - Get question index\r\n\t\tlet AnswerIndex: any = question.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex((item: any) => item.ID == AnswerID) // - Get answer index\r\n\r\n\t\t// Action delete\r\n\t\tif (question.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].isAdd) {\r\n\t\t\tquestion.ExerciseList[QuestionIndex].ExerciseAnswer.splice(AnswerIndex, 1)\r\n\t\t} else {\r\n\t\t\tquestion.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].Enable = false\r\n\t\t}\r\n\t\tsetQuestion({ ...question })\r\n\t}\r\n\r\n\tconst onChange_isCorrect = (e: any, AnswerID: any, QuestionID: any) => {\r\n\t\tlet checked: any = e.target.checked\r\n\t\tlet QuestionIndex: any = question?.ExerciseList?.findIndex((item: any) => item.inputID == QuestionID)\r\n\t\tlet AnswerIndex: any = question.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex((item: any) => item.ID == AnswerID)\r\n\t\tquestion.ExerciseList[QuestionIndex].ExerciseAnswer.forEach((item: any) => {\r\n\t\t\titem.isTrue = false\r\n\t\t})\r\n\t\tquestion.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].isTrue = checked\r\n\t\tsetQuestion({ ...question })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"form-create-question\">\r\n\t\t\t{visible && loading ? (\r\n\t\t\t\t<div className=\"w-100 text-center mt-3\">\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<Form form={form} layout=\"vertical\" onFinish={() => {}}>\r\n\t\t\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-12\">\r\n\t\t\t\t\t\t\t\t\t<Form.Item name=\"Question\" label=\"Nội dung\">\r\n\t\t\t\t\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\t\t\t\t\texerciseList={dataExercise}\r\n\t\t\t\t\t\t\t\t\t\t\tdeleteAllQuestion={deleteAllQuestion}\r\n\t\t\t\t\t\t\t\t\t\t\tdeleteSingleQuestion={(quesID: number) => deleteSingleQuestion(quesID)}\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange={(value: string) => setDataEditor(value)}\r\n\t\t\t\t\t\t\t\t\t\t\tquestionContent={question?.Paragraph} // Câu hỏi được truyền vô\r\n\t\t\t\t\t\t\t\t\t\t\tquestionData={question}\r\n\t\t\t\t\t\t\t\t\t\t\taddQuestion={(inputID: any) => addQuestion(inputID)}\r\n\t\t\t\t\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-12\" style={{ borderLeft: '2px dotted #dbdbdb' }}>\r\n\t\t\t\t\t\t\t\t\t<p className=\"style-label\" style={{ textDecoration: 'underline' }}>\r\n\t\t\t\t\t\t\t\t\t\tĐáp án\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t{question?.ExerciseList?.map(\r\n\t\t\t\t\t\t\t\t\t\t(itemQues: any, index: any) =>\r\n\t\t\t\t\t\t\t\t\t\t\titemQues.Enable && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={index} className=\"question-item-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"\" style={{ fontWeight: 500, color: '#525252' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCâu: {getQuestIndex(question.ExerciseList, itemQues)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Thêm đáp án\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn-add-answer\" onClick={() => handleAddAnswer(itemQues.inputID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Plus />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{itemQues.ExerciseAnswer?.map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(itemAns: any, index: any) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titemAns.Enable && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-12\" key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row-ans mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={itemAns.isTrue}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => onChange_isCorrect(e, itemAns.ID, itemQues.inputID)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item className=\"mb-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={itemAns.AnswerContent}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => onChange_text(e, itemAns.ID, itemQues.inputID)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"delete-ans\" onClick={() => deleteAnswerItem(itemAns.ID, itemQues.inputID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DragForm\r\n"]},"metadata":{},"sourceType":"module"}
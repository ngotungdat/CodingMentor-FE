{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Dashboard\\\\RevenueChart.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Bar, CartesianGrid, ComposedChart, Line, ResponsiveContainer, Tooltip, XAxis, YAxis, LineChart } from 'recharts';\nimport { Card, Radio, Select, Skeleton } from 'antd';\nimport { statisticalApi } from './../../apiBase/statistical/statistical-total';\n\nvar RevenueChart = function RevenueChart() {\n  _s();\n\n  var _useState = useState(3),\n      typeView = _useState[0],\n      setTypeView = _useState[1];\n\n  var _useState2 = useState([]),\n      statisticalRevenueYear = _useState2[0],\n      setStatisticalRevenueYear = _useState2[1];\n\n  var _useState3 = useState([]),\n      statisticalRevenueMonth = _useState3[0],\n      setStatisticalRevenueMonth = _useState3[1];\n\n  var _useState4 = useState([]),\n      statisticalRevenueDay = _useState4[0],\n      setStatisticalRevenueDay = _useState4[1];\n\n  var _useState5 = useState({\n    status: '',\n    loading: false\n  }),\n      isLoading = _useState5[0],\n      setIsLoading = _useState5[1];\n\n  var _useState6 = useState({\n    branch: 0,\n    StartYear: 2017,\n    EndYear: 2022,\n    Year: new Date().getFullYear(),\n    Month: new Date().getMonth() + 1\n  }),\n      todoApi = _useState6[0],\n      setTodoApi = _useState6[1];\n\n  var onChange = function onChange(e) {\n    setTypeView(e.target.value);\n  };\n\n  var Option = Select.Option;\n\n  var handleChangeYear = function handleChangeYear(value) {\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      Year: value\n    }));\n  };\n\n  var handleChangeMonth = function handleChangeMonth(value) {\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      Month: value\n    }));\n  };\n\n  var formatYAxis = function formatYAxis(tickItem) {\n    return new Intl.NumberFormat('de-DE').format(tickItem);\n  };\n\n  var formatTooltip = function formatTooltip(value, name, props) {\n    return new Intl.NumberFormat('de-DE').format(value);\n  };\n\n  var getStatisticalRevenueYear = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading({\n                status: 'GET_STAT_REVENUE',\n                loading: true\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return statisticalApi.getStatisticalRevenueYear(todoApi);\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status == 200) {\n                setStatisticalRevenueYear(res.data.data);\n              }\n\n              if (res.status == 204) {\n                setStatisticalRevenueYear([]);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 11:\n              _context.prev = 11;\n              setIsLoading({\n                status: 'GET_STAT_REVENUE',\n                loading: false\n              });\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9, 11, 14]]);\n    }));\n\n    return function getStatisticalRevenueYear() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getStatisticalRevenueMonth = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsLoading({\n                status: 'GET_STAT_REVENUE',\n                loading: true\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return statisticalApi.getStatisticalRevenueMonth(todoApi);\n\n            case 4:\n              res = _context2.sent;\n\n              if (res.status == 200) {\n                setStatisticalRevenueMonth(res.data.data);\n              }\n\n              if (res.status == 204) {\n                setStatisticalRevenueMonth([]);\n              }\n\n              _context2.next = 11;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n\n            case 11:\n              _context2.prev = 11;\n              setIsLoading({\n                status: 'GET_STAT_REVENUE',\n                loading: false\n              });\n              return _context2.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 9, 11, 14]]);\n    }));\n\n    return function getStatisticalRevenueMonth() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getStatisticalRevenueDay = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsLoading({\n                status: 'GET_STAT_REVENUE',\n                loading: true\n              });\n              _context3.prev = 1;\n              _context3.next = 4;\n              return statisticalApi.getStatisticalRevenueDay(todoApi);\n\n            case 4:\n              res = _context3.sent;\n\n              if (res.status == 200) {\n                setStatisticalRevenueDay(res.data.data);\n              }\n\n              if (res.status == 204) {\n                setStatisticalRevenueDay([]);\n              }\n\n              _context3.next = 11;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](1);\n\n            case 11:\n              _context3.prev = 11;\n              setIsLoading({\n                status: 'GET_STAT_REVENUE',\n                loading: false\n              });\n              return _context3.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 9, 11, 14]]);\n    }));\n\n    return function getStatisticalRevenueDay() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var renderView = function renderView() {\n    if (typeView == 1) {\n      return /*#__PURE__*/_jsxDEV(LineChart, {\n        data: statisticalRevenueMonth,\n        syncId: \"anyId\",\n        margin: {\n          top: 10,\n          right: 0,\n          left: 25,\n          bottom: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"Month\",\n          tickMargin: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(YAxis, {\n          type: \"number\",\n          tickFormatter: formatYAxis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: formatTooltip,\n          labelFormatter: function labelFormatter(value) {\n            return \"Th\\xE1ng \".concat(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"Revenue\",\n          stroke: \"#003366\",\n          fill: \"#003366\",\n          activeDot: {\n            r: 8\n          },\n          name: \"Doanh thu(\\u0111\\u1ED3ng)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"Revenue\",\n          fill: \"#0080FF\",\n          name: \"Doanh thu(\\u0111\\u1ED3ng)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, _this);\n    } else if (typeView == 2) {\n      return /*#__PURE__*/_jsxDEV(ComposedChart, {\n        data: statisticalRevenueYear,\n        margin: {\n          top: 10,\n          right: 0,\n          left: 25,\n          bottom: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(YAxis, {\n          tickFormatter: formatYAxis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: formatTooltip,\n          labelFormatter: function labelFormatter(value) {\n            return \"N\\u0103m \".concat(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          stroke: \"#f5f5f5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"Revenue\",\n          fill: \"#0080FF\",\n          barSize: 20,\n          name: \"Doanh thu(\\u0111\\u1ED3ng)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, _this);\n    } else if (typeView == 3) {\n      return /*#__PURE__*/_jsxDEV(LineChart, {\n        data: statisticalRevenueDay,\n        syncId: \"anyId\",\n        margin: {\n          top: 10,\n          right: 5,\n          left: 25,\n          bottom: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(YAxis, {\n          tickFormatter: formatYAxis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: formatTooltip,\n          labelFormatter: function labelFormatter(value) {\n            return \"Ng\\xE0y \".concat(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"Revenue\",\n          stroke: \"#003366\",\n          fill: \"#003366\",\n          activeDot: {\n            r: 8\n          },\n          name: \"Doanh thu(\\u0111\\u1ED3ng)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"Revenue\",\n          fill: \"#0080FF\",\n          name: \"Doanh thu(\\u0111\\u1ED3ng)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, _this);\n    }\n  };\n\n  var renderExtra = function renderExtra() {\n    if (typeView == 1) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: todoApi.Year,\n          style: {\n            width: 120\n          },\n          onChange: handleChangeYear,\n          loading: isLoading.loading && isLoading.status === 'GET_STAT_REVENUE',\n          children: statisticalRevenueYear.map(function (item, index) {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              value: item.Year,\n              children: [\"N\\u0103m \", item.Year]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 9\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false);\n    } else if (typeView == 3) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          loading: isLoading.loading && isLoading.status === 'GET_STAT_REVENUE',\n          value: todoApi.Year,\n          style: {\n            width: 120\n          },\n          onChange: handleChangeYear,\n          children: statisticalRevenueYear.map(function (item, index) {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              value: item.Year,\n              children: [\"N\\u0103m \", item.Year]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 9\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(Select, {\n          loading: isLoading.loading && isLoading.status === 'GET_STAT_REVENUE',\n          value: todoApi.Month,\n          style: {\n            width: 120\n          },\n          onChange: handleChangeMonth,\n          children: statisticalRevenueMonth.map(function (item, index) {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              value: item.Month,\n              children: [\"Th\\xE1ng \", item.Month]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 9\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true);\n    }\n  };\n\n  useEffect(function () {\n    getStatisticalRevenueYear();\n    getStatisticalRevenueMonth();\n    getStatisticalRevenueDay();\n  }, [todoApi]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading.status === 'GET_STAT_REVENUE' && isLoading.loading == true ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      active: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"BI\\u1EC2U \\u0110\\u1ED2 DOANH THU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, _this),\n          style: {\n            borderRadius: 20\n          },\n          extra: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [renderExtra(), /*#__PURE__*/_jsxDEV(Radio.Group, {\n              onChange: onChange,\n              optionType: \"button\",\n              buttonStyle: \"solid\",\n              value: typeView,\n              children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n                value: 3,\n                children: \"Ng\\xE0y\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n                value: 1,\n                children: \"Th\\xE1ng\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n                value: 2,\n                children: \"N\\u0103m\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 11\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 10\n            }, _this)]\n          }, void 0, true),\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 280,\n            children: renderView()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false);\n};\n\n_s(RevenueChart, \"wxKsE2N1+TstmlNQYfpAZqYpx98=\");\n\n_c = RevenueChart;\nexport default RevenueChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"RevenueChart\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Dashboard/RevenueChart.tsx"],"names":["React","useState","useEffect","Bar","CartesianGrid","ComposedChart","Line","ResponsiveContainer","Tooltip","XAxis","YAxis","LineChart","Card","Radio","Select","Skeleton","statisticalApi","RevenueChart","typeView","setTypeView","statisticalRevenueYear","setStatisticalRevenueYear","statisticalRevenueMonth","setStatisticalRevenueMonth","statisticalRevenueDay","setStatisticalRevenueDay","status","loading","isLoading","setIsLoading","branch","StartYear","EndYear","Year","Date","getFullYear","Month","getMonth","todoApi","setTodoApi","onChange","e","target","value","Option","handleChangeYear","handleChangeMonth","formatYAxis","tickItem","Intl","NumberFormat","format","formatTooltip","name","props","getStatisticalRevenueYear","res","data","getStatisticalRevenueMonth","getStatisticalRevenueDay","renderView","top","right","left","bottom","r","renderExtra","width","map","item","index","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar, CartesianGrid, ComposedChart, Line, ResponsiveContainer, Tooltip, XAxis, YAxis, LineChart } from 'recharts';\r\nimport { Card, Radio, Select, Skeleton } from 'antd';\r\nimport { statisticalApi } from './../../apiBase/statistical/statistical-total';\r\n\r\nconst RevenueChart = () => {\r\n\tconst [typeView, setTypeView] = useState(3);\r\n\tconst [statisticalRevenueYear, setStatisticalRevenueYear] = useState<IStatRevenueYear[]>([]);\r\n\tconst [statisticalRevenueMonth, setStatisticalRevenueMonth] = useState<IStatRevenueMonth[]>([]);\r\n\tconst [statisticalRevenueDay, setStatisticalRevenueDay] = useState<IStatRevenueDay[]>([]);\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\tstatus: '',\r\n\t\tloading: false\r\n\t});\r\n\tconst [todoApi, setTodoApi] = useState({\r\n\t\tbranch: 0,\r\n\t\tStartYear: 2017,\r\n\t\tEndYear: 2022,\r\n\t\tYear: new Date().getFullYear(),\r\n\t\tMonth: new Date().getMonth() + 1\r\n\t});\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetTypeView(e.target.value);\r\n\t};\r\n\r\n\tconst { Option } = Select;\r\n\r\n\tconst handleChangeYear = (value) => {\r\n\t\tsetTodoApi({ ...todoApi, Year: value });\r\n\t};\r\n\tconst handleChangeMonth = (value) => {\r\n\t\tsetTodoApi({ ...todoApi, Month: value });\r\n\t};\r\n\r\n\tconst formatYAxis = (tickItem) => {\r\n\t\treturn new Intl.NumberFormat('de-DE').format(tickItem);\r\n\t};\r\n\r\n\tconst formatTooltip = (value, name, props) => {\r\n\t\treturn new Intl.NumberFormat('de-DE').format(value);\r\n\t};\r\n\r\n\tconst getStatisticalRevenueYear = async () => {\r\n\t\tsetIsLoading({ status: 'GET_STAT_REVENUE', loading: true });\r\n\t\ttry {\r\n\t\t\tlet res = await statisticalApi.getStatisticalRevenueYear(todoApi);\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetStatisticalRevenueYear(res.data.data);\r\n\t\t\t}\r\n\t\t\tif (res.status == 204) {\r\n\t\t\t\tsetStatisticalRevenueYear([]);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\t// showNoti(\"danger\", \"get data statistical revenue year error\");\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ status: 'GET_STAT_REVENUE', loading: false });\r\n\t\t}\r\n\t};\r\n\r\n\tconst getStatisticalRevenueMonth = async () => {\r\n\t\tsetIsLoading({ status: 'GET_STAT_REVENUE', loading: true });\r\n\t\ttry {\r\n\t\t\tlet res = await statisticalApi.getStatisticalRevenueMonth(todoApi);\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetStatisticalRevenueMonth(res.data.data);\r\n\t\t\t}\r\n\t\t\tif (res.status == 204) {\r\n\t\t\t\tsetStatisticalRevenueMonth([]);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\t// showNoti(\"danger\", \"get data revenue day faile\");\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ status: 'GET_STAT_REVENUE', loading: false });\r\n\t\t}\r\n\t};\r\n\r\n\tconst getStatisticalRevenueDay = async () => {\r\n\t\tsetIsLoading({ status: 'GET_STAT_REVENUE', loading: true });\r\n\t\ttry {\r\n\t\t\tlet res = await statisticalApi.getStatisticalRevenueDay(todoApi);\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetStatisticalRevenueDay(res.data.data);\r\n\t\t\t}\r\n\t\t\tif (res.status == 204) {\r\n\t\t\t\tsetStatisticalRevenueDay([]);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\t// showNoti(\"danger\", \"get data revenue day faile\");\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ status: 'GET_STAT_REVENUE', loading: false });\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderView = () => {\r\n\t\tif (typeView == 1) {\r\n\t\t\treturn (\r\n\t\t\t\t<LineChart data={statisticalRevenueMonth} syncId=\"anyId\" margin={{ top: 10, right: 0, left: 25, bottom: 0 }}>\r\n\t\t\t\t\t<XAxis dataKey=\"Month\" tickMargin={3} />\r\n\t\t\t\t\t<YAxis type=\"number\" tickFormatter={formatYAxis} />\r\n\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t<Tooltip formatter={formatTooltip} labelFormatter={(value) => `Tháng ${value}`} />\r\n\t\t\t\t\t<Line type=\"monotone\" dataKey=\"Revenue\" stroke=\"#003366\" fill=\"#003366\" activeDot={{ r: 8 }} name=\"Doanh thu(đồng)\" />\r\n\t\t\t\t\t<Bar dataKey=\"Revenue\" fill=\"#0080FF\" name=\"Doanh thu(đồng)\" />\r\n\t\t\t\t</LineChart>\r\n\t\t\t);\r\n\t\t} else if (typeView == 2) {\r\n\t\t\treturn (\r\n\t\t\t\t<ComposedChart data={statisticalRevenueYear} margin={{ top: 10, right: 0, left: 25, bottom: 0 }}>\r\n\t\t\t\t\t<XAxis dataKey=\"Year\" />\r\n\t\t\t\t\t<YAxis tickFormatter={formatYAxis} />\r\n\t\t\t\t\t<Tooltip formatter={formatTooltip} labelFormatter={(value) => `Năm ${value}`} />\r\n\t\t\t\t\t<CartesianGrid stroke=\"#f5f5f5\" />\r\n\t\t\t\t\t{/* <Line type=\"monotone\" dataKey=\"Revenue\" activeDot={{ r: 8 }} stroke=\"#003366\" name=\"Doanh thu(đồng)\" /> */}\r\n\t\t\t\t\t<Bar dataKey=\"Revenue\" fill=\"#0080FF\" barSize={20} name=\"Doanh thu(đồng)\" />\r\n\t\t\t\t</ComposedChart>\r\n\t\t\t);\r\n\t\t} else if (typeView == 3) {\r\n\t\t\treturn (\r\n\t\t\t\t<LineChart data={statisticalRevenueDay} syncId=\"anyId\" margin={{ top: 10, right: 5, left: 25, bottom: 0 }}>\r\n\t\t\t\t\t<XAxis dataKey=\"Day\" />\r\n\t\t\t\t\t<YAxis tickFormatter={formatYAxis} />\r\n\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t<Tooltip formatter={formatTooltip} labelFormatter={(value) => `Ngày ${value}`} />\r\n\t\t\t\t\t<Line type=\"monotone\" dataKey=\"Revenue\" stroke=\"#003366\" fill=\"#003366\" activeDot={{ r: 8 }} name=\"Doanh thu(đồng)\" />\r\n\t\t\t\t\t<Bar dataKey=\"Revenue\" fill=\"#0080FF\" name=\"Doanh thu(đồng)\" />\r\n\t\t\t\t</LineChart>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderExtra = () => {\r\n\t\tif (typeView == 1) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tvalue={todoApi.Year}\r\n\t\t\t\t\t\tstyle={{ width: 120 }}\r\n\t\t\t\t\t\tonChange={handleChangeYear}\r\n\t\t\t\t\t\tloading={isLoading.loading && isLoading.status === 'GET_STAT_REVENUE'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{statisticalRevenueYear.map((item, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Option value={item.Year} key={index}>\r\n\t\t\t\t\t\t\t\t\tNăm {item.Year}\r\n\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else if (typeView == 3) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tloading={isLoading.loading && isLoading.status === 'GET_STAT_REVENUE'}\r\n\t\t\t\t\t\tvalue={todoApi.Year}\r\n\t\t\t\t\t\tstyle={{ width: 120 }}\r\n\t\t\t\t\t\tonChange={handleChangeYear}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{statisticalRevenueYear.map((item, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Option value={item.Year} key={index}>\r\n\t\t\t\t\t\t\t\t\tNăm {item.Year}\r\n\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tloading={isLoading.loading && isLoading.status === 'GET_STAT_REVENUE'}\r\n\t\t\t\t\t\tvalue={todoApi.Month}\r\n\t\t\t\t\t\tstyle={{ width: 120 }}\r\n\t\t\t\t\t\tonChange={handleChangeMonth}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{statisticalRevenueMonth.map((item, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Option value={item.Month} key={index}>\r\n\t\t\t\t\t\t\t\t\tTháng {item.Month}\r\n\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetStatisticalRevenueYear();\r\n\t\tgetStatisticalRevenueMonth();\r\n\t\tgetStatisticalRevenueDay();\r\n\t}, [todoApi]);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading.status === 'GET_STAT_REVENUE' && isLoading.loading == true ? (\r\n\t\t\t\t<Skeleton active />\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"row pt-5\">\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\ttitle={<h4>BIỂU ĐỒ DOANH THU</h4>}\r\n\t\t\t\t\t\t\tstyle={{ borderRadius: 20 }}\r\n\t\t\t\t\t\t\textra={\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{renderExtra()}\r\n\t\t\t\t\t\t\t\t\t<Radio.Group onChange={onChange} optionType=\"button\" buttonStyle=\"solid\" value={typeView}>\r\n\t\t\t\t\t\t\t\t\t\t<Radio.Button value={3}>Ngày</Radio.Button>\r\n\t\t\t\t\t\t\t\t\t\t<Radio.Button value={1}>Tháng</Radio.Button>\r\n\t\t\t\t\t\t\t\t\t\t<Radio.Button value={2}>Năm</Radio.Button>\r\n\t\t\t\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={280}>\r\n\t\t\t\t\t\t\t\t{renderView()}\r\n\t\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default RevenueChart;\r\n"]},"metadata":{},"sourceType":"module"}
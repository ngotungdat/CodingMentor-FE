{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\CourseVideoTable\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Card, Table } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useWrap } from '~/context/wrap';\n\nvar CourseVideoTable = function CourseVideoTable(props) {\n  _s();\n\n  var _props$loading, _props$loading2;\n\n  var _useWrap = useWrap(),\n      getTitlePage = _useWrap.getTitlePage;\n\n  var _useState = useState({\n    selectedRowKeys: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState([]),\n      dataSource = _useState2[0],\n      setDataSource = _useState2[1];\n\n  var _useState3 = useState([{\n    currentPage: 1,\n    listKeys: []\n  }]),\n      rowKeys = _useState3[0],\n      setRowKeys = _useState3[1];\n\n  var _useState4 = useState(1),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  var _useState5 = useState(null),\n      activeIndex = _useState5[0],\n      setActiveIndex = _useState5[1];\n\n  var selectRow = function selectRow(record) {\n    var selectedRowKeys = [];\n\n    if (selectedRowKeys.indexOf(record.key) >= 0) {\n      selectedRowKeys.splice(selectedRowKeys.indexOf(record.key), 1);\n    } else {\n      selectedRowKeys.push(record.key);\n    }\n\n    setState({\n      selectedRowKeys: selectedRowKeys\n    });\n  };\n\n  var onSelectedRowKeysChange = function onSelectedRowKeysChange(selectedRowKeys) {\n    setState({\n      selectedRowKeys: selectedRowKeys\n    });\n  };\n\n  var changePagination = function changePagination(pageNumber, pageSize) {\n    setCurrentPage(pageNumber);\n\n    if (!rowKeys.some(function (object) {\n      return object['currentPage'] == pageNumber;\n    })) {\n      rowKeys.push({\n        currentPage: pageNumber,\n        listKeys: []\n      });\n    }\n\n    setRowKeys(_toConsumableArray(rowKeys));\n\n    if (typeof props.getPagination != 'undefined') {\n      props.getPagination(pageNumber, pageSize);\n    } else {\n      return pageNumber;\n    }\n  };\n\n  var onChangeExpand = function onChangeExpand(expandedRows) {\n    console.log('Expand Rows: ', expandedRows);\n    setActiveIndex(parseInt(expandedRows[expandedRows.length - 1]));\n\n    if (rowKeys.some(function (object) {\n      return object['currentPage'] == currentPage;\n    })) {\n      var index = rowKeys.findIndex(function (item) {\n        return item.currentPage == currentPage;\n      });\n      rowKeys[index].listKeys = expandedRows;\n    }\n\n    setRowKeys(_toConsumableArray(rowKeys));\n  };\n\n  var returnRowKeys = function returnRowKeys() {\n    var rowK = null;\n\n    if (rowKeys.some(function (object) {\n      return object['currentPage'] == currentPage;\n    })) {\n      rowK = rowKeys.find(function (item) {\n        return item.currentPage === currentPage;\n      }).listKeys;\n    } else {\n      rowK = [];\n    }\n\n    return rowK;\n  };\n\n  var onExpand = function onExpand(expand, record) {\n    if (typeof props.handleExpand != 'undefined') {\n      props.handleExpand(record);\n    }\n  };\n\n  var onShowSizeChange = function onShowSizeChange(current, size) {\n    props.onChangePageSize && props.onChangePageSize(current, size);\n  };\n\n  var rowSelection = {\n    selectedRowKeys: state.selectedRowKeys,\n    onChange: onSelectedRowKeysChange,\n    hideSelectAll: true\n  };\n  useEffect(function () {\n    if (props.TitlePage) {\n      getTitlePage(props.TitlePage);\n    }\n\n    if (props.dataSource) {\n      var dataClone = _toConsumableArray(props.dataSource);\n\n      dataClone.forEach(function (item, index) {\n        item.key = index.toString();\n      });\n      setDataSource(dataClone);\n    }\n  }, [props.dataSource]);\n\n  var expandedRowRender = function expandedRowRender() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-detail-text\",\n        style: {\n          backgroundColor: 'red'\n        },\n        children: [\"asd asd asdqw tw qgasgdas dnb\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-table table-expand\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"cardRadius \".concat(props.addClass && props.addClass, \" \").concat(props.Size ? props.Size : ''),\n        title: props.Extra,\n        extra: props.TitleCard,\n        children: [props.children, /*#__PURE__*/_jsxDEV(Table, {\n          loading: ((_props$loading = props.loading) === null || _props$loading === void 0 ? void 0 : _props$loading.type) == 'GET_ALL' && ((_props$loading2 = props.loading) === null || _props$loading2 === void 0 ? void 0 : _props$loading2.status),\n          bordered: props.haveBorder ? props.haveBorder : false,\n          scroll: props.noScroll ? {\n            x: 'max-content'\n          } : {\n            x: 600\n          },\n          columns: props.columns,\n          dataSource: dataSource,\n          size: \"middle\",\n          pagination: {\n            pageSize: 30,\n            pageSizeOptions: ['30'],\n            onShowSizeChange: onShowSizeChange,\n            total: props.totalPage && props.totalPage,\n            onChange: function onChange(pageNumber, pageSize) {\n              return changePagination(pageNumber, pageSize);\n            },\n            current: props.currentPage && props.currentPage\n          },\n          rowClassName: function rowClassName(record, index) {\n            return index == activeIndex ? 'table-row-active' : index % 2 === 0 ? 'table-row-light' : 'table-row-dark';\n          },\n          rowSelection: rowSelection,\n          onRow: function onRow(record, index) {\n            return {\n              onClick: function onClick() {\n                selectRow(record);\n                setActiveIndex(index);\n              }\n            };\n          } // onExpandedRowsChange={onChangeExpand}\n          // expandedRowRender={(record, index, indent, expaned) => (expaned ? props.expandable : null)}\n          // onExpand={onExpand}\n          // expandedRowKeys={returnRowKeys()}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false);\n};\n\n_s(CourseVideoTable, \"+Ls1w04QOA3wNb8L0G1ZMTyppn8=\", false, function () {\n  return [useWrap];\n});\n\n_c = CourseVideoTable;\nexport default CourseVideoTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseVideoTable\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/CourseVideoTable/index.tsx"],"names":["Card","Table","React","useEffect","useState","useWrap","CourseVideoTable","props","getTitlePage","selectedRowKeys","state","setState","dataSource","setDataSource","currentPage","listKeys","rowKeys","setRowKeys","setCurrentPage","activeIndex","setActiveIndex","selectRow","record","indexOf","key","splice","push","onSelectedRowKeysChange","changePagination","pageNumber","pageSize","some","object","getPagination","onChangeExpand","expandedRows","console","log","parseInt","length","index","findIndex","item","returnRowKeys","rowK","find","onExpand","expand","handleExpand","onShowSizeChange","current","size","onChangePageSize","rowSelection","onChange","hideSelectAll","TitlePage","dataClone","forEach","toString","expandedRowRender","backgroundColor","addClass","Size","Extra","TitleCard","children","loading","type","status","haveBorder","noScroll","x","columns","pageSizeOptions","total","totalPage","onClick"],"mappings":"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","sourcesContent":["import { Card, Table } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst CourseVideoTable = (props) => {\r\n\tconst { getTitlePage } = useWrap()\r\n\tconst [state, setState] = useState({ selectedRowKeys: [] })\r\n\tconst [dataSource, setDataSource] = useState([])\r\n\tconst [rowKeys, setRowKeys] = useState([\r\n\t\t{\r\n\t\t\tcurrentPage: 1,\r\n\t\t\tlistKeys: []\r\n\t\t}\r\n\t])\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [activeIndex, setActiveIndex] = useState(null)\r\n\r\n\tconst selectRow = (record) => {\r\n\t\tconst selectedRowKeys = []\r\n\r\n\t\tif (selectedRowKeys.indexOf(record.key) >= 0) {\r\n\t\t\tselectedRowKeys.splice(selectedRowKeys.indexOf(record.key), 1)\r\n\t\t} else {\r\n\t\t\tselectedRowKeys.push(record.key)\r\n\t\t}\r\n\t\tsetState({ selectedRowKeys })\r\n\t}\r\n\r\n\tconst onSelectedRowKeysChange = (selectedRowKeys) => {\r\n\t\tsetState({ selectedRowKeys })\r\n\t}\r\n\r\n\tconst changePagination = (pageNumber, pageSize) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tif (!rowKeys.some((object) => object['currentPage'] == pageNumber)) {\r\n\t\t\trowKeys.push({\r\n\t\t\t\tcurrentPage: pageNumber,\r\n\t\t\t\tlistKeys: []\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tsetRowKeys([...rowKeys])\r\n\r\n\t\tif (typeof props.getPagination != 'undefined') {\r\n\t\t\tprops.getPagination(pageNumber, pageSize)\r\n\t\t} else {\r\n\t\t\treturn pageNumber\r\n\t\t}\r\n\t}\r\n\r\n\tconst onChangeExpand = (expandedRows) => {\r\n\t\tconsole.log('Expand Rows: ', expandedRows)\r\n\t\tsetActiveIndex(parseInt(expandedRows[expandedRows.length - 1]))\r\n\t\tif (rowKeys.some((object) => object['currentPage'] == currentPage)) {\r\n\t\t\tlet index = rowKeys.findIndex((item) => item.currentPage == currentPage)\r\n\t\t\trowKeys[index].listKeys = expandedRows\r\n\t\t}\r\n\r\n\t\tsetRowKeys([...rowKeys])\r\n\t}\r\n\r\n\tconst returnRowKeys = () => {\r\n\t\tlet rowK = null\r\n\r\n\t\tif (rowKeys.some((object) => object['currentPage'] == currentPage)) {\r\n\t\t\trowK = rowKeys.find((item) => item.currentPage === currentPage).listKeys\r\n\t\t} else {\r\n\t\t\trowK = []\r\n\t\t}\r\n\t\treturn rowK\r\n\t}\r\n\r\n\tconst onExpand = (expand, record) => {\r\n\t\tif (typeof props.handleExpand != 'undefined') {\r\n\t\t\tprops.handleExpand(record)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onShowSizeChange = (current, size) => {\r\n\t\tprops.onChangePageSize && props.onChangePageSize(current, size)\r\n\t}\r\n\r\n\tconst rowSelection = {\r\n\t\tselectedRowKeys: state.selectedRowKeys,\r\n\t\tonChange: onSelectedRowKeysChange,\r\n\t\thideSelectAll: true\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.TitlePage) {\r\n\t\t\tgetTitlePage(props.TitlePage)\r\n\t\t}\r\n\t\tif (props.dataSource) {\r\n\t\t\tlet dataClone = [...props.dataSource]\r\n\t\t\tdataClone.forEach((item, index) => {\r\n\t\t\t\titem.key = index.toString()\r\n\t\t\t})\r\n\t\t\tsetDataSource(dataClone)\r\n\t\t}\r\n\t}, [props.dataSource])\r\n\r\n\tconst expandedRowRender = () => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"feedback-detail-text\" style={{ backgroundColor: 'red' }}>\r\n\t\t\t\t\tasd asd asdqw tw qgasgdas dnb{' '}\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"wrap-table table-expand\">\r\n\t\t\t\t<Card\r\n\t\t\t\t\tclassName={`cardRadius ${props.addClass && props.addClass} ${props.Size ? props.Size : ''}`}\r\n\t\t\t\t\ttitle={props.Extra}\r\n\t\t\t\t\textra={props.TitleCard}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tloading={props.loading?.type == 'GET_ALL' && props.loading?.status}\r\n\t\t\t\t\t\tbordered={props.haveBorder ? props.haveBorder : false}\r\n\t\t\t\t\t\tscroll={props.noScroll ? { x: 'max-content' } : { x: 600 }}\r\n\t\t\t\t\t\tcolumns={props.columns}\r\n\t\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\t\tsize=\"middle\"\r\n\t\t\t\t\t\tpagination={{\r\n\t\t\t\t\t\t\tpageSize: 30,\r\n\t\t\t\t\t\t\tpageSizeOptions: ['30'],\r\n\t\t\t\t\t\t\tonShowSizeChange: onShowSizeChange,\r\n\t\t\t\t\t\t\ttotal: props.totalPage && props.totalPage,\r\n\t\t\t\t\t\t\tonChange: (pageNumber, pageSize) => changePagination(pageNumber, pageSize),\r\n\t\t\t\t\t\t\tcurrent: props.currentPage && props.currentPage\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\trowClassName={(record, index) =>\r\n\t\t\t\t\t\t\tindex == activeIndex ? 'table-row-active' : index % 2 === 0 ? 'table-row-light' : 'table-row-dark'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trowSelection={rowSelection}\r\n\t\t\t\t\t\tonRow={(record, index) => ({\r\n\t\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\t\tselectRow(record)\r\n\t\t\t\t\t\t\t\tsetActiveIndex(index)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t// onExpandedRowsChange={onChangeExpand}\r\n\t\t\t\t\t\t// expandedRowRender={(record, index, indent, expaned) => (expaned ? props.expandable : null)}\r\n\t\t\t\t\t\t// onExpand={onExpand}\r\n\t\t\t\t\t\t// expandedRowKeys={returnRowKeys()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CourseVideoTable\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Customer\\\\Service\\\\Teacher\\\\ServiceTestTeacher.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FormOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport moment from 'moment';\nimport Link from 'next/link';\nimport router from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport { branchApi, examAppointmentResultApi, examTopicApi, studentApi, teacherApi, testCustomerApi } from '~/apiBase';\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase';\nimport NotiModal from '~/components/Elements/NotiModal/NotiModal';\nimport SortBox from '~/components/Elements/SortBox';\nimport ExpandTable from '~/components/ExpandTable';\nimport ExamAppointmentPoint from '~/components/Global/ExamAppointment/ExamAppointmentPoint';\nimport LayoutBase from '~/components/LayoutBase';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nvar pageIndex = 1;\nvar listFieldSearch = {\n  pageIndex: 1,\n  FullNameUnicode: null\n};\nvar listFieldFilter = {\n  pageIndex: 1,\n  BranchID: null,\n  // lọc\n  UserInformationID: null,\n  Status: null,\n  AppointmentDate: null\n};\nvar dataOption = [{\n  dataSort: {\n    sort: 2,\n    sortType: true\n  },\n  text: 'Tên A - Z '\n}, {\n  dataSort: {\n    sort: 2,\n    sortType: false\n  },\n  text: 'Tên Z - A'\n}, {\n  dataSort: {\n    sort: 0,\n    sortType: true\n  },\n  text: 'Ngày hẹn A - Z'\n}, {\n  dataSort: {\n    sort: 0,\n    sortType: false\n  },\n  text: 'Ngày hẹn Z - A'\n}]; // -- FOR DIFFERENT VIEW --\n\nvar listApi = [{\n  api: branchApi,\n  text: 'Trung tâm',\n  name: 'Branch'\n}, {\n  api: studentApi,\n  text: 'Học viên',\n  name: 'Student'\n}, {\n  api: teacherApi,\n  text: 'Giáo viên',\n  name: 'Teacher'\n}];\nexport default function ServiceTestTeacher(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState({\n    Branch: [],\n    Student: [],\n    Teacher: []\n  }),\n      listDataForm = _useState[0],\n      setListDataForm = _useState[1];\n\n  var _useState2 = useState([]),\n      dataExam = _useState2[0],\n      setDataExam = _useState2[1];\n\n  var _useState3 = useState(null),\n      currentDay = _useState3[0],\n      setCurrentDate = _useState3[1];\n\n  var _useState4 = useState(false),\n      isOpenNoti = _useState4[0],\n      setisOpenNoti = _useState4[1]; // ------ BASE USESTATE TABLE -------\n\n\n  var _useState5 = useState([]),\n      dataSource = _useState5[0],\n      setDataSource = _useState5[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      pageSize = _useWrap.pageSize,\n      userInformation = _useWrap.userInformation;\n\n  var listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    sort: null,\n    sortType: null,\n    TeacherID: null\n  };\n\n  var _useState6 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var _useState7 = useState(null),\n      totalPage = _useState7[0],\n      setTotalPage = _useState7[1];\n\n  var _useState8 = useState(null),\n      indexRow = _useState8[0],\n      setIndexRow = _useState8[1];\n\n  var _useState9 = useState(1),\n      currentPage = _useState9[0],\n      setCurrentPage = _useState9[1];\n\n  var _useState10 = useState(listTodoApi),\n      todoApi = _useState10[0],\n      setTodoApi = _useState10[1]; // ------ LIST FILTER -------\n\n\n  var _useState11 = useState([{\n    name: 'BranchID',\n    title: 'Trung tâm',\n    col: 'col-md-12 col-12',\n    type: 'select',\n    optionList: null,\n    // Gọi api xong trả data vào đây\n    value: null\n  }, {\n    name: 'Status',\n    title: 'Trạng thái',\n    col: 'col-md-12 col-12',\n    type: 'select',\n    optionList: [{\n      title: 'Chưa test',\n      value: 0\n    }, {\n      title: 'Đang chấm bài test',\n      value: 1\n    }, {\n      title: 'Chưa đăng kí khóa học',\n      value: 2\n    }, {\n      title: 'Đã đăng kí khóa học',\n      value: 3\n    }, {\n      title: 'Đã hủy hẹn test',\n      value: 4\n    }],\n    value: null\n  }, {\n    name: 'AppointmentDate',\n    title: 'Ngày hẹn test',\n    col: 'col-md-12 col-12',\n    type: 'date-single',\n    value: null\n  }, {\n    name: 'date-range',\n    title: 'Từ - đến',\n    col: 'col-12',\n    type: 'date-range',\n    value: null\n  }]),\n      dataFilter = _useState11[0],\n      setDataFilter = _useState11[1];\n\n  var makeNewData = function makeNewData(data, name) {\n    var newData = null;\n\n    switch (name) {\n      case 'Branch':\n        newData = data.map(function (item) {\n          return {\n            title: item.BranchName,\n            value: item.ID\n          };\n        });\n        setDataFunc('BranchID', newData);\n        break;\n\n      case 'Student':\n        newData = data.map(function (item) {\n          return {\n            title: item.FullNameUnicode,\n            value: item.UserInformationID,\n            counselorsName: item.CounselorsName == null ? '' : item.CounselorsName\n          };\n        });\n        break;\n\n      case 'Teacher':\n        newData = data.map(function (item) {\n          return {\n            title: item.FullNameUnicode,\n            value: item.UserInformationID\n          };\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    return newData;\n  };\n\n  var getDataTolist = function getDataTolist(data, name) {\n    var newData = makeNewData(data, name);\n    Object.keys(listDataForm).forEach(function (key) {\n      if (key == name) {\n        listDataForm[key] = newData;\n      }\n    });\n    setListDataForm(_objectSpread({}, listDataForm));\n  }; // ----------- GET DATA EXAM ------------\n\n\n  var getDataExam = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return examTopicApi.getAll({\n                selectAll: true,\n                type: 1\n              });\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                setDataExam(res.data.data);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('Error Exam: ', _context.t0.message);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function getDataExam() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // ----------- GET DATA SOURCE ---------------\n\n\n  var getDataAll = function getDataAll(arrApi) {\n    arrApi.forEach(function (item, index) {\n      ;\n\n      _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                res = null;\n                _context2.prev = 1;\n\n                if (!(item.name == 'Counselors')) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 5;\n                return item.api.getAll({\n                  pageIndex: 1,\n                  pageSize: 99999,\n                  RoleID: 6,\n                  StatusID: 0,\n                  Enable: true\n                });\n\n              case 5:\n                res = _context2.sent;\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.next = 10;\n                return item.api.getAll({\n                  pageIndex: 1,\n                  pageSize: 99999,\n                  Enable: true\n                });\n\n              case 10:\n                res = _context2.sent;\n\n              case 11:\n                res.status == 200 && getDataTolist(res.data.data, item.name);\n                res.status == 204 && showNoti('danger', item.text + ' Không có dữ liệu');\n                _context2.next = 18;\n                break;\n\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](1);\n                showNoti('danger', _context2.t0.message);\n\n              case 18:\n                _context2.prev = 18;\n                return _context2.finish(18);\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 15, 18, 20]]);\n      }))();\n    });\n  }; // GET DATA SOURCE\n\n\n  var getDataSource = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context3.prev = 1;\n              _context3.next = 4;\n              return examAppointmentResultApi.getAll(todoApi);\n\n            case 4:\n              res = _context3.sent;\n\n              if (res.status == 200) {\n                setDataSource(res.data.data);\n                setTotalPage(res.data.totalRow); //@ts-ignore\n                // setTestDate(moment(res.data.data.AppointmentDate).format('DD/MM/YYYY HH:mm'));\n              }\n\n              res.status == 204 && setDataSource([]);\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](1);\n              showNoti('danger', _context3.t0.message);\n\n            case 12:\n              _context3.prev = 12;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context3.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function getDataSource() {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // ------ SET DATA FUN ------\n\n\n  var setDataFunc = function setDataFunc(name, data) {\n    dataFilter.every(function (item, index) {\n      if (item.name == name) {\n        item.optionList = data;\n        return false;\n      }\n\n      return true;\n    });\n    setDataFilter(_toConsumableArray(dataFilter));\n  }; // ---------------- AFTER SUBMIT -----------------\n\n\n  var afterPost = function afterPost(mes) {\n    // showNoti(\"success\", mes);\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // ----------------- ON SUBMIT --------------------\n\n\n  var _onSubmit = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dataSubmit) {\n      var res, newDataSource, _res;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              // console.log('Data submit: ', dataSubmit);\n              // console.log('List data form: ', listDataForm);\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              res = null;\n              _context4.prev = 2;\n\n              if (!dataSubmit.ID) {\n                _context4.next = 10;\n                break;\n              }\n\n              _context4.next = 6;\n              return testCustomerApi.update(dataSubmit);\n\n            case 6:\n              res = _context4.sent;\n\n              if (res.status == 200) {\n                newDataSource = _toConsumableArray(dataSource);\n                newDataSource.splice(indexRow, 1, _objectSpread(_objectSpread({}, dataSubmit), {}, {\n                  FullNameUnicode: listDataForm.Student.find(function (item) {\n                    return item.value == dataSubmit.UserInformationID;\n                  }).title,\n                  BranchName: listDataForm.Branch.find(function (item) {\n                    return item.value == dataSubmit.BranchID;\n                  }).title,\n                  TeacherName: listDataForm.Teacher.find(function (item) {\n                    return item.value == dataSubmit.TeacherID;\n                  }).title\n                }));\n                setDataSource(newDataSource);\n                showNoti('success', res.data.message);\n              }\n\n              _context4.next = 14;\n              break;\n\n            case 10:\n              _context4.next = 12;\n              return testCustomerApi.add(dataSubmit);\n\n            case 12:\n              res = _context4.sent;\n              ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && afterPost(res.data.message);\n\n            case 14:\n              _context4.next = 20;\n              break;\n\n            case 16:\n              _context4.prev = 16;\n              _context4.t0 = _context4[\"catch\"](2);\n              console.log('error: ', _context4.t0);\n              showNoti('danger', _context4.t0.message);\n\n            case 20:\n              _context4.prev = 20;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context4.finish(20);\n\n            case 23:\n              return _context4.abrupt(\"return\", res);\n\n            case 24:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 16, 20, 23]]);\n    }));\n\n    return function _onSubmit(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // -------------- HANDLE FILTER ------------------\n\n\n  var _handleFilter = function handleFilter(listFilter) {\n    var newListFilter = _objectSpread({}, listFieldFilter);\n\n    listFilter.forEach(function (item, index) {\n      var key = item.name;\n      Object.keys(newListFilter).forEach(function (keyFilter) {\n        if (keyFilter == key) {\n          newListFilter[key] = item.value;\n        }\n      });\n    });\n    setTodoApi(_objectSpread(_objectSpread(_objectSpread({}, listTodoApi), newListFilter), {}, {\n      pageIndex: 1\n    }));\n  }; // --------------- HANDLE SORT ----------------------\n\n\n  var _handleSort = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(option) {\n      var newTodoApi;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n                pageIndex: 1,\n                sort: option.title.sort,\n                sortType: option.title.sortType\n              });\n              setCurrentPage(1), setTodoApi(newTodoApi);\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function handleSort(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); // ------------ ON SEARCH -----------------------\n\n\n  var checkField = function checkField(valueSearch, dataIndex) {\n    var newList = _objectSpread({}, listFieldSearch);\n\n    Object.keys(newList).forEach(function (key) {\n      if (key != dataIndex) {\n        if (key != 'pageIndex') {\n          newList[key] = null;\n        }\n      } else {\n        newList[key] = valueSearch;\n      }\n    });\n    return newList;\n  };\n\n  var onSearch = function onSearch(valueSearch, dataIndex) {\n    var clearKey = checkField(valueSearch, dataIndex);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), clearKey));\n  }; // HANDLE RESET\n\n\n  var resetListFieldSearch = function resetListFieldSearch() {\n    Object.keys(listFieldSearch).forEach(function (key) {\n      if (key != 'pageIndex') {\n        listFieldSearch[key] = null;\n      }\n    });\n  };\n\n  var handleReset = function handleReset() {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1), resetListFieldSearch();\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  var _getPagination = function getPagination(pageNumber) {\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    console.log('Todoapi: ', todoApi);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      // ...listFieldSearch,\n      pageIndex: pageIndex\n    }));\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(function () {\n    if (userInformation) {\n      getDataSource();\n    }\n  }, [todoApi]);\n  useEffect(function () {\n    // getDataAll(listApi);\n    getDataExam(); // Get current date\n\n    var currentdate = new Date();\n    var datetime = currentdate.getDate() + '/' + (currentdate.getMonth() + 1) + '/' + currentdate.getFullYear() + ' ' + currentdate.getHours() + ':' + currentdate.getMinutes();\n    setCurrentDate(datetime);\n  }, []);\n  useEffect(function () {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n\n    if (userInformation) {\n      setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n        TeacherID: userInformation.UserInformationID\n      }));\n    }\n  }, [userInformation]);\n\n  var moveToTest = function moveToTest(e, data) {\n    e.preventDefault();\n    var testDate = moment(data.AppointmentDate).format('DD/MM/YYYY') + ' ' + data.Time;\n    console.log('Test DAte: ', testDate);\n\n    if (currentDay < testDate) {\n      setisOpenNoti(true);\n    } else {\n      router.push('');\n    }\n  };\n\n  var expandedRowRender = function expandedRowRender(record) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ExamAppointmentPoint, {\n        infoID: record.ExamAppointmentID,\n        userID: record.UserInformationID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false);\n  };\n\n  var columns = [_objectSpread({\n    title: 'Học viên',\n    dataIndex: 'FullNameUnicode',\n    render: function render(a) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-primary\",\n        children: a\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 19\n      }, _this);\n    }\n  }, FilterColumn('FullNameUnicode', onSearch, handleReset, 'text')), {\n    width: 150,\n    title: 'Đề test',\n    dataIndex: 'ExamTopicName',\n    render: function render(text, data) {\n      return data.TeacherID === userInformation.UserInformationID && !data.isDone && /*#__PURE__*/_jsxDEV(Link, {\n        href: {\n          pathname: '/customer/service/service-test-teacher/detail/[slug]',\n          query: {\n            slug: \"\".concat(data.ID),\n            teacherMarking: data.TeacherID,\n            packageResultID: data.ID,\n            type: 'test'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Ch\\u1EA5m b\\xE0i ngay\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"\",\n            className: \"font-weight-link\",\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 6\n      }, _this);\n    }\n  }, {\n    title: 'Ngày hẹn',\n    dataIndex: 'AppointmentDate',\n    render: function render(date) {\n      return moment(date).format('DD/MM/YYYY');\n    }\n  }, {\n    width: 150,\n    title: 'Giờ hẹn',\n    dataIndex: 'Time'\n  }, {\n    title: 'Tư vấn viên',\n    dataIndex: 'CounselorsName'\n  }, {\n    title: 'Trạng thái',\n    dataIndex: 'isDone',\n    align: 'center',\n    filters: [{\n      text: 'Chưa chấm',\n      value: false\n    }, {\n      text: 'Đã chấm',\n      value: true\n    }],\n    onFilter: function onFilter(value, record) {\n      return record.isDone === value;\n    },\n    render: function render(type) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [type == true && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag green\",\n          children: \"\\u0110\\xE3 ch\\u1EA5m xong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 23\n        }, _this), type == false && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag gray\",\n          children: \"Ch\\u01B0a ch\\u1EA5m xong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 24\n        }, _this)]\n      }, void 0, true);\n    }\n  }, {\n    render: function render(data) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: data.TeacherID === userInformation.UserInformationID && /*#__PURE__*/_jsxDEV(Link, {\n          href: {\n            pathname: '/customer/service/service-test-teacher/detail/[slug]',\n            query: {\n              slug: \"\".concat(data.ID),\n              teacherMarking: data.TeacherID,\n              packageResultID: data.ID,\n              type: 'test'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: !data.isDone ? 'Chấm bài ngay' : 'Xem chi tiết',\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-icon edit\",\n              children: /*#__PURE__*/_jsxDEV(FormOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 9\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userInformation && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NotiModal, {\n        isOpen: isOpenNoti,\n        isCancel: function isCancel() {\n          return setisOpenNoti(false);\n        },\n        isOk: function isOk() {\n          return setisOpenNoti(false);\n        },\n        content: \"Ch\\u01B0a \\u0111\\u1EBFn gi\\u1EDD l\\xE0m \\u0111\\u1EC1 test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ExpandTable, {\n        currentPage: currentPage,\n        totalPage: totalPage && totalPage,\n        getPagination: function getPagination(pageNumber) {\n          return _getPagination(pageNumber);\n        },\n        loading: isLoading,\n        addClass: \"basic-header\",\n        TitlePage: \"Ch\\u1EA5m b\\xE0i h\\u1EB9n test\" // TitleCard={\n        //   <StudentAdviseForm\n        //     listData={listDataForm}\n        //     isLoading={isLoading}\n        //     _onSubmit={(data: any) => _onSubmit(data)}\n        //   />\n        // }\n        ,\n        dataSource: dataSource,\n        columns: columns,\n        Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"extra-table\",\n          children: [/*#__PURE__*/_jsxDEV(FilterBase, {\n            dataFilter: dataFilter,\n            handleFilter: function handleFilter(listFilter) {\n              return _handleFilter(listFilter);\n            },\n            handleReset: handleReset\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(SortBox, {\n            handleSort: function handleSort(value) {\n              return _handleSort(value);\n            },\n            dataOption: dataOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 8\n        }, this),\n        expandable: {\n          expandedRowRender: expandedRowRender\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(ServiceTestTeacher, \"rhojiXW1IL00qDPyyil8Fh9/kIQ=\", false, function () {\n  return [useWrap];\n});\n\n_c = ServiceTestTeacher;\nServiceTestTeacher.layout = LayoutBase;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServiceTestTeacher\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Customer/Service/Teacher/ServiceTestTeacher.tsx"],"names":["FormOutlined","Tooltip","moment","Link","router","React","useEffect","useState","branchApi","examAppointmentResultApi","examTopicApi","studentApi","teacherApi","testCustomerApi","FilterBase","NotiModal","SortBox","ExpandTable","ExamAppointmentPoint","LayoutBase","FilterColumn","useWrap","pageIndex","listFieldSearch","FullNameUnicode","listFieldFilter","BranchID","UserInformationID","Status","AppointmentDate","dataOption","dataSort","sort","sortType","text","listApi","api","name","ServiceTestTeacher","props","Branch","Student","Teacher","listDataForm","setListDataForm","dataExam","setDataExam","currentDay","setCurrentDate","isOpenNoti","setisOpenNoti","dataSource","setDataSource","showNoti","pageSize","userInformation","listTodoApi","TeacherID","type","status","isLoading","setIsLoading","totalPage","setTotalPage","indexRow","setIndexRow","currentPage","setCurrentPage","todoApi","setTodoApi","title","col","optionList","value","dataFilter","setDataFilter","makeNewData","data","newData","map","item","BranchName","ID","setDataFunc","counselorsName","CounselorsName","getDataTolist","Object","keys","forEach","key","getDataExam","getAll","selectAll","res","console","log","message","getDataAll","arrApi","index","RoleID","StatusID","Enable","getDataSource","totalRow","every","afterPost","mes","_onSubmit","dataSubmit","update","newDataSource","splice","find","TeacherName","add","handleFilter","listFilter","newListFilter","keyFilter","handleSort","option","newTodoApi","checkField","valueSearch","dataIndex","newList","onSearch","clearKey","resetListFieldSearch","handleReset","getPagination","pageNumber","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","moveToTest","e","preventDefault","testDate","format","Time","push","expandedRowRender","record","ExamAppointmentID","columns","render","a","width","isDone","pathname","query","slug","teacherMarking","packageResultID","date","align","filters","onFilter","layout"],"mappings":"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","sourcesContent":["import { FormOutlined } from '@ant-design/icons'\r\nimport { Tooltip } from 'antd'\r\nimport moment from 'moment'\r\nimport Link from 'next/link'\r\nimport router from 'next/router'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { branchApi, examAppointmentResultApi, examTopicApi, studentApi, teacherApi, testCustomerApi } from '~/apiBase'\r\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase'\r\nimport NotiModal from '~/components/Elements/NotiModal/NotiModal'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport ExpandTable from '~/components/ExpandTable'\r\nimport ExamAppointmentPoint from '~/components/Global/ExamAppointment/ExamAppointmentPoint'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nlet pageIndex = 1\r\n\r\nlet listFieldSearch = {\r\n\tpageIndex: 1,\r\n\tFullNameUnicode: null\r\n}\r\n\r\nlet listFieldFilter = {\r\n\tpageIndex: 1,\r\n\tBranchID: null, // lọc\r\n\tUserInformationID: null,\r\n\tStatus: null,\r\n\tAppointmentDate: null\r\n}\r\n\r\nconst dataOption = [\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Tên A - Z '\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Tên Z - A'\r\n\t},\r\n\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Ngày hẹn A - Z'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Ngày hẹn Z - A'\r\n\t}\r\n]\r\n\r\n// -- FOR DIFFERENT VIEW --\r\ninterface optionObj {\r\n\ttitle: string\r\n\tvalue: number\r\n}\r\n\r\ninterface studentObj {\r\n\ttitle: string\r\n\tvalue: number\r\n\tcounselorsName: string\r\n}\r\n\r\ninterface listDataForm {\r\n\tBranch: Array<optionObj>\r\n\tStudent: Array<studentObj>\r\n\tTeacher: Array<optionObj>\r\n}\r\n\r\nconst listApi = [\r\n\t{\r\n\t\tapi: branchApi,\r\n\t\ttext: 'Trung tâm',\r\n\t\tname: 'Branch'\r\n\t},\r\n\t{\r\n\t\tapi: studentApi,\r\n\t\ttext: 'Học viên',\r\n\t\tname: 'Student'\r\n\t},\r\n\t{\r\n\t\tapi: teacherApi,\r\n\t\ttext: 'Giáo viên',\r\n\t\tname: 'Teacher'\r\n\t}\r\n]\r\n\r\nexport default function ServiceTestTeacher(props) {\r\n\tconst [listDataForm, setListDataForm] = useState<listDataForm>({\r\n\t\tBranch: [],\r\n\t\tStudent: [],\r\n\t\tTeacher: []\r\n\t})\r\n\tconst [dataExam, setDataExam] = useState<IExamTopic[]>([])\r\n\tconst [currentDay, setCurrentDate] = useState(null)\r\n\tconst [isOpenNoti, setisOpenNoti] = useState(false)\r\n\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState([])\r\n\tconst { showNoti, pageSize, userInformation } = useWrap()\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tTeacherID: null\r\n\t}\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [indexRow, setIndexRow] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// ------ LIST FILTER -------\r\n\tconst [dataFilter, setDataFilter] = useState([\r\n\t\t{\r\n\t\t\tname: 'BranchID',\r\n\t\t\ttitle: 'Trung tâm',\r\n\t\t\tcol: 'col-md-12 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null, // Gọi api xong trả data vào đây\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tname: 'Status',\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tcol: 'col-md-12 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Chưa test',\r\n\t\t\t\t\tvalue: 0\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Đang chấm bài test',\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Chưa đăng kí khóa học',\r\n\t\t\t\t\tvalue: 2\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Đã đăng kí khóa học',\r\n\t\t\t\t\tvalue: 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Đã hủy hẹn test',\r\n\t\t\t\t\tvalue: 4\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'AppointmentDate',\r\n\t\t\ttitle: 'Ngày hẹn test',\r\n\t\t\tcol: 'col-md-12 col-12',\r\n\t\t\ttype: 'date-single',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'date-range',\r\n\t\t\ttitle: 'Từ - đến',\r\n\t\t\tcol: 'col-12',\r\n\t\t\ttype: 'date-range',\r\n\t\t\tvalue: null\r\n\t\t}\r\n\t])\r\n\r\n\tconst makeNewData = (data, name) => {\r\n\t\tlet newData = null\r\n\t\tswitch (name) {\r\n\t\t\tcase 'Branch':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.BranchName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('BranchID', newData)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 'Student':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.FullNameUnicode,\r\n\t\t\t\t\tvalue: item.UserInformationID,\r\n\t\t\t\t\tcounselorsName: item.CounselorsName == null ? '' : item.CounselorsName\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Teacher':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.FullNameUnicode,\r\n\t\t\t\t\tvalue: item.UserInformationID\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\r\n\t\treturn newData\r\n\t}\r\n\r\n\tconst getDataTolist = (data: any, name: any) => {\r\n\t\tlet newData = makeNewData(data, name)\r\n\r\n\t\tObject.keys(listDataForm).forEach(function (key) {\r\n\t\t\tif (key == name) {\r\n\t\t\t\tlistDataForm[key] = newData\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetListDataForm({ ...listDataForm })\r\n\t}\r\n\r\n\t// ----------- GET DATA EXAM ------------\r\n\tconst getDataExam = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await examTopicApi.getAll({\r\n\t\t\t\tselectAll: true,\r\n\t\t\t\ttype: 1\r\n\t\t\t})\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetDataExam(res.data.data)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Error Exam: ', error.message)\r\n\t\t}\r\n\t}\r\n\r\n\t// ----------- GET DATA SOURCE ---------------\r\n\tconst getDataAll = (arrApi) => {\r\n\t\tarrApi.forEach((item, index) => {\r\n\t\t\t;(async () => {\r\n\t\t\t\tlet res = null\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (item.name == 'Counselors') {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tRoleID: 6,\r\n\t\t\t\t\t\t\tStatusID: 0,\r\n\t\t\t\t\t\t\tEnable: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tEnable: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tres.status == 200 && getDataTolist(res.data.data, item.name)\r\n\r\n\t\t\t\t\tres.status == 204 && showNoti('danger', item.text + ' Không có dữ liệu')\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t\t} finally {\r\n\t\t\t\t}\r\n\t\t\t})()\r\n\t\t})\r\n\t}\r\n\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await examAppointmentResultApi.getAll(todoApi)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetDataSource(res.data.data)\r\n\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\t// setTestDate(moment(res.data.data.AppointmentDate).format('DD/MM/YYYY HH:mm'));\r\n\t\t\t}\r\n\t\t\tres.status == 204 && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// ------ SET DATA FUN ------\r\n\tconst setDataFunc = (name, data) => {\r\n\t\tdataFilter.every((item, index) => {\r\n\t\t\tif (item.name == name) {\r\n\t\t\t\titem.optionList = data\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t\tsetDataFilter([...dataFilter])\r\n\t}\r\n\r\n\t// ---------------- AFTER SUBMIT -----------------\r\n\tconst afterPost = (mes) => {\r\n\t\t// showNoti(\"success\", mes);\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// ----------------- ON SUBMIT --------------------\r\n\tconst _onSubmit = async (dataSubmit: any) => {\r\n\t\t// console.log('Data submit: ', dataSubmit);\r\n\t\t// console.log('List data form: ', listDataForm);\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet res = null\r\n\r\n\t\ttry {\r\n\t\t\tif (dataSubmit.ID) {\r\n\t\t\t\tres = await testCustomerApi.update(dataSubmit)\r\n\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tlet newDataSource = [...dataSource]\r\n\t\t\t\t\tnewDataSource.splice(indexRow, 1, {\r\n\t\t\t\t\t\t...dataSubmit,\r\n\t\t\t\t\t\tFullNameUnicode: listDataForm.Student.find((item) => item.value == dataSubmit.UserInformationID).title,\r\n\t\t\t\t\t\tBranchName: listDataForm.Branch.find((item) => item.value == dataSubmit.BranchID).title,\r\n\t\t\t\t\t\tTeacherName: listDataForm.Teacher.find((item) => item.value == dataSubmit.TeacherID).title\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetDataSource(newDataSource)\r\n\t\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tres = await testCustomerApi.add(dataSubmit)\r\n\t\t\t\tres?.status == 200 && afterPost(res.data.message)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error: ', error)\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\t// -------------- HANDLE FILTER ------------------\r\n\tconst handleFilter = (listFilter) => {\r\n\t\tlet newListFilter = { ...listFieldFilter }\r\n\t\tlistFilter.forEach((item, index) => {\r\n\t\t\tlet key = item.name\r\n\t\t\tObject.keys(newListFilter).forEach((keyFilter) => {\r\n\t\t\t\tif (keyFilter == key) {\r\n\t\t\t\t\tnewListFilter[key] = item.value\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tsetTodoApi({ ...listTodoApi, ...newListFilter, pageIndex: 1 })\r\n\t}\r\n\r\n\t// --------------- HANDLE SORT ----------------------\r\n\tconst handleSort = async (option) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetCurrentPage(1), setTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// ------------ ON SEARCH -----------------------\r\n\r\n\tconst checkField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = { ...listFieldSearch }\r\n\t\tObject.keys(newList).forEach(function (key) {\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\t\tnewList[key] = null\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewList[key] = valueSearch\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn newList\r\n\t}\r\n\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tlet clearKey = checkField(valueSearch, dataIndex)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t...clearKey\r\n\t\t})\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tconst resetListFieldSearch = () => {\r\n\t\tObject.keys(listFieldSearch).forEach(function (key) {\r\n\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\tlistFieldSearch[key] = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1), resetListFieldSearch()\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tpageIndex = pageNumber\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tconsole.log('Todoapi: ', todoApi)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t// ...listFieldSearch,\r\n\t\t\tpageIndex: pageIndex\r\n\t\t})\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tif (userInformation) {\r\n\t\t\tgetDataSource()\r\n\t\t}\r\n\t}, [todoApi])\r\n\r\n\tuseEffect(() => {\r\n\t\t// getDataAll(listApi);\r\n\t\tgetDataExam()\r\n\r\n\t\t// Get current date\r\n\t\tlet currentdate = new Date()\r\n\t\tlet datetime =\r\n\t\t\tcurrentdate.getDate() +\r\n\t\t\t'/' +\r\n\t\t\t(currentdate.getMonth() + 1) +\r\n\t\t\t'/' +\r\n\t\t\tcurrentdate.getFullYear() +\r\n\t\t\t' ' +\r\n\t\t\tcurrentdate.getHours() +\r\n\t\t\t':' +\r\n\t\t\tcurrentdate.getMinutes()\r\n\r\n\t\tsetCurrentDate(datetime)\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tif (userInformation) {\r\n\t\t\tsetTodoApi({\r\n\t\t\t\t...todoApi,\r\n\t\t\t\tTeacherID: userInformation.UserInformationID\r\n\t\t\t})\r\n\t\t}\r\n\t}, [userInformation])\r\n\r\n\tconst moveToTest = (e, data) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tlet testDate = moment(data.AppointmentDate).format('DD/MM/YYYY') + ' ' + data.Time\r\n\t\tconsole.log('Test DAte: ', testDate)\r\n\t\tif (currentDay < testDate) {\r\n\t\t\tsetisOpenNoti(true)\r\n\t\t} else {\r\n\t\t\trouter.push('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst expandedRowRender = (record) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<ExamAppointmentPoint infoID={record.ExamAppointmentID} userID={record.UserInformationID} />\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Học viên',\r\n\t\t\tdataIndex: 'FullNameUnicode',\r\n\r\n\t\t\trender: (a) => <p className=\"font-weight-primary\">{a}</p>,\r\n\t\t\t...FilterColumn('FullNameUnicode', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 150,\r\n\t\t\ttitle: 'Đề test',\r\n\t\t\tdataIndex: 'ExamTopicName',\r\n\r\n\t\t\trender: (text, data: any) =>\r\n\t\t\t\tdata.TeacherID === userInformation.UserInformationID &&\r\n\t\t\t\t!data.isDone && (\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\tpathname: '/customer/service/service-test-teacher/detail/[slug]',\r\n\t\t\t\t\t\t\tquery: { slug: `${data.ID}`, teacherMarking: data.TeacherID, packageResultID: data.ID, type: 'test' }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tooltip title=\"Chấm bài ngay\">\r\n\t\t\t\t\t\t\t<a href=\"\" className=\"font-weight-link\">\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày hẹn',\r\n\t\t\tdataIndex: 'AppointmentDate',\r\n\t\t\trender: (date: any) => moment(date).format('DD/MM/YYYY')\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 150,\r\n\t\t\ttitle: 'Giờ hẹn',\r\n\t\t\tdataIndex: 'Time'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tư vấn viên',\r\n\t\t\tdataIndex: 'CounselorsName'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tdataIndex: 'isDone',\r\n\t\t\talign: 'center',\r\n\r\n\t\t\tfilters: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Chưa chấm',\r\n\t\t\t\t\tvalue: false\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Đã chấm',\r\n\t\t\t\t\tvalue: true\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tonFilter: (value, record) => record.isDone === value,\r\n\t\t\trender: (type) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{type == true && <span className=\"tag green\">Đã chấm xong</span>}\r\n\t\t\t\t\t{type == false && <span className=\"tag gray\">Chưa chấm xong</span>}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\trender: (data) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{data.TeacherID === userInformation.UserInformationID && (\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\t\tpathname: '/customer/service/service-test-teacher/detail/[slug]',\r\n\t\t\t\t\t\t\t\tquery: { slug: `${data.ID}`, teacherMarking: data.TeacherID, packageResultID: data.ID, type: 'test' }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Tooltip title={!data.isDone ? 'Chấm bài ngay' : 'Xem chi tiết'}>\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-icon edit\">\r\n\t\t\t\t\t\t\t\t\t<FormOutlined />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{userInformation && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<NotiModal\r\n\t\t\t\t\t\tisOpen={isOpenNoti}\r\n\t\t\t\t\t\tisCancel={() => setisOpenNoti(false)}\r\n\t\t\t\t\t\tisOk={() => setisOpenNoti(false)}\r\n\t\t\t\t\t\tcontent=\"Chưa đến giờ làm đề test\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ExpandTable\r\n\t\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\t\t\tloading={isLoading}\r\n\t\t\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\t\t\tTitlePage=\"Chấm bài hẹn test\"\r\n\t\t\t\t\t\t// TitleCard={\r\n\t\t\t\t\t\t//   <StudentAdviseForm\r\n\t\t\t\t\t\t//     listData={listDataForm}\r\n\t\t\t\t\t\t//     isLoading={isLoading}\r\n\t\t\t\t\t\t//     _onSubmit={(data: any) => _onSubmit(data)}\r\n\t\t\t\t\t\t//   />\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\tExtra={\r\n\t\t\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t\t\t<FilterBase\r\n\t\t\t\t\t\t\t\t\tdataFilter={dataFilter}\r\n\t\t\t\t\t\t\t\t\thandleFilter={(listFilter: any) => handleFilter(listFilter)}\r\n\t\t\t\t\t\t\t\t\thandleReset={handleReset}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<SortBox handleSort={(value) => handleSort(value)} dataOption={dataOption} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\texpandable={{ expandedRowRender }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\nServiceTestTeacher.layout = LayoutBase\r\n"]},"metadata":{},"sourceType":"module"}
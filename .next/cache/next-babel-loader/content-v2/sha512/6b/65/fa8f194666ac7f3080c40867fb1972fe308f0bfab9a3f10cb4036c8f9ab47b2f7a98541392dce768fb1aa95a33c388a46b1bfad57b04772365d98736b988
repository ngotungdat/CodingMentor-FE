{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\DoingTest\\\\ListQuestion.tsx\";\nimport React from 'react';\nimport ChoiceList from '~/components/Global/ExamList/ExamShow/ChoiceList';\nimport MultipleList from '~/components/Global/ExamList/ExamShow/MultipleList';\nimport MapList from '~/components/Global/ExamList/ExamShow/MapList';\nimport DragList from '~/components/Global/ExamList/ExamShow/DragList';\nimport TypingList from '~/components/Global/ExamList/ExamShow/TypingList';\nimport WrittingList from '~/components/Global/ExamList/ExamShow/WrittingList';\nimport { ListAlphabet } from '~/lib/list-alphabet/ListAlphabet';\nimport SpeakingList from '../ExamList/ExamShow/Speaking';\nimport { useDoneTest } from '~/context/useDoneTest';\n\nconst ListQuestion = props => {\n  const {\n    dataQuestion,\n    listQuestionID,\n    isMarked,\n    showScore,\n    setChild,\n    openPagi\n  } = props;\n  const {\n    doneTestData\n  } = useDoneTest(); // RETURN QUESTION TYPE\n\n  const returnQuestionType = dataQuestion => {\n    const type = dataQuestion.Type;\n\n    switch (type) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(ChoiceList, {\n          showScore: showScore,\n          isDoingTest: doneTestData ? false : true,\n          listQuestionID: listQuestionID,\n          dataQuestion: dataQuestion,\n          listAlphabet: ListAlphabet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(DragList, {\n          isDoingTest: doneTestData ? false : true,\n          listQuestionID: listQuestionID,\n          dataQuestion: dataQuestion,\n          listAlphabet: ListAlphabet,\n          setChild: setChild,\n          openPagi: openPagi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(TypingList, {\n          isDoingTest: doneTestData ? false : true,\n          listQuestionID: listQuestionID,\n          dataQuestion: dataQuestion,\n          listAlphabet: ListAlphabet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(MultipleList, {\n          isDoingTest: doneTestData ? false : true,\n          listQuestionID: listQuestionID,\n          dataQuestion: dataQuestion,\n          listAlphabet: ListAlphabet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this);\n\n      case 5:\n        return /*#__PURE__*/_jsxDEV(MapList, {\n          isDoingTest: doneTestData ? false : true,\n          listQuestionID: listQuestionID,\n          dataQuestion: dataQuestion,\n          listAlphabet: ListAlphabet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this);\n\n      case 6:\n        return /*#__PURE__*/_jsxDEV(WrittingList, {\n          hideScore: !showScore,\n          isDoingTest: doneTestData ? false : true,\n          listQuestionID: listQuestionID,\n          dataQuestion: dataQuestion,\n          listAlphabet: ListAlphabet,\n          isMarked: isMarked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this);\n\n      case 7:\n        return /*#__PURE__*/_jsxDEV(SpeakingList, {\n          hideScore: !showScore,\n          isDoingTest: doneTestData ? false : true,\n          listQuestionID: listQuestionID,\n          dataQuestion: dataQuestion,\n          listAlphabet: ListAlphabet,\n          isMarked: isMarked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this);\n\n      default:\n        return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-create\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-detail-exam card-detail-question\",\n      style: {\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        style: {\n          height: '100%'\n        },\n        children: returnQuestionType(dataQuestion)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 3\n  }, this);\n};\n\nexport default ListQuestion;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/DoingTest/ListQuestion.tsx"],"names":["React","ChoiceList","MultipleList","MapList","DragList","TypingList","WrittingList","ListAlphabet","SpeakingList","useDoneTest","ListQuestion","props","dataQuestion","listQuestionID","isMarked","showScore","setChild","openPagi","doneTestData","returnQuestionType","type","Type","height"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kDAAvB;AACA,OAAOC,YAAP,MAAyB,oDAAzB;AACA,OAAOC,OAAP,MAAoB,+CAApB;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,OAAOC,UAAP,MAAuB,kDAAvB;AACA,OAAOC,YAAP,MAAyB,oDAAzB;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,WAAT,QAA4B,uBAA5B;;AAWA,MAAMC,YAAY,GAAIC,KAAD,IAAuC;AAC3D,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,cAAhB;AAAgCC,IAAAA,QAAhC;AAA0CC,IAAAA,SAA1C;AAAqDC,IAAAA,QAArD;AAA+DC,IAAAA;AAA/D,MAA4EN,KAAlF;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAmBT,WAAW,EAApC,CAF2D,CAI3D;;AACA,QAAMU,kBAAkB,GAAIP,YAAD,IAA6B;AACvD,UAAMQ,IAAY,GAAGR,YAAY,CAACS,IAAlC;;AACA,YAAQD,IAAR;AACC,WAAK,CAAL;AACC,4BACC,QAAC,UAAD;AACC,UAAA,SAAS,EAAEL,SADZ;AAEC,UAAA,WAAW,EAAEG,YAAY,GAAG,KAAH,GAAW,IAFrC;AAGC,UAAA,cAAc,EAAEL,cAHjB;AAIC,UAAA,YAAY,EAAED,YAJf;AAKC,UAAA,YAAY,EAAEL;AALf;AAAA;AAAA;AAAA;AAAA,gBADD;;AASD,WAAK,CAAL;AACC,4BACC,QAAC,QAAD;AACC,UAAA,WAAW,EAAEW,YAAY,GAAG,KAAH,GAAW,IADrC;AAEC,UAAA,cAAc,EAAEL,cAFjB;AAGC,UAAA,YAAY,EAAED,YAHf;AAIC,UAAA,YAAY,EAAEL,YAJf;AAKC,UAAA,QAAQ,EAAES,QALX;AAMC,UAAA,QAAQ,EAAEC;AANX;AAAA;AAAA;AAAA;AAAA,gBADD;;AAUD,WAAK,CAAL;AACC,4BACC,QAAC,UAAD;AACC,UAAA,WAAW,EAAEC,YAAY,GAAG,KAAH,GAAW,IADrC;AAEC,UAAA,cAAc,EAAEL,cAFjB;AAGC,UAAA,YAAY,EAAED,YAHf;AAIC,UAAA,YAAY,EAAEL;AAJf;AAAA;AAAA;AAAA;AAAA,gBADD;;AAQD,WAAK,CAAL;AACC,4BACC,QAAC,YAAD;AACC,UAAA,WAAW,EAAEW,YAAY,GAAG,KAAH,GAAW,IADrC;AAEC,UAAA,cAAc,EAAEL,cAFjB;AAGC,UAAA,YAAY,EAAED,YAHf;AAIC,UAAA,YAAY,EAAEL;AAJf;AAAA;AAAA;AAAA;AAAA,gBADD;;AAQD,WAAK,CAAL;AACC,4BACC,QAAC,OAAD;AACC,UAAA,WAAW,EAAEW,YAAY,GAAG,KAAH,GAAW,IADrC;AAEC,UAAA,cAAc,EAAEL,cAFjB;AAGC,UAAA,YAAY,EAAED,YAHf;AAIC,UAAA,YAAY,EAAEL;AAJf;AAAA;AAAA;AAAA;AAAA,gBADD;;AAQD,WAAK,CAAL;AACC,4BACC,QAAC,YAAD;AACC,UAAA,SAAS,EAAE,CAACQ,SADb;AAEC,UAAA,WAAW,EAAEG,YAAY,GAAG,KAAH,GAAW,IAFrC;AAGC,UAAA,cAAc,EAAEL,cAHjB;AAIC,UAAA,YAAY,EAAED,YAJf;AAKC,UAAA,YAAY,EAAEL,YALf;AAMC,UAAA,QAAQ,EAAEO;AANX;AAAA;AAAA;AAAA;AAAA,gBADD;;AAUD,WAAK,CAAL;AACC,4BACC,QAAC,YAAD;AACC,UAAA,SAAS,EAAE,CAACC,SADb;AAEC,UAAA,WAAW,EAAEG,YAAY,GAAG,KAAH,GAAW,IAFrC;AAGC,UAAA,cAAc,EAAEL,cAHjB;AAIC,UAAA,YAAY,EAAED,YAJf;AAKC,UAAA,YAAY,EAAEL,YALf;AAMC,UAAA,QAAQ,EAAEO;AANX;AAAA;AAAA;AAAA;AAAA,gBADD;;AAUD;AACC;AAxEF;AA0EA,GA5ED;;AA8EA,sBACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAuD,MAAA,KAAK,EAAE;AAAEQ,QAAAA,MAAM,EAAE;AAAV,OAA9D;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV,SAAtC;AAAA,kBACEH,kBAAkB,CAACP,YAAD;AADpB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CA5FD;;AA8FA,eAAeF,YAAf","sourcesContent":["import React from 'react'\r\nimport ChoiceList from '~/components/Global/ExamList/ExamShow/ChoiceList'\r\nimport MultipleList from '~/components/Global/ExamList/ExamShow/MultipleList'\r\nimport MapList from '~/components/Global/ExamList/ExamShow/MapList'\r\nimport DragList from '~/components/Global/ExamList/ExamShow/DragList'\r\nimport TypingList from '~/components/Global/ExamList/ExamShow/TypingList'\r\nimport WrittingList from '~/components/Global/ExamList/ExamShow/WrittingList'\r\nimport { ListAlphabet } from '~/lib/list-alphabet/ListAlphabet'\r\nimport SpeakingList from '../ExamList/ExamShow/Speaking'\r\nimport { useDoneTest } from '~/context/useDoneTest'\r\n\r\ntype IListQuestion = {\r\n\tdataQuestion: IQuestion\r\n\tlistQuestionID: any\r\n\tisMarked: boolean\r\n\tshowScore: boolean\r\n\tsetChild?: any\r\n\topenPagi?: any\r\n}\r\n\r\nconst ListQuestion = (props: IListQuestion): JSX.Element => {\r\n\tconst { dataQuestion, listQuestionID, isMarked, showScore, setChild, openPagi } = props\r\n\tconst { doneTestData } = useDoneTest()\r\n\r\n\t// RETURN QUESTION TYPE\r\n\tconst returnQuestionType = (dataQuestion: IQuestion) => {\r\n\t\tconst type: number = dataQuestion.Type\r\n\t\tswitch (type) {\r\n\t\t\tcase 1:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ChoiceList\r\n\t\t\t\t\t\tshowScore={showScore}\r\n\t\t\t\t\t\tisDoingTest={doneTestData ? false : true}\r\n\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\tlistAlphabet={ListAlphabet}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\tcase 2:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<DragList\r\n\t\t\t\t\t\tisDoingTest={doneTestData ? false : true}\r\n\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\tlistAlphabet={ListAlphabet}\r\n\t\t\t\t\t\tsetChild={setChild}\r\n\t\t\t\t\t\topenPagi={openPagi}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\tcase 3:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<TypingList\r\n\t\t\t\t\t\tisDoingTest={doneTestData ? false : true}\r\n\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\tlistAlphabet={ListAlphabet}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\tcase 4:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MultipleList\r\n\t\t\t\t\t\tisDoingTest={doneTestData ? false : true}\r\n\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\tlistAlphabet={ListAlphabet}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\tcase 5:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MapList\r\n\t\t\t\t\t\tisDoingTest={doneTestData ? false : true}\r\n\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\tlistAlphabet={ListAlphabet}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\tcase 6:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<WrittingList\r\n\t\t\t\t\t\thideScore={!showScore}\r\n\t\t\t\t\t\tisDoingTest={doneTestData ? false : true}\r\n\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\tlistAlphabet={ListAlphabet}\r\n\t\t\t\t\t\tisMarked={isMarked}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\tcase 7:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<SpeakingList\r\n\t\t\t\t\t\thideScore={!showScore}\r\n\t\t\t\t\t\tisDoingTest={doneTestData ? false : true}\r\n\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\tlistAlphabet={ListAlphabet}\r\n\t\t\t\t\t\tisMarked={isMarked}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\tdefault:\r\n\t\t\t\treturn\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"question-create\">\r\n\t\t\t<div className=\"card-detail-exam card-detail-question\" style={{ height: '100%' }}>\r\n\t\t\t\t<div className=\"question-list\" style={{ height: '100%' }}>\r\n\t\t\t\t\t{returnQuestionType(dataQuestion)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ListQuestion\r\n"]},"metadata":{},"sourceType":"module"}
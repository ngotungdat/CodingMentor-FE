{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\QuestionBank\\\\QuestionFormType\\\\DragForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useWrap } from \"~/context/wrap\";\nimport { Form, Spin, Checkbox, Input, Tooltip } from \"antd\";\nimport Editor from \"~/components/Elements/Editor\";\nimport { exerciseGroupApi } from \"~/apiBase/\";\nimport { CloseOutlined } from \"@ant-design/icons\";\nimport { Plus } from \"react-feather\";\nlet AnsID = 0;\nlet QuesID = -1;\n\nconst DragForm = props => {\n  var _questionDataForm$Exe4;\n\n  console.log(\"Câu hỏi kéo thả\");\n  const {\n    isSubmit,\n    questionData,\n    changeIsSubmit,\n    visible\n  } = props;\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    handleSubmit,\n    formState: {\n      isSubmitting,\n      errors,\n      isSubmitted\n    }\n  } = useForm();\n  const [form] = Form.useForm();\n  const {\n    0: questionDataForm,\n    1: setQuestionDataForm\n  } = useState(null);\n  const {\n    0: isResetEditor,\n    1: setIsResetEditor\n  } = useState(false);\n  const {\n    0: linkUpload,\n    1: setLinkUpload\n  } = useState(null);\n  const {\n    0: loadingUpload,\n    1: setLoadingUpload\n  } = useState(false);\n  const {\n    0: loadingForm,\n    1: setLoadingForm\n  } = useState(false);\n  const {\n    0: reloadContent,\n    1: setReloadContent\n  } = useState(false);\n  const {\n    0: dataExercise,\n    1: setDataExercise\n  } = useState([]);\n  console.log(\"Question Data Form: \", questionDataForm);\n  console.log(\"Data Exercise in form: \", dataExercise); // Upload file audio\n\n  const onchange_UploadFile = async info => {\n    // console.log(\"Info File upload: \", info);\n    if (info.file.status === \"uploading\") {\n      setLoadingUpload(true);\n      return;\n    }\n\n    setLoadingUpload(true);\n\n    try {\n      let res = await exerciseGroupApi.UploadAudio(info.file.originFileObj);\n\n      if (res.status == 200) {\n        setLinkUpload(res.data.data);\n        showNoti(\"success\", \"Upload file thành công\");\n      }\n    } catch (error) {\n      showNoti(\"danger\", error.message);\n    } finally {\n      setLoadingUpload(false);\n    }\n  }; // SUBMI FORM\n\n\n  const onSubmit = handleSubmit((data, e) => {// console.log(\"DATA SUBMIT: \", data);\n  }); // GET VALUE IN EDITOR\n\n  const getDataEditor = dataEditor => {\n    console.log(\"Value Editor Form: \", dataEditor);\n\n    if (questionDataForm) {\n      questionDataForm.Paragraph = dataEditor;\n    }\n\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // Reset value in form\n\n\n  const resetForm = () => {\n    questionDataForm.Content = \"\";\n    questionDataForm.ExerciseAnswer.forEach(item => {\n      item.AnswerContent = \"\";\n      item.isTrue = false;\n    });\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // HANDLE DELETE ALL QUESTION\n\n\n  const deleteAllQuestion = () => {\n    var _questionDataForm$Exe;\n\n    dataExercise === null || dataExercise === void 0 ? void 0 : dataExercise.splice(0, dataExercise.length);\n    questionDataForm === null || questionDataForm === void 0 ? void 0 : (_questionDataForm$Exe = questionDataForm.ExerciseList) === null || _questionDataForm$Exe === void 0 ? void 0 : _questionDataForm$Exe.forEach(item => {\n      item.Enable = false;\n    });\n    setDataExercise([...dataExercise]);\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // HANDLE DELETE QUESTION\n\n\n  const deleteSingleQuestion = QuestionID => {\n    console.log(\"Question ID cần xóa: \", QuestionID);\n    let QuestionIndex = questionDataForm.ExerciseList.findIndex(item => item.inputID == QuestionID);\n    let ExerciseIndex = dataExercise.findIndex(item => item.inputID == QuestionID);\n    dataExercise.splice(ExerciseIndex, 1);\n\n    if (questionDataForm.ExerciseList[QuestionIndex]) {\n      if (questionDataForm.ExerciseList[QuestionIndex].isAdd) {\n        questionDataForm.ExerciseList.splice(QuestionIndex, 1);\n      } else {\n        questionDataForm.ExerciseList[QuestionIndex].Enable = false;\n      }\n    } else {\n      showNoti(\"danger\", \"Câu hỏi không tồn tại\");\n    }\n\n    setDataExercise([...dataExercise]);\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // HANDLE ADD QUESTION\n\n\n  const addQuestion = inputID => {\n    AnsID++;\n    let objAns = {\n      // ID: inputID,\n      inputID: inputID,\n      Content: \"\",\n      ExerciseGroupID: questionDataForm.ID,\n      SubjectID: questionDataForm.SubjectID,\n      SubjectName: questionDataForm.SubjectName,\n      DescribeAnswer: \"\",\n      Level: questionDataForm.Level,\n      LevelName: questionDataForm.LevelName,\n      LinkAudio: null,\n      Type: questionDataForm.Type,\n      TypeName: questionDataForm.TypeName,\n      isAdd: true,\n      Enable: true,\n      ExerciseAnswer: [{\n        ID: AnsID,\n        AnswerContent: \"\",\n        isTrue: true,\n        Enable: true,\n        isAdd: true\n      }]\n    };\n    questionDataForm.ExerciseList.push(objAns);\n    dataExercise.push(objAns);\n    setDataExercise([...dataExercise]);\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // ====== HANDLE ADD ANSWER ======\n\n\n  const handleAddAnswer = questionID => {\n    AnsID++;\n    questionDataForm.ExerciseList.every(item => {\n      if (item.inputID == questionID) {\n        item.ExerciseAnswer.push({\n          ID: AnsID,\n          AnswerContent: \"\",\n          isTrue: false,\n          Enable: true,\n          isAdd: true\n        });\n        return false;\n      }\n\n      return true;\n    });\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  };\n\n  const onChange_isCorrect = (e, AnswerID, QuestionID) => {\n    var _questionDataForm$Exe2;\n\n    let checked = e.target.checked; // - Get question index\n\n    let QuestionIndex = questionDataForm === null || questionDataForm === void 0 ? void 0 : (_questionDataForm$Exe2 = questionDataForm.ExerciseList) === null || _questionDataForm$Exe2 === void 0 ? void 0 : _questionDataForm$Exe2.findIndex(item => item.inputID == QuestionID); // - Get answer index\n\n    let AnswerIndex = questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex(item => item.ID == AnswerID); // Delete all is true before and new isTrue\n\n    questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.forEach(item => {\n      item.isTrue = false;\n    }); // - add isTrue\n\n    questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].isTrue = checked;\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  };\n\n  console.log(\"QUESTION DATA FORM IN DRAG: \", questionDataForm); // ====== ON CHANGE TEXT ======\n\n  const onChange_text = (e, AnswerID, QuestionID) => {\n    var _questionDataForm$Exe3;\n\n    console.log(\"QuestionID: \", QuestionID); // - Get value\n\n    let text = e.target.value; // - Get question index\n\n    let QuestionIndex = questionDataForm === null || questionDataForm === void 0 ? void 0 : (_questionDataForm$Exe3 = questionDataForm.ExerciseList) === null || _questionDataForm$Exe3 === void 0 ? void 0 : _questionDataForm$Exe3.findIndex(item => item.inputID == QuestionID); // - Get answer index\n\n    let AnswerIndex = questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex(item => item.ID == AnswerID); // - add text\n\n    questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].AnswerContent = text;\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // ====== DELETE ANSWER ======\n\n\n  const deleteAnswerItem = (AnswerID, QuestionID) => {\n    // - Get question index\n    let QuestionIndex = questionDataForm.ExerciseList.findIndex(item => item.inputID == QuestionID); // - Get answer index\n\n    let AnswerIndex = questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex(item => item.ID == AnswerID); // Action delete\n\n    if (questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].isAdd) {\n      questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.splice(AnswerIndex, 1);\n    } else {\n      questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].Enable = false;\n    } // setAnswerList([...answerList]);\n\n\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // SUBMIT FORM\n\n\n  const handleSubmitQuestion = async () => {\n    let res = null;\n    let newData = JSON.parse(JSON.stringify(questionDataForm)); // custom data\n\n    newData.ExerciseList.forEach((item, index) => {\n      item.ExerciseAnswer.forEach((ans, ind) => {\n        if (ans.isAdd) {\n          delete ans.ID;\n        }\n      });\n    });\n\n    if (questionDataForm.ExerciseGroupID) {\n      newData.ID = questionDataForm.ExerciseGroupID;\n    }\n\n    newData.ExerciseGroupID = null;\n    console.log(\"DataSubmit: \", newData); // ----------\n\n    try {\n      res = await exerciseGroupApi.update(newData);\n\n      if (res.status == 200) {\n        handleSubmitChange(res.data.data);\n      }\n    } catch (error) {\n      showNoti(\"danger\", error.message);\n    }\n  }; // SUBMIT AND CHANGE PARAGRAPH\n\n\n  const handleSubmitChange = async dataSubmit => {\n    let res = null;\n    let cloneParagraph = dataSubmit.Paragraph;\n    console.log(\"DATA submit after: \", dataSubmit);\n    dataSubmit.ExerciseList.forEach((item, index) => {\n      let indexInput = parseInt(item.inputID) + 1;\n      indexInput = indexInput.toString();\n      cloneParagraph = cloneParagraph.replace(`<input id=\"${item.inputID}\" class=\"space-editor\" placeholder=\"(${indexInput})\">`, `<div ques-id=\"${item.ID}\" id=\"${item.inputID}\" class='space-editor drag-item' ondrop=\"drop(event)\" ondragover=\"allowDrop(event)\">(${indexInput})</div>`);\n      let test = `<input id=\"${item.inputID}\" class='space-editor' placeholder=\"(${indexInput})\">`;\n      console.log(\"COI THỬ NÀY LÀ GÌ: \", test);\n    });\n    console.log(\"Paragraph new: \", cloneParagraph);\n    dataSubmit.Paragraph = cloneParagraph;\n    console.log(\"Paragraph new in submit: \", dataSubmit.Paragraph); // ----------\n\n    try {\n      res = await exerciseGroupApi.update(dataSubmit);\n\n      if (res.status == 200) {\n        changeIsSubmit(res.data.data);\n\n        if (!questionDataForm.ID) {\n          resetForm();\n        }\n\n        showNoti(\"success\", `Tạo câu hỏi thành công`);\n        setIsResetEditor(true);\n      }\n    } catch (error) {\n      showNoti(\"danger\", error.message);\n    }\n  }; //RETURN INDEX QUESTION - Trả về thứ tự của từng câu hỏi\n\n\n  const returnIndexQuestion = itemQues => {\n    let title = \"\";\n    let index = dataExercise.findIndex(ex => ex.inputID == itemQues.inputID);\n    title = `Câu (${index + 1})`;\n    return title;\n  }; // GET GROUP DETAIL DATA\n\n\n  const dataGroupDetail = async () => {\n    setLoadingForm(true);\n    let id = null;\n\n    if (questionData.ID) {\n      id = questionData.ID;\n    } else {\n      id = questionData.ExerciseGroupID;\n    }\n\n    try {\n      let res = await exerciseGroupApi.getWithID(id);\n      res.status == 200 && reloadNewContent(res.data.data);\n      res.status == 204 && showNoti(\"danger\", \"Không có dữ liệu\");\n    } catch (error) {\n      showNoti(\"danger\", error.message);\n    } finally {\n      setLoadingForm(false);\n    }\n  };\n\n  const reloadNewContent = data => {\n    let filterExerciseList = data.ExerciseList.filter(item => item.Enable !== false);\n    data.ExerciseList = [...filterExerciseList];\n    setDataExercise([...filterExerciseList]);\n    setQuestionDataForm(_objectSpread({}, data));\n  };\n\n  useEffect(() => {\n    if (isSubmit) {\n      handleSubmitQuestion();\n      return;\n    }\n  }, [isSubmit]);\n  useEffect(() => {\n    console.log(\"Visible: \", visible);\n    console.log(\"Question Data: \", questionData);\n\n    if (visible) {\n      dataGroupDetail();\n    }\n  }, [visible]); // useEffect(() => {\n  //   if (reloadContent) {\n  //     (async function loadData() {\n  //       try {\n  //         let res = await exerciseGroupApi.getWithID(questionDataForm.ID);\n  //         if (res.status == 200) {\n  //           changeIsSubmit(res.data.data);\n  //           showNoti(\"success\", `Thành công`);\n  //           if (!questionDataForm.ID) {\n  //             resetForm();\n  //           }\n  //           setIsResetEditor(true);\n  //           setTimeout(() => {\n  //             setIsResetEditor(false);\n  //           }, 500);\n  //         }\n  //         res.status == 204 && showNoti(\"danger\", \"Không có dữ liệu\");\n  //       } catch (error) {\n  //         showNoti(\"danger\", error.message);\n  //       } finally {\n  //         setReloadContent(false);\n  //       }\n  //     })();\n  //   }\n  // }, [reloadContent]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-create-question\",\n    children: visible && loadingForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 9\n    }, this) : visible && /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      layout: \"vertical\",\n      onFinish: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12\",\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"Question\",\n              label: \"N\\u1ED9i dung\",\n              children: /*#__PURE__*/_jsxDEV(Editor, {\n                exerciseList: dataExercise,\n                deleteAllQuestion: deleteAllQuestion,\n                deleteSingleQuestion: quesID => deleteSingleQuestion(quesID),\n                handleChange: value => getDataEditor(value),\n                isReset: isResetEditor,\n                questionContent: questionDataForm === null || questionDataForm === void 0 ? void 0 : questionDataForm.Paragraph,\n                questionData: questionDataForm,\n                addQuestion: inputID => addQuestion(inputID),\n                visible: visible\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12\",\n            style: {\n              borderLeft: \"2px dotted #dbdbdb\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"style-label\",\n              style: {\n                textDecoration: \"underline\"\n              },\n              children: \"\\u0110\\xE1p \\xE1n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 19\n            }, this), questionDataForm === null || questionDataForm === void 0 ? void 0 : (_questionDataForm$Exe4 = questionDataForm.ExerciseList) === null || _questionDataForm$Exe4 === void 0 ? void 0 : _questionDataForm$Exe4.map((itemQues, index) => {\n              var _itemQues$ExerciseAns;\n\n              return itemQues.Enable && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-item-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"\",\n                  style: {\n                    fontWeight: 500,\n                    color: \"#525252\"\n                  },\n                  children: returnIndexQuestion(itemQues)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Th\\xEAm \\u0111\\xE1p \\xE1n\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-add-answer mb-3\",\n                    onClick: () => handleAddAnswer(itemQues.inputID),\n                    children: /*#__PURE__*/_jsxDEV(Plus, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 481,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: (_itemQues$ExerciseAns = itemQues.ExerciseAnswer) === null || _itemQues$ExerciseAns === void 0 ? void 0 : _itemQues$ExerciseAns.map((itemAns, index) => itemAns.Enable && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6 col-12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row-ans\",\n                      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                        checked: itemAns.isTrue,\n                        onChange: e => onChange_isCorrect(e, itemAns.ID, itemQues.inputID)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 491,\n                        columnNumber: 39\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                        className: \"mb-0\",\n                        children: /*#__PURE__*/_jsxDEV(Input, {\n                          value: itemAns.AnswerContent,\n                          className: \"style-input\",\n                          onChange: e => onChange_text(e, itemAns.ID, itemQues.inputID)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 502,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 501,\n                        columnNumber: 39\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"delete-ans\",\n                        onClick: () => deleteAnswerItem(itemAns.ID, itemQues.inputID),\n                        children: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 523,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 514,\n                        columnNumber: 39\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 37\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 35\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 25\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 5\n  }, this);\n};\n\nexport default DragForm;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/QuestionBank/QuestionFormType/DragForm.tsx"],"names":["React","useEffect","useState","useForm","useWrap","Form","Spin","Checkbox","Input","Tooltip","Editor","exerciseGroupApi","CloseOutlined","Plus","AnsID","QuesID","DragForm","props","console","log","isSubmit","questionData","changeIsSubmit","visible","showNoti","handleSubmit","formState","isSubmitting","errors","isSubmitted","form","questionDataForm","setQuestionDataForm","isResetEditor","setIsResetEditor","linkUpload","setLinkUpload","loadingUpload","setLoadingUpload","loadingForm","setLoadingForm","reloadContent","setReloadContent","dataExercise","setDataExercise","onchange_UploadFile","info","file","status","res","UploadAudio","originFileObj","data","error","message","onSubmit","e","getDataEditor","dataEditor","Paragraph","resetForm","Content","ExerciseAnswer","forEach","item","AnswerContent","isTrue","deleteAllQuestion","splice","length","ExerciseList","Enable","deleteSingleQuestion","QuestionID","QuestionIndex","findIndex","inputID","ExerciseIndex","isAdd","addQuestion","objAns","ExerciseGroupID","ID","SubjectID","SubjectName","DescribeAnswer","Level","LevelName","LinkAudio","Type","TypeName","push","handleAddAnswer","questionID","every","onChange_isCorrect","AnswerID","checked","target","AnswerIndex","onChange_text","text","value","deleteAnswerItem","handleSubmitQuestion","newData","JSON","parse","stringify","index","ans","ind","update","handleSubmitChange","dataSubmit","cloneParagraph","indexInput","parseInt","toString","replace","test","returnIndexQuestion","itemQues","title","ex","dataGroupDetail","id","getWithID","reloadNewContent","filterExerciseList","filter","quesID","borderLeft","textDecoration","map","fontWeight","color","itemAns"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useWrap } from \"~/context/wrap\";\r\nimport { Form, Spin, Checkbox, Input, Tooltip } from \"antd\";\r\nimport Editor from \"~/components/Elements/Editor\";\r\nimport { exerciseGroupApi } from \"~/apiBase/\";\r\nimport { dataQuestion } from \"~/lib/question-bank/dataBoxType\";\r\nimport { UploadOutlined, CloseOutlined } from \"@ant-design/icons\";\r\nimport { Plus } from \"react-feather\";\r\n\r\nlet AnsID = 0;\r\nlet QuesID = -1;\r\n\r\nconst DragForm = (props) => {\r\n  console.log(\"Câu hỏi kéo thả\");\r\n  const { isSubmit, questionData, changeIsSubmit, visible } = props;\r\n  const { showNoti } = useWrap();\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting, errors, isSubmitted },\r\n  } = useForm();\r\n  const [form] = Form.useForm();\r\n  const [questionDataForm, setQuestionDataForm] = useState(null);\r\n  const [isResetEditor, setIsResetEditor] = useState(false);\r\n  const [linkUpload, setLinkUpload] = useState(null);\r\n  const [loadingUpload, setLoadingUpload] = useState(false);\r\n  const [loadingForm, setLoadingForm] = useState(false);\r\n  const [reloadContent, setReloadContent] = useState(false);\r\n  const [dataExercise, setDataExercise] = useState([]);\r\n\r\n  console.log(\"Question Data Form: \", questionDataForm);\r\n  console.log(\"Data Exercise in form: \", dataExercise);\r\n\r\n  // Upload file audio\r\n  const onchange_UploadFile = async (info) => {\r\n    // console.log(\"Info File upload: \", info);\r\n    if (info.file.status === \"uploading\") {\r\n      setLoadingUpload(true);\r\n      return;\r\n    }\r\n    setLoadingUpload(true);\r\n    try {\r\n      let res = await exerciseGroupApi.UploadAudio(info.file.originFileObj);\r\n      if (res.status == 200) {\r\n        setLinkUpload(res.data.data);\r\n        showNoti(\"success\", \"Upload file thành công\");\r\n      }\r\n    } catch (error) {\r\n      showNoti(\"danger\", error.message);\r\n    } finally {\r\n      setLoadingUpload(false);\r\n    }\r\n  };\r\n\r\n  // SUBMI FORM\r\n  const onSubmit = handleSubmit((data: any, e) => {\r\n    // console.log(\"DATA SUBMIT: \", data);\r\n  });\r\n\r\n  // GET VALUE IN EDITOR\r\n  const getDataEditor = (dataEditor) => {\r\n    console.log(\"Value Editor Form: \", dataEditor);\r\n    if (questionDataForm) {\r\n      questionDataForm.Paragraph = dataEditor;\r\n    }\r\n    setQuestionDataForm({ ...questionDataForm });\r\n  };\r\n\r\n  // Reset value in form\r\n  const resetForm = () => {\r\n    questionDataForm.Content = \"\";\r\n    questionDataForm.ExerciseAnswer.forEach((item) => {\r\n      item.AnswerContent = \"\";\r\n      item.isTrue = false;\r\n    });\r\n    setQuestionDataForm({ ...questionDataForm });\r\n  };\r\n\r\n  // HANDLE DELETE ALL QUESTION\r\n  const deleteAllQuestion = () => {\r\n    dataExercise?.splice(0, dataExercise.length);\r\n    questionDataForm?.ExerciseList?.forEach((item) => {\r\n      item.Enable = false;\r\n    });\r\n\r\n    setDataExercise([...dataExercise]);\r\n    setQuestionDataForm({ ...questionDataForm });\r\n  };\r\n\r\n  // HANDLE DELETE QUESTION\r\n  const deleteSingleQuestion = (QuestionID) => {\r\n    console.log(\"Question ID cần xóa: \", QuestionID);\r\n    let QuestionIndex = questionDataForm.ExerciseList.findIndex(\r\n      (item) => item.inputID == QuestionID\r\n    );\r\n    let ExerciseIndex = dataExercise.findIndex(\r\n      (item) => item.inputID == QuestionID\r\n    );\r\n\r\n    dataExercise.splice(ExerciseIndex, 1);\r\n\r\n    if (questionDataForm.ExerciseList[QuestionIndex]) {\r\n      if (questionDataForm.ExerciseList[QuestionIndex].isAdd) {\r\n        questionDataForm.ExerciseList.splice(QuestionIndex, 1);\r\n      } else {\r\n        questionDataForm.ExerciseList[QuestionIndex].Enable = false;\r\n      }\r\n    } else {\r\n      showNoti(\"danger\", \"Câu hỏi không tồn tại\");\r\n    }\r\n\r\n    setDataExercise([...dataExercise]);\r\n    setQuestionDataForm({ ...questionDataForm });\r\n  };\r\n\r\n  // HANDLE ADD QUESTION\r\n  const addQuestion = (inputID) => {\r\n    AnsID++;\r\n    let objAns = {\r\n      // ID: inputID,\r\n      inputID: inputID,\r\n      Content: \"\",\r\n      ExerciseGroupID: questionDataForm.ID,\r\n      SubjectID: questionDataForm.SubjectID,\r\n      SubjectName: questionDataForm.SubjectName,\r\n      DescribeAnswer: \"\",\r\n      Level: questionDataForm.Level,\r\n      LevelName: questionDataForm.LevelName,\r\n      LinkAudio: null,\r\n      Type: questionDataForm.Type,\r\n      TypeName: questionDataForm.TypeName,\r\n      isAdd: true,\r\n      Enable: true,\r\n      ExerciseAnswer: [\r\n        {\r\n          ID: AnsID,\r\n          AnswerContent: \"\",\r\n          isTrue: true,\r\n          Enable: true,\r\n          isAdd: true,\r\n        },\r\n      ],\r\n    };\r\n    questionDataForm.ExerciseList.push(objAns);\r\n    dataExercise.push(objAns);\r\n\r\n    setDataExercise([...dataExercise]);\r\n    setQuestionDataForm({ ...questionDataForm });\r\n  };\r\n\r\n  // ====== HANDLE ADD ANSWER ======\r\n  const handleAddAnswer = (questionID: number) => {\r\n    AnsID++;\r\n    questionDataForm.ExerciseList.every((item) => {\r\n      if (item.inputID == questionID) {\r\n        item.ExerciseAnswer.push({\r\n          ID: AnsID,\r\n          AnswerContent: \"\",\r\n          isTrue: false,\r\n          Enable: true,\r\n          isAdd: true,\r\n        });\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    setQuestionDataForm({ ...questionDataForm });\r\n  };\r\n\r\n  const onChange_isCorrect = (e, AnswerID, QuestionID) => {\r\n    let checked = e.target.checked;\r\n\r\n    // - Get question index\r\n    let QuestionIndex = questionDataForm?.ExerciseList?.findIndex(\r\n      (item) => item.inputID == QuestionID\r\n    );\r\n\r\n    // - Get answer index\r\n    let AnswerIndex = questionDataForm.ExerciseList[\r\n      QuestionIndex\r\n    ].ExerciseAnswer.findIndex((item) => item.ID == AnswerID);\r\n\r\n    // Delete all is true before and new isTrue\r\n    questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.forEach(\r\n      (item) => {\r\n        item.isTrue = false;\r\n      }\r\n    );\r\n\r\n    // - add isTrue\r\n    questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[\r\n      AnswerIndex\r\n    ].isTrue = checked;\r\n\r\n    setQuestionDataForm({ ...questionDataForm });\r\n  };\r\n\r\n  console.log(\"QUESTION DATA FORM IN DRAG: \", questionDataForm);\r\n\r\n  // ====== ON CHANGE TEXT ======\r\n  const onChange_text = (e: any, AnswerID: number, QuestionID) => {\r\n    console.log(\"QuestionID: \", QuestionID);\r\n    // - Get value\r\n    let text = e.target.value;\r\n\r\n    // - Get question index\r\n    let QuestionIndex = questionDataForm?.ExerciseList?.findIndex(\r\n      (item) => item.inputID == QuestionID\r\n    );\r\n\r\n    // - Get answer index\r\n    let AnswerIndex = questionDataForm.ExerciseList[\r\n      QuestionIndex\r\n    ].ExerciseAnswer.findIndex((item) => item.ID == AnswerID);\r\n\r\n    // - add text\r\n    questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[\r\n      AnswerIndex\r\n    ].AnswerContent = text;\r\n\r\n    setQuestionDataForm({ ...questionDataForm });\r\n  };\r\n\r\n  // ====== DELETE ANSWER ======\r\n  const deleteAnswerItem = (AnswerID: number, QuestionID: number) => {\r\n    // - Get question index\r\n    let QuestionIndex = questionDataForm.ExerciseList.findIndex(\r\n      (item) => item.inputID == QuestionID\r\n    );\r\n\r\n    // - Get answer index\r\n    let AnswerIndex = questionDataForm.ExerciseList[\r\n      QuestionIndex\r\n    ].ExerciseAnswer.findIndex((item) => item.ID == AnswerID);\r\n\r\n    // Action delete\r\n    if (\r\n      questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex]\r\n        .isAdd\r\n    ) {\r\n      questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.splice(\r\n        AnswerIndex,\r\n        1\r\n      );\r\n    } else {\r\n      questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[\r\n        AnswerIndex\r\n      ].Enable = false;\r\n    }\r\n\r\n    // setAnswerList([...answerList]);\r\n    setQuestionDataForm({ ...questionDataForm });\r\n  };\r\n\r\n  // SUBMIT FORM\r\n  const handleSubmitQuestion = async () => {\r\n    let res = null;\r\n\r\n    let newData = JSON.parse(JSON.stringify(questionDataForm));\r\n\r\n    // custom data\r\n    newData.ExerciseList.forEach((item, index) => {\r\n      item.ExerciseAnswer.forEach((ans, ind) => {\r\n        if (ans.isAdd) {\r\n          delete ans.ID;\r\n        }\r\n      });\r\n    });\r\n    if (questionDataForm.ExerciseGroupID) {\r\n      newData.ID = questionDataForm.ExerciseGroupID;\r\n    }\r\n\r\n    newData.ExerciseGroupID = null;\r\n    console.log(\"DataSubmit: \", newData);\r\n    // ----------\r\n\r\n    try {\r\n      res = await exerciseGroupApi.update(newData);\r\n\r\n      if (res.status == 200) {\r\n        handleSubmitChange(res.data.data);\r\n      }\r\n    } catch (error) {\r\n      showNoti(\"danger\", error.message);\r\n    }\r\n  };\r\n\r\n  // SUBMIT AND CHANGE PARAGRAPH\r\n  const handleSubmitChange = async (dataSubmit) => {\r\n    let res = null;\r\n\r\n    let cloneParagraph = dataSubmit.Paragraph;\r\n\r\n    console.log(\"DATA submit after: \", dataSubmit);\r\n\r\n    dataSubmit.ExerciseList.forEach((item, index) => {\r\n      let indexInput: any = parseInt(item.inputID) + 1;\r\n      indexInput = indexInput.toString();\r\n      cloneParagraph = cloneParagraph.replace(\r\n        `<input id=\"${item.inputID}\" class=\"space-editor\" placeholder=\"(${indexInput})\">`,\r\n        `<div ques-id=\"${item.ID}\" id=\"${item.inputID}\" class='space-editor drag-item' ondrop=\"drop(event)\" ondragover=\"allowDrop(event)\">(${indexInput})</div>`\r\n      );\r\n\r\n      let test = `<input id=\"${item.inputID}\" class='space-editor' placeholder=\"(${indexInput})\">`;\r\n      console.log(\"COI THỬ NÀY LÀ GÌ: \", test);\r\n    });\r\n\r\n    console.log(\"Paragraph new: \", cloneParagraph);\r\n\r\n    dataSubmit.Paragraph = cloneParagraph;\r\n\r\n    console.log(\"Paragraph new in submit: \", dataSubmit.Paragraph);\r\n\r\n    // ----------\r\n\r\n    try {\r\n      res = await exerciseGroupApi.update(dataSubmit);\r\n\r\n      if (res.status == 200) {\r\n        changeIsSubmit(res.data.data);\r\n        if (!questionDataForm.ID) {\r\n          resetForm();\r\n        }\r\n        showNoti(\"success\", `Tạo câu hỏi thành công`);\r\n        setIsResetEditor(true);\r\n      }\r\n    } catch (error) {\r\n      showNoti(\"danger\", error.message);\r\n    }\r\n  };\r\n\r\n  //RETURN INDEX QUESTION - Trả về thứ tự của từng câu hỏi\r\n  const returnIndexQuestion = (itemQues) => {\r\n    let title = \"\";\r\n    let index = dataExercise.findIndex((ex) => ex.inputID == itemQues.inputID);\r\n    title = `Câu (${index + 1})`;\r\n    return title;\r\n  };\r\n\r\n  // GET GROUP DETAIL DATA\r\n  const dataGroupDetail = async () => {\r\n    setLoadingForm(true);\r\n\r\n    let id = null;\r\n    if (questionData.ID) {\r\n      id = questionData.ID;\r\n    } else {\r\n      id = questionData.ExerciseGroupID;\r\n    }\r\n\r\n    try {\r\n      let res = await exerciseGroupApi.getWithID(id);\r\n      res.status == 200 && reloadNewContent(res.data.data);\r\n      res.status == 204 && showNoti(\"danger\", \"Không có dữ liệu\");\r\n    } catch (error) {\r\n      showNoti(\"danger\", error.message);\r\n    } finally {\r\n      setLoadingForm(false);\r\n    }\r\n  };\r\n\r\n  const reloadNewContent = (data) => {\r\n    let filterExerciseList = data.ExerciseList.filter(\r\n      (item) => item.Enable !== false\r\n    );\r\n    data.ExerciseList = [...filterExerciseList];\r\n\r\n    setDataExercise([...filterExerciseList]);\r\n    setQuestionDataForm({ ...data });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSubmit) {\r\n      handleSubmitQuestion();\r\n      return;\r\n    }\r\n  }, [isSubmit]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Visible: \", visible);\r\n    console.log(\"Question Data: \", questionData);\r\n    if (visible) {\r\n      dataGroupDetail();\r\n    }\r\n  }, [visible]);\r\n\r\n  // useEffect(() => {\r\n  //   if (reloadContent) {\r\n  //     (async function loadData() {\r\n  //       try {\r\n  //         let res = await exerciseGroupApi.getWithID(questionDataForm.ID);\r\n\r\n  //         if (res.status == 200) {\r\n  //           changeIsSubmit(res.data.data);\r\n  //           showNoti(\"success\", `Thành công`);\r\n  //           if (!questionDataForm.ID) {\r\n  //             resetForm();\r\n  //           }\r\n  //           setIsResetEditor(true);\r\n\r\n  //           setTimeout(() => {\r\n  //             setIsResetEditor(false);\r\n  //           }, 500);\r\n  //         }\r\n\r\n  //         res.status == 204 && showNoti(\"danger\", \"Không có dữ liệu\");\r\n  //       } catch (error) {\r\n  //         showNoti(\"danger\", error.message);\r\n  //       } finally {\r\n  //         setReloadContent(false);\r\n  //       }\r\n  //     })();\r\n  //   }\r\n  // }, [reloadContent]);\r\n\r\n  return (\r\n    <div className=\"form-create-question\">\r\n      {visible && loadingForm ? (\r\n        <div className=\"w-100 text-center mt-3\">\r\n          <Spin />\r\n        </div>\r\n      ) : (\r\n        visible && (\r\n          <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6 col-12\">\r\n                  <Form.Item name=\"Question\" label=\"Nội dung\">\r\n                    <Editor\r\n                      exerciseList={dataExercise}\r\n                      deleteAllQuestion={deleteAllQuestion}\r\n                      deleteSingleQuestion={(quesID: number) =>\r\n                        deleteSingleQuestion(quesID)\r\n                      }\r\n                      handleChange={(value: string) => getDataEditor(value)}\r\n                      isReset={isResetEditor}\r\n                      questionContent={questionDataForm?.Paragraph}\r\n                      questionData={questionDataForm}\r\n                      addQuestion={(inputID: number) => addQuestion(inputID)}\r\n                      visible={visible}\r\n                    />\r\n                  </Form.Item>\r\n                  {/* <Form.Item label=\"Tải lên link Audio\">\r\n                    <Upload\r\n                      onChange={onchange_UploadFile}\r\n                      showUploadList={false}\r\n                    >\r\n                      <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n                      <div className=\"d-block\">\r\n                        {loadingUpload ? <Spin /> : linkUpload && linkUpload}\r\n                      </div>\r\n                    </Upload>\r\n                  </Form.Item> */}\r\n                </div>\r\n                <div\r\n                  className=\"col-md-6 col-12\"\r\n                  style={{ borderLeft: \"2px dotted #dbdbdb\" }}\r\n                >\r\n                  <p\r\n                    className=\"style-label\"\r\n                    style={{ textDecoration: \"underline\" }}\r\n                  >\r\n                    Đáp án\r\n                  </p>\r\n                  {questionDataForm?.ExerciseList?.map(\r\n                    (itemQues, index) =>\r\n                      itemQues.Enable && (\r\n                        <div key={index} className=\"question-item-group\">\r\n                          <p\r\n                            className=\"\"\r\n                            style={{ fontWeight: 500, color: \"#525252\" }}\r\n                          >\r\n                            {returnIndexQuestion(itemQues)}\r\n                          </p>\r\n                          <Tooltip title=\"Thêm đáp án\">\r\n                            <button\r\n                              className=\"btn-add-answer mb-3\"\r\n                              onClick={() => handleAddAnswer(itemQues.inputID)}\r\n                            >\r\n                              <Plus />\r\n                            </button>\r\n                          </Tooltip>\r\n\r\n                          <div className=\"row\">\r\n                            {itemQues.ExerciseAnswer?.map(\r\n                              (itemAns, index) =>\r\n                                itemAns.Enable && (\r\n                                  <div className=\"col-md-6 col-12\" key={index}>\r\n                                    <div className=\"row-ans\">\r\n                                      <Checkbox\r\n                                        checked={itemAns.isTrue}\r\n                                        onChange={(e) =>\r\n                                          onChange_isCorrect(\r\n                                            e,\r\n                                            itemAns.ID,\r\n                                            itemQues.inputID\r\n                                          )\r\n                                        }\r\n                                      ></Checkbox>\r\n                                      <Form.Item className=\"mb-0\">\r\n                                        <Input\r\n                                          value={itemAns.AnswerContent}\r\n                                          className=\"style-input\"\r\n                                          onChange={(e) =>\r\n                                            onChange_text(\r\n                                              e,\r\n                                              itemAns.ID,\r\n                                              itemQues.inputID\r\n                                            )\r\n                                          }\r\n                                        ></Input>\r\n                                      </Form.Item>\r\n                                      <button\r\n                                        className=\"delete-ans\"\r\n                                        onClick={() =>\r\n                                          deleteAnswerItem(\r\n                                            itemAns.ID,\r\n                                            itemQues.inputID\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <CloseOutlined />\r\n                                      </button>\r\n                                    </div>\r\n                                  </div>\r\n                                )\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragForm;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Sales\\\\Revenue\\\\SalerRevenue.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Spin } from 'antd';\nimport moment from 'moment';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { salerRevenueApi, salerTotalRevenueApi, staffApi } from '~/apiBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport ExpandTable from '~/components/ExpandTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nimport { fmSelectArr, numberWithCommas } from '~/utils/functions';\nimport SalerRevenueChart from './Chart/SalerRevenueChart';\nimport SalerRevenueSearch from './Chart/SalerRevenueSearch';\n\nfunction SalerRevenue(props) {\n  const {\n    0: salerTotalRevenueList,\n    1: setSalerTotalRevenueList\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    0: activeColumnSearch,\n    1: setActiveColumnSearch\n  } = useState('');\n  const {\n    0: salerList,\n    1: setSalerList\n  } = useState([]); // SORT OPTION\n\n  const sortOptionList = [{\n    dataSort: {\n      sort: 0,\n      sortType: true\n    },\n    value: 1,\n    text: 'Doanh thu tăng dần'\n  }, {\n    dataSort: {\n      sort: 0,\n      sortType: false\n    },\n    value: 2,\n    text: 'Doanh thu giảm dần'\n  }, {\n    dataSort: {\n      sort: 1,\n      sortType: true\n    },\n    value: 3,\n    text: 'Tổng hóa đơn tăng dần'\n  }, {\n    dataSort: {\n      sort: 1,\n      sortType: false\n    },\n    value: 4,\n    text: 'Tổng hóa đơn giảm dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: true\n    },\n    value: 5,\n    text: 'Tổng khách hàng tăng dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: false\n    },\n    value: 6,\n    text: 'Tổng khách hàng giảm dần'\n  }]; // FILTER\n\n  const listFieldInit = {\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false,\n    CounselorsName: null,\n    CounselorsID: null\n  };\n  let refValue = useRef({\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false\n  });\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(listFieldInit);\n  const {\n    0: salerRevenue,\n    1: setSalerRevenue\n  } = useState({\n    id: null,\n    data: []\n  }); // FILTER\n\n  const onFilter = obj => {\n    setFilters(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1\n    }, obj), {}, {\n      fromDate: moment(obj.fromDate).format('YYYY/MM/DD'),\n      toDate: moment(obj.toDate).format('YYYY/MM/DD')\n    }));\n  }; // PAGINATION\n\n\n  const getPagination = (pageIndex, pageSize) => {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize,\n      pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  }; // SORT\n\n\n  const onSort = option => {\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), refValue.current));\n  }; // RESET SEARCH\n\n\n  const onResetSearch = () => {\n    setActiveColumnSearch('');\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), {}, {\n      pageSize: refValue.current.pageSize\n    }));\n  }; // ACTION SEARCH\n\n\n  const onSearch = (valueSearch, dataIndex) => {\n    setActiveColumnSearch(dataIndex);\n\n    if (dataIndex === 'CreatedOn') {\n      setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n        pageIndex: 1\n      }, valueSearch));\n    } else {\n      setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n        pageIndex: 1,\n        [dataIndex]: valueSearch\n      }));\n    }\n  };\n\n  const fetchSalerTotalRevenueList = async () => {\n    try {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n      const res = await salerTotalRevenueApi.getAll(filters);\n\n      if (res.status === 200) {\n        setSalerTotalRevenueList(res.data.data);\n        setTotalPage(res.data.totalRow);\n      }\n\n      if (res.status === 204) {\n        setSalerTotalRevenueList([]);\n        setTotalPage(0);\n      }\n    } catch (error) {\n      console.log('fetchSalerTotalRevenueList', error.message);\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchSalerTotalRevenueList();\n  }, [filters]);\n\n  const fetchSalerList = async () => {\n    try {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n      const res = await staffApi.getAll({\n        selectAll: true,\n        RoleID: 6\n      });\n\n      if (res.status === 200) {\n        const fmSelectOptionList = fmSelectArr(res.data.data, 'FullNameUnicode', 'UserInformationID');\n        setSalerList(fmSelectOptionList);\n      }\n    } catch (error) {\n      console.log('fetchSalerList', error.message);\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchSalerList();\n  }, []);\n\n  const fetchSalerRevenue = async SalerID => {\n    try {\n      setIsLoading({\n        type: 'FETCH_SALER_REVENUE',\n        status: true\n      });\n      const res = await salerRevenueApi.getAll({\n        selectAll: true,\n        CounselorsID: SalerID\n      });\n\n      if (res.status === 200) {\n        setSalerRevenue({\n          id: SalerID,\n          data: res.data.data\n        });\n      }\n\n      if (res.status === 204) {\n        setSalerRevenue(_objectSpread(_objectSpread({}, salerRevenue), {}, {\n          id: SalerID\n        }));\n      }\n    } catch (error) {\n      console.log('fetchTotalRevenueSaler', error.message);\n    } finally {\n      setIsLoading({\n        type: 'FETCH_SALER_REVENUE',\n        status: false\n      });\n    }\n  };\n\n  const filterSalerRevenue = async (data) => {\n    try {\n      setIsLoading({\n        type: 'FETCH_SALER_REVENUE',\n        status: true\n      });\n      const newData = {\n        fromDate: moment(data.fromDate).format('YYYY/MM/DD'),\n        toDate: moment(data.toDate).format('YYYY/MM/DD')\n      };\n      const res = await salerRevenueApi.getAll(_objectSpread({\n        selectAll: true,\n        CounselorsID: salerRevenue.id\n      }, newData));\n\n      if (res.status === 200) {\n        setSalerRevenue(_objectSpread(_objectSpread({}, salerRevenue), {}, {\n          data: res.data.data\n        }));\n      }\n\n      if (res.status === 204) {\n        showNoti('danger', 'Dữ liệu trống');\n      }\n    } catch (error) {\n      console.log('fetchTotalRevenueSaler', error.message);\n    } finally {\n      setIsLoading({\n        type: 'FETCH_SALER_REVENUE',\n        status: false\n      });\n    }\n  };\n\n  const columns = [_objectSpread(_objectSpread({\n    title: 'Tư vấn viên',\n    dataIndex: 'CounselorsName',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 22\n    }, this)\n  }, FilterColumn('CounselorsID', onSearch, onResetSearch, 'select', salerList)), {}, {\n    className: activeColumnSearch === 'CounselorsID' ? 'active-column-search' : ''\n  }), {\n    title: 'Tổng số hóa đơn',\n    dataIndex: 'InvoiceNumber'\n  }, {\n    title: 'Tổng số khách hàng',\n    dataIndex: 'CustomersNumber'\n  }, {\n    title: 'Doanh thu',\n    dataIndex: 'Revenue',\n    render: price => numberWithCommas(price)\n  }];\n  const expandableObj = {\n    expandedRowRender: record => /*#__PURE__*/_jsxDEV(Spin, {\n      spinning: isLoading.type === 'FETCH_SALER_REVENUE' && isLoading.status,\n      children: [/*#__PURE__*/_jsxDEV(SalerRevenueSearch, {\n        handleSubmit: filterSalerRevenue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SalerRevenueChart, {\n        revenueList: salerRevenue.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 4\n    }, this),\n    onExpand: (expanded, record) => {\n      if (expanded && salerRevenue.id !== record.CounselorsID) {\n        fetchSalerRevenue(record.CounselorsID);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ExpandTable, {\n    TitlePage: \"Doanh thu\",\n    loading: isLoading,\n    totalPage: totalPage,\n    currentPage: filters.pageIndex,\n    getPagination: getPagination,\n    noScroll: true,\n    Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extra-table\",\n      children: /*#__PURE__*/_jsxDEV(SortBox, {\n        handleSort: onSort,\n        dataOption: sortOptionList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 5\n    }, this),\n    dataSource: salerTotalRevenueList,\n    columns: columns,\n    expandable: expandableObj\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 3\n  }, this);\n}\n\nexport default SalerRevenue;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Sales/Revenue/SalerRevenue.tsx"],"names":["Spin","moment","React","useEffect","useRef","useState","salerRevenueApi","salerTotalRevenueApi","staffApi","SortBox","ExpandTable","FilterColumn","useWrap","fmSelectArr","numberWithCommas","SalerRevenueChart","SalerRevenueSearch","SalerRevenue","props","salerTotalRevenueList","setSalerTotalRevenueList","isLoading","setIsLoading","type","status","totalPage","setTotalPage","showNoti","activeColumnSearch","setActiveColumnSearch","salerList","setSalerList","sortOptionList","dataSort","sort","sortType","value","text","listFieldInit","pageIndex","pageSize","CounselorsName","CounselorsID","refValue","filters","setFilters","salerRevenue","setSalerRevenue","id","data","onFilter","obj","current","fromDate","format","toDate","getPagination","onSort","option","title","onResetSearch","onSearch","valueSearch","dataIndex","fetchSalerTotalRevenueList","res","getAll","totalRow","error","console","log","message","fetchSalerList","selectAll","RoleID","fmSelectOptionList","fetchSalerRevenue","SalerID","filterSalerRevenue","newData","columns","render","className","price","expandableObj","expandedRowRender","record","onExpand","expanded"],"mappings":"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","sourcesContent":["import {Spin} from 'antd';\r\nimport moment from 'moment';\r\nimport React, {useEffect, useRef, useState} from 'react';\r\nimport {salerRevenueApi, salerTotalRevenueApi, staffApi} from '~/apiBase';\r\nimport SortBox from '~/components/Elements/SortBox';\r\nimport ExpandTable from '~/components/ExpandTable';\r\nimport FilterColumn from '~/components/Tables/FilterColumn';\r\nimport {useWrap} from '~/context/wrap';\r\nimport {fmSelectArr, numberWithCommas} from '~/utils/functions';\r\nimport SalerRevenueChart from './Chart/SalerRevenueChart';\r\nimport SalerRevenueSearch from './Chart/SalerRevenueSearch';\r\n\r\nfunction SalerRevenue(props) {\r\n\tconst [salerTotalRevenueList, setSalerTotalRevenueList] = useState<\r\n\t\tISalerTotalRevenue[]\r\n\t>([]);\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false,\r\n\t});\r\n\tconst [totalPage, setTotalPage] = useState(null);\r\n\tconst {showNoti} = useWrap();\r\n\tconst [activeColumnSearch, setActiveColumnSearch] = useState('');\r\n\tconst [salerList, setSalerList] = useState<IOptionCommon[]>([]);\r\n\t// SORT OPTION\r\n\tconst sortOptionList = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: true,\r\n\t\t\t},\r\n\t\t\tvalue: 1,\r\n\t\t\ttext: 'Doanh thu tăng dần',\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: false,\r\n\t\t\t},\r\n\t\t\tvalue: 2,\r\n\t\t\ttext: 'Doanh thu giảm dần',\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 1,\r\n\t\t\t\tsortType: true,\r\n\t\t\t},\r\n\t\t\tvalue: 3,\r\n\t\t\ttext: 'Tổng hóa đơn tăng dần',\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 1,\r\n\t\t\t\tsortType: false,\r\n\t\t\t},\r\n\t\t\tvalue: 4,\r\n\t\t\ttext: 'Tổng hóa đơn giảm dần',\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: true,\r\n\t\t\t},\r\n\t\t\tvalue: 5,\r\n\t\t\ttext: 'Tổng khách hàng tăng dần',\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: false,\r\n\t\t\t},\r\n\t\t\tvalue: 6,\r\n\t\t\ttext: 'Tổng khách hàng giảm dần',\r\n\t\t},\r\n\t];\r\n\t// FILTER\r\n\tconst listFieldInit = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false,\r\n\r\n\t\tCounselorsName: null,\r\n\t\tCounselorsID: null,\r\n\t};\r\n\tlet refValue = useRef({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false,\r\n\t});\r\n\tconst [filters, setFilters] = useState(listFieldInit);\r\n\tconst [salerRevenue, setSalerRevenue] = useState<{\r\n\t\tid: number;\r\n\t\tdata: ISalerRevenue[];\r\n\t}>({\r\n\t\tid: null,\r\n\t\tdata: [],\r\n\t});\r\n\t// FILTER\r\n\tconst onFilter = (obj) => {\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t...obj,\r\n\t\t\tfromDate: moment(obj.fromDate).format('YYYY/MM/DD'),\r\n\t\t\ttoDate: moment(obj.toDate).format('YYYY/MM/DD'),\r\n\t\t});\r\n\t};\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10;\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tpageSize,\r\n\t\t\tpageIndex,\r\n\t\t};\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\t...refValue.current,\r\n\t\t});\r\n\t};\r\n\t// SORT\r\n\tconst onSort = (option) => {\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType,\r\n\t\t};\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t});\r\n\t};\r\n\t// RESET SEARCH\r\n\tconst onResetSearch = () => {\r\n\t\tsetActiveColumnSearch('');\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\tpageSize: refValue.current.pageSize,\r\n\t\t});\r\n\t};\r\n\t// ACTION SEARCH\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tsetActiveColumnSearch(dataIndex);\r\n\t\tif (dataIndex === 'CreatedOn') {\r\n\t\t\tsetFilters({\r\n\t\t\t\t...listFieldInit,\r\n\t\t\t\t...refValue.current,\r\n\t\t\t\tpageIndex: 1,\r\n\t\t\t\t...valueSearch,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetFilters({\r\n\t\t\t\t...listFieldInit,\r\n\t\t\t\t...refValue.current,\r\n\t\t\t\tpageIndex: 1,\r\n\t\t\t\t[dataIndex]: valueSearch,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst fetchSalerTotalRevenueList = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true,\r\n\t\t\t});\r\n\t\t\tconst res = await salerTotalRevenueApi.getAll(filters);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetSalerTotalRevenueList(res.data.data);\r\n\t\t\t\tsetTotalPage(res.data.totalRow);\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetSalerTotalRevenueList([]);\r\n\t\t\t\tsetTotalPage(0);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('fetchSalerTotalRevenueList', error.message);\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchSalerTotalRevenueList();\r\n\t}, [filters]);\r\n\r\n\tconst fetchSalerList = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true,\r\n\t\t\t});\r\n\t\t\tconst res = await staffApi.getAll({\r\n\t\t\t\tselectAll: true,\r\n\t\t\t\tRoleID: 6,\r\n\t\t\t});\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst fmSelectOptionList = fmSelectArr(\r\n\t\t\t\t\tres.data.data,\r\n\t\t\t\t\t'FullNameUnicode',\r\n\t\t\t\t\t'UserInformationID'\r\n\t\t\t\t);\r\n\t\t\t\tsetSalerList(fmSelectOptionList);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('fetchSalerList', error.message);\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tfetchSalerList();\r\n\t}, []);\r\n\tconst fetchSalerRevenue = async (SalerID: number) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_SALER_REVENUE',\r\n\t\t\t\tstatus: true,\r\n\t\t\t});\r\n\t\t\tconst res = await salerRevenueApi.getAll({\r\n\t\t\t\tselectAll: true,\r\n\t\t\t\tCounselorsID: SalerID,\r\n\t\t\t});\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetSalerRevenue({\r\n\t\t\t\t\tid: SalerID,\r\n\t\t\t\t\tdata: res.data.data,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetSalerRevenue({\r\n\t\t\t\t\t...salerRevenue,\r\n\t\t\t\t\tid: SalerID,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('fetchTotalRevenueSaler', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_SALER_REVENUE',\r\n\t\t\t\tstatus: false,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tconst filterSalerRevenue = async (data: {\r\n\t\tfromDate: string;\r\n\t\ttoDate: string;\r\n\t}) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_SALER_REVENUE',\r\n\t\t\t\tstatus: true,\r\n\t\t\t});\r\n\t\t\tconst newData = {\r\n\t\t\t\tfromDate: moment(data.fromDate).format('YYYY/MM/DD'),\r\n\t\t\t\ttoDate: moment(data.toDate).format('YYYY/MM/DD'),\r\n\t\t\t};\r\n\t\t\tconst res = await salerRevenueApi.getAll({\r\n\t\t\t\tselectAll: true,\r\n\t\t\t\tCounselorsID: salerRevenue.id,\r\n\t\t\t\t...newData,\r\n\t\t\t});\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetSalerRevenue({\r\n\t\t\t\t\t...salerRevenue,\r\n\t\t\t\t\tdata: res.data.data,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', 'Dữ liệu trống');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('fetchTotalRevenueSaler', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_SALER_REVENUE',\r\n\t\t\t\tstatus: false,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Tư vấn viên',\r\n\t\t\tdataIndex: 'CounselorsName',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>,\r\n\t\t\t...FilterColumn(\r\n\t\t\t\t'CounselorsID',\r\n\t\t\t\tonSearch,\r\n\t\t\t\tonResetSearch,\r\n\t\t\t\t'select',\r\n\t\t\t\tsalerList\r\n\t\t\t),\r\n\t\t\tclassName:\r\n\t\t\t\tactiveColumnSearch === 'CounselorsID' ? 'active-column-search' : '',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tổng số hóa đơn',\r\n\t\t\tdataIndex: 'InvoiceNumber',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tổng số khách hàng',\r\n\t\t\tdataIndex: 'CustomersNumber',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Doanh thu',\r\n\t\t\tdataIndex: 'Revenue',\r\n\t\t\trender: (price) => numberWithCommas(price),\r\n\t\t},\r\n\t];\r\n\r\n\tconst expandableObj = {\r\n\t\texpandedRowRender: (record: ISalerRevenue) => (\r\n\t\t\t<Spin\r\n\t\t\t\tspinning={isLoading.type === 'FETCH_SALER_REVENUE' && isLoading.status}\r\n\t\t\t>\r\n\t\t\t\t<SalerRevenueSearch handleSubmit={filterSalerRevenue} />\r\n\t\t\t\t<SalerRevenueChart revenueList={salerRevenue.data} />\r\n\t\t\t</Spin>\r\n\t\t),\r\n\t\tonExpand: (expanded, record: ISalerRevenue) => {\r\n\t\t\tif (expanded && salerRevenue.id !== record.CounselorsID) {\r\n\t\t\t\tfetchSalerRevenue(record.CounselorsID);\r\n\t\t\t}\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<ExpandTable\r\n\t\t\tTitlePage=\"Doanh thu\"\r\n\t\t\tloading={isLoading}\r\n\t\t\ttotalPage={totalPage}\r\n\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\tgetPagination={getPagination}\r\n\t\t\tnoScroll\r\n\t\t\tExtra={\r\n\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t<SortBox handleSort={onSort} dataOption={sortOptionList} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\tdataSource={salerTotalRevenueList}\r\n\t\t\tcolumns={columns}\r\n\t\t\texpandable={expandableObj}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default SalerRevenue;\r\n"]},"metadata":{},"sourceType":"module"}
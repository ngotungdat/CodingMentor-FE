{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\StaffList\\\\ManageTask\\\\ManageTask.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport moment from 'moment';\nimport { useEffect, useRef, useState } from 'react';\nimport { staffOfTaskGroupApi, taskApi, taskGroupApi, userInformationApi } from '~/apiBase';\nimport DeleteTableRow from '~/components/Elements/DeleteTableRow/DeleteTableRow';\nimport SortBox from '~/components/Elements/SortBox';\nimport LayoutBase from '~/components/LayoutBase';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useDebounce } from '~/context/useDebounce';\nimport { useWrap } from '~/context/wrap';\nimport { fmSelectArr, mathRound } from '~/utils/functions';\nimport StaffOfTaskGroupForm from './StaffOfTaskGroup/StaffOfTaskGroupForm';\nimport TaskForm from './Task/TaskForm';\nimport TaskGroupFilterDate from './TaskGroup/TaskGroupFilterDate';\nimport TaskGroupForm from './TaskGroup/TaskGroupForm';\n\nvar ManageTask = function ManageTask() {\n  _s();\n\n  // ----------STATE----------\n  var _useState = useState([]),\n      taskGroupList = _useState[0],\n      setTaskGroupList = _useState[1];\n\n  var _useState2 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      totalPage = _useState3[0],\n      setTotalPage = _useState3[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      userInformation = _useWrap.userInformation,\n      pageSize = _useWrap.pageSize;\n\n  var _useState4 = useState([]),\n      optionStaffList = _useState4[0],\n      setOptionStaffList = _useState4[1];\n\n  var _useState5 = useState([]),\n      staffOfTaskGroup = _useState5[0],\n      setStaffOfTaskGroup = _useState5[1];\n\n  var _useState6 = useState([]),\n      taskList = _useState6[0],\n      setTaskList = _useState6[1];\n\n  var _useState7 = useState([]),\n      optionTaskList = _useState7[0],\n      setOptionTaskList = _useState7[1];\n\n  var _useState8 = useState(''),\n      activeColumnSearch = _useState8[0],\n      setActiveColumnSearch = _useState8[1]; // FILTER\n\n\n  var listFieldInit = {\n    pageIndex: 1,\n    pageSize: pageSize,\n    sort: -1,\n    sortType: false,\n    DoneTaskGroup: '',\n    TaskGroupName: '',\n    fromDate: '',\n    toDate: ''\n  };\n  var refValue = useRef({\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false\n  });\n\n  var _useState9 = useState(listFieldInit),\n      filters = _useState9[0],\n      setFilters = _useState9[1]; // ----------TASK GROUP----------\n  // SORT OPTION\n\n\n  var sortOptionList = [{\n    dataSort: {\n      sort: 0,\n      sortType: true\n    },\n    value: 1,\n    text: 'Tên tăng dần'\n  }, {\n    dataSort: {\n      sort: 0,\n      sortType: false\n    },\n    value: 2,\n    text: 'Tên giảm dần'\n  }, {\n    dataSort: {\n      sort: 1,\n      sortType: true\n    },\n    value: 1,\n    text: 'Thời hạn tăng dần'\n  }, {\n    dataSort: {\n      sort: 1,\n      sortType: false\n    },\n    value: 2,\n    text: 'Thời hạn giảm dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: true\n    },\n    value: 3,\n    text: 'Tiến độ tăng dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: false\n    },\n    value: 4,\n    text: 'Tiến độ giảm dần'\n  }]; // 1: ADMIN - 5: MANAGER\n\n  var checkAuthorization = function checkAuthorization(StaffID) {\n    if (!userInformation) return;\n    var role = userInformation['RoleID'];\n    var uid = userInformation.UserInformationID;\n\n    if (role === 1 || role === 5 || +StaffID === +uid) {\n      return 'Accept';\n    }\n\n    return 'Ignore';\n  }; // FILTER\n\n\n  var onFilter = function onFilter(arr) {\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1,\n      fromDate: arr[0],\n      toDate: arr[1]\n    }));\n  }; // PAGINATION\n\n\n  var getPagination = function getPagination(pageIndex, pageSize) {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize: pageSize,\n      pageIndex: pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  }; // SORT\n\n\n  var onSort = function onSort(option) {\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), refValue.current));\n  }; // RESET SEARCH\n\n\n  var onResetSearch = function onResetSearch() {\n    setActiveColumnSearch('');\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), {}, {\n      pageSize: refValue.current.pageSize\n    }));\n  }; // ACTION SEARCH\n\n\n  var onSearch = function onSearch(valueSearch, dataIndex) {\n    setActiveColumnSearch(dataIndex);\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, _defineProperty({\n      pageIndex: 1\n    }, dataIndex, valueSearch)));\n  }; // CREATE\n\n\n  var onCreateTaskGroup = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return taskGroupApi.add(data);\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                showNoti('success', res.data.message);\n                onResetSearch(); // <== khi tạo xong r reset search để trở về trang đầu tiên\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              showNoti('danger', _context.t0.message);\n\n            case 11:\n              _context.prev = 11;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context.finish(11);\n\n            case 14:\n              return _context.abrupt(\"return\", res);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8, 11, 14]]);\n    }));\n\n    return function onCreateTaskGroup(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // UPDATE\n\n\n  var onUpdateTaskGroup = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(newObj, idx) {\n      var res, ID, TaskGroupName, Note, Deadline, Enable, newTaskGroup, newTaskGroupList;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              _context2.prev = 1;\n              ID = newObj.ID, TaskGroupName = newObj.TaskGroupName, Note = newObj.Note, Deadline = newObj.Deadline, Enable = newObj.Enable;\n              newTaskGroup = {\n                ID: ID,\n                TaskGroupName: TaskGroupName,\n                Note: Note,\n                Deadline: Deadline,\n                Enable: Enable\n              };\n              _context2.next = 6;\n              return taskGroupApi.update(newTaskGroup);\n\n            case 6:\n              res = _context2.sent;\n\n              if (res.status === 200) {\n                newTaskGroupList = _toConsumableArray(taskGroupList);\n                newTaskGroupList.splice(idx, 1, _objectSpread({}, newObj));\n                setTaskGroupList(newTaskGroupList);\n                showNoti('success', res.data.message);\n              }\n\n              if (res.status === 204) {\n                setTaskGroupList([]);\n              }\n\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              showNoti('danger', _context2.t0.message);\n\n            case 14:\n              _context2.prev = 14;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context2.abrupt(\"return\", res);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 11, 14, 18]]);\n    }));\n\n    return function onUpdateTaskGroup(_x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // DELETE\n\n\n  var onDeleteTaskGroup = function onDeleteTaskGroup(idx) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var delObj, ID, TaskGroupName, Note, Deadline, newDelObj, res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context3.prev = 1;\n              delObj = taskGroupList[idx];\n              ID = delObj.ID, TaskGroupName = delObj.TaskGroupName, Note = delObj.Note, Deadline = delObj.Deadline;\n              newDelObj = {\n                ID: ID,\n                TaskGroupName: TaskGroupName,\n                Note: Note,\n                Deadline: Deadline,\n                Enable: false\n              };\n              _context3.next = 7;\n              return taskGroupApi[\"delete\"](newDelObj);\n\n            case 7:\n              res = _context3.sent;\n              res.status === 200 && showNoti('success', res.data.message);\n\n              if (!(taskGroupList.length === 1)) {\n                _context3.next = 12;\n                break;\n              }\n\n              filters.pageIndex === 1 ? (setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n                pageIndex: 1\n              })), setTaskGroupList([])) : setFilters(_objectSpread(_objectSpread(_objectSpread({}, filters), refValue.current), {}, {\n                pageIndex: filters.pageIndex - 1\n              }));\n              return _context3.abrupt(\"return\");\n\n            case 12:\n              fetchGroupTask();\n              _context3.next = 18;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](1);\n              showNoti('danger', _context3.t0.message);\n\n            case 18:\n              _context3.prev = 18;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context3.finish(18);\n\n            case 21:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 15, 18, 21]]);\n    }));\n  };\n\n  var fetchGroupTask = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var res, StaffID, _yield$Promise$all, _yield$Promise$all2, taskGroupRes, staffOfTaskGroupRes, newTaskGroupList, newStaffOfTaskGroupList, taskGroupListOfStaff;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context4.prev = 1;\n\n              if (userInformation) {\n                _context4.next = 4;\n                break;\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 4:\n              if (!(userInformation['RoleID'] === 1 || userInformation['RoleID'] === 5)) {\n                _context4.next = 12;\n                break;\n              }\n\n              _context4.next = 7;\n              return taskGroupApi.getAll(filters);\n\n            case 7:\n              res = _context4.sent;\n\n              if (res.status === 200) {\n                if (res.data.totalRow && res.data.data.length) {\n                  setTaskGroupList(res.data.data);\n                  setTotalPage(res.data.totalRow);\n                }\n              }\n\n              if (res.status === 204) {\n                showNoti('danger', 'Không tìm thấy');\n              }\n\n              _context4.next = 21;\n              break;\n\n            case 12:\n              StaffID = userInformation.UserInformationID;\n              _context4.next = 15;\n              return Promise.all([taskGroupApi.getAll(filters), staffOfTaskGroupApi.getAll({\n                StaffID: StaffID\n              })]);\n\n            case 15:\n              _yield$Promise$all = _context4.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              taskGroupRes = _yield$Promise$all2[0];\n              staffOfTaskGroupRes = _yield$Promise$all2[1];\n\n              if (taskGroupRes.status === 200 && staffOfTaskGroupRes.status === 200) {\n                if (taskGroupRes.data.totalRow && staffOfTaskGroupRes.data.totalRow) {\n                  newTaskGroupList = taskGroupRes.data.data;\n                  newStaffOfTaskGroupList = staffOfTaskGroupRes.data.data;\n                  taskGroupListOfStaff = newTaskGroupList.filter(function (tg) {\n                    if (newStaffOfTaskGroupList.some(function (s) {\n                      return s.TaskGroupID === tg.ID;\n                    })) {\n                      return tg;\n                    }\n                  });\n                  setTaskGroupList(taskGroupListOfStaff);\n                  setTotalPage(taskGroupListOfStaff.length);\n                }\n              }\n\n              if (taskGroupRes.status === 204 || staffOfTaskGroupRes.status === 204) {\n                showNoti('danger', 'Không tìm thấy');\n                setTaskGroupList([]);\n              }\n\n            case 21:\n              _context4.next = 26;\n              break;\n\n            case 23:\n              _context4.prev = 23;\n              _context4.t0 = _context4[\"catch\"](1);\n              showNoti('danger', _context4.t0.message);\n\n            case 26:\n              _context4.prev = 26;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context4.finish(26);\n\n            case 29:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 23, 26, 29]]);\n    }));\n\n    return function fetchGroupTask() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onDebounceFetchGroupTask = useDebounce(fetchGroupTask, 500, []);\n  useEffect(function () {\n    fetchGroupTask();\n  }, [filters, userInformation]); // ----------STAFF OF TASK GROUP----------\n\n  var optionRoleList = [{\n    title: 'Admin',\n    value: 1\n  }, {\n    title: 'Giáo viên',\n    value: 2\n  }, {\n    title: 'Nhân viên quản lý',\n    value: 5\n  }, {\n    title: 'Nhân viên bán hàng',\n    value: 6\n  }, {\n    title: 'Học vụ',\n    value: 7\n  }, {\n    title: 'Quản lý chuyên môn',\n    value: 8\n  }, {\n    title: 'Kế toán',\n    value: 9\n  }];\n\n  var fetchStaffListByRole = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(RoleID) {\n      var res, fmOptionStaffList;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              setIsLoading({\n                type: 'FETCH_STAFF',\n                status: true\n              });\n              _context5.prev = 1;\n              _context5.next = 4;\n              return userInformationApi.getAllParams({\n                RoleID: RoleID,\n                pageSize: 999\n              });\n\n            case 4:\n              res = _context5.sent;\n\n              if (res.status === 200) {\n                fmOptionStaffList = fmSelectArr(res.data.data, 'FullNameUnicode', 'UserInformationID');\n                setOptionStaffList(fmOptionStaffList);\n              }\n\n              if (res.status === 204) {\n                setOptionStaffList([]);\n              }\n\n              _context5.next = 12;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](1);\n              console.log('fetchStaffListByRole', _context5.t0);\n\n            case 12:\n              _context5.prev = 12;\n              setIsLoading({\n                type: 'FETCH_STAFF',\n                status: false\n              });\n              return _context5.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function fetchStaffListByRole(_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var fetchStaffOfTaskGroup = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(TaskGroupID) {\n      var res, addKeyToStaff;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context6.prev = 1;\n              _context6.next = 4;\n              return staffOfTaskGroupApi.getAll({\n                TaskGroupID: TaskGroupID,\n                pageSize: 99\n              });\n\n            case 4:\n              res = _context6.sent;\n\n              if (res.status === 200) {\n                addKeyToStaff = res.data.data.map(function (s, idx) {\n                  return _objectSpread(_objectSpread({}, s), {}, {\n                    key: idx\n                  });\n                });\n                setStaffOfTaskGroup(addKeyToStaff);\n              }\n\n              if (res.status === 204) {\n                setStaffOfTaskGroup([]);\n              }\n\n              _context6.next = 12;\n              break;\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](1);\n              console.log('fetchStaffOfTaskGroup', _context6.t0);\n\n            case 12:\n              _context6.prev = 12;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context6.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function fetchStaffOfTaskGroup(_x5) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var middlewareCreateStaffOfTaskGroup = function middlewareCreateStaffOfTaskGroup(ID) {\n    return /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(obj) {\n        var StaffID, isAddTask, TaskID, isDone;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                StaffID = obj.StaffID, isAddTask = obj.isAddTask, TaskID = obj.TaskID;\n                isDone = true;\n                _context7.next = 4;\n                return onCreateStaffOfTaskGroup({\n                  TaskGroupID: ID,\n                  StaffID: StaffID\n                }).then(function (res) {\n                  if ((res === null || res === void 0 ? void 0 : res.status) !== 200) isDone = false;\n                });\n\n              case 4:\n                if (!(isAddTask && isDone)) {\n                  _context7.next = 7;\n                  break;\n                }\n\n                _context7.next = 7;\n                return onUpdateTask({\n                  ID: TaskID,\n                  StaffID: StaffID\n                }).then(function (res) {\n                  if ((res === null || res === void 0 ? void 0 : res.status) !== 200) isDone = false;\n                });\n\n              case 7:\n                return _context7.abrupt(\"return\", isDone);\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n  };\n\n  var onCreateStaffOfTaskGroup = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(obj) {\n      var res, newStaff;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              _context8.prev = 1;\n              _context8.next = 4;\n              return staffOfTaskGroupApi.add(obj);\n\n            case 4:\n              res = _context8.sent;\n\n              if (res.status === 200) {\n                newStaff = _objectSpread(_objectSpread({}, res.data.data), {}, {\n                  key: staffOfTaskGroup.length\n                });\n                setStaffOfTaskGroup([newStaff].concat(_toConsumableArray(staffOfTaskGroup)));\n                showNoti('success', res.data.message);\n              }\n\n              if (res.status === 204) {\n                showNoti('danger', res.data.message);\n              }\n\n              _context8.next = 13;\n              break;\n\n            case 9:\n              _context8.prev = 9;\n              _context8.t0 = _context8[\"catch\"](1);\n              showNoti('danger', _context8.t0.message);\n              console.log('fetchTask', _context8.t0);\n\n            case 13:\n              _context8.prev = 13;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context8.finish(13);\n\n            case 16:\n              return _context8.abrupt(\"return\", res);\n\n            case 17:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[1, 9, 13, 16]]);\n    }));\n\n    return function onCreateStaffOfTaskGroup(_x7) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var onDeleteStaffOfTaskGroup = function onDeleteStaffOfTaskGroup(idx) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n      var delObj, newDelObj, res, newStaffOfTaskGroup;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context9.prev = 1;\n              delObj = staffOfTaskGroup[idx];\n              newDelObj = {\n                ID: delObj.ID,\n                Enable: false\n              };\n              _context9.next = 6;\n              return staffOfTaskGroupApi[\"delete\"](newDelObj);\n\n            case 6:\n              res = _context9.sent;\n\n              if (res.status === 200) {\n                showNoti('success', res.data.message);\n                newStaffOfTaskGroup = _toConsumableArray(staffOfTaskGroup);\n                newStaffOfTaskGroup.splice(idx, 1);\n                setStaffOfTaskGroup(newStaffOfTaskGroup);\n              }\n\n              _context9.next = 13;\n              break;\n\n            case 10:\n              _context9.prev = 10;\n              _context9.t0 = _context9[\"catch\"](1);\n              showNoti('danger', _context9.t0.message);\n\n            case 13:\n              _context9.prev = 13;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context9.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[1, 10, 13, 16]]);\n    }));\n  }; // ----------TASK----------\n\n\n  var fetchTask = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(TaskGroupID) {\n      var res, fmOptionTaskList;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              setIsLoading({\n                type: 'FETCH_TASK',\n                status: true\n              });\n              _context10.prev = 1;\n              _context10.next = 4;\n              return taskApi.getAll({\n                TaskGroupID: TaskGroupID\n              });\n\n            case 4:\n              res = _context10.sent;\n\n              if (res.status === 200) {\n                fmOptionTaskList = fmSelectArr(res.data.data, 'WorkContent', 'ID', ['DoneTask', 'StaffID']).filter(function (s) {\n                  return !s.options.StaffID && s.options.DoneTask === false;\n                });\n                setTaskList(res.data.data);\n                setOptionTaskList(fmOptionTaskList);\n              }\n\n              if (res.status === 204) {\n                setTaskList([]);\n                setOptionTaskList([]);\n              }\n\n              _context10.next = 12;\n              break;\n\n            case 9:\n              _context10.prev = 9;\n              _context10.t0 = _context10[\"catch\"](1);\n              console.log('fetchTask', _context10.t0);\n\n            case 12:\n              _context10.prev = 12;\n              setIsLoading({\n                type: 'FETCH_TASK',\n                status: false\n              });\n              return _context10.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function fetchTask(_x8) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  var middlewareHandleTask = function middlewareHandleTask(TaskGroupID) {\n    return /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(obj, idx) {\n        var ID, WorkContent, isAddStaff, StaffID, OldStaffID, isDone, checkStaffID, res, _checkStaffID, _res;\n\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                ID = obj.ID, WorkContent = obj.WorkContent, isAddStaff = obj.isAddStaff, StaffID = obj.StaffID, OldStaffID = obj.OldStaffID;\n                isDone = true;\n\n                if (!isAddStaff) {\n                  _context11.next = 5;\n                  break;\n                }\n\n                _context11.next = 5;\n                return staffOfTaskGroupApi.add({\n                  TaskGroupID: TaskGroupID,\n                  StaffID: StaffID\n                })[\"catch\"](function (err) {\n                  return console.log(err);\n                });\n\n              case 5:\n                if (!(idx >= 0)) {\n                  _context11.next = 13;\n                  break;\n                }\n\n                checkStaffID = isAddStaff && OldStaffID !== StaffID ? StaffID : OldStaffID;\n                _context11.next = 9;\n                return onUpdateTask({\n                  ID: ID,\n                  WorkContent: WorkContent,\n                  StaffID: checkStaffID\n                }, idx);\n\n              case 9:\n                res = _context11.sent;\n                if ((res === null || res === void 0 ? void 0 : res.status) !== 200) isDone = false;\n                _context11.next = 18;\n                break;\n\n              case 13:\n                _checkStaffID = isAddStaff ? StaffID : null;\n                _context11.next = 16;\n                return onCreateTask({\n                  TaskGroupID: TaskGroupID,\n                  WorkContent: WorkContent,\n                  StaffID: _checkStaffID\n                });\n\n              case 16:\n                _res = _context11.sent;\n                if ((_res === null || _res === void 0 ? void 0 : _res.status) !== 200) isDone = false;\n\n              case 18:\n                return _context11.abrupt(\"return\", isDone);\n\n              case 19:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      return function (_x9, _x10) {\n        return _ref11.apply(this, arguments);\n      };\n    }();\n  };\n\n  var onCreateTask = /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(obj) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              _context12.prev = 1;\n              _context12.next = 4;\n              return taskApi.add(obj);\n\n            case 4:\n              res = _context12.sent;\n\n              if (res.status === 200) {\n                setTaskList([res.data.data].concat(_toConsumableArray(taskList)));\n                showNoti('success', res.data.message);\n              }\n\n              if (res.status === 204) {\n                showNoti('danger', res.data.message);\n              }\n\n              _context12.next = 13;\n              break;\n\n            case 9:\n              _context12.prev = 9;\n              _context12.t0 = _context12[\"catch\"](1);\n              showNoti('danger', _context12.t0.message);\n              console.log('fetchTask', _context12.t0);\n\n            case 13:\n              _context12.prev = 13;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context12.finish(13);\n\n            case 16:\n              return _context12.abrupt(\"return\", res);\n\n            case 17:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[1, 9, 13, 16]]);\n    }));\n\n    return function onCreateTask(_x11) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var onUpdateTask = /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(obj, idx) {\n      var res, _res$data$data, StaffName, StaffID, DoneTask, WorkContent, RoleID, RoleName, newTaskList, newTask;\n\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              setIsLoading({\n                type: 'FETCH_TASK',\n                status: true\n              });\n              _context13.prev = 1;\n              _context13.next = 4;\n              return taskApi.update(obj);\n\n            case 4:\n              res = _context13.sent;\n\n              if (res.status === 200) {\n                if (idx >= 0) {\n                  _res$data$data = res.data.data, StaffName = _res$data$data.StaffName, StaffID = _res$data$data.StaffID, DoneTask = _res$data$data.DoneTask, WorkContent = _res$data$data.WorkContent, RoleID = _res$data$data.RoleID, RoleName = _res$data$data.RoleName;\n                  newTaskList = _toConsumableArray(taskList);\n                  newTask = _objectSpread(_objectSpread({}, newTaskList[idx]), {}, {\n                    StaffName: StaffName,\n                    StaffID: StaffID,\n                    DoneTask: DoneTask,\n                    WorkContent: WorkContent,\n                    RoleID: RoleID,\n                    RoleName: RoleName\n                  });\n                  newTaskList.splice(idx, 1, newTask);\n                  setTaskList(newTaskList);\n                }\n\n                showNoti('success', res.data.message);\n              }\n\n              if (res.status === 204) {\n                showNoti('danger', res.data.message);\n              }\n\n              _context13.next = 13;\n              break;\n\n            case 9:\n              _context13.prev = 9;\n              _context13.t0 = _context13[\"catch\"](1);\n              showNoti('danger', _context13.t0.message);\n              console.log('fetchTask', _context13.t0);\n\n            case 13:\n              _context13.prev = 13;\n              setIsLoading({\n                type: 'FETCH_TASK',\n                status: false\n              });\n              return _context13.finish(13);\n\n            case 16:\n              return _context13.abrupt(\"return\", res);\n\n            case 17:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[1, 9, 13, 16]]);\n    }));\n\n    return function onUpdateTask(_x12, _x13) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  var onDebounceActionOfStaff = useDebounce(onUpdateTask, 500, []);\n\n  var onDeleteTask = function onDeleteTask(idx) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n      var delObj, newDelObj, res, newTaskList;\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              setIsLoading({\n                type: 'FETCH_TASK',\n                status: true\n              });\n              _context14.prev = 1;\n              delObj = taskList[idx];\n              newDelObj = {\n                ID: delObj.ID,\n                Enable: false\n              };\n              _context14.next = 6;\n              return taskApi[\"delete\"](newDelObj);\n\n            case 6:\n              res = _context14.sent;\n\n              if (res.status === 200) {\n                showNoti('success', res.data.message);\n                newTaskList = _toConsumableArray(taskList);\n                newTaskList.splice(idx, 1);\n                setTaskList(newTaskList);\n              }\n\n              _context14.next = 13;\n              break;\n\n            case 10:\n              _context14.prev = 10;\n              _context14.t0 = _context14[\"catch\"](1);\n              showNoti('danger', _context14.t0.message);\n\n            case 13:\n              _context14.prev = 13;\n              setIsLoading({\n                type: 'FETCH_TASK',\n                status: false\n              });\n              return _context14.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[1, 10, 13, 16]]);\n    }));\n  }; // ----------COLUMN----------\n\n\n  var columns = [_objectSpread(_objectSpread({\n    title: 'Nhóm công việc',\n    dataIndex: 'TaskGroupName'\n  }, FilterColumn('TaskGroupName', onSearch, onResetSearch, 'text')), {}, {\n    className: activeColumnSearch === 'TaskGroupName' ? 'active-column-search' : ''\n  }), {\n    title: 'Ghi chú',\n    dataIndex: 'Note'\n  }, {\n    title: 'Thời hạn',\n    dataIndex: 'Deadline',\n    render: function render(text) {\n      return moment(text).format('DD/MM/YYYY');\n    }\n  }, {\n    title: 'Ngày tạo',\n    dataIndex: 'CreatedOn',\n    render: function render(text) {\n      return moment(text).format('DD/MM/YYYY');\n    }\n  }, {\n    title: 'Tiến độ',\n    dataIndex: 'DonePercent',\n    render: function render(text) {\n      return mathRound(text) + '%  ';\n    }\n  }, {\n    align: 'center',\n    render: function render(value, _, idx) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: function onClick(e) {\n          return e.stopPropagation();\n        },\n        children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n          isLoading: isLoading,\n          handleFetchTask: function handleFetchTask() {\n            return fetchTask(value.ID);\n          },\n          taskList: taskList,\n          handleFetchStaffListByRole: fetchStaffListByRole,\n          optionRoleList: optionRoleList,\n          optionStaffList: optionStaffList,\n          handleSubmit: middlewareHandleTask(value.ID),\n          handleUpdateTask: onUpdateTask,\n          handleDeleteTask: onDeleteTask,\n          handleActionOfStaff: onDebounceActionOfStaff,\n          checkAuthorization: checkAuthorization,\n          userInformation: userInformation,\n          handleFetchGroupTask: onDebounceFetchGroupTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 6\n        }, _this), checkAuthorization() === 'Accept' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(StaffOfTaskGroupForm, {\n            isLoading: isLoading,\n            optionRoleList: optionRoleList,\n            optionStaffList: optionStaffList,\n            staffOfTaskGroup: staffOfTaskGroup,\n            optionTaskList: optionTaskList,\n            handleFetchStaffOfTaskGroup: function handleFetchStaffOfTaskGroup() {\n              return fetchStaffOfTaskGroup(value.ID);\n            },\n            handleFetchStaffListByRole: fetchStaffListByRole,\n            handleFetchTask: function handleFetchTask() {\n              return fetchTask(value.ID);\n            },\n            handleSubmit: middlewareCreateStaffOfTaskGroup(value.ID) //\n            ,\n            handleDeleteStaffOfTaskGroup: onDeleteStaffOfTaskGroup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 8\n          }, _this), /*#__PURE__*/_jsxDEV(TaskGroupForm, {\n            isLoading: isLoading,\n            isUpdate: true,\n            updateObj: value,\n            indexUpdateObj: idx,\n            handleUpdateTaskGroup: onUpdateTaskGroup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 8\n          }, _this), /*#__PURE__*/_jsxDEV(DeleteTableRow, {\n            handleDelete: onDeleteTaskGroup(idx),\n            text: \"nh\\xF3m c\\xF4ng vi\\u1EC7c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 8\n          }, _this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 5\n      }, _this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PowerTable, {\n      currentPage: filters.pageIndex,\n      totalPage: totalPage,\n      getPagination: getPagination,\n      loading: isLoading,\n      addClass: \"basic-header\",\n      columns: columns,\n      dataSource: taskGroupList,\n      TitlePage: \"Qu\\u1EA3n l\\xED c\\xF4ng vi\\u1EC7c\",\n      TitleCard: checkAuthorization() === 'Accept' && /*#__PURE__*/_jsxDEV(TaskGroupForm, {\n        isLoading: isLoading,\n        handleCreateTaskGroup: onCreateTaskGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 43\n      }, _this),\n      Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-datetime\",\n          children: /*#__PURE__*/_jsxDEV(TaskGroupFilterDate, {\n            handleFilter: onFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(SortBox, {\n          handleSort: onSort,\n          dataOption: sortOptionList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 7\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false);\n};\n\n_s(ManageTask, \"+q56hwMRNXLeROEwyP+EqzE0doU=\", false, function () {\n  return [useWrap, useDebounce, useDebounce];\n});\n\n_c = ManageTask;\nManageTask.layout = LayoutBase;\nexport default ManageTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageTask\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/StaffList/ManageTask/ManageTask.tsx"],"names":["moment","useEffect","useRef","useState","staffOfTaskGroupApi","taskApi","taskGroupApi","userInformationApi","DeleteTableRow","SortBox","LayoutBase","PowerTable","FilterColumn","useDebounce","useWrap","fmSelectArr","mathRound","StaffOfTaskGroupForm","TaskForm","TaskGroupFilterDate","TaskGroupForm","ManageTask","taskGroupList","setTaskGroupList","type","status","isLoading","setIsLoading","totalPage","setTotalPage","showNoti","userInformation","pageSize","optionStaffList","setOptionStaffList","staffOfTaskGroup","setStaffOfTaskGroup","taskList","setTaskList","optionTaskList","setOptionTaskList","activeColumnSearch","setActiveColumnSearch","listFieldInit","pageIndex","sort","sortType","DoneTaskGroup","TaskGroupName","fromDate","toDate","refValue","filters","setFilters","sortOptionList","dataSort","value","text","checkAuthorization","StaffID","role","uid","UserInformationID","onFilter","arr","current","getPagination","onSort","option","title","onResetSearch","onSearch","valueSearch","dataIndex","onCreateTaskGroup","data","add","res","message","onUpdateTaskGroup","newObj","idx","ID","Note","Deadline","Enable","newTaskGroup","update","newTaskGroupList","splice","onDeleteTaskGroup","delObj","newDelObj","length","fetchGroupTask","getAll","totalRow","Promise","all","taskGroupRes","staffOfTaskGroupRes","newStaffOfTaskGroupList","taskGroupListOfStaff","filter","tg","some","s","TaskGroupID","onDebounceFetchGroupTask","optionRoleList","fetchStaffListByRole","RoleID","getAllParams","fmOptionStaffList","console","log","fetchStaffOfTaskGroup","addKeyToStaff","map","key","middlewareCreateStaffOfTaskGroup","obj","isAddTask","TaskID","isDone","onCreateStaffOfTaskGroup","then","onUpdateTask","newStaff","onDeleteStaffOfTaskGroup","newStaffOfTaskGroup","fetchTask","fmOptionTaskList","options","DoneTask","middlewareHandleTask","WorkContent","isAddStaff","OldStaffID","err","checkStaffID","onCreateTask","StaffName","RoleName","newTaskList","newTask","onDebounceActionOfStaff","onDeleteTask","columns","className","render","format","align","_","e","stopPropagation","layout"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { staffOfTaskGroupApi, taskApi, taskGroupApi, userInformationApi } from '~/apiBase';\r\nimport DeleteTableRow from '~/components/Elements/DeleteTableRow/DeleteTableRow';\r\nimport SortBox from '~/components/Elements/SortBox';\r\nimport LayoutBase from '~/components/LayoutBase';\r\nimport PowerTable from '~/components/PowerTable';\r\nimport FilterColumn from '~/components/Tables/FilterColumn';\r\nimport { useDebounce } from '~/context/useDebounce';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { fmSelectArr, mathRound } from '~/utils/functions';\r\nimport StaffOfTaskGroupForm from './StaffOfTaskGroup/StaffOfTaskGroupForm';\r\nimport TaskForm from './Task/TaskForm';\r\nimport TaskGroupFilterDate from './TaskGroup/TaskGroupFilterDate';\r\nimport TaskGroupForm from './TaskGroup/TaskGroupForm';\r\n\r\nconst ManageTask = () => {\r\n\t// ----------STATE----------\r\n\tconst [taskGroupList, setTaskGroupList] = useState<ITaskGroup[]>([]);\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t});\r\n\tconst [totalPage, setTotalPage] = useState(null);\r\n\tconst { showNoti, userInformation, pageSize } = useWrap();\r\n\tconst [optionStaffList, setOptionStaffList] = useState<IOptionCommon[]>([]);\r\n\tconst [staffOfTaskGroup, setStaffOfTaskGroup] = useState<IStaffOfTaskGroup[]>([]);\r\n\tconst [taskList, setTaskList] = useState<ITask[]>([]);\r\n\tconst [optionTaskList, setOptionTaskList] = useState<IOptionCommon[]>([]);\r\n\tconst [activeColumnSearch, setActiveColumnSearch] = useState('');\r\n\t// FILTER\r\n\tconst listFieldInit = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: pageSize,\r\n\t\tsort: -1,\r\n\t\tsortType: false,\r\n\r\n\t\tDoneTaskGroup: '',\r\n\t\tTaskGroupName: '',\r\n\t\tfromDate: '',\r\n\t\ttoDate: ''\r\n\t};\r\n\tlet refValue = useRef({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false\r\n\t});\r\n\tconst [filters, setFilters] = useState(listFieldInit);\r\n\r\n\t// ----------TASK GROUP----------\r\n\t// SORT OPTION\r\n\tconst sortOptionList = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 1,\r\n\t\t\ttext: 'Tên tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 2,\r\n\t\t\ttext: 'Tên giảm dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 1,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 1,\r\n\t\t\ttext: 'Thời hạn tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 1,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 2,\r\n\t\t\ttext: 'Thời hạn giảm dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 3,\r\n\t\t\ttext: 'Tiến độ tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 4,\r\n\t\t\ttext: 'Tiến độ giảm dần'\r\n\t\t}\r\n\t];\r\n\t// 1: ADMIN - 5: MANAGER\r\n\tconst checkAuthorization = (StaffID?: number) => {\r\n\t\tif (!userInformation) return;\r\n\t\tconst role = userInformation['RoleID'];\r\n\t\tconst uid = userInformation.UserInformationID;\r\n\t\tif (role === 1 || role === 5 || +StaffID === +uid) {\r\n\t\t\treturn 'Accept';\r\n\t\t}\r\n\t\treturn 'Ignore';\r\n\t};\r\n\t// FILTER\r\n\tconst onFilter = (arr: string[]) => {\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tfromDate: arr[0],\r\n\t\t\ttoDate: arr[1]\r\n\t\t});\r\n\t};\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10;\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tpageSize,\r\n\t\t\tpageIndex\r\n\t\t};\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\t...refValue.current\r\n\t\t});\r\n\t};\r\n\t// SORT\r\n\tconst onSort = (option) => {\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t};\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current\r\n\t\t});\r\n\t};\r\n\t// RESET SEARCH\r\n\tconst onResetSearch = () => {\r\n\t\tsetActiveColumnSearch('');\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\tpageSize: refValue.current.pageSize\r\n\t\t});\r\n\t};\r\n\t// ACTION SEARCH\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tsetActiveColumnSearch(dataIndex);\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t[dataIndex]: valueSearch\r\n\t\t});\r\n\t};\r\n\t// CREATE\r\n\tconst onCreateTaskGroup = async (data: { TaskGroupName: string; Note: string; Deadline: string }) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\tlet res;\r\n\t\ttry {\r\n\t\t\tres = await taskGroupApi.add(data);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tshowNoti('success', res.data.message);\r\n\t\t\t\tonResetSearch(); // <== khi tạo xong r reset search để trở về trang đầu tiên\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn res;\r\n\t};\r\n\t// UPDATE\r\n\tconst onUpdateTaskGroup = async (newObj: ITaskGroup, idx: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\tlet res;\r\n\t\ttry {\r\n\t\t\tconst { ID, TaskGroupName, Note, Deadline, Enable } = newObj;\r\n\t\t\tconst newTaskGroup = {\r\n\t\t\t\tID,\r\n\t\t\t\tTaskGroupName,\r\n\t\t\t\tNote,\r\n\t\t\t\tDeadline,\r\n\t\t\t\tEnable\r\n\t\t\t};\r\n\t\t\tres = await taskGroupApi.update(newTaskGroup);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newTaskGroupList = [...taskGroupList];\r\n\t\t\t\tnewTaskGroupList.splice(idx, 1, {\r\n\t\t\t\t\t...newObj\r\n\t\t\t\t});\r\n\t\t\t\tsetTaskGroupList(newTaskGroupList);\r\n\t\t\t\tshowNoti('success', res.data.message);\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetTaskGroupList([]);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t\treturn res;\r\n\t\t}\r\n\t};\r\n\t// DELETE\r\n\tconst onDeleteTaskGroup = (idx: number) => {\r\n\t\treturn async () => {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\ttry {\r\n\t\t\t\tconst delObj = taskGroupList[idx];\r\n\t\t\t\tconst { ID, TaskGroupName, Note, Deadline } = delObj;\r\n\t\t\t\tconst newDelObj = {\r\n\t\t\t\t\tID,\r\n\t\t\t\t\tTaskGroupName,\r\n\t\t\t\t\tNote,\r\n\t\t\t\t\tDeadline,\r\n\t\t\t\t\tEnable: false\r\n\t\t\t\t};\r\n\t\t\t\tconst res = await taskGroupApi.delete(newDelObj);\r\n\t\t\t\tres.status === 200 && showNoti('success', res.data.message);\r\n\t\t\t\tif (taskGroupList.length === 1) {\r\n\t\t\t\t\tfilters.pageIndex === 1\r\n\t\t\t\t\t\t? (setFilters({\r\n\t\t\t\t\t\t\t\t...listFieldInit,\r\n\t\t\t\t\t\t\t\t...refValue.current,\r\n\t\t\t\t\t\t\t\tpageIndex: 1\r\n\t\t\t\t\t\t  }),\r\n\t\t\t\t\t\t  setTaskGroupList([]))\r\n\t\t\t\t\t\t: setFilters({\r\n\t\t\t\t\t\t\t\t...filters,\r\n\t\t\t\t\t\t\t\t...refValue.current,\r\n\t\t\t\t\t\t\t\tpageIndex: filters.pageIndex - 1\r\n\t\t\t\t\t\t  });\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfetchGroupTask();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\tconst fetchGroupTask = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tif (!userInformation) return;\r\n\t\t\t// ADMIN: 1 - MANAGER 5: SEE ALL TASK GROUP\r\n\t\t\t// OTHERWISE: MUST HAVE ID IN STAFF OF TASK GROUP\r\n\t\t\tif (userInformation['RoleID'] === 1 || userInformation['RoleID'] === 5) {\r\n\t\t\t\tlet res = await taskGroupApi.getAll(filters);\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tif (res.data.totalRow && res.data.data.length) {\r\n\t\t\t\t\t\tsetTaskGroupList(res.data.data);\r\n\t\t\t\t\t\tsetTotalPage(res.data.totalRow);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (res.status === 204) {\r\n\t\t\t\t\tshowNoti('danger', 'Không tìm thấy');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst StaffID = userInformation.UserInformationID;\r\n\t\t\t\tconst [taskGroupRes, staffOfTaskGroupRes] = await Promise.all([\r\n\t\t\t\t\ttaskGroupApi.getAll(filters),\r\n\t\t\t\t\tstaffOfTaskGroupApi.getAll({ StaffID })\r\n\t\t\t\t]);\r\n\t\t\t\tif (taskGroupRes.status === 200 && staffOfTaskGroupRes.status === 200) {\r\n\t\t\t\t\tif (taskGroupRes.data.totalRow && staffOfTaskGroupRes.data.totalRow) {\r\n\t\t\t\t\t\tconst newTaskGroupList = taskGroupRes.data.data;\r\n\t\t\t\t\t\tconst newStaffOfTaskGroupList = staffOfTaskGroupRes.data.data;\r\n\t\t\t\t\t\tconst taskGroupListOfStaff = newTaskGroupList.filter((tg) => {\r\n\t\t\t\t\t\t\tif (newStaffOfTaskGroupList.some((s) => s.TaskGroupID === tg.ID)) {\r\n\t\t\t\t\t\t\t\treturn tg;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tsetTaskGroupList(taskGroupListOfStaff);\r\n\t\t\t\t\t\tsetTotalPage(taskGroupListOfStaff.length);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (taskGroupRes.status === 204 || staffOfTaskGroupRes.status === 204) {\r\n\t\t\t\t\tshowNoti('danger', 'Không tìm thấy');\r\n\t\t\t\t\tsetTaskGroupList([]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tconst onDebounceFetchGroupTask = useDebounce(fetchGroupTask, 500, []);\r\n\tuseEffect(() => {\r\n\t\tfetchGroupTask();\r\n\t}, [filters, userInformation]);\r\n\t// ----------STAFF OF TASK GROUP----------\r\n\tconst optionRoleList = [\r\n\t\t{\r\n\t\t\ttitle: 'Admin',\r\n\t\t\tvalue: 1\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Giáo viên',\r\n\t\t\tvalue: 2\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Nhân viên quản lý',\r\n\t\t\tvalue: 5\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Nhân viên bán hàng',\r\n\t\t\tvalue: 6\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Học vụ',\r\n\t\t\tvalue: 7\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Quản lý chuyên môn',\r\n\t\t\tvalue: 8\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Kế toán',\r\n\t\t\tvalue: 9\r\n\t\t}\r\n\t];\r\n\tconst fetchStaffListByRole = async (RoleID: number) => {\r\n\t\tsetIsLoading({ type: 'FETCH_STAFF', status: true });\r\n\t\ttry {\r\n\t\t\tconst res = await userInformationApi.getAllParams({\r\n\t\t\t\tRoleID,\r\n\t\t\t\tpageSize: 999\r\n\t\t\t});\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst fmOptionStaffList = fmSelectArr(res.data.data, 'FullNameUnicode', 'UserInformationID');\r\n\t\t\t\tsetOptionStaffList(fmOptionStaffList);\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetOptionStaffList([]);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('fetchStaffListByRole', error);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'FETCH_STAFF', status: false });\r\n\t\t}\r\n\t};\r\n\tconst fetchStaffOfTaskGroup = async (TaskGroupID: number) => {\r\n\t\tsetIsLoading({ type: 'GET_ALL', status: true });\r\n\t\ttry {\r\n\t\t\tconst res = await staffOfTaskGroupApi.getAll({\r\n\t\t\t\tTaskGroupID,\r\n\t\t\t\tpageSize: 99\r\n\t\t\t});\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst addKeyToStaff = res.data.data.map((s, idx) => ({\r\n\t\t\t\t\t...s,\r\n\t\t\t\t\tkey: idx\r\n\t\t\t\t}));\r\n\t\t\t\tsetStaffOfTaskGroup(addKeyToStaff);\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetStaffOfTaskGroup([]);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('fetchStaffOfTaskGroup', error);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'GET_ALL', status: false });\r\n\t\t}\r\n\t};\r\n\tconst middlewareCreateStaffOfTaskGroup = (ID: number) => {\r\n\t\treturn async (obj: { RoleID: number; StaffID: number; isAddTask: boolean; TaskID?: number }) => {\r\n\t\t\tconst { StaffID, isAddTask, TaskID } = obj;\r\n\t\t\tlet isDone = true;\r\n\t\t\tawait onCreateStaffOfTaskGroup({\r\n\t\t\t\tTaskGroupID: ID,\r\n\t\t\t\tStaffID\r\n\t\t\t}).then((res) => {\r\n\t\t\t\tif (res?.status !== 200) isDone = false;\r\n\t\t\t});\r\n\t\t\tif (isAddTask && isDone) {\r\n\t\t\t\tawait onUpdateTask({ ID: TaskID, StaffID }).then((res) => {\r\n\t\t\t\t\tif (res?.status !== 200) isDone = false;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn isDone;\r\n\t\t};\r\n\t};\r\n\tconst onCreateStaffOfTaskGroup = async (obj: { TaskGroupID: number; StaffID: number }) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\tlet res;\r\n\t\ttry {\r\n\t\t\tres = await staffOfTaskGroupApi.add(obj);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newStaff = {\r\n\t\t\t\t\t...res.data.data,\r\n\t\t\t\t\tkey: staffOfTaskGroup.length\r\n\t\t\t\t};\r\n\t\t\t\tsetStaffOfTaskGroup([newStaff, ...staffOfTaskGroup]);\r\n\t\t\t\tshowNoti('success', res.data.message);\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', res.data.message);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t\tconsole.log('fetchTask', error);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn res;\r\n\t};\r\n\tconst onDeleteStaffOfTaskGroup = (idx: number) => {\r\n\t\treturn async () => {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\ttry {\r\n\t\t\t\tconst delObj = staffOfTaskGroup[idx];\r\n\t\t\t\tconst newDelObj = {\r\n\t\t\t\t\tID: delObj.ID,\r\n\t\t\t\t\tEnable: false\r\n\t\t\t\t};\r\n\t\t\t\tconst res = await staffOfTaskGroupApi.delete(newDelObj);\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tshowNoti('success', res.data.message);\r\n\t\t\t\t\tconst newStaffOfTaskGroup = [...staffOfTaskGroup];\r\n\t\t\t\t\tnewStaffOfTaskGroup.splice(idx, 1);\r\n\t\t\t\t\tsetStaffOfTaskGroup(newStaffOfTaskGroup);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\t// ----------TASK----------\r\n\tconst fetchTask = async (TaskGroupID: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'FETCH_TASK',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tconst res = await taskApi.getAll({\r\n\t\t\t\tTaskGroupID\r\n\t\t\t});\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst fmOptionTaskList = fmSelectArr(res.data.data, 'WorkContent', 'ID', ['DoneTask', 'StaffID']).filter(\r\n\t\t\t\t\t(s) => !s.options.StaffID && s.options.DoneTask === false\r\n\t\t\t\t);\r\n\t\t\t\tsetTaskList(res.data.data);\r\n\t\t\t\tsetOptionTaskList(fmOptionTaskList);\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetTaskList([]);\r\n\t\t\t\tsetOptionTaskList([]);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('fetchTask', error);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_TASK',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tconst middlewareHandleTask = (TaskGroupID: number) => {\r\n\t\treturn async (\r\n\t\t\tobj: {\r\n\t\t\t\tID?: number;\r\n\t\t\t\tWorkContent: string;\r\n\t\t\t\tisAddStaff: boolean;\r\n\t\t\t\tRoleID?: number;\r\n\t\t\t\tStaffID?: number;\r\n\t\t\t\tOldStaffID?: number;\r\n\t\t\t},\r\n\t\t\tidx?: number\r\n\t\t) => {\r\n\t\t\tconst { ID, WorkContent, isAddStaff, StaffID, OldStaffID } = obj;\r\n\t\t\tlet isDone = true;\r\n\t\t\tif (isAddStaff) {\r\n\t\t\t\tawait staffOfTaskGroupApi\r\n\t\t\t\t\t.add({\r\n\t\t\t\t\t\tTaskGroupID,\r\n\t\t\t\t\t\tStaffID\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => console.log(err));\r\n\t\t\t}\r\n\t\t\t// IDX >= 0 IS HANDLE UPDATE\r\n\t\t\tif (idx >= 0) {\r\n\t\t\t\tconst checkStaffID = isAddStaff && OldStaffID !== StaffID ? StaffID : OldStaffID;\r\n\t\t\t\tconst res = await onUpdateTask(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tID,\r\n\t\t\t\t\t\tWorkContent,\r\n\t\t\t\t\t\tStaffID: checkStaffID\r\n\t\t\t\t\t},\r\n\t\t\t\t\tidx\r\n\t\t\t\t);\r\n\t\t\t\tif (res?.status !== 200) isDone = false;\r\n\t\t\t} else {\r\n\t\t\t\tconst checkStaffID = isAddStaff ? StaffID : null;\r\n\t\t\t\tconst res = await onCreateTask({\r\n\t\t\t\t\tTaskGroupID,\r\n\t\t\t\t\tWorkContent,\r\n\t\t\t\t\tStaffID: checkStaffID\r\n\t\t\t\t});\r\n\t\t\t\tif (res?.status !== 200) isDone = false;\r\n\t\t\t}\r\n\t\t\treturn isDone;\r\n\t\t};\r\n\t};\r\n\tconst onCreateTask = async (obj: { TaskGroupID: number; WorkContent: string; StaffID?: number }) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\tlet res;\r\n\t\ttry {\r\n\t\t\tres = await taskApi.add(obj);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetTaskList([res.data.data, ...taskList]);\r\n\t\t\t\tshowNoti('success', res.data.message);\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', res.data.message);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t\tconsole.log('fetchTask', error);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn res;\r\n\t};\r\n\tconst onUpdateTask = async (\r\n\t\tobj: {\r\n\t\t\tID: number;\r\n\t\t\tStaffID?: number;\r\n\t\t\tWorkContent?: string;\r\n\t\t\tDoneTask?: boolean;\r\n\t\t\tEnable?: boolean;\r\n\t\t},\r\n\t\tidx?: number\r\n\t) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'FETCH_TASK',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\tlet res;\r\n\t\ttry {\r\n\t\t\tres = await taskApi.update(obj);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tif (idx >= 0) {\r\n\t\t\t\t\tconst { StaffName, StaffID, DoneTask, WorkContent, RoleID, RoleName } = res.data.data;\r\n\t\t\t\t\tconst newTaskList = [...taskList];\r\n\t\t\t\t\tconst newTask = {\r\n\t\t\t\t\t\t...newTaskList[idx],\r\n\t\t\t\t\t\tStaffName,\r\n\t\t\t\t\t\tStaffID,\r\n\t\t\t\t\t\tDoneTask,\r\n\t\t\t\t\t\tWorkContent,\r\n\t\t\t\t\t\tRoleID,\r\n\t\t\t\t\t\tRoleName\r\n\t\t\t\t\t};\r\n\t\t\t\t\tnewTaskList.splice(idx, 1, newTask);\r\n\t\t\t\t\tsetTaskList(newTaskList);\r\n\t\t\t\t}\r\n\t\t\t\tshowNoti('success', res.data.message);\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', res.data.message);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t\tconsole.log('fetchTask', error);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_TASK',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn res;\r\n\t};\r\n\tconst onDebounceActionOfStaff = useDebounce(onUpdateTask, 500, []);\r\n\tconst onDeleteTask = (idx: number) => {\r\n\t\treturn async () => {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_TASK',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\ttry {\r\n\t\t\t\tconst delObj = taskList[idx];\r\n\t\t\t\tconst newDelObj = {\r\n\t\t\t\t\tID: delObj.ID,\r\n\t\t\t\t\tEnable: false\r\n\t\t\t\t};\r\n\t\t\t\tconst res = await taskApi.delete(newDelObj);\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tshowNoti('success', res.data.message);\r\n\t\t\t\t\tconst newTaskList = [...taskList];\r\n\t\t\t\t\tnewTaskList.splice(idx, 1);\r\n\t\t\t\t\tsetTaskList(newTaskList);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'FETCH_TASK',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\t// ----------COLUMN----------\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Nhóm công việc',\r\n\t\t\tdataIndex: 'TaskGroupName',\r\n\t\t\t...FilterColumn('TaskGroupName', onSearch, onResetSearch, 'text'),\r\n\t\t\tclassName: activeColumnSearch === 'TaskGroupName' ? 'active-column-search' : ''\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ghi chú',\r\n\t\t\tdataIndex: 'Note'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Thời hạn',\r\n\t\t\tdataIndex: 'Deadline',\r\n\t\t\trender: (text) => moment(text).format('DD/MM/YYYY')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày tạo',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\trender: (text) => moment(text).format('DD/MM/YYYY')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tiến độ',\r\n\t\t\tdataIndex: 'DonePercent',\r\n\t\t\trender: (text) => mathRound(text) + '%  '\r\n\t\t},\r\n\t\t{\r\n\t\t\talign: 'center',\r\n\t\t\trender: (value: ITaskGroup, _, idx) => (\r\n\t\t\t\t<div onClick={(e) => e.stopPropagation()}>\r\n\t\t\t\t\t<TaskForm\r\n\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\thandleFetchTask={() => fetchTask(value.ID)}\r\n\t\t\t\t\t\ttaskList={taskList}\r\n\t\t\t\t\t\thandleFetchStaffListByRole={fetchStaffListByRole}\r\n\t\t\t\t\t\toptionRoleList={optionRoleList}\r\n\t\t\t\t\t\toptionStaffList={optionStaffList}\r\n\t\t\t\t\t\thandleSubmit={middlewareHandleTask(value.ID)}\r\n\t\t\t\t\t\thandleUpdateTask={onUpdateTask}\r\n\t\t\t\t\t\thandleDeleteTask={onDeleteTask}\r\n\t\t\t\t\t\thandleActionOfStaff={onDebounceActionOfStaff}\r\n\t\t\t\t\t\tcheckAuthorization={checkAuthorization}\r\n\t\t\t\t\t\tuserInformation={userInformation}\r\n\t\t\t\t\t\thandleFetchGroupTask={onDebounceFetchGroupTask}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{checkAuthorization() === 'Accept' && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<StaffOfTaskGroupForm\r\n\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\toptionRoleList={optionRoleList}\r\n\t\t\t\t\t\t\t\toptionStaffList={optionStaffList}\r\n\t\t\t\t\t\t\t\tstaffOfTaskGroup={staffOfTaskGroup}\r\n\t\t\t\t\t\t\t\toptionTaskList={optionTaskList}\r\n\t\t\t\t\t\t\t\thandleFetchStaffOfTaskGroup={() => fetchStaffOfTaskGroup(value.ID)}\r\n\t\t\t\t\t\t\t\thandleFetchStaffListByRole={fetchStaffListByRole}\r\n\t\t\t\t\t\t\t\thandleFetchTask={() => fetchTask(value.ID)}\r\n\t\t\t\t\t\t\t\thandleSubmit={middlewareCreateStaffOfTaskGroup(value.ID)}\r\n\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\thandleDeleteStaffOfTaskGroup={onDeleteStaffOfTaskGroup}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TaskGroupForm\r\n\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\tisUpdate={true}\r\n\t\t\t\t\t\t\t\tupdateObj={value}\r\n\t\t\t\t\t\t\t\tindexUpdateObj={idx}\r\n\t\t\t\t\t\t\t\thandleUpdateTaskGroup={onUpdateTaskGroup}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<DeleteTableRow handleDelete={onDeleteTaskGroup(idx)} text=\"nhóm công việc\" />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PowerTable\r\n\t\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\t\ttotalPage={totalPage}\r\n\t\t\t\tgetPagination={getPagination}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdataSource={taskGroupList}\r\n\t\t\t\tTitlePage=\"Quản lí công việc\"\r\n\t\t\t\tTitleCard={\r\n\t\t\t\t\tcheckAuthorization() === 'Accept' && <TaskGroupForm isLoading={isLoading} handleCreateTaskGroup={onCreateTaskGroup} />\r\n\t\t\t\t}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t<div className=\"filter-datetime\">\r\n\t\t\t\t\t\t\t<TaskGroupFilterDate handleFilter={onFilter} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<SortBox handleSort={onSort} dataOption={sortOptionList} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t></PowerTable>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nManageTask.layout = LayoutBase;\r\nexport default ManageTask;\r\n"]},"metadata":{},"sourceType":"module"}
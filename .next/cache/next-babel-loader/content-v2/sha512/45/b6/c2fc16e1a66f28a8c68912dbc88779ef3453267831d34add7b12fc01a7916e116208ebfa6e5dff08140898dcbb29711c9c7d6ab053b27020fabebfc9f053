{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Sales\\\\SalesCampaignDetail\\\\SalesCampaignDetail.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport moment from 'moment';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { branchApi, saleCampaignDetailApi, staffApi } from '~/apiBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport ExpandTable from '~/components/ExpandTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nimport { fmSelectArr, numberWithCommas } from '~/utils/functions';\nimport SalesCampaignDetailFilter from './SalesCampaignDetailFilter';\n\nconst SalesCampaignDetail = props => {\n  const route = useRouter();\n  const {\n    slug: saleCampaignID\n  } = route.query;\n  const {\n    0: saleCampaignDetailList,\n    1: setSaleCampaignDetailList\n  } = useState([]);\n  const {\n    0: optionBrachList,\n    1: setOptionBranchList\n  } = useState([]);\n  const {\n    0: counselors,\n    1: setCounselors\n  } = useState([]);\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: activeColumnSearch,\n    1: setActiveColumnSearch\n  } = useState('');\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const sortOptionList = [{\n    dataSort: {\n      sort: 0,\n      sortType: true\n    },\n    value: 1,\n    text: 'Tiền tăng dần'\n  }, {\n    dataSort: {\n      sort: 0,\n      sortType: false\n    },\n    value: 2,\n    text: 'Tiền giảm dần'\n  }]; // FILTER\n\n  const listFieldInit = {\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false,\n    SaleCampaignID: saleCampaignID,\n    fromDate: '',\n    toDate: '',\n    CounselorsName: '',\n    BranchID: null,\n    StudentName: '',\n    CounselorsID: null\n  };\n  let refValue = useRef({\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false\n  });\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(listFieldInit); // FILTER\n\n  const onFilter = obj => {\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1,\n      fromDate: moment(obj.fromDate).format('YYYY/MM/DD'),\n      toDate: moment(obj.toDate).format('YYYY/MM/DD'),\n      CounselorsID: obj.CounselorID\n    }));\n  }; // PAGINATION\n\n\n  const getPagination = (pageIndex, pageSize) => {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize,\n      pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  }; // SORT\n\n\n  const onSort = option => {\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), refValue.current));\n  }; // RESET SEARCH\n\n\n  const onResetSearch = () => {\n    setActiveColumnSearch('');\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), {}, {\n      pageSize: refValue.current.pageSize\n    }));\n  }; // ACTION SEARCH\n\n\n  const onSearch = (valueSearch, dataIndex) => {\n    setActiveColumnSearch(dataIndex);\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1,\n      [dataIndex]: valueSearch\n    }));\n  };\n\n  const fetchBrach = async () => {\n    try {\n      setIsLoading({\n        type: 'FETCH_BRANCH',\n        status: true\n      });\n      const res = await branchApi.getAll({\n        selectAll: true\n      });\n\n      if (res.status === 200) {\n        const fmOpTionBranch = fmSelectArr(res.data.data, 'BranchName', 'ID');\n        setOptionBranchList(fmOpTionBranch);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'FETCH_BRANCH',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchBrach();\n  }, []); // GET DATA TABLE\n\n  const fetchSaleCampaignList = async () => {\n    try {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n      const res = await saleCampaignDetailApi.getAll(filters);\n\n      if (res.status === 200) {\n        setSaleCampaignDetailList(res.data.data);\n        setTotalPage(res.data.totalRow);\n      }\n\n      if (res.status === 204) {\n        setSaleCampaignDetailList([]);\n        setTotalPage(0);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  const getCounselorList = async () => {\n    try {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n      const res = await staffApi.getAll({\n        pageIndex: 1,\n        pageSize: pageSize,\n        RoleID: 6\n      });\n\n      if (res.status === 200) {\n        let temp = [];\n        res.data.data.forEach(item => temp.push({\n          title: item.FullNameUnicode,\n          value: item.UserInformationID\n        }));\n        setCounselors(temp);\n      }\n\n      if (res.status === 204) {\n        setCounselors([]);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchSaleCampaignList();\n    getCounselorList();\n  }, [filters]);\n  const columns = [_objectSpread(_objectSpread({\n    title: 'Học viên',\n    dataIndex: 'StudentName',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 22\n    }, this)\n  }, FilterColumn('StudentName', onSearch, onResetSearch, 'text')), {}, {\n    className: activeColumnSearch === 'StudentName' ? 'active-column-search' : ''\n  }), {\n    title: 'Số tiền',\n    dataIndex: 'Price',\n    render: price => numberWithCommas(price)\n  }, _objectSpread(_objectSpread({\n    title: 'Tư vấn viên',\n    dataIndex: 'CounselorsName'\n  }, FilterColumn('CounselorsName', onSearch, onResetSearch, 'text')), {}, {\n    className: activeColumnSearch === 'CounselorsName' ? 'active-column-search' : ''\n  }), {\n    title: 'Ngày tạo',\n    dataIndex: 'CreatedOn',\n    render: date => moment(date).format('DD/MM/YYYY')\n  }];\n\n  const expandedRowRender = item => {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"tb-expand\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"C\\xE1c kh\\xF3a h\\u1ECDc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: item.Course.map(s => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-coursename\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: {\n                  pathname: '/course/course-list/course-list-detail/[slug]',\n                  query: {\n                    slug: s.CourseID,\n                    type: s.TypeCourse\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  title: s.CourseName,\n                  className: \"font-weight-black d-block\",\n                  children: s.CourseName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 11\n                }, this)\n              }, s.CourseID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ExpandTable, {\n    loading: isLoading,\n    currentPage: filters.pageIndex,\n    totalPage: totalPage,\n    getPagination: getPagination,\n    addClass: \"basic-header\",\n    TitlePage: \"Chi ti\\u1EBFt chi\\u1EBFn d\\u1ECBch kinh doanh\",\n    dataSource: saleCampaignDetailList,\n    columns: columns,\n    Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extra-table\",\n      children: [/*#__PURE__*/_jsxDEV(SalesCampaignDetailFilter, {\n        handleFilter: onFilter,\n        handleResetFilter: onResetSearch,\n        counselors: counselors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(SortBox, {\n        handleSort: onSort,\n        dataOption: sortOptionList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 5\n    }, this),\n    expandable: {\n      expandedRowRender\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 3\n  }, this);\n};\n\nexport default SalesCampaignDetail;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Sales/SalesCampaignDetail/SalesCampaignDetail.tsx"],"names":["moment","Link","useRouter","React","useEffect","useRef","useState","branchApi","saleCampaignDetailApi","staffApi","SortBox","ExpandTable","FilterColumn","useWrap","fmSelectArr","numberWithCommas","SalesCampaignDetailFilter","SalesCampaignDetail","props","route","slug","saleCampaignID","query","saleCampaignDetailList","setSaleCampaignDetailList","optionBrachList","setOptionBranchList","counselors","setCounselors","showNoti","pageSize","isLoading","setIsLoading","type","status","activeColumnSearch","setActiveColumnSearch","totalPage","setTotalPage","sortOptionList","dataSort","sort","sortType","value","text","listFieldInit","pageIndex","SaleCampaignID","fromDate","toDate","CounselorsName","BranchID","StudentName","CounselorsID","refValue","filters","setFilters","onFilter","obj","current","format","CounselorID","getPagination","onSort","option","title","onResetSearch","onSearch","valueSearch","dataIndex","fetchBrach","res","getAll","selectAll","fmOpTionBranch","data","error","message","fetchSaleCampaignList","totalRow","getCounselorList","RoleID","temp","forEach","item","push","FullNameUnicode","UserInformationID","columns","render","className","price","date","expandedRowRender","Course","map","s","pathname","CourseID","TypeCourse","CourseName"],"mappings":"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","sourcesContent":["import moment from 'moment'\r\nimport Link from 'next/link'\r\nimport { useRouter } from 'next/router'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { branchApi, saleCampaignDetailApi, staffApi } from '~/apiBase'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport ExpandTable from '~/components/ExpandTable'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { fmSelectArr, numberWithCommas } from '~/utils/functions'\r\nimport SalesCampaignDetailFilter from './SalesCampaignDetailFilter'\r\n\r\nconst SalesCampaignDetail = (props) => {\r\n\tconst route = useRouter()\r\n\tconst { slug: saleCampaignID } = route.query\r\n\tconst [saleCampaignDetailList, setSaleCampaignDetailList] = useState<ISaleCampaignDetail[]>([])\r\n\tconst [optionBrachList, setOptionBranchList] = useState<IOptionCommon[]>([])\r\n\tconst [counselors, setCounselors] = useState<IStaff[]>([])\r\n\tconst { showNoti, pageSize } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({ type: '', status: false })\r\n\tconst [activeColumnSearch, setActiveColumnSearch] = useState('')\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst sortOptionList = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 1,\r\n\t\t\ttext: 'Tiền tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 2,\r\n\t\t\ttext: 'Tiền giảm dần'\r\n\t\t}\r\n\t]\r\n\t// FILTER\r\n\tconst listFieldInit = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false,\r\n\r\n\t\tSaleCampaignID: saleCampaignID,\r\n\t\tfromDate: '',\r\n\t\ttoDate: '',\r\n\t\tCounselorsName: '',\r\n\t\tBranchID: null,\r\n\t\tStudentName: '',\r\n\t\tCounselorsID: null\r\n\t}\r\n\tlet refValue = useRef({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false\r\n\t})\r\n\tconst [filters, setFilters] = useState(listFieldInit)\r\n\r\n\t// FILTER\r\n\tconst onFilter = (obj) => {\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tfromDate: moment(obj.fromDate).format('YYYY/MM/DD'),\r\n\t\t\ttoDate: moment(obj.toDate).format('YYYY/MM/DD'),\r\n\t\t\tCounselorsID: obj.CounselorID\r\n\t\t})\r\n\t}\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tpageSize,\r\n\t\t\tpageIndex\r\n\t\t}\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\t...refValue.current\r\n\t\t})\r\n\t}\r\n\t// SORT\r\n\tconst onSort = (option) => {\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current\r\n\t\t})\r\n\t}\r\n\t// RESET SEARCH\r\n\tconst onResetSearch = () => {\r\n\t\tsetActiveColumnSearch('')\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\tpageSize: refValue.current.pageSize\r\n\t\t})\r\n\t}\r\n\t// ACTION SEARCH\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tsetActiveColumnSearch(dataIndex)\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t[dataIndex]: valueSearch\r\n\t\t})\r\n\t}\r\n\r\n\tconst fetchBrach = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_BRANCH',\r\n\t\t\t\tstatus: true\r\n\t\t\t})\r\n\t\t\tconst res = await branchApi.getAll({ selectAll: true })\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst fmOpTionBranch = fmSelectArr(res.data.data, 'BranchName', 'ID')\r\n\t\t\t\tsetOptionBranchList(fmOpTionBranch)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_BRANCH',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchBrach()\r\n\t}, [])\r\n\r\n\t// GET DATA TABLE\r\n\tconst fetchSaleCampaignList = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t})\r\n\t\t\tconst res = await saleCampaignDetailApi.getAll(filters)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetSaleCampaignDetailList(res.data.data)\r\n\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetSaleCampaignDetailList([])\r\n\t\t\t\tsetTotalPage(0)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst getCounselorList = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({ type: 'GET_ALL', status: true })\r\n\t\t\tconst res = await staffApi.getAll({ pageIndex: 1, pageSize: pageSize, RoleID: 6 })\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tlet temp = []\r\n\t\t\t\tres.data.data.forEach((item) => temp.push({ title: item.FullNameUnicode, value: item.UserInformationID }))\r\n\t\t\t\tsetCounselors(temp)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetCounselors([])\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'GET_ALL', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchSaleCampaignList()\r\n\t\tgetCounselorList()\r\n\t}, [filters])\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Học viên',\r\n\t\t\tdataIndex: 'StudentName',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>,\r\n\t\t\t...FilterColumn('StudentName', onSearch, onResetSearch, 'text'),\r\n\t\t\tclassName: activeColumnSearch === 'StudentName' ? 'active-column-search' : ''\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Số tiền',\r\n\t\t\tdataIndex: 'Price',\r\n\t\t\trender: (price) => numberWithCommas(price)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tư vấn viên',\r\n\t\t\tdataIndex: 'CounselorsName',\r\n\t\t\t...FilterColumn('CounselorsName', onSearch, onResetSearch, 'text'),\r\n\t\t\tclassName: activeColumnSearch === 'CounselorsName' ? 'active-column-search' : ''\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày tạo',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\trender: (date) => moment(date).format('DD/MM/YYYY')\r\n\t\t}\r\n\t]\r\n\r\n\tconst expandedRowRender = (item: ISaleCampaignDetail) => {\r\n\t\treturn (\r\n\t\t\t<table className=\"tb-expand\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Các khóa học</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{item.Course.map((s) => (\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<div className=\"list-coursename\">\r\n\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\tkey={s.CourseID}\r\n\t\t\t\t\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\t\t\t\t\tpathname: '/course/course-list/course-list-detail/[slug]',\r\n\t\t\t\t\t\t\t\t\t\t\tquery: { slug: s.CourseID, type: s.TypeCourse }\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<a title={s.CourseName} className=\"font-weight-black d-block\">\r\n\t\t\t\t\t\t\t\t\t\t\t{s.CourseName}\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ExpandTable\r\n\t\t\tloading={isLoading}\r\n\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\ttotalPage={totalPage}\r\n\t\t\tgetPagination={getPagination}\r\n\t\t\taddClass=\"basic-header\"\r\n\t\t\tTitlePage=\"Chi tiết chiến dịch kinh doanh\"\r\n\t\t\tdataSource={saleCampaignDetailList}\r\n\t\t\tcolumns={columns}\r\n\t\t\tExtra={\r\n\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t<SalesCampaignDetailFilter handleFilter={onFilter} handleResetFilter={onResetSearch} counselors={counselors} />\r\n\t\t\t\t\t<SortBox handleSort={onSort} dataOption={sortOptionList} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\texpandable={{ expandedRowRender }}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default SalesCampaignDetail\r\n"]},"metadata":{},"sourceType":"module"}
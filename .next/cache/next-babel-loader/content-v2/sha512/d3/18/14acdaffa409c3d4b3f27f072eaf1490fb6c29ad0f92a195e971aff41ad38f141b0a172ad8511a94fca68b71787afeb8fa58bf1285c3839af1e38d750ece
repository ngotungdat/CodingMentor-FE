{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\QuestionBank\\\\QuestionFormType\\\\TypingForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Form, Input, Spin, Tooltip } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { Plus } from 'react-feather';\nimport { useForm } from 'react-hook-form';\nimport { exerciseGroupApi } from '~/apiBase/';\nimport Editor from '~/components/Elements/Editor';\nimport { useWrap } from '~/context/wrap';\nvar AnsID = 0;\nvar QuesID = -1;\n\nvar TypingForm = function TypingForm(props) {\n  _s();\n\n  var _questionDataForm$Exe3;\n\n  var isSubmit = props.isSubmit,\n      questionData = props.questionData,\n      changeIsSubmit = props.changeIsSubmit,\n      visible = props.visible;\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      _useForm$formState = _useForm.formState,\n      isSubmitting = _useForm$formState.isSubmitting,\n      errors = _useForm$formState.errors,\n      isSubmitted = _useForm$formState.isSubmitted;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState(null),\n      questionDataForm = _useState[0],\n      setQuestionDataForm = _useState[1];\n\n  var _useState2 = useState(false),\n      isResetEditor = _useState2[0],\n      setIsResetEditor = _useState2[1];\n\n  var _useState3 = useState(null),\n      linkUpload = _useState3[0],\n      setLinkUpload = _useState3[1];\n\n  var _useState4 = useState(false),\n      loadingUpload = _useState4[0],\n      setLoadingUpload = _useState4[1];\n\n  var _useState5 = useState(false),\n      loadingForm = _useState5[0],\n      setLoadingForm = _useState5[1];\n\n  var _useState6 = useState(false),\n      reloadContent = _useState6[0],\n      setReloadContent = _useState6[1];\n\n  var _useState7 = useState([]),\n      dataExercise = _useState7[0],\n      setDataExercise = _useState7[1]; // Upload file audio\n\n\n  var onchange_UploadFile = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(info) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(info.file.status === 'uploading')) {\n                _context.next = 3;\n                break;\n              }\n\n              setLoadingUpload(true);\n              return _context.abrupt(\"return\");\n\n            case 3:\n              setLoadingUpload(true);\n              _context.prev = 4;\n              _context.next = 7;\n              return exerciseGroupApi.UploadAudio(info.file.originFileObj);\n\n            case 7:\n              res = _context.sent;\n\n              if (res.status == 200) {\n                setLinkUpload(res.data.data);\n                showNoti('success', 'Upload file thành công');\n              }\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](4);\n              showNoti('danger', _context.t0.message);\n\n            case 14:\n              _context.prev = 14;\n              setLoadingUpload(false);\n              return _context.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 11, 14, 17]]);\n    }));\n\n    return function onchange_UploadFile(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // SUBMI FORM\n\n\n  var onSubmit = handleSubmit(function (data, e) {// console.log(\"DATA SUBMIT: \", data);\n  }); // GET VALUE IN EDITOR\n\n  var getDataEditor = function getDataEditor(dataEditor) {\n    if (questionDataForm) {\n      questionDataForm.Paragraph = dataEditor;\n    }\n\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // Reset value in form\n\n\n  var resetForm = function resetForm() {\n    questionDataForm.Content = '';\n    questionDataForm.ExerciseAnswer.forEach(function (item) {\n      item.AnswerContent = '';\n      item.isTrue = false;\n    });\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // HANDLE DELETE ALL QUESTION\n\n\n  var deleteAllQuestion = function deleteAllQuestion() {\n    var _questionDataForm$Exe;\n\n    dataExercise === null || dataExercise === void 0 ? void 0 : dataExercise.splice(0, dataExercise.length);\n    questionDataForm === null || questionDataForm === void 0 ? void 0 : (_questionDataForm$Exe = questionDataForm.ExerciseList) === null || _questionDataForm$Exe === void 0 ? void 0 : _questionDataForm$Exe.forEach(function (item) {\n      item.Enable = false;\n    });\n    setDataExercise(_toConsumableArray(dataExercise));\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // HANDLE DELETE QUESTION\n\n\n  var _deleteSingleQuestion = function deleteSingleQuestion(QuestionID) {\n    var QuestionIndex = questionDataForm.ExerciseList.findIndex(function (item) {\n      return item.inputID == QuestionID;\n    });\n    var ExerciseIndex = dataExercise.findIndex(function (item) {\n      return item.inputID == QuestionID;\n    });\n    dataExercise.splice(ExerciseIndex, 1);\n\n    if (questionDataForm.ExerciseList[QuestionIndex]) {\n      if (questionDataForm.ExerciseList[QuestionIndex].isAdd) {\n        questionDataForm.ExerciseList.splice(QuestionIndex, 1);\n      } else {\n        questionDataForm.ExerciseList[QuestionIndex].Enable = false;\n      }\n    } else {\n      console.log('Câu hỏi không tồn tại');\n    }\n\n    setDataExercise(_toConsumableArray(dataExercise));\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // HANDLE ADD QUESTION\n\n\n  var _addQuestion = function addQuestion(inputID) {\n    AnsID++;\n    var objAns = {\n      // ID: inputID,\n      inputID: inputID,\n      Content: '',\n      ExerciseGroupID: questionDataForm.ID,\n      SubjectID: questionDataForm.SubjectID,\n      SubjectName: questionDataForm.SubjectName,\n      DescribeAnswer: '',\n      Level: questionDataForm.Level,\n      LevelName: questionDataForm.LevelName,\n      LinkAudio: null,\n      Type: questionDataForm.Type,\n      TypeName: questionDataForm.TypeName,\n      isAdd: true,\n      Enable: true,\n      ExerciseAnswer: [{\n        ID: AnsID,\n        AnswerContent: '',\n        isTrue: true,\n        Enable: true,\n        isAdd: true\n      }]\n    };\n    questionDataForm.ExerciseList.push(objAns);\n    dataExercise.push(objAns);\n    setDataExercise(_toConsumableArray(dataExercise));\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // ====== HANDLE ADD ANSWER ======\n\n\n  var handleAddAnswer = function handleAddAnswer(questionID) {\n    AnsID++;\n    questionDataForm.ExerciseList.every(function (item) {\n      if (item.inputID == questionID) {\n        item.ExerciseAnswer.push({\n          ID: AnsID,\n          AnswerContent: '',\n          isTrue: true,\n          Enable: true,\n          isAdd: true\n        });\n        return false;\n      }\n\n      return true;\n    });\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // ====== ON CHANGE TEXT ======\n\n\n  var onChange_text = function onChange_text(e, AnswerID, QuestionID) {\n    var _questionDataForm$Exe2;\n\n    // - Get value\n    var text = e.target.value; // - Get question index\n\n    var QuestionIndex = questionDataForm === null || questionDataForm === void 0 ? void 0 : (_questionDataForm$Exe2 = questionDataForm.ExerciseList) === null || _questionDataForm$Exe2 === void 0 ? void 0 : _questionDataForm$Exe2.findIndex(function (item) {\n      return item.inputID == QuestionID;\n    }); // - Get answer index\n\n    var AnswerIndex = questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex(function (item) {\n      return item.ID == AnswerID;\n    }); // - add text\n\n    questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].AnswerContent = text;\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // ====== DELETE ANSWER ======\n\n\n  var deleteAnswerItem = function deleteAnswerItem(AnswerID, QuestionID) {\n    // - Get question index\n    var QuestionIndex = questionDataForm.ExerciseList.findIndex(function (item) {\n      return item.inputID == QuestionID;\n    }); // - Get answer index\n\n    var AnswerIndex = questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex(function (item) {\n      return item.ID == AnswerID;\n    }); // Action delete\n\n    if (questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].isAdd) {\n      questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.splice(AnswerIndex, 1);\n    } else {\n      questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].Enable = false;\n    } // setAnswerList([...answerList]);\n\n\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // SUBMIT FORM\n\n\n  var handleSubmitQuestion = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res, newData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              res = null;\n              newData = JSON.parse(JSON.stringify(questionDataForm)); // custom data\n\n              newData.ExerciseList.forEach(function (item, index) {\n                item.ExerciseAnswer.forEach(function (ans, ind) {\n                  if (ans.isAdd) {\n                    delete ans.ID;\n                  }\n                });\n              });\n\n              if (questionDataForm.ExerciseGroupID) {\n                newData.ID = questionDataForm.ExerciseGroupID;\n              }\n\n              newData.ExerciseGroupID = null; // ----------\n\n              _context2.prev = 5;\n              _context2.next = 8;\n              return exerciseGroupApi.update(newData);\n\n            case 8:\n              res = _context2.sent;\n\n              if (res.status == 200) {\n                handleSubmitChange(res.data.data);\n              }\n\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](5);\n              showNoti('danger', _context2.t0.message);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[5, 12]]);\n    }));\n\n    return function handleSubmitQuestion() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // SUBMIT AND CHANGE PARAGRAPH\n\n\n  var handleSubmitChange = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dataSubmit) {\n      var res, cloneParagraph;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log('Data Submit: ', dataSubmit);\n              res = null;\n              cloneParagraph = dataSubmit.Paragraph;\n              console.log('Lúc đầu: ', cloneParagraph);\n              dataSubmit.ExerciseList.forEach(function (item, index) {\n                var indexInput = parseInt(item.inputID) + 1;\n                indexInput = indexInput.toString();\n                cloneParagraph = cloneParagraph.replace(\"<input id=\\\"\".concat(item.inputID, \"\\\" class=\\\"space-editor\\\" placeholder=\\\"(\").concat(indexInput, \")\\\">\"), \"<div ques-id=\\\"\".concat(item.ID, \"\\\" id=\\\"\").concat(indexInput, \"\\\" class='space-editor' role='textbox' aria-labelledby='txtboxLabel' aria-multiline='true' contentEditable=\\\"true\\\">(\").concat(indexInput, \")</div>\"));\n                console.log('Coi thử nha: ', \"<input id=\\\"\".concat(item.inputID, \"\\\" class=\\\"space-editor\\\" placeholder=\\\"(\").concat(indexInput, \")\\\">\"));\n              });\n              console.log('Lúc sau: ', cloneParagraph);\n              dataSubmit.Paragraph = cloneParagraph; // ----------\n\n              _context3.prev = 7;\n              _context3.next = 10;\n              return exerciseGroupApi.update(dataSubmit);\n\n            case 10:\n              res = _context3.sent;\n\n              if (res.status == 200) {\n                changeIsSubmit(res.data.data);\n\n                if (!questionDataForm.ID) {\n                  resetForm();\n                }\n\n                showNoti('success', \"T\\u1EA1o c\\xE2u h\\u1ECFi th\\xE0nh c\\xF4ng\");\n                setIsResetEditor(true);\n                setTimeout(function () {\n                  setIsResetEditor(false);\n                }, 500);\n              }\n\n              _context3.next = 17;\n              break;\n\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](7);\n              showNoti('danger', _context3.t0.message);\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[7, 14]]);\n    }));\n\n    return function handleSubmitChange(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); //RETURN INDEX QUESTION - Trả về thứ tự của từng câu hỏi\n\n\n  var returnIndexQuestion = function returnIndexQuestion(itemQues) {\n    var title = '';\n    var index = dataExercise.findIndex(function (ex) {\n      return ex.inputID == itemQues.inputID;\n    });\n    title = \"C\\xE2u (\".concat(index + 1, \")\");\n    return title;\n  }; // GET GROUP DETAIL DATA\n\n\n  var dataGroupDetail = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var id, res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setLoadingForm(true);\n              id = null;\n\n              if (questionData.ID) {\n                id = questionData.ID;\n              } else {\n                id = questionData.ExerciseGroupID;\n              }\n\n              _context4.prev = 3;\n              _context4.next = 6;\n              return exerciseGroupApi.getWithID(id);\n\n            case 6:\n              res = _context4.sent;\n              res.status == 200 && reloadNewContent(res.data.data);\n              res.status == 204 && showNoti('danger', 'Không có dữ liệu');\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](3);\n              showNoti('danger', _context4.t0.message);\n\n            case 14:\n              _context4.prev = 14;\n              setLoadingForm(false);\n              return _context4.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[3, 11, 14, 17]]);\n    }));\n\n    return function dataGroupDetail() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var reloadNewContent = function reloadNewContent(data) {\n    var filterExerciseList = data.ExerciseList.filter(function (item) {\n      return item.Enable !== false;\n    });\n    data.ExerciseList = _toConsumableArray(filterExerciseList);\n    setDataExercise(_toConsumableArray(filterExerciseList));\n    setQuestionDataForm(_objectSpread({}, data));\n  };\n\n  useEffect(function () {\n    if (isSubmit) {\n      handleSubmitQuestion();\n      return;\n    }\n  }, [isSubmit]);\n  useEffect(function () {\n    if (visible) {\n      dataGroupDetail();\n    }\n  }, [visible]); // useEffect(() => {\n  //   if (reloadContent) {\n  //     (async function loadData() {\n  //       try {\n  //         let res = await exerciseGroupApi.getWithID(questionDataForm.ID);\n  //         if (res.status == 200) {\n  //           changeIsSubmit(res.data.data);\n  //           showNoti(\"success\", `Thành công`);\n  //           if (!questionDataForm.ID) {\n  //             resetForm();\n  //           }\n  //           setIsResetEditor(true);\n  //           setTimeout(() => {\n  //             setIsResetEditor(false);\n  //           }, 500);\n  //         }\n  //         res.status == 204 && showNoti(\"danger\", \"Không có dữ liệu\");\n  //       } catch (error) {\n  //         showNoti(\"danger\", error.message);\n  //       } finally {\n  //         setReloadContent(false);\n  //       }\n  //     })();\n  //   }\n  // }, [reloadContent]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-create-question\",\n    children: visible && loadingForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 5\n    }, _this) : visible && /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      layout: \"vertical\",\n      onFinish: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12\",\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"Question\",\n              label: \"N\\u1ED9i dung\",\n              children: /*#__PURE__*/_jsxDEV(Editor, {\n                exerciseList: dataExercise,\n                deleteAllQuestion: deleteAllQuestion,\n                deleteSingleQuestion: function deleteSingleQuestion(quesID) {\n                  return _deleteSingleQuestion(quesID);\n                },\n                handleChange: function handleChange(value) {\n                  return getDataEditor(value);\n                },\n                isReset: isResetEditor,\n                questionContent: questionDataForm === null || questionDataForm === void 0 ? void 0 : questionDataForm.Paragraph,\n                questionData: questionDataForm,\n                addQuestion: function addQuestion(inputID) {\n                  return _addQuestion(inputID);\n                },\n                visible: visible\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 11\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 10\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12\",\n            style: {\n              borderLeft: '2px dotted #dbdbdb'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"style-label\",\n              style: {\n                textDecoration: 'underline'\n              },\n              children: \"\\u0110\\xE1p \\xE1n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 10\n            }, _this), questionDataForm === null || questionDataForm === void 0 ? void 0 : (_questionDataForm$Exe3 = questionDataForm.ExerciseList) === null || _questionDataForm$Exe3 === void 0 ? void 0 : _questionDataForm$Exe3.map(function (itemQues, index) {\n              var _itemQues$ExerciseAns;\n\n              return itemQues.Enable && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mt-4\",\n                  style: {\n                    fontWeight: 500,\n                    color: '#525252'\n                  },\n                  children: returnIndexQuestion(itemQues)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 14\n                }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Th\\xEAm \\u0111\\xE1p \\xE1n\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-add-answer\",\n                    onClick: function onClick() {\n                      return handleAddAnswer(itemQues.inputID);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Plus, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 16\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 15\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 14\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: (_itemQues$ExerciseAns = itemQues.ExerciseAnswer) === null || _itemQues$ExerciseAns === void 0 ? void 0 : _itemQues$ExerciseAns.map(function (itemAns, index) {\n                    return itemAns.Enable && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-6 col-12\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"row-ans mt-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                          className: \"mb-0\",\n                          children: /*#__PURE__*/_jsxDEV(Input, {\n                            value: itemAns.AnswerContent,\n                            className: \"style-input\",\n                            onChange: function onChange(e) {\n                              return onChange_text(e, itemAns.ID, itemQues.inputID);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 411,\n                            columnNumber: 21\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 410,\n                          columnNumber: 20\n                        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"delete-ans\",\n                          onClick: function onClick() {\n                            return deleteAnswerItem(itemAns.ID, itemQues.inputID);\n                          },\n                          children: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 418,\n                            columnNumber: 21\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 417,\n                          columnNumber: 20\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 409,\n                        columnNumber: 19\n                      }, _this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 18\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 14\n                }, _this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 13\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 8\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 6\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(TypingForm, \"5HY5bKnnw079us5lWGc/qtZ3PFE=\", false, function () {\n  return [useWrap, useForm, Form.useForm];\n});\n\n_c = TypingForm;\nexport default TypingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypingForm\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/QuestionBank/QuestionFormType/TypingForm.tsx"],"names":["CloseOutlined","Form","Input","Spin","Tooltip","React","useEffect","useState","Plus","useForm","exerciseGroupApi","Editor","useWrap","AnsID","QuesID","TypingForm","props","isSubmit","questionData","changeIsSubmit","visible","showNoti","handleSubmit","formState","isSubmitting","errors","isSubmitted","form","questionDataForm","setQuestionDataForm","isResetEditor","setIsResetEditor","linkUpload","setLinkUpload","loadingUpload","setLoadingUpload","loadingForm","setLoadingForm","reloadContent","setReloadContent","dataExercise","setDataExercise","onchange_UploadFile","info","file","status","UploadAudio","originFileObj","res","data","message","onSubmit","e","getDataEditor","dataEditor","Paragraph","resetForm","Content","ExerciseAnswer","forEach","item","AnswerContent","isTrue","deleteAllQuestion","splice","length","ExerciseList","Enable","deleteSingleQuestion","QuestionID","QuestionIndex","findIndex","inputID","ExerciseIndex","isAdd","console","log","addQuestion","objAns","ExerciseGroupID","ID","SubjectID","SubjectName","DescribeAnswer","Level","LevelName","LinkAudio","Type","TypeName","push","handleAddAnswer","questionID","every","onChange_text","AnswerID","text","target","value","AnswerIndex","deleteAnswerItem","handleSubmitQuestion","newData","JSON","parse","stringify","index","ans","ind","update","handleSubmitChange","dataSubmit","cloneParagraph","indexInput","parseInt","toString","replace","setTimeout","returnIndexQuestion","itemQues","title","ex","dataGroupDetail","id","getWithID","reloadNewContent","filterExerciseList","filter","quesID","borderLeft","textDecoration","map","fontWeight","color","itemAns"],"mappings":"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","sourcesContent":["import { CloseOutlined } from '@ant-design/icons'\r\nimport { Form, Input, Spin, Tooltip } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Plus } from 'react-feather'\r\nimport { useForm } from 'react-hook-form'\r\nimport { exerciseGroupApi } from '~/apiBase/'\r\nimport Editor from '~/components/Elements/Editor'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nlet AnsID = 0\r\nlet QuesID = -1\r\n\r\nconst TypingForm = (props) => {\r\n\tconst { isSubmit, questionData, changeIsSubmit, visible } = props\r\n\tconst { showNoti } = useWrap()\r\n\tconst {\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, errors, isSubmitted }\r\n\t} = useForm()\r\n\tconst [form] = Form.useForm()\r\n\tconst [questionDataForm, setQuestionDataForm] = useState(null)\r\n\tconst [isResetEditor, setIsResetEditor] = useState(false)\r\n\tconst [linkUpload, setLinkUpload] = useState(null)\r\n\tconst [loadingUpload, setLoadingUpload] = useState(false)\r\n\tconst [loadingForm, setLoadingForm] = useState(false)\r\n\tconst [reloadContent, setReloadContent] = useState(false)\r\n\tconst [dataExercise, setDataExercise] = useState([])\r\n\r\n\t// Upload file audio\r\n\tconst onchange_UploadFile = async (info) => {\r\n\t\t// console.log(\"Info File upload: \", info);\r\n\t\tif (info.file.status === 'uploading') {\r\n\t\t\tsetLoadingUpload(true)\r\n\t\t\treturn\r\n\t\t}\r\n\t\tsetLoadingUpload(true)\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseGroupApi.UploadAudio(info.file.originFileObj)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetLinkUpload(res.data.data)\r\n\t\t\t\tshowNoti('success', 'Upload file thành công')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingUpload(false)\r\n\t\t}\r\n\t}\r\n\r\n\t// SUBMI FORM\r\n\tconst onSubmit = handleSubmit((data: any, e) => {\r\n\t\t// console.log(\"DATA SUBMIT: \", data);\r\n\t})\r\n\r\n\t// GET VALUE IN EDITOR\r\n\tconst getDataEditor = (dataEditor) => {\r\n\t\tif (questionDataForm) {\r\n\t\t\tquestionDataForm.Paragraph = dataEditor\r\n\t\t}\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// Reset value in form\r\n\tconst resetForm = () => {\r\n\t\tquestionDataForm.Content = ''\r\n\t\tquestionDataForm.ExerciseAnswer.forEach((item) => {\r\n\t\t\titem.AnswerContent = ''\r\n\t\t\titem.isTrue = false\r\n\t\t})\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// HANDLE DELETE ALL QUESTION\r\n\tconst deleteAllQuestion = () => {\r\n\t\tdataExercise?.splice(0, dataExercise.length)\r\n\t\tquestionDataForm?.ExerciseList?.forEach((item) => {\r\n\t\t\titem.Enable = false\r\n\t\t})\r\n\r\n\t\tsetDataExercise([...dataExercise])\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// HANDLE DELETE QUESTION\r\n\tconst deleteSingleQuestion = (QuestionID) => {\r\n\t\tlet QuestionIndex = questionDataForm.ExerciseList.findIndex((item) => item.inputID == QuestionID)\r\n\t\tlet ExerciseIndex = dataExercise.findIndex((item) => item.inputID == QuestionID)\r\n\r\n\t\tdataExercise.splice(ExerciseIndex, 1)\r\n\r\n\t\tif (questionDataForm.ExerciseList[QuestionIndex]) {\r\n\t\t\tif (questionDataForm.ExerciseList[QuestionIndex].isAdd) {\r\n\t\t\t\tquestionDataForm.ExerciseList.splice(QuestionIndex, 1)\r\n\t\t\t} else {\r\n\t\t\t\tquestionDataForm.ExerciseList[QuestionIndex].Enable = false\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log('Câu hỏi không tồn tại')\r\n\t\t}\r\n\r\n\t\tsetDataExercise([...dataExercise])\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// HANDLE ADD QUESTION\r\n\tconst addQuestion = (inputID) => {\r\n\t\tAnsID++\r\n\t\tlet objAns = {\r\n\t\t\t// ID: inputID,\r\n\t\t\tinputID: inputID,\r\n\t\t\tContent: '',\r\n\t\t\tExerciseGroupID: questionDataForm.ID,\r\n\t\t\tSubjectID: questionDataForm.SubjectID,\r\n\t\t\tSubjectName: questionDataForm.SubjectName,\r\n\t\t\tDescribeAnswer: '',\r\n\t\t\tLevel: questionDataForm.Level,\r\n\t\t\tLevelName: questionDataForm.LevelName,\r\n\t\t\tLinkAudio: null,\r\n\t\t\tType: questionDataForm.Type,\r\n\t\t\tTypeName: questionDataForm.TypeName,\r\n\t\t\tisAdd: true,\r\n\t\t\tEnable: true,\r\n\t\t\tExerciseAnswer: [\r\n\t\t\t\t{\r\n\t\t\t\t\tID: AnsID,\r\n\t\t\t\t\tAnswerContent: '',\r\n\t\t\t\t\tisTrue: true,\r\n\t\t\t\t\tEnable: true,\r\n\t\t\t\t\tisAdd: true\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t\tquestionDataForm.ExerciseList.push(objAns)\r\n\t\tdataExercise.push(objAns)\r\n\r\n\t\tsetDataExercise([...dataExercise])\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// ====== HANDLE ADD ANSWER ======\r\n\tconst handleAddAnswer = (questionID: number) => {\r\n\t\tAnsID++\r\n\t\tquestionDataForm.ExerciseList.every((item) => {\r\n\t\t\tif (item.inputID == questionID) {\r\n\t\t\t\titem.ExerciseAnswer.push({\r\n\t\t\t\t\tID: AnsID,\r\n\t\t\t\t\tAnswerContent: '',\r\n\t\t\t\t\tisTrue: true,\r\n\t\t\t\t\tEnable: true,\r\n\t\t\t\t\tisAdd: true\r\n\t\t\t\t})\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// ====== ON CHANGE TEXT ======\r\n\tconst onChange_text = (e: any, AnswerID: number, QuestionID) => {\r\n\t\t// - Get value\r\n\t\tlet text = e.target.value\r\n\r\n\t\t// - Get question index\r\n\t\tlet QuestionIndex = questionDataForm?.ExerciseList?.findIndex((item) => item.inputID == QuestionID)\r\n\r\n\t\t// - Get answer index\r\n\t\tlet AnswerIndex = questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex((item) => item.ID == AnswerID)\r\n\r\n\t\t// - add text\r\n\t\tquestionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].AnswerContent = text\r\n\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// ====== DELETE ANSWER ======\r\n\tconst deleteAnswerItem = (AnswerID: number, QuestionID: number) => {\r\n\t\t// - Get question index\r\n\t\tlet QuestionIndex = questionDataForm.ExerciseList.findIndex((item) => item.inputID == QuestionID)\r\n\r\n\t\t// - Get answer index\r\n\t\tlet AnswerIndex = questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.findIndex((item) => item.ID == AnswerID)\r\n\r\n\t\t// Action delete\r\n\t\tif (questionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].isAdd) {\r\n\t\t\tquestionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer.splice(AnswerIndex, 1)\r\n\t\t} else {\r\n\t\t\tquestionDataForm.ExerciseList[QuestionIndex].ExerciseAnswer[AnswerIndex].Enable = false\r\n\t\t}\r\n\r\n\t\t// setAnswerList([...answerList]);\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// SUBMIT FORM\r\n\tconst handleSubmitQuestion = async () => {\r\n\t\tlet res = null\r\n\r\n\t\tlet newData = JSON.parse(JSON.stringify(questionDataForm))\r\n\r\n\t\t// custom data\r\n\t\tnewData.ExerciseList.forEach((item, index) => {\r\n\t\t\titem.ExerciseAnswer.forEach((ans, ind) => {\r\n\t\t\t\tif (ans.isAdd) {\r\n\t\t\t\t\tdelete ans.ID\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tif (questionDataForm.ExerciseGroupID) {\r\n\t\t\tnewData.ID = questionDataForm.ExerciseGroupID\r\n\t\t}\r\n\r\n\t\tnewData.ExerciseGroupID = null\r\n\r\n\t\t// ----------\r\n\r\n\t\ttry {\r\n\t\t\tres = await exerciseGroupApi.update(newData)\r\n\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\thandleSubmitChange(res.data.data)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t}\r\n\t}\r\n\r\n\t// SUBMIT AND CHANGE PARAGRAPH\r\n\tconst handleSubmitChange = async (dataSubmit) => {\r\n\t\tconsole.log('Data Submit: ', dataSubmit)\r\n\t\tlet res = null\r\n\r\n\t\tlet cloneParagraph = dataSubmit.Paragraph\r\n\r\n\t\tconsole.log('Lúc đầu: ', cloneParagraph)\r\n\r\n\t\tdataSubmit.ExerciseList.forEach((item, index) => {\r\n\t\t\tlet indexInput: any = parseInt(item.inputID) + 1\r\n\t\t\tindexInput = indexInput.toString()\r\n\t\t\tcloneParagraph = cloneParagraph.replace(\r\n\t\t\t\t`<input id=\"${item.inputID}\" class=\"space-editor\" placeholder=\"(${indexInput})\">`,\r\n\t\t\t\t`<div ques-id=\"${item.ID}\" id=\"${indexInput}\" class='space-editor' role='textbox' aria-labelledby='txtboxLabel' aria-multiline='true' contentEditable=\"true\">(${indexInput})</div>`\r\n\t\t\t)\r\n\t\t\tconsole.log('Coi thử nha: ', `<input id=\"${item.inputID}\" class=\"space-editor\" placeholder=\"(${indexInput})\">`)\r\n\t\t})\r\n\r\n\t\tconsole.log('Lúc sau: ', cloneParagraph)\r\n\r\n\t\tdataSubmit.Paragraph = cloneParagraph\r\n\r\n\t\t// ----------\r\n\r\n\t\ttry {\r\n\t\t\tres = await exerciseGroupApi.update(dataSubmit)\r\n\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tchangeIsSubmit(res.data.data)\r\n\t\t\t\tif (!questionDataForm.ID) {\r\n\t\t\t\t\tresetForm()\r\n\t\t\t\t}\r\n\t\t\t\tshowNoti('success', `Tạo câu hỏi thành công`)\r\n\t\t\t\tsetIsResetEditor(true)\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetIsResetEditor(false)\r\n\t\t\t\t}, 500)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t}\r\n\t}\r\n\r\n\t//RETURN INDEX QUESTION - Trả về thứ tự của từng câu hỏi\r\n\tconst returnIndexQuestion = (itemQues) => {\r\n\t\tlet title = ''\r\n\t\tlet index = dataExercise.findIndex((ex) => ex.inputID == itemQues.inputID)\r\n\t\ttitle = `Câu (${index + 1})`\r\n\t\treturn title\r\n\t}\r\n\r\n\t// GET GROUP DETAIL DATA\r\n\tconst dataGroupDetail = async () => {\r\n\t\tsetLoadingForm(true)\r\n\r\n\t\tlet id = null\r\n\t\tif (questionData.ID) {\r\n\t\t\tid = questionData.ID\r\n\t\t} else {\r\n\t\t\tid = questionData.ExerciseGroupID\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseGroupApi.getWithID(id)\r\n\t\t\tres.status == 200 && reloadNewContent(res.data.data)\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu')\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingForm(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst reloadNewContent = (data) => {\r\n\t\tlet filterExerciseList = data.ExerciseList.filter((item) => item.Enable !== false)\r\n\t\tdata.ExerciseList = [...filterExerciseList]\r\n\r\n\t\tsetDataExercise([...filterExerciseList])\r\n\t\tsetQuestionDataForm({ ...data })\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isSubmit) {\r\n\t\t\thandleSubmitQuestion()\r\n\t\t\treturn\r\n\t\t}\r\n\t}, [isSubmit])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (visible) {\r\n\t\t\tdataGroupDetail()\r\n\t\t}\r\n\t}, [visible])\r\n\r\n\t// useEffect(() => {\r\n\t//   if (reloadContent) {\r\n\t//     (async function loadData() {\r\n\t//       try {\r\n\t//         let res = await exerciseGroupApi.getWithID(questionDataForm.ID);\r\n\r\n\t//         if (res.status == 200) {\r\n\t//           changeIsSubmit(res.data.data);\r\n\t//           showNoti(\"success\", `Thành công`);\r\n\t//           if (!questionDataForm.ID) {\r\n\t//             resetForm();\r\n\t//           }\r\n\t//           setIsResetEditor(true);\r\n\r\n\t//           setTimeout(() => {\r\n\t//             setIsResetEditor(false);\r\n\t//           }, 500);\r\n\t//         }\r\n\r\n\t//         res.status == 204 && showNoti(\"danger\", \"Không có dữ liệu\");\r\n\t//       } catch (error) {\r\n\t//         showNoti(\"danger\", error.message);\r\n\t//       } finally {\r\n\t//         setReloadContent(false);\r\n\t//       }\r\n\t//     })();\r\n\t//   }\r\n\t// }, [reloadContent]);\r\n\r\n\treturn (\r\n\t\t<div className=\"form-create-question\">\r\n\t\t\t{visible && loadingForm ? (\r\n\t\t\t\t<div className=\"w-100 text-center mt-3\">\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<Form form={form} layout=\"vertical\" onFinish={onSubmit}>\r\n\t\t\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-12\">\r\n\t\t\t\t\t\t\t\t\t<Form.Item name=\"Question\" label=\"Nội dung\">\r\n\t\t\t\t\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\t\t\t\t\texerciseList={dataExercise}\r\n\t\t\t\t\t\t\t\t\t\t\tdeleteAllQuestion={deleteAllQuestion}\r\n\t\t\t\t\t\t\t\t\t\t\tdeleteSingleQuestion={(quesID: number) => deleteSingleQuestion(quesID)}\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange={(value: string) => getDataEditor(value)}\r\n\t\t\t\t\t\t\t\t\t\t\tisReset={isResetEditor}\r\n\t\t\t\t\t\t\t\t\t\t\tquestionContent={questionDataForm?.Paragraph}\r\n\t\t\t\t\t\t\t\t\t\t\tquestionData={questionDataForm}\r\n\t\t\t\t\t\t\t\t\t\t\taddQuestion={(inputID: number) => addQuestion(inputID)}\r\n\t\t\t\t\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t\t\t\t\t\t{/* <Form.Item label=\"Tải lên link Audio\">\r\n\t\t\t\t\t\t\t\t\t\t<Upload onChange={onchange_UploadFile} showUploadList={false}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-block\">{loadingUpload ? <Spin /> : linkUpload && linkUpload}</div>\r\n\t\t\t\t\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t\t\t\t</Form.Item> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-12\" style={{ borderLeft: '2px dotted #dbdbdb' }}>\r\n\t\t\t\t\t\t\t\t\t<p className=\"style-label\" style={{ textDecoration: 'underline' }}>\r\n\t\t\t\t\t\t\t\t\t\tĐáp án\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t{questionDataForm?.ExerciseList?.map(\r\n\t\t\t\t\t\t\t\t\t\t(itemQues, index) =>\r\n\t\t\t\t\t\t\t\t\t\t\titemQues.Enable && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"mt-4\" style={{ fontWeight: 500, color: '#525252' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{returnIndexQuestion(itemQues)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* {`Câu (${index + 1})`} */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Thêm đáp án\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn-add-answer\" onClick={() => handleAddAnswer(itemQues.inputID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Plus />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{itemQues.ExerciseAnswer?.map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(itemAns, index) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titemAns.Enable && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-12\" key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row-ans mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item className=\"mb-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={itemAns.AnswerContent}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => onChange_text(e, itemAns.ID, itemQues.inputID)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></Input>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"delete-ans\" onClick={() => deleteAnswerItem(itemAns.ID, itemQues.inputID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TypingForm\r\n"]},"metadata":{},"sourceType":"module"}
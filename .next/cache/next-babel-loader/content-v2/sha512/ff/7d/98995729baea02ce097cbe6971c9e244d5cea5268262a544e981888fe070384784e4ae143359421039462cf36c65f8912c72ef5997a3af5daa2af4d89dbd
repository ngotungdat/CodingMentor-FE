{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Dashboard\\\\StatisticalRateVideoCourse.tsx\";\nimport { Skeleton } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total';\nimport { dataPie } from '~/lib/dashboard/data';\nimport RateChart from './RateChart';\n\nconst StatisticalRate = () => {\n  const {\n    0: statisticalRateVideoCourse,\n    1: setStatisticalRateVideoCourse\n  } = useState([]);\n  const {\n    0: inView,\n    1: setInView\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    status: '',\n    loading: false\n  });\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState({\n    branch: 0,\n    StartYear: 2017,\n    EndYear: 2022,\n    Year: new Date().getFullYear(),\n    Month: new Date().getMonth() + 1\n  });\n\n  const getStatisticalRateVideoCourse = async () => {\n    setIsLoading({\n      status: 'GET_STAT_RATE',\n      loading: true\n    });\n\n    try {\n      let res = await statisticalApi.getStatisticalRateVideoCourse();\n\n      if (res.status === 200) {\n        setStatisticalRateVideoCourse(res.data.data);\n      }\n\n      if (res.status === 204) {\n        setStatisticalRateVideoCourse([]);\n      }\n    } catch (error) {} finally {\n      setIsLoading({\n        status: 'GET_STAT_RATE',\n        loading: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    getStatisticalRateVideoCourse();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading.status === 'GET_STAT_RATE' && isLoading.loading == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-xl-6 col-12\",\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        active: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-xl-6 col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-comment\",\n        children: /*#__PURE__*/_jsxDEV(RateChart, {\n          statisticalRate: statisticalRateVideoCourse,\n          dataPie: dataPie,\n          isLoading: isLoading,\n          type: \"VIDEO_COURSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\nexport default StatisticalRate;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Dashboard/StatisticalRateVideoCourse.tsx"],"names":["Skeleton","React","useState","useEffect","statisticalApi","dataPie","RateChart","StatisticalRate","statisticalRateVideoCourse","setStatisticalRateVideoCourse","inView","setInView","isLoading","setIsLoading","status","loading","todoApi","setTodoApi","branch","StartYear","EndYear","Year","Date","getFullYear","Month","getMonth","getStatisticalRateVideoCourse","res","data","error"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,MAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC7B,QAAM;AAAA,OAACC,0BAAD;AAAA,OAA6BC;AAA7B,MAA8DP,QAAQ,CAAc,EAAd,CAA5E;AACA,QAAM;AAAA,OAACQ,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACU,SAAD;AAAA,OAAYC;AAAZ,MAA4BX,QAAQ,CAAC;AAC1CY,IAAAA,MAAM,EAAE,EADkC;AAE1CC,IAAAA,OAAO,EAAE;AAFiC,GAAD,CAA1C;AAIA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBf,QAAQ,CAAC;AACtCgB,IAAAA,MAAM,EAAE,CAD8B;AAEtCC,IAAAA,SAAS,EAAE,IAF2B;AAGtCC,IAAAA,OAAO,EAAE,IAH6B;AAItCC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAJgC;AAKtCC,IAAAA,KAAK,EAAE,IAAIF,IAAJ,GAAWG,QAAX,KAAwB;AALO,GAAD,CAAtC;;AAQA,QAAMC,6BAA6B,GAAG,YAAY;AACjDb,IAAAA,YAAY,CAAC;AAAEC,MAAAA,MAAM,EAAE,eAAV;AAA2BC,MAAAA,OAAO,EAAE;AAApC,KAAD,CAAZ;;AACA,QAAI;AACH,UAAIY,GAAG,GAAG,MAAMvB,cAAc,CAACsB,6BAAf,EAAhB;;AACA,UAAIC,GAAG,CAACb,MAAJ,KAAe,GAAnB,EAAwB;AACvBL,QAAAA,6BAA6B,CAACkB,GAAG,CAACC,IAAJ,CAASA,IAAV,CAA7B;AACA;;AACD,UAAID,GAAG,CAACb,MAAJ,KAAe,GAAnB,EAAwB;AACvBL,QAAAA,6BAA6B,CAAC,EAAD,CAA7B;AACA;AACD,KARD,CAQE,OAAOoB,KAAP,EAAc,CACf,CATD,SASU;AACThB,MAAAA,YAAY,CAAC;AAAEC,QAAAA,MAAM,EAAE,eAAV;AAA2BC,QAAAA,OAAO,EAAE;AAApC,OAAD,CAAZ;AACA;AACD,GAdD;;AAgBAZ,EAAAA,SAAS,CAAC,MAAM;AACfuB,IAAAA,6BAA6B;AAC7B,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAA,cACEd,SAAS,CAACE,MAAV,KAAqB,eAArB,IAAwCF,SAAS,CAACG,OAAV,IAAqB,IAA7D,gBACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACC,QAAC,QAAD;AAAU,QAAA,MAAM;AAAhB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADA,gBAKA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACC,QAAC,SAAD;AACC,UAAA,eAAe,EAAEP,0BADlB;AAEC,UAAA,OAAO,EAAEH,OAFV;AAGC,UAAA,SAAS,EAAEO,SAHZ;AAIC,UAAA,IAAI,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AANF,mBADD;AAoBA,CAvDD;;AAyDA,eAAeL,eAAf","sourcesContent":["import { Skeleton } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total';\r\nimport { dataPie } from '~/lib/dashboard/data';\r\nimport RateChart from './RateChart';\r\n\r\nconst StatisticalRate = () => {\r\n\tconst [statisticalRateVideoCourse, setStatisticalRateVideoCourse] = useState<IStatRate[]>([]);\r\n\tconst [inView, setInView] = useState(false);\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\tstatus: '',\r\n\t\tloading: false\r\n\t});\r\n\tconst [todoApi, setTodoApi] = useState({\r\n\t\tbranch: 0,\r\n\t\tStartYear: 2017,\r\n\t\tEndYear: 2022,\r\n\t\tYear: new Date().getFullYear(),\r\n\t\tMonth: new Date().getMonth() + 1\r\n\t});\r\n\r\n\tconst getStatisticalRateVideoCourse = async () => {\r\n\t\tsetIsLoading({ status: 'GET_STAT_RATE', loading: true });\r\n\t\ttry {\r\n\t\t\tlet res = await statisticalApi.getStatisticalRateVideoCourse();\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetStatisticalRateVideoCourse(res.data.data);\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetStatisticalRateVideoCourse([]);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ status: 'GET_STAT_RATE', loading: false });\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetStatisticalRateVideoCourse();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading.status === 'GET_STAT_RATE' && isLoading.loading == true ? (\r\n\t\t\t\t<div className=\"col-xl-6 col-12\">\r\n\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"col-xl-6 col-12\">\r\n\t\t\t\t\t<div className=\"chart-comment\">\r\n\t\t\t\t\t\t<RateChart\r\n\t\t\t\t\t\t\tstatisticalRate={statisticalRateVideoCourse}\r\n\t\t\t\t\t\t\tdataPie={dataPie}\r\n\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\ttype=\"VIDEO_COURSE\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default StatisticalRate;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\Global\\\\CreateSelfCourse\\\\CreateSelfCourse.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Card } from 'antd';\nimport moment from 'moment';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport { branchApi, createSelfCourse, curriculumApi, getRangeTimeSelfCourse, gradeApi, programApi, setRangeTimeSelfCourse } from '~/apiBase';\nimport TitlePage from '~/components/TitlePage';\nimport { useWrap } from '~/context/wrap';\nimport { fmSelectArr } from '~/utils/functions';\nimport Schedule from '../CreateCourse/Schedule/Schedule';\nimport CreateSelfCourseCalendar from './Calendar/CreateSelfCourseCalendar';\nimport CreateSelfCourseForm from './CreateSelfCourseForm/CreateSelfCourseForm';\nimport SetTimeSelfCourseForm from './SetTimeSelfCourseForm'; // ------------ MAIN COMPONENT ------------------\n\nvar CreateSelfCourse = function CreateSelfCourse() {\n  _s();\n\n  var router = useRouter(); // -----------STATE-----------\n  // FORM\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var _useState = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState({\n    branchList: [],\n    gradeList: [],\n    programList: [],\n    curriculumList: []\n  }),\n      optionListForForm = _useState2[0],\n      setOptionListForForm = _useState2[1];\n\n  var _useState3 = useState(),\n      rangeTime = _useState3[0],\n      setRangeTime = _useState3[1]; // -----------CREATE COURSE FORM-----------\n  // FETCH BRANCH, STUDY TIME, GRADE IN THE FIRST TIME\n\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$Promise$all, _yield$Promise$all2, branch, grade, newBranchList, newGradeList;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading({\n                type: 'FETCH_DATA',\n                status: true\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return Promise.all([branchApi.getAll({\n                pageIndex: 1,\n                pageSize: 9999\n              }), gradeApi.getAll({\n                selectAll: true\n              })]);\n\n            case 4:\n              _yield$Promise$all = _context.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              branch = _yield$Promise$all2[0];\n              grade = _yield$Promise$all2[1];\n              // BRANCH\n              newBranchList = fmSelectArr(branch.data.data, 'BranchName', 'ID'); // GRADE\n\n              newGradeList = fmSelectArr(grade.data.data, 'GradeName', 'ID');\n              setOptionListForForm(_objectSpread(_objectSpread({}, optionListForForm), {}, {\n                branchList: newBranchList,\n                gradeList: newGradeList\n              }));\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              console.log('fetchData - PromiseAll:', _context.t0);\n              showNoti('danger', _context.t0.message);\n\n            case 17:\n              _context.prev = 17;\n              setIsLoading({\n                type: 'FETCH_DATA',\n                status: false\n              });\n              return _context.finish(17);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 13, 17, 20]]);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // TIME\n\n\n  var onFetchRangeTime = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res, _res$data$data, ID, rest;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return getRangeTimeSelfCourse();\n\n            case 3:\n              res = _context2.sent;\n\n              if (res.status === 200) {\n                _res$data$data = res.data.data, ID = _res$data$data.ID, rest = _objectWithoutProperties(_res$data$data, [\"ID\"]);\n                setRangeTime(rest);\n              }\n\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log('onFetchRangeTime', _context2.t0.message);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function onFetchRangeTime() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onSetRangeTime = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              setIsLoading({\n                type: 'SUBMIT_TIME',\n                status: true\n              });\n              _context3.next = 4;\n              return setRangeTimeSelfCourse(data);\n\n            case 4:\n              res = _context3.sent;\n\n              if (!(res.status === 200)) {\n                _context3.next = 8;\n                break;\n              }\n\n              showNoti('success', res.data.message);\n              return _context3.abrupt(\"return\", true);\n\n            case 8:\n              return _context3.abrupt(\"return\", false);\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log('onSetRangeTime', _context3.t0.message);\n\n            case 14:\n              _context3.prev = 14;\n              setIsLoading({\n                type: 'SUBMIT_TIME',\n                status: false\n              });\n              return _context3.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 11, 14, 17]]);\n    }));\n\n    return function onSetRangeTime(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    onFetchRangeTime();\n    fetchData();\n  }, []); // PROGRAM\n\n  var fetchProgramByGrade = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id) {\n      var res, newProgramList;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setIsLoading({\n                type: 'GradeID',\n                status: true\n              });\n              _context4.prev = 1;\n              _context4.next = 4;\n              return programApi.getAll({\n                GradeID: id\n              });\n\n            case 4:\n              res = _context4.sent;\n\n              if (res.status === 200) {\n                newProgramList = fmSelectArr(res.data.data, 'ProgramName', 'ID', ['Price']);\n                setOptionListForForm(function (preState) {\n                  return _objectSpread(_objectSpread({}, preState), {}, {\n                    programList: newProgramList\n                  });\n                });\n              }\n\n              if (res.status === 204) {\n                setOptionListForForm(function (preState) {\n                  return _objectSpread(_objectSpread({}, preState), {}, {\n                    programList: []\n                  });\n                });\n              }\n\n              _context4.next = 12;\n              break;\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](1);\n              showNoti('danger', _context4.t0.message);\n\n            case 12:\n              _context4.prev = 12;\n              setIsLoading({\n                type: 'GradeID',\n                status: false\n              });\n              return _context4.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function fetchProgramByGrade(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var fetchCurriculumByProgram = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id) {\n      var res, newCurriculum;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              setIsLoading({\n                type: 'ProgramID',\n                status: true\n              });\n              _context5.prev = 1;\n              _context5.next = 4;\n              return curriculumApi.getAll({\n                ProgramID: id\n              });\n\n            case 4:\n              res = _context5.sent;\n\n              if (res.status === 200) {\n                newCurriculum = fmSelectArr(res.data.data, 'CurriculumName', 'ID');\n                setOptionListForForm(function (preState) {\n                  return _objectSpread(_objectSpread({}, preState), {}, {\n                    curriculumList: newCurriculum\n                  });\n                });\n              }\n\n              if (res.status === 204) {\n                setOptionListForForm(function (preState) {\n                  return _objectSpread(_objectSpread({}, preState), {}, {\n                    curriculumList: []\n                  });\n                });\n              }\n\n              _context5.next = 12;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](1);\n              showNoti('danger', _context5.t0.message);\n\n            case 12:\n              _context5.prev = 12;\n              setIsLoading({\n                type: 'ProgramID',\n                status: false\n              });\n              return _context5.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function fetchCurriculumByProgram(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); // GET COURSE\n\n\n  var getTitle = function getTitle(arr, vl) {\n    return arr.find(function (p) {\n      return p.value === vl;\n    }).title;\n  };\n\n  var onCreateCourse = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(object) {\n      var branchList, programList, curriculumList, BranchID, ProgramID, Price, CurriculumID, CourseName, SalaryOfLesson, StartDay, EndDay, startDayFm, endDayFm, BranchName, ProgramName, CurriculumName, CourseNameFinal, fmValues, res;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              _context6.prev = 1;\n              branchList = optionListForForm.branchList, programList = optionListForForm.programList, curriculumList = optionListForForm.curriculumList;\n              BranchID = object.BranchID, ProgramID = object.ProgramID, Price = object.Price, CurriculumID = object.CurriculumID, CourseName = object.CourseName, SalaryOfLesson = object.SalaryOfLesson, StartDay = object.StartDay, EndDay = object.EndDay;\n              startDayFm = moment(StartDay).format('YYYY/MM/DD');\n              endDayFm = moment(EndDay).format('YYYY/MM/DD');\n              BranchName = getTitle(branchList, BranchID);\n              ProgramName = getTitle(programList, ProgramID);\n              CurriculumName = getTitle(curriculumList, CurriculumID);\n              CourseNameFinal = CourseName ? CourseName : \"[\".concat(BranchName, \"][\").concat(ProgramName, \"][\").concat(CurriculumName, \"] - \").concat(moment(StartDay).format('DD/MM/YYYY'));\n              fmValues = _objectSpread(_objectSpread({}, object), {}, {\n                Price: parseInt(Price.replace(/\\D/g, '')),\n                SalaryOfLesson: parseInt(SalaryOfLesson.replace(/\\D/g, '')),\n                StartDay: startDayFm,\n                EndDay: endDayFm,\n                CourseName: CourseNameFinal\n              });\n              _context6.next = 13;\n              return createSelfCourse(fmValues);\n\n            case 13:\n              res = _context6.sent;\n\n              if (!(res.status === 200)) {\n                _context6.next = 18;\n                break;\n              }\n\n              router.push(\"/course/course-list/edit-self-course/\".concat(res.data.data.ID, \"/\"));\n              showNoti('success', 'Tạo khóa học thành công. Hãy sắp xếp lịch học');\n              return _context6.abrupt(\"return\", true);\n\n            case 18:\n              _context6.next = 23;\n              break;\n\n            case 20:\n              _context6.prev = 20;\n              _context6.t0 = _context6[\"catch\"](1);\n              showNoti('error', _context6.t0.message);\n\n            case 23:\n              _context6.prev = 23;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context6.finish(23);\n\n            case 26:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 20, 23, 26]]);\n    }));\n\n    return function onCreateCourse(_x4) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-course\",\n    children: [/*#__PURE__*/_jsxDEV(TitlePage, {\n      title: \"T\\u1EA1o kh\\xF3a h\\u1ECDc 1 v\\u1EDBi 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 col-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"S\\u1EAFp x\\u1EBFp l\\u1ECBch h\\u1ECDc\",\n          extra: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-page-course d-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(SetTimeSelfCourseForm, {\n              isLoading: isLoading,\n              rangeTimeObj: rangeTime,\n              handleSetRangeTime: onSetRangeTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 9\n            }, _this), /*#__PURE__*/_jsxDEV(CreateSelfCourseForm, {\n              isLoading: isLoading,\n              isUpdate: false //\n              ,\n              optionListForForm: optionListForForm //\n              ,\n              handleGetCourse: onCreateCourse,\n              handleFetchProgramByGrade: fetchProgramByGrade,\n              handleFetchCurriculumByProgram: fetchCurriculumByProgram\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 9\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 8\n          }, _this),\n          children: /*#__PURE__*/_jsxDEV(CreateSelfCourseCalendar, {\n            eventList: [],\n            isLoaded: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 col-12\",\n        children: /*#__PURE__*/_jsxDEV(Schedule, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(CreateSelfCourse, \"YreKJMNegh5d/pkDYTV+TLnvWak=\", false, function () {\n  return [useRouter, useWrap];\n});\n\n_c = CreateSelfCourse;\nexport default CreateSelfCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSelfCourse\");","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/Global/CreateSelfCourse/CreateSelfCourse.tsx"],"names":["Card","moment","useRouter","React","useEffect","useState","branchApi","createSelfCourse","curriculumApi","getRangeTimeSelfCourse","gradeApi","programApi","setRangeTimeSelfCourse","TitlePage","useWrap","fmSelectArr","Schedule","CreateSelfCourseCalendar","CreateSelfCourseForm","SetTimeSelfCourseForm","CreateSelfCourse","router","showNoti","type","status","isLoading","setIsLoading","branchList","gradeList","programList","curriculumList","optionListForForm","setOptionListForForm","rangeTime","setRangeTime","fetchData","Promise","all","getAll","pageIndex","pageSize","selectAll","branch","grade","newBranchList","data","newGradeList","console","log","message","onFetchRangeTime","res","ID","rest","onSetRangeTime","fetchProgramByGrade","id","GradeID","newProgramList","preState","fetchCurriculumByProgram","ProgramID","newCurriculum","getTitle","arr","vl","find","p","value","title","onCreateCourse","object","BranchID","Price","CurriculumID","CourseName","SalaryOfLesson","StartDay","EndDay","startDayFm","format","endDayFm","BranchName","ProgramName","CurriculumName","CourseNameFinal","fmValues","parseInt","replace","push"],"mappings":"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","sourcesContent":["import { Card } from 'antd';\r\nimport moment from 'moment';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n\tbranchApi,\r\n\tcreateSelfCourse,\r\n\tcurriculumApi,\r\n\tgetRangeTimeSelfCourse,\r\n\tgradeApi,\r\n\tprogramApi,\r\n\tsetRangeTimeSelfCourse\r\n} from '~/apiBase';\r\nimport TitlePage from '~/components/TitlePage';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { fmSelectArr } from '~/utils/functions';\r\nimport Schedule from '../CreateCourse/Schedule/Schedule';\r\nimport CreateSelfCourseCalendar from './Calendar/CreateSelfCourseCalendar';\r\nimport CreateSelfCourseForm from './CreateSelfCourseForm/CreateSelfCourseForm';\r\nimport SetTimeSelfCourseForm from './SetTimeSelfCourseForm';\r\n// ------------ MAIN COMPONENT ------------------\r\n\r\nconst CreateSelfCourse = () => {\r\n\tconst router = useRouter();\r\n\t// -----------STATE-----------\r\n\t// FORM\r\n\tconst { showNoti } = useWrap();\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t});\r\n\tconst [optionListForForm, setOptionListForForm] = useState<ISCOptionListForForm>({\r\n\t\tbranchList: [],\r\n\t\tgradeList: [],\r\n\t\tprogramList: [],\r\n\t\tcurriculumList: []\r\n\t});\r\n\tconst [rangeTime, setRangeTime] = useState<ISCTime>();\r\n\t// -----------CREATE COURSE FORM-----------\r\n\t// FETCH BRANCH, STUDY TIME, GRADE IN THE FIRST TIME\r\n\tconst fetchData = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'FETCH_DATA',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tconst [branch, grade] = await Promise.all([\r\n\t\t\t\tbranchApi.getAll({ pageIndex: 1, pageSize: 9999 }),\r\n\t\t\t\tgradeApi.getAll({ selectAll: true })\r\n\t\t\t]);\r\n\t\t\t// BRANCH\r\n\t\t\tconst newBranchList = fmSelectArr(branch.data.data, 'BranchName', 'ID');\r\n\t\t\t// GRADE\r\n\t\t\tconst newGradeList = fmSelectArr(grade.data.data, 'GradeName', 'ID');\r\n\t\t\tsetOptionListForForm({\r\n\t\t\t\t...optionListForForm,\r\n\t\t\t\tbranchList: newBranchList,\r\n\t\t\t\tgradeList: newGradeList\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('fetchData - PromiseAll:', error);\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\t// TIME\r\n\tconst onFetchRangeTime = async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await getRangeTimeSelfCourse();\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst { ID, ...rest } = res.data.data;\r\n\t\t\t\tsetRangeTime(rest);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('onFetchRangeTime', error.message);\r\n\t\t}\r\n\t};\r\n\tconst onSetRangeTime = async (data: ISCTime) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'SUBMIT_TIME',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\tconst res = await setRangeTimeSelfCourse(data);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tshowNoti('success', res.data.message);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('onSetRangeTime', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'SUBMIT_TIME',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tonFetchRangeTime();\r\n\t\tfetchData();\r\n\t}, []);\r\n\t// PROGRAM\r\n\tconst fetchProgramByGrade = async (id: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GradeID',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await programApi.getAll({\r\n\t\t\t\tGradeID: id\r\n\t\t\t});\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newProgramList = fmSelectArr(res.data.data, 'ProgramName', 'ID', ['Price']);\r\n\t\t\t\tsetOptionListForForm((preState) => ({\r\n\t\t\t\t\t...preState,\r\n\t\t\t\t\tprogramList: newProgramList\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetOptionListForForm((preState) => ({\r\n\t\t\t\t\t...preState,\r\n\t\t\t\t\tprogramList: []\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GradeID',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tconst fetchCurriculumByProgram = async (id: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ProgramID',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await curriculumApi.getAll({\r\n\t\t\t\tProgramID: id\r\n\t\t\t});\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newCurriculum = fmSelectArr(res.data.data, 'CurriculumName', 'ID');\r\n\t\t\t\tsetOptionListForForm((preState) => ({\r\n\t\t\t\t\t...preState,\r\n\t\t\t\t\tcurriculumList: newCurriculum\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetOptionListForForm((preState) => ({\r\n\t\t\t\t\t...preState,\r\n\t\t\t\t\tcurriculumList: []\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ProgramID',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\t// GET COURSE\r\n\tconst getTitle = (arr: IOptionCommon[], vl) => arr.find((p) => p.value === vl).title;\r\n\tconst onCreateCourse = async (object) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tconst { branchList, programList, curriculumList } = optionListForForm;\r\n\t\t\tconst { BranchID, ProgramID, Price, CurriculumID, CourseName, SalaryOfLesson, StartDay, EndDay } = object;\r\n\t\t\tconst startDayFm = moment(StartDay).format('YYYY/MM/DD');\r\n\t\t\tconst endDayFm = moment(EndDay).format('YYYY/MM/DD');\r\n\r\n\t\t\tconst BranchName = getTitle(branchList, BranchID);\r\n\t\t\tconst ProgramName = getTitle(programList, ProgramID);\r\n\t\t\tconst CurriculumName = getTitle(curriculumList, CurriculumID);\r\n\t\t\tconst CourseNameFinal = CourseName\r\n\t\t\t\t? CourseName\r\n\t\t\t\t: `[${BranchName}][${ProgramName}][${CurriculumName}] - ${moment(StartDay).format('DD/MM/YYYY')}`;\r\n\r\n\t\t\tconst fmValues: ISCPost = {\r\n\t\t\t\t...object,\r\n\t\t\t\tPrice: parseInt(Price.replace(/\\D/g, '')),\r\n\t\t\t\tSalaryOfLesson: parseInt(SalaryOfLesson.replace(/\\D/g, '')),\r\n\t\t\t\tStartDay: startDayFm,\r\n\t\t\t\tEndDay: endDayFm,\r\n\t\t\t\tCourseName: CourseNameFinal\r\n\t\t\t};\r\n\t\t\tconst res = await createSelfCourse(fmValues);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\trouter.push(`/course/course-list/edit-self-course/${res.data.data.ID}/`);\r\n\t\t\t\tshowNoti('success', 'Tạo khóa học thành công. Hãy sắp xếp lịch học');\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('error', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"create-course\">\r\n\t\t\t<TitlePage title=\"Tạo khóa học 1 với 1\" />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-8 col-12\">\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\ttitle=\"Sắp xếp lịch học\"\r\n\t\t\t\t\t\textra={\r\n\t\t\t\t\t\t\t<div className=\"btn-page-course d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t<SetTimeSelfCourseForm isLoading={isLoading} rangeTimeObj={rangeTime} handleSetRangeTime={onSetRangeTime} />\r\n\t\t\t\t\t\t\t\t<CreateSelfCourseForm\r\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\tisUpdate={false}\r\n\t\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\t\toptionListForForm={optionListForForm}\r\n\t\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\t\thandleGetCourse={onCreateCourse}\r\n\t\t\t\t\t\t\t\t\thandleFetchProgramByGrade={fetchProgramByGrade}\r\n\t\t\t\t\t\t\t\t\thandleFetchCurriculumByProgram={fetchCurriculumByProgram}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CreateSelfCourseCalendar eventList={[]} isLoaded={true} />\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-4 col-12\">\r\n\t\t\t\t\t<Schedule />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CreateSelfCourse;\r\n"]},"metadata":{},"sourceType":"module"}
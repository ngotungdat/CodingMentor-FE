{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Teacher\\\\Teacher\\\\Teacher.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Tooltip } from 'antd';\nimport moment from 'moment';\nimport Link from 'next/link';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Eye } from 'react-feather';\nimport { areaApi, branchApi, districtApi, staffSalaryApi, teacherApi, userInformationApi, wardApi } from '~/apiBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nimport { fmSelectArr } from '~/utils/functions';\nimport StaffSalaryForm from '../../Option/StaffSalaryForm';\nimport SalaryTeacherNested from './SalaryTeacherNested';\nimport TeacherFilterForm from './TeacherFilterForm';\nimport TeacherForm from './TeacherForm';\n\nconst Teacher = () => {\n  var _dataStaff$;\n\n  const {\n    0: teacherList,\n    1: setTeacherList\n  } = useState([]);\n  const {\n    0: optionAreaSystemList,\n    1: setOptionAreaSystemList\n  } = useState({\n    areaList: [],\n    branchListTotal: [],\n    districtList: [],\n    wardList: []\n  });\n  const {\n    0: branchList,\n    1: setBranchList\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    showNoti,\n    pageSize,\n    userInformation\n  } = useWrap();\n  const {\n    0: activeColumnSearch,\n    1: setActiveColumnSearch\n  } = useState(''); // FILTER\n\n  const listFieldInit = {\n    pageIndex: 1,\n    pageSize: pageSize,\n    sort: 1,\n    sortType: false,\n    AreaID: '',\n    FullNameUnicode: '',\n    fromDate: '',\n    toDate: '',\n    StatusID: null\n  };\n  let refValue = useRef({\n    pageIndex: 1,\n    pageSize: 10,\n    sort: 1,\n    sortType: false\n  });\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(listFieldInit); // ADD SALARY TO NEW TEACHER\n\n  const {\n    0: isClearForm,\n    1: setIsClearForm\n  } = useState(false);\n  const {\n    0: openSalaryForm,\n    1: setOpenSalaryForm\n  } = useState(false);\n  const {\n    0: dataStaff,\n    1: setDataStaff\n  } = useState([]);\n  const optionGenderList = [{\n    title: 'Nữ',\n    value: 0\n  }, {\n    title: 'Nam',\n    value: 1\n  }, {\n    title: 'Khác',\n    value: 2\n  }];\n  const optionStatusList = [{\n    title: 'Hoạt động',\n    value: 0\n  }, {\n    title: 'Khóa',\n    value: 1\n  }]; // SORT OPTION\n\n  const sortOptionList = [{\n    dataSort: {\n      sort: 0,\n      sortType: true\n    },\n    value: 1,\n    text: 'Tên tăng dần'\n  }, {\n    dataSort: {\n      sort: 0,\n      sortType: false\n    },\n    value: 2,\n    text: 'Tên giảm dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: true\n    },\n    value: 3,\n    text: 'Ngày nhận việc tăng dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: false\n    },\n    value: 4,\n    text: 'Ngày nhận việc giảm dần'\n  }]; // FILTER\n\n  const onFilter = obj => {\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1,\n      fromDate: moment(obj.fromDate).format('YYYY/MM/DD'),\n      toDate: moment(obj.toDate).format('YYYY/MM/DD')\n    }));\n  }; // PAGINATION\n\n\n  const getPagination = (pageIndex, pageSize) => {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize,\n      pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  }; // SORT\n\n\n  const onSort = option => {\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), refValue.current));\n  }; // RESET SEARCH\n\n\n  const onResetSearch = () => {\n    setActiveColumnSearch('');\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), {}, {\n      pageSize: refValue.current.pageSize\n    }));\n  }; // ACTION SEARCH\n\n\n  const onSearch = (valueSearch, dataIndex) => {\n    setActiveColumnSearch(dataIndex);\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1,\n      [dataIndex]: valueSearch\n    }));\n  }; // GET AREA\n\n\n  const fetchAreaList = async () => {\n    try {\n      const res = await areaApi.getAll({\n        selectAll: true\n      });\n\n      if (res.status === 200 && res.data.totalRow && res.data.data.length) {\n        const newAreaList = fmSelectArr(res.data.data, 'AreaName', 'AreaID');\n        setOptionAreaSystemList(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n          areaList: newAreaList\n        }));\n      }\n    } catch (error) {// showNoti('danger', error.message);\n    }\n  }; // BRANCH BY AREA\n\n\n  const fetchBranchList = async () => {\n    try {\n      let res = await branchApi.getAll({\n        pageSize: 9999\n      });\n\n      if (res.status === 200 && res.data.totalRow && res.data.data.length) {\n        const newBranchList = fmSelectArr(res.data.data, 'BranchName', 'ID');\n        setOptionAreaSystemList(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n          branchListTotal: newBranchList\n        }));\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchAreaList();\n    fetchBranchList();\n  }, []); // DISTRICT BY AREA\n\n  const fetchDistrictByAreaID = async id => {\n    try {\n      const res = await districtApi.getAll({\n        AreaID: id\n      });\n\n      if (res.status === 200 && res.data.totalRow && res.data.data.length) {\n        const newDistrictList = fmSelectArr(res.data.data, 'DistrictName', 'ID');\n        setOptionAreaSystemList(_objectSpread(_objectSpread({}, optionAreaSystemList), {}, {\n          districtList: newDistrictList,\n          wardList: []\n        }));\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    }\n  }; // WARD BY DISTRICT\n\n\n  const fetchWardByDistrictID = async id => {\n    setIsLoading({\n      type: 'FETCH_WARD_BY_DISTRICT',\n      status: true\n    });\n\n    try {\n      const res = await wardApi.getAll({\n        DistrictID: id\n      });\n\n      if (res.status === 200 && res.data.totalRow && res.data.data.length) {\n        const newWardList = fmSelectArr(res.data.data, 'WardName', 'ID');\n        setOptionAreaSystemList(_objectSpread(_objectSpread({}, optionAreaSystemList), {}, {\n          wardList: newWardList\n        }));\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'FETCH_WARD_BY_DISTRICT',\n        status: false\n      });\n    }\n  }; // BRANCH BY AREA\n\n\n  const fetchBranchByAreaId = async id => {\n    setIsLoading({\n      type: 'FETCH_DATA_BY_AREA',\n      status: true\n    });\n\n    try {\n      let res = await branchApi.getAll({\n        areaID: id,\n        Enable: true\n      });\n\n      if (res.status === 200 && res.data.totalRow) {\n        const newBranchList = res.data.data.map(item => ({\n          title: item.BranchName,\n          value: item.ID\n        }));\n        setBranchList(newBranchList);\n      }\n\n      if (res.status === 204) {\n        setBranchList([]);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'FETCH_DATA_BY_AREA',\n        status: false\n      });\n    }\n  }; // GET DATA IN FIRST TIME\n\n\n  const fetchTeacherList = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await teacherApi.getAll(filters);\n\n      if (res.status === 200) {\n        if (res.data.totalRow && res.data.data.length) {\n          setTeacherList(res.data.data);\n          setTotalPage(res.data.totalRow);\n        }\n      } else if (res.status === 204) {\n        setTeacherList([]);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchTeacherList();\n  }, [filters]);\n\n  const onCloseSalaryForm = () => {\n    setIsClearForm(true);\n    setOpenSalaryForm(false);\n    setDataStaff([]);\n  };\n\n  const getInfoTeacherToAddSalary = async userID => {\n    try {\n      const res = await userInformationApi.getByID(userID);\n      res.status === 200 && setDataStaff([res.data.data]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    }\n  };\n\n  const saveSalary = async obj => {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res;\n\n    try {\n      res = await staffSalaryApi.add(obj);\n\n      if (res.status === 200) {\n        onCloseSalaryForm();\n        showNoti('success', res.data.message);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n    }\n\n    return res;\n  }; // CREATE\n\n\n  const onCreateTeacher = async data => {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res;\n\n    try {\n      const newTeacher = _objectSpread({}, data);\n\n      res = await teacherApi.add(newTeacher);\n\n      if (res.status === 200) {\n        showNoti('success', res.data.message);\n        onResetSearch(); // <== khi tạo xong r reset search để trở về trang đầu tiên\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n    }\n\n    return res;\n  }; // UPDATE\n\n\n  const onUpdateTeacher = async (newObj, idx) => {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res;\n\n    try {\n      const newTeacherAPI = _objectSpread(_objectSpread({}, newObj), {}, {\n        Branch: newObj.Branch.join(',')\n      });\n\n      res = await teacherApi.update(newTeacherAPI);\n\n      if (res.status === 200) {\n        const newTeacherList = [...teacherList];\n        const newBranch = optionAreaSystemList.branchListTotal.filter(ob => newObj.Branch.some(nb => nb === ob.value)).map(b => ({\n          ID: b.value,\n          BranchName: b.title\n        }));\n        newTeacherList.splice(idx, 1, _objectSpread(_objectSpread({}, newObj), {}, {\n          Branch: newBranch\n        }));\n        setTeacherList(newTeacherList);\n        showNoti('success', res.data.message);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n      return res;\n    }\n  };\n\n  const _onSubmitPromoteTeacher = async data => {\n    setIsLoading({\n      type: 'PROMOTE',\n      status: true\n    });\n\n    try {\n      let res = await teacherApi.updateRole({\n        RoleID: 5,\n        UserInformationID: data\n      });\n\n      if (res.status == 200) {\n        setFilters(_objectSpread({}, filters));\n        showNoti('success', 'Thăng cấp thành công!');\n        return true;\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'PROMOTE',\n        status: false\n      });\n    }\n  };\n\n  const columns = [{\n    title: 'Mã giáo viên',\n    dataIndex: 'UserCode',\n    fixed: 'left',\n    render: code => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 22\n    }, this)\n  }, _objectSpread(_objectSpread({\n    title: 'Họ và tên',\n    dataIndex: 'FullNameUnicode'\n  }, FilterColumn('FullNameUnicode', onSearch, onResetSearch, 'text')), {}, {\n    className: activeColumnSearch === 'FullNameUnicode' ? 'active-column-search' : '',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 22\n    }, this),\n    fixed: 'left'\n  }), _objectSpread(_objectSpread({\n    title: 'Tỉnh/TP',\n    dataIndex: 'AreaName'\n  }, FilterColumn('AreaID', onSearch, onResetSearch, 'select', optionAreaSystemList.areaList)), {}, {\n    className: activeColumnSearch === 'AreaID' ? 'active-column-search' : ''\n  }), {\n    width: 120,\n    title: 'Giới tính',\n    dataIndex: 'Gender',\n    render: genderID => optionGenderList.find(o => o.value === genderID).title\n  }, {\n    title: 'SĐT',\n    width: 120,\n    dataIndex: 'Mobile',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Email',\n    width: 180,\n    dataIndex: 'Email',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Ngày nhận việc',\n    width: 150,\n    dataIndex: 'Jobdate',\n    render: date => date && moment(date).format('DD/MM/YYYY')\n  }, {\n    title: 'Facebook',\n    width: 150,\n    dataIndex: 'LinkFaceBook',\n    render: link => link && /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"font-weight-black\",\n      href: link,\n      target: \"_blank\",\n      children: \"Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 6\n    }, this)\n  }, _objectSpread(_objectSpread({\n    title: 'Trạng thái',\n    width: 150,\n    dataIndex: 'StatusID',\n    align: 'center'\n  }, FilterColumn('StatusID', onSearch, onResetSearch, 'select', optionStatusList)), {}, {\n    render: status => status ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tag gray\",\n      children: \"Kh\\xF3a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tag green\",\n      children: \"Ho\\u1EA1t \\u0111\\u1ED9ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 75\n    }, this)\n  }), {\n    width: 140,\n    align: 'center',\n    render: (value, _, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: {\n          pathname: '/staff/teacher-list/teacher-detail/[slug]',\n          query: {\n            slug: _.UserInformationID\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Chi ti\\u1EBFt gi\\u1EA3ng d\\u1EA1y\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"btn btn-icon\",\n            children: /*#__PURE__*/_jsxDEV(Eye, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(TeacherForm, {\n        isLoading: isLoading,\n        isUpdate: true,\n        updateObj: value,\n        indexUpdateObj: idx,\n        handleUpdateTeacher: onUpdateTeacher,\n        optionStatusList: optionStatusList,\n        optionGenderList: optionGenderList,\n        optionAreaSystemList: optionAreaSystemList,\n        handleFetchDistrict: fetchDistrictByAreaID,\n        handleFetchWard: fetchWardByDistrictID,\n        optionBranchList: optionAreaSystemList.branchListTotal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 5\n    }, this)\n  }];\n\n  const expandedRowRender = item => {\n    return /*#__PURE__*/_jsxDEV(SalaryTeacherNested, {\n      teacherID: item.UserInformationID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 10\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StaffSalaryForm, {\n      showInTeacherView: true,\n      isLoading: isLoading,\n      isOpenModalFromOutSide: openSalaryForm,\n      openModalFromOutSide: onCloseSalaryForm,\n      dataStaff: dataStaff,\n      dataIDStaff: (_dataStaff$ = dataStaff[0]) === null || _dataStaff$ === void 0 ? void 0 : _dataStaff$.UserInformationID,\n      _onSubmit: data => saveSalary(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PowerTable, {\n      currentPage: filters.pageIndex,\n      totalPage: totalPage,\n      getPagination: getPagination,\n      loading: isLoading,\n      addClass: \"basic-header\",\n      columns: columns,\n      dataSource: teacherList,\n      TitlePage: \"Danh s\\xE1ch gi\\xE1o vi\\xEAn\",\n      TitleCard: /*#__PURE__*/_jsxDEV(TeacherForm, {\n        isClearForm: isClearForm,\n        isLoading: isLoading,\n        optionAreaSystemList: optionAreaSystemList,\n        optionBranchList: branchList,\n        handleCreateTeacher: onCreateTeacher,\n        handleFetchBranch: fetchBranchByAreaId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 6\n      }, this),\n      Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: [/*#__PURE__*/_jsxDEV(TeacherFilterForm, {\n          handleFilter: onFilter,\n          handleResetFilter: onResetSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(SortBox, {\n          handleSort: onSort,\n          dataOption: sortOptionList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 6\n      }, this),\n      expandable: {\n        expandedRowRender\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Teacher;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Teacher/Teacher/Teacher.tsx"],"names":["Tooltip","moment","Link","React","useEffect","useRef","useState","Eye","areaApi","branchApi","districtApi","staffSalaryApi","teacherApi","userInformationApi","wardApi","SortBox","PowerTable","FilterColumn","useWrap","fmSelectArr","StaffSalaryForm","SalaryTeacherNested","TeacherFilterForm","TeacherForm","Teacher","teacherList","setTeacherList","optionAreaSystemList","setOptionAreaSystemList","areaList","branchListTotal","districtList","wardList","branchList","setBranchList","isLoading","setIsLoading","type","status","totalPage","setTotalPage","showNoti","pageSize","userInformation","activeColumnSearch","setActiveColumnSearch","listFieldInit","pageIndex","sort","sortType","AreaID","FullNameUnicode","fromDate","toDate","StatusID","refValue","filters","setFilters","isClearForm","setIsClearForm","openSalaryForm","setOpenSalaryForm","dataStaff","setDataStaff","optionGenderList","title","value","optionStatusList","sortOptionList","dataSort","text","onFilter","obj","current","format","getPagination","onSort","option","onResetSearch","onSearch","valueSearch","dataIndex","fetchAreaList","res","getAll","selectAll","data","totalRow","length","newAreaList","prevState","error","fetchBranchList","newBranchList","message","fetchDistrictByAreaID","id","newDistrictList","fetchWardByDistrictID","DistrictID","newWardList","fetchBranchByAreaId","areaID","Enable","map","item","BranchName","ID","fetchTeacherList","onCloseSalaryForm","getInfoTeacherToAddSalary","userID","getByID","saveSalary","add","onCreateTeacher","newTeacher","onUpdateTeacher","newObj","idx","newTeacherAPI","Branch","join","update","newTeacherList","newBranch","filter","ob","some","nb","b","splice","_onSubmitPromoteTeacher","updateRole","RoleID","UserInformationID","columns","fixed","render","code","className","width","genderID","find","o","date","link","align","_","e","stopPropagation","pathname","query","slug","expandedRowRender"],"mappings":";;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,WAA7B,EAA0CC,cAA1C,EAA0DC,UAA1D,EAAsEC,kBAAtE,EAA0FC,OAA1F,QAAyG,WAAzG;AACA,OAAOC,OAAP,MAAoB,+BAApB;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCpB,QAAQ,CAAa,EAAb,CAA9C;AACA,QAAM;AAAA,OAACqB,oBAAD;AAAA,OAAuBC;AAAvB,MAAkDtB,QAAQ,CAK7D;AACFuB,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,eAAe,EAAE,EAFf;AAGFC,IAAAA,YAAY,EAAE,EAHZ;AAIFC,IAAAA,QAAQ,EAAE;AAJR,GAL6D,CAAhE;AAWA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8B5B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAAC6B,SAAD;AAAA,OAAYC;AAAZ,MAA4B9B,QAAQ,CAAC;AAC1C+B,IAAAA,IAAI,EAAE,EADoC;AAE1CC,IAAAA,MAAM,EAAE;AAFkC,GAAD,CAA1C;AAIA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BlC,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAEmC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAA0CzB,OAAO,EAAvD;AACA,QAAM;AAAA,OAAC0B,kBAAD;AAAA,OAAqBC;AAArB,MAA8CvC,QAAQ,CAAC,EAAD,CAA5D,CApBqB,CAqBrB;;AACA,QAAMwC,aAAa,GAAG;AACrBC,IAAAA,SAAS,EAAE,CADU;AAErBL,IAAAA,QAAQ,EAAEA,QAFW;AAGrBM,IAAAA,IAAI,EAAE,CAHe;AAIrBC,IAAAA,QAAQ,EAAE,KAJW;AAKrBC,IAAAA,MAAM,EAAE,EALa;AAMrBC,IAAAA,eAAe,EAAE,EANI;AAOrBC,IAAAA,QAAQ,EAAE,EAPW;AAQrBC,IAAAA,MAAM,EAAE,EARa;AASrBC,IAAAA,QAAQ,EAAE;AATW,GAAtB;AAWA,MAAIC,QAAQ,GAAGlD,MAAM,CAAC;AACrB0C,IAAAA,SAAS,EAAE,CADU;AAErBL,IAAAA,QAAQ,EAAE,EAFW;AAGrBM,IAAAA,IAAI,EAAE,CAHe;AAIrBC,IAAAA,QAAQ,EAAE;AAJW,GAAD,CAArB;AAMA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBnD,QAAQ,CAACwC,aAAD,CAAtC,CAvCqB,CAwCrB;;AACA,QAAM;AAAA,OAACY,WAAD;AAAA,OAAcC;AAAd,MAAgCrD,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACsD,cAAD;AAAA,OAAiBC;AAAjB,MAAsCvD,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAA,OAACwD,SAAD;AAAA,OAAYC;AAAZ,MAA4BzD,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM0D,gBAAgB,GAAG,CACxB;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GADwB,EAExB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAFwB,EAGxB;AAAED,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAHwB,CAAzB;AAKA,QAAMC,gBAAgB,GAAG,CACxB;AAAEF,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GADwB,EAExB;AAAED,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAFwB,CAAzB,CAjDqB,CAqDrB;;AACA,QAAME,cAAc,GAAG,CACtB;AACCC,IAAAA,QAAQ,EAAE;AACTrB,MAAAA,IAAI,EAAE,CADG;AAETC,MAAAA,QAAQ,EAAE;AAFD,KADX;AAKCiB,IAAAA,KAAK,EAAE,CALR;AAMCI,IAAAA,IAAI,EAAE;AANP,GADsB,EAStB;AACCD,IAAAA,QAAQ,EAAE;AACTrB,MAAAA,IAAI,EAAE,CADG;AAETC,MAAAA,QAAQ,EAAE;AAFD,KADX;AAKCiB,IAAAA,KAAK,EAAE,CALR;AAMCI,IAAAA,IAAI,EAAE;AANP,GATsB,EAiBtB;AACCD,IAAAA,QAAQ,EAAE;AACTrB,MAAAA,IAAI,EAAE,CADG;AAETC,MAAAA,QAAQ,EAAE;AAFD,KADX;AAKCiB,IAAAA,KAAK,EAAE,CALR;AAMCI,IAAAA,IAAI,EAAE;AANP,GAjBsB,EAyBtB;AACCD,IAAAA,QAAQ,EAAE;AACTrB,MAAAA,IAAI,EAAE,CADG;AAETC,MAAAA,QAAQ,EAAE;AAFD,KADX;AAKCiB,IAAAA,KAAK,EAAE,CALR;AAMCI,IAAAA,IAAI,EAAE;AANP,GAzBsB,CAAvB,CAtDqB,CAwFrB;;AACA,QAAMC,QAAQ,GAAIC,GAAD,IAAS;AACzBf,IAAAA,UAAU,+CACNX,aADM,GAENS,QAAQ,CAACkB,OAFH;AAGT1B,MAAAA,SAAS,EAAE,CAHF;AAITK,MAAAA,QAAQ,EAAEnD,MAAM,CAACuE,GAAG,CAACpB,QAAL,CAAN,CAAqBsB,MAArB,CAA4B,YAA5B,CAJD;AAKTrB,MAAAA,MAAM,EAAEpD,MAAM,CAACuE,GAAG,CAACnB,MAAL,CAAN,CAAmBqB,MAAnB,CAA0B,YAA1B;AALC,OAAV;AAOA,GARD,CAzFqB,CAkGrB;;;AACA,QAAMC,aAAa,GAAG,CAAC5B,SAAD,EAAoBL,QAApB,KAAyC;AAC9D,QAAI,CAACA,QAAL,EAAeA,QAAQ,GAAG,EAAX;AACfa,IAAAA,QAAQ,CAACkB,OAAT,mCACIlB,QAAQ,CAACkB,OADb;AAEC/B,MAAAA,QAFD;AAGCK,MAAAA;AAHD;AAKAU,IAAAA,UAAU,iCACND,OADM,GAEND,QAAQ,CAACkB,OAFH,EAAV;AAIA,GAXD,CAnGqB,CA+GrB;;;AACA,QAAMG,MAAM,GAAIC,MAAD,IAAY;AAC1BtB,IAAAA,QAAQ,CAACkB,OAAT,mCACIlB,QAAQ,CAACkB,OADb;AAECzB,MAAAA,IAAI,EAAE6B,MAAM,CAACZ,KAAP,CAAajB,IAFpB;AAGCC,MAAAA,QAAQ,EAAE4B,MAAM,CAACZ,KAAP,CAAahB;AAHxB;AAKAQ,IAAAA,UAAU,iCACNX,aADM,GAENS,QAAQ,CAACkB,OAFH,EAAV;AAIA,GAVD,CAhHqB,CA2HrB;;;AACA,QAAMK,aAAa,GAAG,MAAM;AAC3BjC,IAAAA,qBAAqB,CAAC,EAAD,CAArB;AACAY,IAAAA,UAAU,iCACNX,aADM;AAETJ,MAAAA,QAAQ,EAAEa,QAAQ,CAACkB,OAAT,CAAiB/B;AAFlB,OAAV;AAIA,GAND,CA5HqB,CAmIrB;;;AACA,QAAMqC,QAAQ,GAAG,CAACC,WAAD,EAAcC,SAAd,KAA4B;AAC5CpC,IAAAA,qBAAqB,CAACoC,SAAD,CAArB;AACAxB,IAAAA,UAAU,+CACNX,aADM,GAENS,QAAQ,CAACkB,OAFH;AAGT1B,MAAAA,SAAS,EAAE,CAHF;AAIT,OAACkC,SAAD,GAAaD;AAJJ,OAAV;AAMA,GARD,CApIqB,CA6IrB;;;AACA,QAAME,aAAa,GAAG,YAAY;AACjC,QAAI;AACH,YAAMC,GAAG,GAAG,MAAM3E,OAAO,CAAC4E,MAAR,CAAe;AAChCC,QAAAA,SAAS,EAAE;AADqB,OAAf,CAAlB;;AAGA,UAAIF,GAAG,CAAC7C,MAAJ,KAAe,GAAf,IAAsB6C,GAAG,CAACG,IAAJ,CAASC,QAA/B,IAA2CJ,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcE,MAA7D,EAAqE;AACpE,cAAMC,WAAW,GAAGtE,WAAW,CAACgE,GAAG,CAACG,IAAJ,CAASA,IAAV,EAAgB,UAAhB,EAA4B,QAA5B,CAA/B;AACA1D,QAAAA,uBAAuB,CAAE8D,SAAD,oCACpBA,SADoB;AAEvB7D,UAAAA,QAAQ,EAAE4D;AAFa,UAAD,CAAvB;AAIA;AACD,KAXD,CAWE,OAAOE,KAAP,EAAc,CACf;AACA;AACD,GAfD,CA9IqB,CA8JrB;;;AACA,QAAMC,eAAe,GAAG,YAAY;AACnC,QAAI;AACH,UAAIT,GAAG,GAAG,MAAM1E,SAAS,CAAC2E,MAAV,CAAiB;AAChC1C,QAAAA,QAAQ,EAAE;AADsB,OAAjB,CAAhB;;AAGA,UAAIyC,GAAG,CAAC7C,MAAJ,KAAe,GAAf,IAAsB6C,GAAG,CAACG,IAAJ,CAASC,QAA/B,IAA2CJ,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcE,MAA7D,EAAqE;AACpE,cAAMK,aAAa,GAAG1E,WAAW,CAACgE,GAAG,CAACG,IAAJ,CAASA,IAAV,EAAgB,YAAhB,EAA8B,IAA9B,CAAjC;AACA1D,QAAAA,uBAAuB,CAAE8D,SAAD,oCACpBA,SADoB;AAEvB5D,UAAAA,eAAe,EAAE+D;AAFM,UAAD,CAAvB;AAIA;AACD,KAXD,CAWE,OAAOF,KAAP,EAAc;AACflD,MAAAA,QAAQ,CAAC,QAAD,EAAWkD,KAAK,CAACG,OAAjB,CAAR;AACA;AACD,GAfD;;AAgBA1F,EAAAA,SAAS,CAAC,MAAM;AACf8E,IAAAA,aAAa;AACbU,IAAAA,eAAe;AACf,GAHQ,EAGN,EAHM,CAAT,CA/KqB,CAmLrB;;AACA,QAAMG,qBAAqB,GAAG,MAAOC,EAAP,IAAsB;AACnD,QAAI;AACH,YAAMb,GAAG,GAAG,MAAMzE,WAAW,CAAC0E,MAAZ,CAAmB;AACpClC,QAAAA,MAAM,EAAE8C;AAD4B,OAAnB,CAAlB;;AAGA,UAAIb,GAAG,CAAC7C,MAAJ,KAAe,GAAf,IAAsB6C,GAAG,CAACG,IAAJ,CAASC,QAA/B,IAA2CJ,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcE,MAA7D,EAAqE;AACpE,cAAMS,eAAe,GAAG9E,WAAW,CAACgE,GAAG,CAACG,IAAJ,CAASA,IAAV,EAAgB,cAAhB,EAAgC,IAAhC,CAAnC;AACA1D,QAAAA,uBAAuB,iCACnBD,oBADmB;AAEtBI,UAAAA,YAAY,EAAEkE,eAFQ;AAGtBjE,UAAAA,QAAQ,EAAE;AAHY,WAAvB;AAKA;AACD,KAZD,CAYE,OAAO2D,KAAP,EAAc;AACflD,MAAAA,QAAQ,CAAC,QAAD,EAAWkD,KAAK,CAACG,OAAjB,CAAR;AACA;AACD,GAhBD,CApLqB,CAqMrB;;;AACA,QAAMI,qBAAqB,GAAG,MAAOF,EAAP,IAAsB;AACnD5D,IAAAA,YAAY,CAAC;AAAEC,MAAAA,IAAI,EAAE,wBAAR;AAAkCC,MAAAA,MAAM,EAAE;AAA1C,KAAD,CAAZ;;AACA,QAAI;AACH,YAAM6C,GAAG,GAAG,MAAMrE,OAAO,CAACsE,MAAR,CAAe;AAChCe,QAAAA,UAAU,EAAEH;AADoB,OAAf,CAAlB;;AAGA,UAAIb,GAAG,CAAC7C,MAAJ,KAAe,GAAf,IAAsB6C,GAAG,CAACG,IAAJ,CAASC,QAA/B,IAA2CJ,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcE,MAA7D,EAAqE;AACpE,cAAMY,WAAW,GAAGjF,WAAW,CAACgE,GAAG,CAACG,IAAJ,CAASA,IAAV,EAAgB,UAAhB,EAA4B,IAA5B,CAA/B;AACA1D,QAAAA,uBAAuB,iCACnBD,oBADmB;AAEtBK,UAAAA,QAAQ,EAAEoE;AAFY,WAAvB;AAIA;AACD,KAXD,CAWE,OAAOT,KAAP,EAAc;AACflD,MAAAA,QAAQ,CAAC,QAAD,EAAWkD,KAAK,CAACG,OAAjB,CAAR;AACA,KAbD,SAaU;AACT1D,MAAAA,YAAY,CAAC;AAAEC,QAAAA,IAAI,EAAE,wBAAR;AAAkCC,QAAAA,MAAM,EAAE;AAA1C,OAAD,CAAZ;AACA;AACD,GAlBD,CAtMqB,CAyNrB;;;AACA,QAAM+D,mBAAmB,GAAG,MAAOL,EAAP,IAAsB;AACjD5D,IAAAA,YAAY,CAAC;AAAEC,MAAAA,IAAI,EAAE,oBAAR;AAA8BC,MAAAA,MAAM,EAAE;AAAtC,KAAD,CAAZ;;AACA,QAAI;AACH,UAAI6C,GAAG,GAAG,MAAM1E,SAAS,CAAC2E,MAAV,CAAiB;AAChCkB,QAAAA,MAAM,EAAEN,EADwB;AAEhCO,QAAAA,MAAM,EAAE;AAFwB,OAAjB,CAAhB;;AAIA,UAAIpB,GAAG,CAAC7C,MAAJ,KAAe,GAAf,IAAsB6C,GAAG,CAACG,IAAJ,CAASC,QAAnC,EAA6C;AAC5C,cAAMM,aAAa,GAAGV,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAckB,GAAd,CAAmBC,IAAD,KAAW;AAClDxC,UAAAA,KAAK,EAAEwC,IAAI,CAACC,UADsC;AAElDxC,UAAAA,KAAK,EAAEuC,IAAI,CAACE;AAFsC,SAAX,CAAlB,CAAtB;AAKAzE,QAAAA,aAAa,CAAC2D,aAAD,CAAb;AACA;;AACD,UAAIV,GAAG,CAAC7C,MAAJ,KAAe,GAAnB,EAAwB;AACvBJ,QAAAA,aAAa,CAAC,EAAD,CAAb;AACA;AACD,KAhBD,CAgBE,OAAOyD,KAAP,EAAc;AACflD,MAAAA,QAAQ,CAAC,QAAD,EAAWkD,KAAK,CAACG,OAAjB,CAAR;AACA,KAlBD,SAkBU;AACT1D,MAAAA,YAAY,CAAC;AAAEC,QAAAA,IAAI,EAAE,oBAAR;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OAAD,CAAZ;AACA;AACD,GAvBD,CA1NqB,CAkPrB;;;AACA,QAAMsE,gBAAgB,GAAG,YAAY;AACpCxE,IAAAA,YAAY,CAAC;AACZC,MAAAA,IAAI,EAAE,SADM;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAD,CAAZ;;AAIA,QAAI;AACH,UAAI6C,GAAG,GAAG,MAAMvE,UAAU,CAACwE,MAAX,CAAkB5B,OAAlB,CAAhB;;AACA,UAAI2B,GAAG,CAAC7C,MAAJ,KAAe,GAAnB,EAAwB;AACvB,YAAI6C,GAAG,CAACG,IAAJ,CAASC,QAAT,IAAqBJ,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcE,MAAvC,EAA+C;AAC9C9D,UAAAA,cAAc,CAACyD,GAAG,CAACG,IAAJ,CAASA,IAAV,CAAd;AACA9C,UAAAA,YAAY,CAAC2C,GAAG,CAACG,IAAJ,CAASC,QAAV,CAAZ;AACA;AACD,OALD,MAKO,IAAIJ,GAAG,CAAC7C,MAAJ,KAAe,GAAnB,EAAwB;AAC9BZ,QAAAA,cAAc,CAAC,EAAD,CAAd;AACA;AACD,KAVD,CAUE,OAAOiE,KAAP,EAAc;AACflD,MAAAA,QAAQ,CAAC,QAAD,EAAWkD,KAAK,CAACG,OAAjB,CAAR;AACA,KAZD,SAYU;AACT1D,MAAAA,YAAY,CAAC;AACZC,QAAAA,IAAI,EAAE,SADM;AAEZC,QAAAA,MAAM,EAAE;AAFI,OAAD,CAAZ;AAIA;AACD,GAvBD;;AAwBAlC,EAAAA,SAAS,CAAC,MAAM;AACfwG,IAAAA,gBAAgB;AAChB,GAFQ,EAEN,CAACpD,OAAD,CAFM,CAAT;;AAIA,QAAMqD,iBAAiB,GAAG,MAAM;AAC/BlD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACA,GAJD;;AAKA,QAAM+C,yBAAyB,GAAG,MAAOC,MAAP,IAAkB;AACnD,QAAI;AACH,YAAM5B,GAAG,GAAG,MAAMtE,kBAAkB,CAACmG,OAAnB,CAA2BD,MAA3B,CAAlB;AACA5B,MAAAA,GAAG,CAAC7C,MAAJ,KAAe,GAAf,IAAsByB,YAAY,CAAC,CAACoB,GAAG,CAACG,IAAJ,CAASA,IAAV,CAAD,CAAlC;AACA,KAHD,CAGE,OAAOK,KAAP,EAAc;AACflD,MAAAA,QAAQ,CAAC,QAAD,EAAWkD,KAAK,CAACG,OAAjB,CAAR;AACA;AACD,GAPD;;AASA,QAAMmB,UAAU,GAAG,MAAOzC,GAAP,IAAe;AACjCpC,IAAAA,YAAY,CAAC;AACZC,MAAAA,IAAI,EAAE,UADM;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAD,CAAZ;AAIA,QAAI6C,GAAJ;;AACA,QAAI;AACHA,MAAAA,GAAG,GAAG,MAAMxE,cAAc,CAACuG,GAAf,CAAmB1C,GAAnB,CAAZ;;AACA,UAAIW,GAAG,CAAC7C,MAAJ,KAAe,GAAnB,EAAwB;AACvBuE,QAAAA,iBAAiB;AACjBpE,QAAAA,QAAQ,CAAC,SAAD,EAAY0C,GAAG,CAACG,IAAJ,CAASQ,OAArB,CAAR;AACA;AACD,KAND,CAME,OAAOH,KAAP,EAAc;AACflD,MAAAA,QAAQ,CAAC,QAAD,EAAWkD,KAAK,CAACG,OAAjB,CAAR;AACA,KARD,SAQU;AACT1D,MAAAA,YAAY,CAAC;AACZC,QAAAA,IAAI,EAAE,UADM;AAEZC,QAAAA,MAAM,EAAE;AAFI,OAAD,CAAZ;AAIA;;AACD,WAAO6C,GAAP;AACA,GArBD,CA7RqB,CAoTrB;;;AACA,QAAMgC,eAAe,GAAG,MAAO7B,IAAP,IAAqB;AAC5ClD,IAAAA,YAAY,CAAC;AAAEC,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,MAAM,EAAE;AAA5B,KAAD,CAAZ;AACA,QAAI6C,GAAJ;;AACA,QAAI;AACH,YAAMiC,UAAU,qBAAQ9B,IAAR,CAAhB;;AACAH,MAAAA,GAAG,GAAG,MAAMvE,UAAU,CAACsG,GAAX,CAAeE,UAAf,CAAZ;;AACA,UAAIjC,GAAG,CAAC7C,MAAJ,KAAe,GAAnB,EAAwB;AACvBG,QAAAA,QAAQ,CAAC,SAAD,EAAY0C,GAAG,CAACG,IAAJ,CAASQ,OAArB,CAAR;AACAhB,QAAAA,aAAa,GAFU,CAEP;AAChB;AACD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACflD,MAAAA,QAAQ,CAAC,QAAD,EAAWkD,KAAK,CAACG,OAAjB,CAAR;AACA,KATD,SASU;AACT1D,MAAAA,YAAY,CAAC;AAAEC,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,MAAM,EAAE;AAA5B,OAAD,CAAZ;AACA;;AACD,WAAO6C,GAAP;AACA,GAhBD,CArTqB,CAuUrB;;;AACA,QAAMkC,eAAe,GAAG,OAAOC,MAAP,EAAoBC,GAApB,KAAoC;AAC3DnF,IAAAA,YAAY,CAAC;AACZC,MAAAA,IAAI,EAAE,UADM;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAD,CAAZ;AAIA,QAAI6C,GAAJ;;AACA,QAAI;AACH,YAAMqC,aAAa,mCACfF,MADe;AAElBG,QAAAA,MAAM,EAAEH,MAAM,CAACG,MAAP,CAAcC,IAAd,CAAmB,GAAnB;AAFU,QAAnB;;AAIAvC,MAAAA,GAAG,GAAG,MAAMvE,UAAU,CAAC+G,MAAX,CAAkBH,aAAlB,CAAZ;;AACA,UAAIrC,GAAG,CAAC7C,MAAJ,KAAe,GAAnB,EAAwB;AACvB,cAAMsF,cAAc,GAAG,CAAC,GAAGnG,WAAJ,CAAvB;AACA,cAAMoG,SAAS,GAAGlG,oBAAoB,CAACG,eAArB,CAChBgG,MADgB,CACRC,EAAD,IAAQT,MAAM,CAACG,MAAP,CAAcO,IAAd,CAAoBC,EAAD,IAAQA,EAAE,KAAKF,EAAE,CAAC7D,KAArC,CADC,EAEhBsC,GAFgB,CAEX0B,CAAD,KAAQ;AACZvB,UAAAA,EAAE,EAAEuB,CAAC,CAAChE,KADM;AAEZwC,UAAAA,UAAU,EAAEwB,CAAC,CAACjE;AAFF,SAAR,CAFY,CAAlB;AAMA2D,QAAAA,cAAc,CAACO,MAAf,CAAsBZ,GAAtB,EAA2B,CAA3B,kCACID,MADJ;AAECG,UAAAA,MAAM,EAAEI;AAFT;AAIAnG,QAAAA,cAAc,CAACkG,cAAD,CAAd;AACAnF,QAAAA,QAAQ,CAAC,SAAD,EAAY0C,GAAG,CAACG,IAAJ,CAASQ,OAArB,CAAR;AACA;AACD,KArBD,CAqBE,OAAOH,KAAP,EAAc;AACflD,MAAAA,QAAQ,CAAC,QAAD,EAAWkD,KAAK,CAACG,OAAjB,CAAR;AACA,KAvBD,SAuBU;AACT1D,MAAAA,YAAY,CAAC;AACZC,QAAAA,IAAI,EAAE,UADM;AAEZC,QAAAA,MAAM,EAAE;AAFI,OAAD,CAAZ;AAIA,aAAO6C,GAAP;AACA;AACD,GApCD;;AAsCA,QAAMiD,uBAAuB,GAAG,MAAO9C,IAAP,IAAgB;AAC/ClD,IAAAA,YAAY,CAAC;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KAAD,CAAZ;;AACA,QAAI;AACH,UAAI6C,GAAG,GAAG,MAAMvE,UAAU,CAACyH,UAAX,CAAsB;AAAEC,QAAAA,MAAM,EAAE,CAAV;AAAaC,QAAAA,iBAAiB,EAAEjD;AAAhC,OAAtB,CAAhB;;AACA,UAAIH,GAAG,CAAC7C,MAAJ,IAAc,GAAlB,EAAuB;AACtBmB,QAAAA,UAAU,mBAAMD,OAAN,EAAV;AACAf,QAAAA,QAAQ,CAAC,SAAD,EAAY,uBAAZ,CAAR;AACA,eAAO,IAAP;AACA;AACD,KAPD,CAOE,OAAOkD,KAAP,EAAc;AACflD,MAAAA,QAAQ,CAAC,QAAD,EAAWkD,KAAK,CAACG,OAAjB,CAAR;AACA,KATD,SASU;AACT1D,MAAAA,YAAY,CAAC;AAAEC,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,MAAM,EAAE;AAA3B,OAAD,CAAZ;AACA;AACD,GAdD;;AAeA,QAAMkG,OAAO,GAAG,CACf;AACCvE,IAAAA,KAAK,EAAE,cADR;AAECgB,IAAAA,SAAS,EAAE,UAFZ;AAGCwD,IAAAA,KAAK,EAAE,MAHR;AAICC,IAAAA,MAAM,EAAGC,IAAD,iBAAU;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA,gBAAkCA;AAAlC;AAAA;AAAA;AAAA;AAAA;AAJnB,GADe;AAQd1E,IAAAA,KAAK,EAAE,WARO;AASdgB,IAAAA,SAAS,EAAE;AATG,KAUXhE,YAAY,CAAC,iBAAD,EAAoB8D,QAApB,EAA8BD,aAA9B,EAA6C,MAA7C,CAVD;AAWd8D,IAAAA,SAAS,EAAEhG,kBAAkB,KAAK,iBAAvB,GAA2C,sBAA3C,GAAoE,EAXjE;AAYd8F,IAAAA,MAAM,EAAGpE,IAAD,iBAAU;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA,gBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,YAZJ;AAadmE,IAAAA,KAAK,EAAE;AAbO;AAgBdxE,IAAAA,KAAK,EAAE,SAhBO;AAiBdgB,IAAAA,SAAS,EAAE;AAjBG,KAkBXhE,YAAY,CAAC,QAAD,EAAW8D,QAAX,EAAqBD,aAArB,EAAoC,QAApC,EAA8CnD,oBAAoB,CAACE,QAAnE,CAlBD;AAmBd+G,IAAAA,SAAS,EAAEhG,kBAAkB,KAAK,QAAvB,GAAkC,sBAAlC,GAA2D;AAnBxD,MAqBf;AACCiG,IAAAA,KAAK,EAAE,GADR;AAEC5E,IAAAA,KAAK,EAAE,WAFR;AAGCgB,IAAAA,SAAS,EAAE,QAHZ;AAICyD,IAAAA,MAAM,EAAGI,QAAD,IAAc9E,gBAAgB,CAAC+E,IAAjB,CAAuBC,CAAD,IAAOA,CAAC,CAAC9E,KAAF,KAAY4E,QAAzC,EAAmD7E;AAJ1E,GArBe,EA2Bf;AACCA,IAAAA,KAAK,EAAE,KADR;AAEC4E,IAAAA,KAAK,EAAE,GAFR;AAGC5D,IAAAA,SAAS,EAAE,QAHZ;AAICyD,IAAAA,MAAM,EAAGpE,IAAD,iBAAU;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA,gBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA;AAJnB,GA3Be,EAiCf;AACCL,IAAAA,KAAK,EAAE,OADR;AAEC4E,IAAAA,KAAK,EAAE,GAFR;AAGC5D,IAAAA,SAAS,EAAE,OAHZ;AAICyD,IAAAA,MAAM,EAAGpE,IAAD,iBAAU;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA,gBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA;AAJnB,GAjCe,EAuCf;AACCL,IAAAA,KAAK,EAAE,gBADR;AAEC4E,IAAAA,KAAK,EAAE,GAFR;AAGC5D,IAAAA,SAAS,EAAE,SAHZ;AAICyD,IAAAA,MAAM,EAAGO,IAAD,IAAUA,IAAI,IAAIhJ,MAAM,CAACgJ,IAAD,CAAN,CAAavE,MAAb,CAAoB,YAApB;AAJ3B,GAvCe,EA6Cf;AACCT,IAAAA,KAAK,EAAE,UADR;AAEC4E,IAAAA,KAAK,EAAE,GAFR;AAGC5D,IAAAA,SAAS,EAAE,cAHZ;AAICyD,IAAAA,MAAM,EAAGQ,IAAD,IACPA,IAAI,iBACH;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAiC,MAAA,IAAI,EAAEA,IAAvC;AAA6C,MAAA,MAAM,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANH,GA7Ce;AAyDdjF,IAAAA,KAAK,EAAE,YAzDO;AA0Dd4E,IAAAA,KAAK,EAAE,GA1DO;AA2Dd5D,IAAAA,SAAS,EAAE,UA3DG;AA4DdkE,IAAAA,KAAK,EAAE;AA5DO,KA6DXlI,YAAY,CAAC,UAAD,EAAa8D,QAAb,EAAuBD,aAAvB,EAAsC,QAAtC,EAAgDX,gBAAhD,CA7DD;AA8DduE,IAAAA,MAAM,EAAGpG,MAAD,IAAaA,MAAM,gBAAG;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA4C;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9DzD,MAiEf;AACCuG,IAAAA,KAAK,EAAE,GADR;AAECM,IAAAA,KAAK,EAAE,QAFR;AAGCT,IAAAA,MAAM,EAAE,CAACxE,KAAD,EAAQkF,CAAR,EAAW7B,GAAX,kBACP;AAAK,MAAA,OAAO,EAAG8B,CAAD,IAAOA,CAAC,CAACC,eAAF,EAArB;AAAA,8BACC,QAAC,IAAD;AACC,QAAA,IAAI,EAAE;AACLC,UAAAA,QAAQ,EAAE,2CADL;AAELC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEL,CAAC,CAACb;AAAV;AAFF,SADP;AAAA,+BAMC,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,mCAAf;AAAA,iCACC;AAAG,YAAA,SAAS,EAAC,cAAb;AAAA,mCACC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAND;AAAA;AAAA;AAAA;AAAA,cADD,eAaC,QAAC,WAAD;AACC,QAAA,SAAS,EAAEpG,SADZ;AAEC,QAAA,QAAQ,EAAE,IAFX;AAGC,QAAA,SAAS,EAAE+B,KAHZ;AAIC,QAAA,cAAc,EAAEqD,GAJjB;AAKC,QAAA,mBAAmB,EAAEF,eALtB;AAMC,QAAA,gBAAgB,EAAElD,gBANnB;AAOC,QAAA,gBAAgB,EAAEH,gBAPnB;AAQC,QAAA,oBAAoB,EAAErC,oBARvB;AASC,QAAA,mBAAmB,EAAEoE,qBATtB;AAUC,QAAA,eAAe,EAAEG,qBAVlB;AAWC,QAAA,gBAAgB,EAAEvE,oBAAoB,CAACG;AAXxC;AAAA;AAAA;AAAA;AAAA,cAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF,GAjEe,CAAhB;;AAoGA,QAAM4H,iBAAiB,GAAIjD,IAAD,IAAoB;AAC7C,wBAAO,QAAC,mBAAD;AAAqB,MAAA,SAAS,EAAEA,IAAI,CAAC8B;AAArC;AAAA;AAAA;AAAA;AAAA,YAAP;AACA,GAFD;;AAIA,sBACC;AAAA,4BACC,QAAC,eAAD;AACC,MAAA,iBAAiB,EAAE,IADpB;AAEC,MAAA,SAAS,EAAEpG,SAFZ;AAGC,MAAA,sBAAsB,EAAEyB,cAHzB;AAIC,MAAA,oBAAoB,EAAEiD,iBAJvB;AAKC,MAAA,SAAS,EAAE/C,SALZ;AAMC,MAAA,WAAW,iBAAEA,SAAS,CAAC,CAAD,CAAX,gDAAE,YAAcyE,iBAN5B;AAOC,MAAA,SAAS,EAAGjD,IAAD,IAAe2B,UAAU,CAAC3B,IAAD;AAPrC;AAAA;AAAA;AAAA;AAAA,YADD,eAUC,QAAC,UAAD;AACC,MAAA,WAAW,EAAE9B,OAAO,CAACT,SADtB;AAEC,MAAA,SAAS,EAAER,SAFZ;AAGC,MAAA,aAAa,EAAEoC,aAHhB;AAIC,MAAA,OAAO,EAAExC,SAJV;AAKC,MAAA,QAAQ,EAAC,cALV;AAMC,MAAA,OAAO,EAAEqG,OANV;AAOC,MAAA,UAAU,EAAE/G,WAPb;AAQC,MAAA,SAAS,EAAC,8BARX;AASC,MAAA,SAAS,eACR,QAAC,WAAD;AACC,QAAA,WAAW,EAAEiC,WADd;AAEC,QAAA,SAAS,EAAEvB,SAFZ;AAGC,QAAA,oBAAoB,EAAER,oBAHvB;AAIC,QAAA,gBAAgB,EAAEM,UAJnB;AAKC,QAAA,mBAAmB,EAAEkF,eALtB;AAMC,QAAA,iBAAiB,EAAEd;AANpB;AAAA;AAAA;AAAA;AAAA,cAVF;AAmBC,MAAA,KAAK,eACJ;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACC,QAAC,iBAAD;AAAmB,UAAA,YAAY,EAAE9B,QAAjC;AAA2C,UAAA,iBAAiB,EAAEO;AAA9D;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,OAAD;AAAS,UAAA,UAAU,EAAEF,MAArB;AAA6B,UAAA,UAAU,EAAER;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAyBC,MAAA,UAAU,EAAE;AAAEsF,QAAAA;AAAF;AAzBb;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA,kBADD;AAwCA,CA7gBD;;AA+gBA,eAAelI,OAAf","sourcesContent":["import { Tooltip } from 'antd'\r\nimport moment from 'moment'\r\nimport Link from 'next/link'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Eye } from 'react-feather'\r\nimport { areaApi, branchApi, districtApi, staffSalaryApi, teacherApi, userInformationApi, wardApi } from '~/apiBase'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport ExpandTable from '~/components/ExpandTable'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { fmSelectArr } from '~/utils/functions'\r\nimport StaffSalaryForm from '../../Option/StaffSalaryForm'\r\nimport PromoteTeacher from './PromoteTeacher'\r\nimport SalaryTeacherNested from './SalaryTeacherNested'\r\nimport TeacherFilterForm from './TeacherFilterForm'\r\nimport TeacherForm from './TeacherForm'\r\n\r\nconst Teacher = () => {\r\n\tconst [teacherList, setTeacherList] = useState<ITeacher[]>([])\r\n\tconst [optionAreaSystemList, setOptionAreaSystemList] = useState<{\r\n\t\tareaList: IOptionCommon[]\r\n\t\tbranchListTotal: IOptionCommon[]\r\n\t\tdistrictList: IOptionCommon[]\r\n\t\twardList: IOptionCommon[]\r\n\t}>({\r\n\t\tareaList: [],\r\n\t\tbranchListTotal: [],\r\n\t\tdistrictList: [],\r\n\t\twardList: []\r\n\t})\r\n\tconst [branchList, setBranchList] = useState([])\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst { showNoti, pageSize, userInformation } = useWrap()\r\n\tconst [activeColumnSearch, setActiveColumnSearch] = useState('')\r\n\t// FILTER\r\n\tconst listFieldInit = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: pageSize,\r\n\t\tsort: 1,\r\n\t\tsortType: false,\r\n\t\tAreaID: '',\r\n\t\tFullNameUnicode: '',\r\n\t\tfromDate: '',\r\n\t\ttoDate: '',\r\n\t\tStatusID: null\r\n\t}\r\n\tlet refValue = useRef({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: 1,\r\n\t\tsortType: false\r\n\t})\r\n\tconst [filters, setFilters] = useState(listFieldInit)\r\n\t// ADD SALARY TO NEW TEACHER\r\n\tconst [isClearForm, setIsClearForm] = useState(false)\r\n\tconst [openSalaryForm, setOpenSalaryForm] = useState(false)\r\n\tconst [dataStaff, setDataStaff] = useState([])\r\n\tconst optionGenderList = [\r\n\t\t{ title: 'Nữ', value: 0 },\r\n\t\t{ title: 'Nam', value: 1 },\r\n\t\t{ title: 'Khác', value: 2 }\r\n\t]\r\n\tconst optionStatusList = [\r\n\t\t{ title: 'Hoạt động', value: 0 },\r\n\t\t{ title: 'Khóa', value: 1 }\r\n\t]\r\n\t// SORT OPTION\r\n\tconst sortOptionList = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 1,\r\n\t\t\ttext: 'Tên tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 2,\r\n\t\t\ttext: 'Tên giảm dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 3,\r\n\t\t\ttext: 'Ngày nhận việc tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 4,\r\n\t\t\ttext: 'Ngày nhận việc giảm dần'\r\n\t\t}\r\n\t]\r\n\t// FILTER\r\n\tconst onFilter = (obj) => {\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tfromDate: moment(obj.fromDate).format('YYYY/MM/DD'),\r\n\t\t\ttoDate: moment(obj.toDate).format('YYYY/MM/DD')\r\n\t\t})\r\n\t}\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tpageSize,\r\n\t\t\tpageIndex\r\n\t\t}\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\t...refValue.current\r\n\t\t})\r\n\t}\r\n\t// SORT\r\n\tconst onSort = (option) => {\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current\r\n\t\t})\r\n\t}\r\n\t// RESET SEARCH\r\n\tconst onResetSearch = () => {\r\n\t\tsetActiveColumnSearch('')\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\tpageSize: refValue.current.pageSize\r\n\t\t})\r\n\t}\r\n\t// ACTION SEARCH\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tsetActiveColumnSearch(dataIndex)\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t[dataIndex]: valueSearch\r\n\t\t})\r\n\t}\r\n\t// GET AREA\r\n\tconst fetchAreaList = async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await areaApi.getAll({\r\n\t\t\t\tselectAll: true\r\n\t\t\t})\r\n\t\t\tif (res.status === 200 && res.data.totalRow && res.data.data.length) {\r\n\t\t\t\tconst newAreaList = fmSelectArr(res.data.data, 'AreaName', 'AreaID')\r\n\t\t\t\tsetOptionAreaSystemList((prevState) => ({\r\n\t\t\t\t\t...prevState,\r\n\t\t\t\t\tareaList: newAreaList\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\t// showNoti('danger', error.message);\r\n\t\t}\r\n\t}\r\n\t// BRANCH BY AREA\r\n\tconst fetchBranchList = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await branchApi.getAll({\r\n\t\t\t\tpageSize: 9999\r\n\t\t\t})\r\n\t\t\tif (res.status === 200 && res.data.totalRow && res.data.data.length) {\r\n\t\t\t\tconst newBranchList = fmSelectArr(res.data.data, 'BranchName', 'ID')\r\n\t\t\t\tsetOptionAreaSystemList((prevState) => ({\r\n\t\t\t\t\t...prevState,\r\n\t\t\t\t\tbranchListTotal: newBranchList\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchAreaList()\r\n\t\tfetchBranchList()\r\n\t}, [])\r\n\t// DISTRICT BY AREA\r\n\tconst fetchDistrictByAreaID = async (id: number) => {\r\n\t\ttry {\r\n\t\t\tconst res = await districtApi.getAll({\r\n\t\t\t\tAreaID: id\r\n\t\t\t})\r\n\t\t\tif (res.status === 200 && res.data.totalRow && res.data.data.length) {\r\n\t\t\t\tconst newDistrictList = fmSelectArr(res.data.data, 'DistrictName', 'ID')\r\n\t\t\t\tsetOptionAreaSystemList({\r\n\t\t\t\t\t...optionAreaSystemList,\r\n\t\t\t\t\tdistrictList: newDistrictList,\r\n\t\t\t\t\twardList: []\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t}\r\n\t}\r\n\t// WARD BY DISTRICT\r\n\tconst fetchWardByDistrictID = async (id: number) => {\r\n\t\tsetIsLoading({ type: 'FETCH_WARD_BY_DISTRICT', status: true })\r\n\t\ttry {\r\n\t\t\tconst res = await wardApi.getAll({\r\n\t\t\t\tDistrictID: id\r\n\t\t\t})\r\n\t\t\tif (res.status === 200 && res.data.totalRow && res.data.data.length) {\r\n\t\t\t\tconst newWardList = fmSelectArr(res.data.data, 'WardName', 'ID')\r\n\t\t\t\tsetOptionAreaSystemList({\r\n\t\t\t\t\t...optionAreaSystemList,\r\n\t\t\t\t\twardList: newWardList\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'FETCH_WARD_BY_DISTRICT', status: false })\r\n\t\t}\r\n\t}\r\n\t// BRANCH BY AREA\r\n\tconst fetchBranchByAreaId = async (id: number) => {\r\n\t\tsetIsLoading({ type: 'FETCH_DATA_BY_AREA', status: true })\r\n\t\ttry {\r\n\t\t\tlet res = await branchApi.getAll({\r\n\t\t\t\tareaID: id,\r\n\t\t\t\tEnable: true\r\n\t\t\t})\r\n\t\t\tif (res.status === 200 && res.data.totalRow) {\r\n\t\t\t\tconst newBranchList = res.data.data.map((item) => ({\r\n\t\t\t\t\ttitle: item.BranchName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tsetBranchList(newBranchList)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetBranchList([])\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'FETCH_DATA_BY_AREA', status: false })\r\n\t\t}\r\n\t}\r\n\t// GET DATA IN FIRST TIME\r\n\tconst fetchTeacherList = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tlet res = await teacherApi.getAll(filters)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tif (res.data.totalRow && res.data.data.length) {\r\n\t\t\t\t\tsetTeacherList(res.data.data)\r\n\t\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t\t}\r\n\t\t\t} else if (res.status === 204) {\r\n\t\t\t\tsetTeacherList([])\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchTeacherList()\r\n\t}, [filters])\r\n\r\n\tconst onCloseSalaryForm = () => {\r\n\t\tsetIsClearForm(true)\r\n\t\tsetOpenSalaryForm(false)\r\n\t\tsetDataStaff([])\r\n\t}\r\n\tconst getInfoTeacherToAddSalary = async (userID) => {\r\n\t\ttry {\r\n\t\t\tconst res = await userInformationApi.getByID(userID)\r\n\t\t\tres.status === 200 && setDataStaff([res.data.data])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveSalary = async (obj) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\tlet res\r\n\t\ttry {\r\n\t\t\tres = await staffSalaryApi.add(obj)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tonCloseSalaryForm()\r\n\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn res\r\n\t}\r\n\r\n\t// CREATE\r\n\tconst onCreateTeacher = async (data: any) => {\r\n\t\tsetIsLoading({ type: 'ADD_DATA', status: true })\r\n\t\tlet res\r\n\t\ttry {\r\n\t\t\tconst newTeacher = { ...data }\r\n\t\t\tres = await teacherApi.add(newTeacher)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\tonResetSearch() // <== khi tạo xong r reset search để trở về trang đầu tiên\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'ADD_DATA', status: false })\r\n\t\t}\r\n\t\treturn res\r\n\t}\r\n\r\n\t// UPDATE\r\n\tconst onUpdateTeacher = async (newObj: any, idx: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\tlet res\r\n\t\ttry {\r\n\t\t\tconst newTeacherAPI = {\r\n\t\t\t\t...newObj,\r\n\t\t\t\tBranch: newObj.Branch.join(',')\r\n\t\t\t}\r\n\t\t\tres = await teacherApi.update(newTeacherAPI)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newTeacherList = [...teacherList]\r\n\t\t\t\tconst newBranch = optionAreaSystemList.branchListTotal\r\n\t\t\t\t\t.filter((ob) => newObj.Branch.some((nb) => nb === ob.value))\r\n\t\t\t\t\t.map((b) => ({\r\n\t\t\t\t\t\tID: b.value,\r\n\t\t\t\t\t\tBranchName: b.title\r\n\t\t\t\t\t}))\r\n\t\t\t\tnewTeacherList.splice(idx, 1, {\r\n\t\t\t\t\t...newObj,\r\n\t\t\t\t\tBranch: newBranch\r\n\t\t\t\t})\r\n\t\t\t\tsetTeacherList(newTeacherList)\r\n\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t\treturn res\r\n\t\t}\r\n\t}\r\n\r\n\tconst _onSubmitPromoteTeacher = async (data) => {\r\n\t\tsetIsLoading({ type: 'PROMOTE', status: true })\r\n\t\ttry {\r\n\t\t\tlet res = await teacherApi.updateRole({ RoleID: 5, UserInformationID: data })\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetFilters({ ...filters })\r\n\t\t\t\tshowNoti('success', 'Thăng cấp thành công!')\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'PROMOTE', status: false })\r\n\t\t}\r\n\t}\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Mã giáo viên',\r\n\t\t\tdataIndex: 'UserCode',\r\n\t\t\tfixed: 'left',\r\n\t\t\trender: (code) => <p className=\"font-weight-black\">{code}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Họ và tên',\r\n\t\t\tdataIndex: 'FullNameUnicode',\r\n\t\t\t...FilterColumn('FullNameUnicode', onSearch, onResetSearch, 'text'),\r\n\t\t\tclassName: activeColumnSearch === 'FullNameUnicode' ? 'active-column-search' : '',\r\n\t\t\trender: (text) => <p className=\"font-weight-primary\">{text}</p>,\r\n\t\t\tfixed: 'left'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tỉnh/TP',\r\n\t\t\tdataIndex: 'AreaName',\r\n\t\t\t...FilterColumn('AreaID', onSearch, onResetSearch, 'select', optionAreaSystemList.areaList),\r\n\t\t\tclassName: activeColumnSearch === 'AreaID' ? 'active-column-search' : ''\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 120,\r\n\t\t\ttitle: 'Giới tính',\r\n\t\t\tdataIndex: 'Gender',\r\n\t\t\trender: (genderID) => optionGenderList.find((o) => o.value === genderID).title\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'SĐT',\r\n\t\t\twidth: 120,\r\n\t\t\tdataIndex: 'Mobile',\r\n\t\t\trender: (text) => <p className=\"font-weight-primary\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Email',\r\n\t\t\twidth: 180,\r\n\t\t\tdataIndex: 'Email',\r\n\t\t\trender: (text) => <p className=\"font-weight-primary\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày nhận việc',\r\n\t\t\twidth: 150,\r\n\t\t\tdataIndex: 'Jobdate',\r\n\t\t\trender: (date) => date && moment(date).format('DD/MM/YYYY')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Facebook',\r\n\t\t\twidth: 150,\r\n\t\t\tdataIndex: 'LinkFaceBook',\r\n\t\t\trender: (link) =>\r\n\t\t\t\tlink && (\r\n\t\t\t\t\t<a className=\"font-weight-black\" href={link} target=\"_blank\">\r\n\t\t\t\t\t\tLink\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\twidth: 150,\r\n\t\t\tdataIndex: 'StatusID',\r\n\t\t\talign: 'center',\r\n\t\t\t...FilterColumn('StatusID', onSearch, onResetSearch, 'select', optionStatusList),\r\n\t\t\trender: (status) => (status ? <span className=\"tag gray\">Khóa</span> : <span className=\"tag green\">Hoạt động</span>)\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\twidth: 140,\r\n\t\t\talign: 'center',\r\n\t\t\trender: (value, _, idx) => (\r\n\t\t\t\t<div onClick={(e) => e.stopPropagation()}>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\tpathname: '/staff/teacher-list/teacher-detail/[slug]',\r\n\t\t\t\t\t\t\tquery: { slug: _.UserInformationID }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tooltip title=\"Chi tiết giảng dạy\">\r\n\t\t\t\t\t\t\t<a className=\"btn btn-icon\">\r\n\t\t\t\t\t\t\t\t<Eye />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<TeacherForm\r\n\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\tisUpdate={true}\r\n\t\t\t\t\t\tupdateObj={value}\r\n\t\t\t\t\t\tindexUpdateObj={idx}\r\n\t\t\t\t\t\thandleUpdateTeacher={onUpdateTeacher}\r\n\t\t\t\t\t\toptionStatusList={optionStatusList}\r\n\t\t\t\t\t\toptionGenderList={optionGenderList}\r\n\t\t\t\t\t\toptionAreaSystemList={optionAreaSystemList}\r\n\t\t\t\t\t\thandleFetchDistrict={fetchDistrictByAreaID}\r\n\t\t\t\t\t\thandleFetchWard={fetchWardByDistrictID}\r\n\t\t\t\t\t\toptionBranchList={optionAreaSystemList.branchListTotal}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\tconst expandedRowRender = (item: ITeacher) => {\r\n\t\treturn <SalaryTeacherNested teacherID={item.UserInformationID} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<StaffSalaryForm\r\n\t\t\t\tshowInTeacherView={true}\r\n\t\t\t\tisLoading={isLoading}\r\n\t\t\t\tisOpenModalFromOutSide={openSalaryForm}\r\n\t\t\t\topenModalFromOutSide={onCloseSalaryForm}\r\n\t\t\t\tdataStaff={dataStaff}\r\n\t\t\t\tdataIDStaff={dataStaff[0]?.UserInformationID}\r\n\t\t\t\t_onSubmit={(data: any) => saveSalary(data)}\r\n\t\t\t/>\r\n\t\t\t<PowerTable\r\n\t\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\t\ttotalPage={totalPage}\r\n\t\t\t\tgetPagination={getPagination}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdataSource={teacherList}\r\n\t\t\t\tTitlePage=\"Danh sách giáo viên\"\r\n\t\t\t\tTitleCard={\r\n\t\t\t\t\t<TeacherForm\r\n\t\t\t\t\t\tisClearForm={isClearForm}\r\n\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\toptionAreaSystemList={optionAreaSystemList}\r\n\t\t\t\t\t\toptionBranchList={branchList}\r\n\t\t\t\t\t\thandleCreateTeacher={onCreateTeacher}\r\n\t\t\t\t\t\thandleFetchBranch={fetchBranchByAreaId}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t<TeacherFilterForm handleFilter={onFilter} handleResetFilter={onResetSearch} />\r\n\t\t\t\t\t\t<SortBox handleSort={onSort} dataOption={sortOptionList} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\texpandable={{ expandedRowRender }}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Teacher\r\n"]},"metadata":{},"sourceType":"module"}
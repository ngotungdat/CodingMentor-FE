{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Sales\\\\SalesSalary\\\\SalesSalary.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Input } from 'antd';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { saleCampaignApi, saleSalaryApi, staffApi } from '~/apiBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nimport { fmSelectArr, numberWithCommas, parsePriceStrToNumber } from '~/utils/functions';\n\nfunction SalesSalary(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      saleSalaryList = _useState[0],\n      setSaleSalaryList = _useState[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      isAdmin = _useWrap.isAdmin;\n\n  var _useState2 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      totalPage = _useState3[0],\n      setTotalPage = _useState3[1];\n\n  var _useState4 = useState({\n    optionSaleCampaignList: [],\n    optionCounselorList: []\n  }),\n      optionListForFilter = _useState4[0],\n      setOptionListForFilter = _useState4[1];\n\n  var _useState5 = useState(''),\n      activeColumnSearch = _useState5[0],\n      setActiveColumnSearch = _useState5[1];\n\n  var sortOptionList = [{\n    dataSort: {\n      sort: 0,\n      sortType: true\n    },\n    value: 1,\n    text: 'Lương tăng dần'\n  }, {\n    dataSort: {\n      sort: 0,\n      sortType: false\n    },\n    value: 2,\n    text: 'Lương giảm dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: true\n    },\n    value: 3,\n    text: 'Tổng lương tăng dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: false\n    },\n    value: 4,\n    text: 'Tổng lương giảm dần'\n  }]; // FILTER\n\n  var listFieldInit = {\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false,\n    CounselorsID: null,\n    SaleCampaignID: null,\n    DonePaid: false\n  };\n  var refValue = useRef({\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false\n  });\n\n  var _useState6 = useState(listFieldInit),\n      filters = _useState6[0],\n      setFilters = _useState6[1]; // PAGINATION\n\n\n  var getPagination = function getPagination(pageIndex, pageSize) {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize: pageSize,\n      pageIndex: pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  }; // SORT\n\n\n  var onSort = function onSort(option) {\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), refValue.current));\n  }; // RESET SEARCH\n\n\n  var onResetSearch = function onResetSearch() {\n    setActiveColumnSearch('');\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), {}, {\n      pageSize: refValue.current.pageSize\n    }));\n  }; // ACTION SEARCH\n\n\n  var onSearch = function onSearch(valueSearch, dataIndex) {\n    setActiveColumnSearch(dataIndex);\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, _defineProperty({\n      pageIndex: 1\n    }, dataIndex, valueSearch)));\n  }; // GET DATA TABLE\n\n\n  var fetchSaleCampaignList = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context.next = 4;\n              return saleSalaryApi.getAll(filters);\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                setSaleSalaryList(res.data.data);\n                setTotalPage(res.data.totalRow);\n              }\n\n              if (res.status === 204) {\n                setSaleSalaryList([]);\n                setTotalPage(0);\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              showNoti('danger', _context.t0.message);\n\n            case 12:\n              _context.prev = 12;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9, 12, 15]]);\n    }));\n\n    return function fetchSaleCampaignList() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchSaleCampaignList();\n  }, [filters]);\n\n  var fetchDataForFilter = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$Promise$all, _yield$Promise$all2, counselorRes, saleCampaignRes, rs;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context2.next = 4;\n              return Promise.all([staffApi.getAll({\n                selectAll: true,\n                RoleID: 6\n              }), saleCampaignApi.getAll({\n                selectAll: true\n              })]);\n\n            case 4:\n              _yield$Promise$all = _context2.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              counselorRes = _yield$Promise$all2[0];\n              saleCampaignRes = _yield$Promise$all2[1];\n              rs = {\n                optionSaleCampaignList: [],\n                optionCounselorList: []\n              };\n\n              if (counselorRes.status === 200) {\n                rs.optionCounselorList = fmSelectArr(counselorRes.data.data, 'FullNameUnicode', 'UserInformationID');\n              }\n\n              if (saleCampaignRes.status === 200) {\n                rs.optionSaleCampaignList = fmSelectArr(saleCampaignRes.data.data, 'Name', 'ID');\n              }\n\n              setOptionListForFilter(rs);\n              _context2.next = 17;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              showNoti('danger', _context2.t0.message);\n\n            case 17:\n              _context2.prev = 17;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context2.finish(17);\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 14, 17, 20]]);\n    }));\n\n    return function fetchDataForFilter() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchDataForFilter();\n  }, []);\n\n  var onChangeBonus = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(key, vl, idx) {\n      var newSaleSalaryList, newSaleSalary;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              try {\n                newSaleSalaryList = _toConsumableArray(saleSalaryList);\n                newSaleSalary = key === 'Bonus' ? _objectSpread(_objectSpread({}, newSaleSalaryList[idx]), {}, {\n                  Bonus: parsePriceStrToNumber(vl),\n                  TotalSalary: newSaleSalaryList[idx].Salary + parsePriceStrToNumber(vl)\n                }) : _objectSpread(_objectSpread({}, newSaleSalaryList[idx]), {}, {\n                  Note: vl\n                });\n                newSaleSalaryList.splice(idx, 1, newSaleSalary);\n                setSaleSalaryList(newSaleSalaryList);\n              } catch (error) {\n                console.log('onChangeBonus', error.message);\n              }\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onChangeBonus(_x, _x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onUpdateSaleSalary = function onUpdateSaleSalary(idx) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var newSaleSalaryList, _newSaleSalaryList$id, ID, Bonus, Note, newSaleSalary, res;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              newSaleSalaryList = _toConsumableArray(saleSalaryList);\n              _newSaleSalaryList$id = newSaleSalaryList[idx], ID = _newSaleSalaryList$id.ID, Bonus = _newSaleSalaryList$id.Bonus, Note = _newSaleSalaryList$id.Note;\n              newSaleSalary = {\n                ID: ID,\n                Bonus: Bonus,\n                Note: Note,\n                DonePaid: true\n              };\n              _context4.next = 7;\n              return saleSalaryApi.update(newSaleSalary);\n\n            case 7:\n              res = _context4.sent;\n\n              if (res.status === 200) {\n                newSaleSalaryList.splice(idx, 1);\n                setSaleSalaryList(newSaleSalaryList);\n                showNoti('success', res.data.message);\n              }\n\n              _context4.next = 15;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n              showNoti('danger', _context4.t0.message);\n              console.log('onUpdateSaleSalary', _context4.t0.message);\n\n            case 15:\n              _context4.prev = 15;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context4.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 11, 15, 18]]);\n    }));\n  };\n\n  var columns = [_objectSpread(_objectSpread({\n    title: 'Tư vấn viên',\n    dataIndex: 'CounselorsName'\n  }, FilterColumn('CounselorsID', onSearch, onResetSearch, 'select', optionListForFilter.optionCounselorList)), {}, {\n    render: function render(text) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 22\n      }, _this);\n    },\n    className: activeColumnSearch === 'CounselorsID' ? 'active-column-search' : ''\n  }), _objectSpread(_objectSpread({\n    title: 'Chiến dịch',\n    dataIndex: 'SaleCampaignName'\n  }, FilterColumn('SaleCampaignID', onSearch, onResetSearch, 'select', optionListForFilter.optionSaleCampaignList)), {}, {\n    className: activeColumnSearch === 'SaleCampaignID' ? 'active-column-search' : ''\n  }), {\n    title: 'Lương chiến dịch',\n    dataIndex: 'Salary',\n    width: 140,\n    render: function render(price) {\n      return numberWithCommas(price);\n    }\n  }, {\n    title: 'Thưởng',\n    dataIndex: 'Bonus',\n    render: function render(price, item, idx) {\n      return /*#__PURE__*/_jsxDEV(Input, {\n        value: price > 0 ? numberWithCommas(price) : '',\n        style: {\n          width: 150\n        },\n        placeholder: \"Nh\\u1EADp th\\u01B0\\u1EDFng\",\n        className: \"style-input\",\n        allowClear: true,\n        onChange: function onChange(e) {\n          return onChangeBonus('Bonus', e.target.value, idx);\n        }\n      }, item.ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 5\n      }, _this);\n    }\n  }, {\n    title: 'Tổng lương',\n    dataIndex: 'TotalSalary',\n    width: 140,\n    render: function render(price) {\n      return numberWithCommas(price);\n    }\n  }, {\n    title: 'Ghi chú',\n    dataIndex: 'Note',\n    render: function render(price, item, idx) {\n      return /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: 150\n        },\n        placeholder: \"Nh\\u1EADp ghi ch\\xFA\",\n        className: \"style-input\",\n        allowClear: true,\n        onChange: function onChange(e) {\n          return onChangeBonus('Note', e.target.value, idx);\n        }\n      }, item.ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 5\n      }, _this);\n    }\n  }, {\n    width: 140,\n    align: 'center',\n    render: function render(record, _, idx) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: function onClick(e) {\n          return e.stopPropagation();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning add-new\",\n          onClick: onUpdateSaleSalary(idx),\n          children: \"Thanh to\\xE1n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 5\n      }, _this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(PowerTable, {\n    loading: isLoading,\n    currentPage: filters.pageIndex,\n    totalPage: totalPage,\n    getPagination: getPagination,\n    addClass: \"basic-header\",\n    TitlePage: \"Duy\\u1EC7t l\\u01B0\\u01A1ng\",\n    dataSource: saleSalaryList,\n    columns: columns,\n    Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extra-table\",\n      children: /*#__PURE__*/_jsxDEV(SortBox, {\n        width: 180,\n        handleSort: onSort,\n        dataOption: sortOptionList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SalesSalary, \"OuEn6vskATD3hO92X3EqdGkSlqI=\", false, function () {\n  return [useWrap];\n});\n\n_c = SalesSalary;\nexport default SalesSalary;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalesSalary\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Sales/SalesSalary/SalesSalary.tsx"],"names":["Input","React","useEffect","useRef","useState","saleCampaignApi","saleSalaryApi","staffApi","SortBox","PowerTable","FilterColumn","useWrap","fmSelectArr","numberWithCommas","parsePriceStrToNumber","SalesSalary","props","saleSalaryList","setSaleSalaryList","showNoti","isAdmin","type","status","isLoading","setIsLoading","totalPage","setTotalPage","optionSaleCampaignList","optionCounselorList","optionListForFilter","setOptionListForFilter","activeColumnSearch","setActiveColumnSearch","sortOptionList","dataSort","sort","sortType","value","text","listFieldInit","pageIndex","pageSize","CounselorsID","SaleCampaignID","DonePaid","refValue","filters","setFilters","getPagination","current","onSort","option","title","onResetSearch","onSearch","valueSearch","dataIndex","fetchSaleCampaignList","getAll","res","data","totalRow","message","fetchDataForFilter","Promise","all","selectAll","RoleID","counselorRes","saleCampaignRes","rs","onChangeBonus","key","vl","idx","newSaleSalaryList","newSaleSalary","Bonus","TotalSalary","Salary","Note","splice","error","console","log","onUpdateSaleSalary","ID","update","columns","render","className","width","price","item","e","target","align","record","_","stopPropagation"],"mappings":"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","sourcesContent":["import { Input } from 'antd'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { saleCampaignApi, saleSalaryApi, staffApi } from '~/apiBase'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { fmSelectArr, numberWithCommas, parsePriceStrToNumber } from '~/utils/functions'\r\n\r\ntype IOptionListFilter = {\r\n\toptionSaleCampaignList: IOptionCommon[]\r\n\toptionCounselorList: IOptionCommon[]\r\n}\r\nfunction SalesSalary(props) {\r\n\tconst [saleSalaryList, setSaleSalaryList] = useState<ISaleSalary[]>([])\r\n\tconst { showNoti, isAdmin } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [optionListForFilter, setOptionListForFilter] = useState<IOptionListFilter>({\r\n\t\toptionSaleCampaignList: [],\r\n\t\toptionCounselorList: []\r\n\t})\r\n\tconst [activeColumnSearch, setActiveColumnSearch] = useState('')\r\n\tconst sortOptionList = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 1,\r\n\t\t\ttext: 'Lương tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 2,\r\n\t\t\ttext: 'Lương giảm dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 3,\r\n\t\t\ttext: 'Tổng lương tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 4,\r\n\t\t\ttext: 'Tổng lương giảm dần'\r\n\t\t}\r\n\t]\r\n\t// FILTER\r\n\tconst listFieldInit = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false,\r\n\r\n\t\tCounselorsID: null,\r\n\t\tSaleCampaignID: null,\r\n\t\tDonePaid: false\r\n\t}\r\n\tlet refValue = useRef({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false\r\n\t})\r\n\tconst [filters, setFilters] = useState(listFieldInit)\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tpageSize,\r\n\t\t\tpageIndex\r\n\t\t}\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\t...refValue.current\r\n\t\t})\r\n\t}\r\n\t// SORT\r\n\tconst onSort = (option) => {\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current\r\n\t\t})\r\n\t}\r\n\t// RESET SEARCH\r\n\tconst onResetSearch = () => {\r\n\t\tsetActiveColumnSearch('')\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\tpageSize: refValue.current.pageSize\r\n\t\t})\r\n\t}\r\n\t// ACTION SEARCH\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tsetActiveColumnSearch(dataIndex)\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t[dataIndex]: valueSearch\r\n\t\t})\r\n\t}\r\n\r\n\t// GET DATA TABLE\r\n\tconst fetchSaleCampaignList = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t})\r\n\t\t\tconst res = await saleSalaryApi.getAll(filters)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetSaleSalaryList(res.data.data)\r\n\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetSaleSalaryList([])\r\n\t\t\t\tsetTotalPage(0)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchSaleCampaignList()\r\n\t}, [filters])\r\n\r\n\tconst fetchDataForFilter = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t})\r\n\t\t\tconst [counselorRes, saleCampaignRes] = await Promise.all([\r\n\t\t\t\tstaffApi.getAll({ selectAll: true, RoleID: 6 }),\r\n\t\t\t\tsaleCampaignApi.getAll({ selectAll: true })\r\n\t\t\t])\r\n\t\t\tconst rs: IOptionListFilter = {\r\n\t\t\t\toptionSaleCampaignList: [],\r\n\t\t\t\toptionCounselorList: []\r\n\t\t\t}\r\n\t\t\tif (counselorRes.status === 200) {\r\n\t\t\t\trs.optionCounselorList = fmSelectArr(counselorRes.data.data, 'FullNameUnicode', 'UserInformationID')\r\n\t\t\t}\r\n\t\t\tif (saleCampaignRes.status === 200) {\r\n\t\t\t\trs.optionSaleCampaignList = fmSelectArr(saleCampaignRes.data.data, 'Name', 'ID')\r\n\t\t\t}\r\n\t\t\tsetOptionListForFilter(rs)\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchDataForFilter()\r\n\t}, [])\r\n\r\n\tconst onChangeBonus = async (key: string, vl: string, idx: number) => {\r\n\t\ttry {\r\n\t\t\tconst newSaleSalaryList = [...saleSalaryList]\r\n\t\t\tconst newSaleSalary: ISaleSalary =\r\n\t\t\t\tkey === 'Bonus'\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t...newSaleSalaryList[idx],\r\n\t\t\t\t\t\t\tBonus: parsePriceStrToNumber(vl),\r\n\t\t\t\t\t\t\tTotalSalary: newSaleSalaryList[idx].Salary + parsePriceStrToNumber(vl)\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t...newSaleSalaryList[idx],\r\n\t\t\t\t\t\t\tNote: vl\r\n\t\t\t\t\t  }\r\n\t\t\tnewSaleSalaryList.splice(idx, 1, newSaleSalary)\r\n\t\t\tsetSaleSalaryList(newSaleSalaryList)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('onChangeBonus', error.message)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onUpdateSaleSalary = (idx: number) => {\r\n\t\treturn async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t})\r\n\t\t\t\tconst newSaleSalaryList = [...saleSalaryList]\r\n\r\n\t\t\t\tconst { ID, Bonus, Note } = newSaleSalaryList[idx]\r\n\r\n\t\t\t\tconst newSaleSalary: {\r\n\t\t\t\t\tID: number\r\n\t\t\t\t\tBonus: number\r\n\t\t\t\t\tDonePaid: boolean\r\n\t\t\t\t\tNote: string\r\n\t\t\t\t} = {\r\n\t\t\t\t\tID,\r\n\t\t\t\t\tBonus,\r\n\t\t\t\t\tNote,\r\n\t\t\t\t\tDonePaid: true\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst res = await saleSalaryApi.update(newSaleSalary)\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tnewSaleSalaryList.splice(idx, 1)\r\n\t\t\t\t\tsetSaleSalaryList(newSaleSalaryList)\r\n\t\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t\tconsole.log('onUpdateSaleSalary', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Tư vấn viên',\r\n\t\t\tdataIndex: 'CounselorsName',\r\n\t\t\t...FilterColumn('CounselorsID', onSearch, onResetSearch, 'select', optionListForFilter.optionCounselorList),\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>,\r\n\t\t\tclassName: activeColumnSearch === 'CounselorsID' ? 'active-column-search' : ''\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Chiến dịch',\r\n\t\t\tdataIndex: 'SaleCampaignName',\r\n\t\t\t...FilterColumn('SaleCampaignID', onSearch, onResetSearch, 'select', optionListForFilter.optionSaleCampaignList),\r\n\t\t\tclassName: activeColumnSearch === 'SaleCampaignID' ? 'active-column-search' : ''\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Lương chiến dịch',\r\n\t\t\tdataIndex: 'Salary',\r\n\t\t\twidth: 140,\r\n\t\t\trender: (price) => numberWithCommas(price)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Thưởng',\r\n\t\t\tdataIndex: 'Bonus',\r\n\t\t\trender: (price, item: ISaleSalary, idx) => (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tkey={item.ID}\r\n\t\t\t\t\tvalue={price > 0 ? numberWithCommas(price) : ''}\r\n\t\t\t\t\tstyle={{ width: 150 }}\r\n\t\t\t\t\tplaceholder=\"Nhập thưởng\"\r\n\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\tallowClear={true}\r\n\t\t\t\t\tonChange={(e) => onChangeBonus('Bonus', e.target.value, idx)}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tổng lương',\r\n\t\t\tdataIndex: 'TotalSalary',\r\n\t\t\twidth: 140,\r\n\t\t\trender: (price) => numberWithCommas(price)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ghi chú',\r\n\t\t\tdataIndex: 'Note',\r\n\t\t\trender: (price, item: ISaleSalary, idx) => (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tkey={item.ID}\r\n\t\t\t\t\tstyle={{ width: 150 }}\r\n\t\t\t\t\tplaceholder=\"Nhập ghi chú\"\r\n\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\tallowClear={true}\r\n\t\t\t\t\tonChange={(e) => onChangeBonus('Note', e.target.value, idx)}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 140,\r\n\t\t\talign: 'center',\r\n\t\t\trender: (record: ISaleSalary, _, idx) => (\r\n\t\t\t\t<div onClick={(e) => e.stopPropagation()}>\r\n\t\t\t\t\t<button className=\"btn btn-warning add-new\" onClick={onUpdateSaleSalary(idx)}>\r\n\t\t\t\t\t\tThanh toán\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\treturn (\r\n\t\t<PowerTable\r\n\t\t\tloading={isLoading}\r\n\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\ttotalPage={totalPage}\r\n\t\t\tgetPagination={getPagination}\r\n\t\t\taddClass=\"basic-header\"\r\n\t\t\tTitlePage=\"Duyệt lương\"\r\n\t\t\tdataSource={saleSalaryList}\r\n\t\t\tcolumns={columns}\r\n\t\t\tExtra={\r\n\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t<SortBox width={180} handleSort={onSort} dataOption={sortOptionList} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default SalesSalary\r\n"]},"metadata":{},"sourceType":"module"}
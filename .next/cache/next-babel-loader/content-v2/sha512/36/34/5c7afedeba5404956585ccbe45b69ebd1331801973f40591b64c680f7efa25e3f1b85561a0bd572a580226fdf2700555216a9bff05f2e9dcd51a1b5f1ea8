{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Header\\\\notification.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { BellOutlined, NotificationOutlined, NotificationTwoTone } from '@ant-design/icons';\nimport { Card, List, Popover } from 'antd';\nimport Modal from 'antd/lib/modal/Modal';\nimport Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\nimport { AlertCircle } from 'react-feather';\nimport ReactHtmlParser from 'react-html-parser';\nimport { notificationApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\n\nvar Notification = function Notification() {\n  _s();\n\n  var _useWrap = useWrap(),\n      reloadNotification = _useWrap.reloadNotification,\n      handleReloadNoti = _useWrap.handleReloadNoti;\n\n  var _useState = useState([]),\n      dataTable = _useState[0],\n      setDataTable = _useState[1];\n\n  var _useState2 = useState(false),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState3[0],\n      setIsLoading = _useState3[1];\n\n  var _useState4 = useState({\n    ID: null\n  }),\n      dataSeen = _useState4[0],\n      setDataSeen = _useState4[1];\n\n  var _useState5 = useState({\n    content: null,\n    title: null,\n    status: null\n  }),\n      contentRow = _useState5[0],\n      setContentRow = _useState5[1];\n\n  var _useState6 = useState(false),\n      isModalVisible = _useState6[0],\n      setIsModalVisible = _useState6[1];\n\n  var listTodoApi = {\n    pageSize: 10,\n    pageIndex: 1\n  };\n\n  var _useState7 = useState(listTodoApi),\n      todoApi = _useState7[0],\n      setTodoApi = _useState7[1];\n\n  var getDataNotification = function getDataNotification() {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return notificationApi.getAllWithUser(todoApi);\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status == 204) {\n                // showNoti(\"danger\", \"Không có dữ liệu\");\n                console.log('Lỗi: Không tìm thấy');\n              }\n\n              if (res.status == 200) {\n                setDataTable(res.data.data);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              // showNoti(\"danger\", error.message);\n              console.log('error: ', _context.t0);\n\n            case 11:\n              _context.prev = 11;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8, 11, 14]]);\n    }))();\n  };\n\n  var _onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsLoading({\n                type: 'UPDATE_DATA',\n                status: true\n              });\n              res = null;\n              _context2.prev = 2;\n              _context2.next = 5;\n              return notificationApi.updateSeen(data);\n\n            case 5:\n              res = _context2.sent;\n              res.Status == 200 && console.log('update thành công'), getDataNotification();\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log('error', _context2.t0.message);\n\n            case 12:\n              _context2.prev = 12;\n              setIsLoading({\n                type: 'UPDATE_DATA',\n                status: false\n              });\n              return _context2.finish(12);\n\n            case 15:\n              return _context2.abrupt(\"return\", res);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 9, 12, 15]]);\n    }));\n\n    return function _onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var content_notification = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap-notification middle\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content_notification\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Th\\xF4ng b\\xE1o\",\n        extra: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/notification\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Xem t\\u1EA5t c\\u1EA3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, _this),\n        bordered: false,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          itemLayout: \"horizontal\",\n          dataSource: dataTable,\n          className: \"list-notification\",\n          renderItem: function renderItem(item) {\n            return /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: function onClick() {\n                setIsModalVisible(true);\n                setShow(false);\n                setDataSeen({\n                  ID: item.ID\n                });\n                setContentRow({\n                  content: item.NotificationContent,\n                  title: item.NotificationTitle,\n                  status: item.Status\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(List.Item, {\n                className: item.Status == 0 ? 'new' : 'old',\n                children: item.Status == 0 ? /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n                  avatar: /*#__PURE__*/_jsxDEV(NotificationTwoTone, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 20\n                  }, _this),\n                  title: item.NotificationTitle,\n                  description: ReactHtmlParser(item.NotificationContent)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 11\n                }, _this) : /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n                  avatar: /*#__PURE__*/_jsxDEV(NotificationOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 20\n                  }, _this),\n                  title: item.NotificationTitle,\n                  description: ReactHtmlParser(item.NotificationContent)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 11\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 9\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 8\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, _this);\n\n  var countNoti = 0;\n\n  for (var i = 0; i < dataTable.length; i++) {\n    if (dataTable[i].Status == 0) {\n      countNoti++;\n    }\n  }\n\n  var handleVisibleChange = function handleVisibleChange(visible) {\n    setShow(visible);\n  };\n\n  useEffect(function () {\n    getDataNotification(); // const interval = setInterval(() => {\n    //     getDataNotification();\n    //   }, 1000);\n    // return () => clearInterval(interval);\n  }, [countNoti, todoApi]);\n  useEffect(function () {\n    if (reloadNotification) {\n      getDataNotification();\n      handleReloadNoti();\n    }\n  }, [reloadNotification]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      title: /*#__PURE__*/_jsxDEV(AlertCircle, {\n        color: \"#32c6a4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 12\n      }, _this),\n      visible: isModalVisible,\n      width: 700,\n      okButtonProps: {\n        style: {\n          display: 'none'\n        }\n      },\n      onCancel: function onCancel() {\n        setIsModalVisible(false);\n        contentRow.status == 0 && _onSubmit(dataSeen);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: contentRow.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ReactHtmlParser(contentRow.content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n      placement: \"bottomRight\",\n      content: content_notification,\n      trigger: \"click\",\n      visible: show,\n      onVisibleChange: function onVisibleChange(visible) {\n        return handleVisibleChange(visible);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shopping__cart-detail cart-icon d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            textDecoration: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(BellOutlined, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: countNoti > 0 ? 'count-notification' : 'hide',\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: countNoti > 9 ? \"9+\" : countNoti\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Notification, \"H+qC2hH1EfHosVutWtHHljQDxvo=\", false, function () {\n  return [useWrap];\n});\n\n_c = Notification;\nexport default Notification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Header/notification.tsx"],"names":["BellOutlined","NotificationOutlined","NotificationTwoTone","Card","List","Popover","Modal","Link","React","useEffect","useState","AlertCircle","ReactHtmlParser","notificationApi","useWrap","Notification","reloadNotification","handleReloadNoti","dataTable","setDataTable","show","setShow","type","status","isLoading","setIsLoading","ID","dataSeen","setDataSeen","content","title","contentRow","setContentRow","isModalVisible","setIsModalVisible","listTodoApi","pageSize","pageIndex","todoApi","setTodoApi","getDataNotification","getAllWithUser","res","console","log","data","_onSubmit","updateSeen","Status","message","content_notification","item","NotificationContent","NotificationTitle","countNoti","i","length","handleVisibleChange","visible","style","display","textDecoration"],"mappings":"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","sourcesContent":["import { BellOutlined, NotificationOutlined, NotificationTwoTone } from '@ant-design/icons'\r\nimport { Card, List, Popover } from 'antd'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport Link from 'next/link'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AlertCircle } from 'react-feather'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { notificationApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst Notification = () => {\r\n\tconst { reloadNotification, handleReloadNoti } = useWrap()\r\n\tconst [dataTable, setDataTable] = useState([])\r\n\tconst [show, setShow] = useState(false)\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [dataSeen, setDataSeen] = useState({\r\n\t\tID: null\r\n\t})\r\n\tconst [contentRow, setContentRow] = useState({\r\n\t\tcontent: null,\r\n\t\ttitle: null,\r\n\t\tstatus: null\r\n\t})\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n\tconst listTodoApi = {\r\n\t\tpageSize: 10,\r\n\t\tpageIndex: 1\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\tconst getDataNotification = () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\t;(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await notificationApi.getAllWithUser(todoApi)\r\n\t\t\t\tif (res.status == 204) {\r\n\t\t\t\t\t// showNoti(\"danger\", \"Không có dữ liệu\");\r\n\t\t\t\t\tconsole.log('Lỗi: Không tìm thấy')\r\n\t\t\t\t}\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tsetDataTable(res.data.data)\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\t// showNoti(\"danger\", error.message);\r\n\t\t\t\tconsole.log('error: ', error)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})()\r\n\t}\r\n\r\n\tconst _onSubmit = async (data: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'UPDATE_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet res = null\r\n\t\ttry {\r\n\t\t\tres = await notificationApi.updateSeen(data)\r\n\t\t\tres.Status == 200 && console.log('update thành công'), getDataNotification()\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'UPDATE_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\tconst content_notification = (\r\n\t\t<div className={`wrap-notification middle`}>\r\n\t\t\t<div className=\"content_notification\">\r\n\t\t\t\t<Card\r\n\t\t\t\t\ttitle=\"Thông báo\"\r\n\t\t\t\t\textra={\r\n\t\t\t\t\t\t<Link href=\"/notification\">\r\n\t\t\t\t\t\t\t<a>Xem tất cả</a>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbordered={false}\r\n\t\t\t\t>\r\n\t\t\t\t\t<List\r\n\t\t\t\t\t\titemLayout=\"horizontal\"\r\n\t\t\t\t\t\tdataSource={dataTable}\r\n\t\t\t\t\t\tclassName=\"list-notification\"\r\n\t\t\t\t\t\trenderItem={(item) => (\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetIsModalVisible(true)\r\n\t\t\t\t\t\t\t\t\tsetShow(false)\r\n\t\t\t\t\t\t\t\t\tsetDataSeen({\r\n\t\t\t\t\t\t\t\t\t\tID: item.ID\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\tsetContentRow({\r\n\t\t\t\t\t\t\t\t\t\tcontent: item.NotificationContent,\r\n\t\t\t\t\t\t\t\t\t\ttitle: item.NotificationTitle,\r\n\t\t\t\t\t\t\t\t\t\tstatus: item.Status\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<List.Item className={item.Status == 0 ? 'new' : 'old'}>\r\n\t\t\t\t\t\t\t\t\t{item.Status == 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t<List.Item.Meta\r\n\t\t\t\t\t\t\t\t\t\t\tavatar={<NotificationTwoTone />}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.NotificationTitle}\r\n\t\t\t\t\t\t\t\t\t\t\tdescription={ReactHtmlParser(item.NotificationContent)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<List.Item.Meta\r\n\t\t\t\t\t\t\t\t\t\t\tavatar={<NotificationOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.NotificationTitle}\r\n\t\t\t\t\t\t\t\t\t\t\tdescription={ReactHtmlParser(item.NotificationContent)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n\tlet countNoti = 0\r\n\r\n\tfor (let i = 0; i < dataTable.length; i++) {\r\n\t\tif (dataTable[i].Status == 0) {\r\n\t\t\tcountNoti++\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleVisibleChange = (visible) => {\r\n\t\tsetShow(visible)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataNotification()\r\n\t\t// const interval = setInterval(() => {\r\n\t\t//     getDataNotification();\r\n\t\t//   }, 1000);\r\n\t\t// return () => clearInterval(interval);\r\n\t}, [countNoti, todoApi])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (reloadNotification) {\r\n\t\t\tgetDataNotification()\r\n\t\t\thandleReloadNoti()\r\n\t\t}\r\n\t}, [reloadNotification])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={<AlertCircle color=\"#32c6a4\" />}\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\twidth={700}\r\n\t\t\t\tokButtonProps={{\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tdisplay: 'none'\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\t\tcontentRow.status == 0 && _onSubmit(dataSeen)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<h4>{contentRow.title}</h4>\r\n\t\t\t\t<div>{ReactHtmlParser(contentRow.content)}</div>\r\n\t\t\t</Modal>\r\n\t\t\t<Popover\r\n\t\t\t\tplacement=\"bottomRight\"\r\n\t\t\t\tcontent={content_notification}\r\n\t\t\t\ttrigger=\"click\"\r\n\t\t\t\tvisible={show}\r\n\t\t\t\tonVisibleChange={(visible) => handleVisibleChange(visible)}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"shopping__cart-detail cart-icon d-flex justify-content-center align-items-center\">\r\n\t\t\t\t\t<a style={{ textDecoration: 'none' }}>\r\n\t\t\t\t\t\t<BellOutlined size={18} />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<span className={countNoti > 0 ? 'count-notification' : 'hide'}>\r\n\t\t\t\t\t\t<span>{countNoti > 9 ? `9+` : countNoti}</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</Popover>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Notification\r\n"]},"metadata":{},"sourceType":"module"}
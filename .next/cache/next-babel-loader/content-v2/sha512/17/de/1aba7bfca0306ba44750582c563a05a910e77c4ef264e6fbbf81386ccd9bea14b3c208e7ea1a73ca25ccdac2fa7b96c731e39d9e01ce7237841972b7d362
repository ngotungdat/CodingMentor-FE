{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Profile\\\\ProfileCustomer\\\\InfoDiscountCard\\\\InfoDiscountCard.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { discountApi } from '~/apiBase';\nimport PowerTable from '~/components/PowerTable';\nimport { useWrap } from '~/context/wrap';\nimport { numberWithCommas } from '~/utils/functions';\n\nconst InfoDiscountCard = props => {\n  const {\n    studentID\n  } = props;\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: 1,\n    StudentID: studentID\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi);\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await discountApi.discountStudent(todoApi);\n      res.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow));\n      res.status == 204 && setDataSource([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  const getPagination = pageNumber => {\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      pageIndex: pageNumber\n    }));\n  };\n\n  const columns = [{\n    title: 'Mã khuyến mãi',\n    dataIndex: 'DiscountCode',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Giá trị',\n    dataIndex: 'Discount',\n    render: (text, data) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: data.DiscountType == 1 ? numberWithCommas(text) : text + '%'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 28\n    }, this)\n  }, {\n    title: 'Loại',\n    dataIndex: 'DiscountType',\n    render: type => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [type == 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag gray\",\n        children: \"T\\xEDnh theo ti\\u1EC1n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, this), type == 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag yellow\",\n        children: \"T\\xEDnh theo ph\\u1EA7n tr\\u0103m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true)\n  }, {\n    title: 'Tiền khuyến mãi tối đa',\n    dataIndex: 'MaxDiscountPrice',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: numberWithCommas(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 22\n    }, this)\n  }]; // ============== USE EFFECT - FETCH DATA ===================\n\n  useEffect(() => {\n    getDataSource();\n  }, [todoApi]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PowerTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: pageNumber => getPagination(pageNumber),\n      loading: isLoading,\n      addClass: \"basic-header\",\n      TitlePage: \"Danh s\\xE1ch ch\\u01B0\\u01A1ng tr\\xECnh\",\n      dataSource: dataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nexport default InfoDiscountCard;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Profile/ProfileCustomer/InfoDiscountCard/InfoDiscountCard.tsx"],"names":["React","useState","useEffect","discountApi","PowerTable","useWrap","numberWithCommas","InfoDiscountCard","props","studentID","dataSource","setDataSource","isLoading","setIsLoading","type","status","showNoti","pageSize","totalPage","setTotalPage","currentPage","setCurrentPage","listTodoApi","pageIndex","StudentID","todoApi","setTodoApi","getDataSource","res","discountStudent","data","totalRow","error","message","getPagination","pageNumber","columns","title","dataIndex","render","text","DiscountType"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { discountApi } from '~/apiBase'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { numberWithCommas } from '~/utils/functions'\r\n\r\nconst InfoDiscountCard = (props) => {\r\n\tconst { studentID } = props\r\n\tconst [dataSource, setDataSource] = useState(null)\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst { showNoti, pageSize } = useWrap()\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: 1,\r\n\t\tStudentID: studentID\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tlet res = await discountApi.discountStudent(todoApi)\r\n\t\t\tres.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow))\r\n\t\t\tres.status == 204 && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\tpageIndex: pageNumber\r\n\t\t})\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Mã khuyến mãi',\r\n\t\t\tdataIndex: 'DiscountCode',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Giá trị',\r\n\t\t\tdataIndex: 'Discount',\r\n\t\t\trender: (text, data) => <p className=\"font-weight-black\">{data.DiscountType == 1 ? numberWithCommas(text) : text + '%'}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Loại',\r\n\t\t\tdataIndex: 'DiscountType',\r\n\t\t\trender: (type) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{type == 1 && <span className=\"tag gray\">Tính theo tiền</span>}\r\n\t\t\t\t\t{type == 2 && <span className=\"tag yellow\">Tính theo phần trăm</span>}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tiền khuyến mãi tối đa',\r\n\t\t\tdataIndex: 'MaxDiscountPrice',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{numberWithCommas(text)}</p>\r\n\t\t}\r\n\t]\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t}, [todoApi])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PowerTable\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Danh sách chương trình\"\r\n\t\t\t\tdataSource={dataSource}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default InfoDiscountCard\r\n"]},"metadata":{},"sourceType":"module"}
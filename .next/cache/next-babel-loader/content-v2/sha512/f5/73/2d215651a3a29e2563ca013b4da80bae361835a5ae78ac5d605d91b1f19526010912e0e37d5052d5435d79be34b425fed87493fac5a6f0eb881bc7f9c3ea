{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Elements\\\\Editor\\\\Editor.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport ReactSummernote from 'react-summernote';\nimport 'react-summernote/dist/react-summernote.css';\nimport 'react-summernote/lang/summernote-ru-RU';\nimport { studentApi } from '~/apiBase';\nimport ReactHtmlParser from 'react-html-parser';\nimport 'bootstrap/js/src/modal';\nimport 'bootstrap/js/src/dropdown';\nimport 'bootstrap/js/src/tooltip';\nimport { BorderOutlined, EditOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Modal, Input } from 'antd';\nlet arrKey = [];\nlet countEnter = 0;\nlet indexChar = 0;\nlet textReplace = '';\n\nconst EditorSummernote = props => {\n  const {\n    getDataEditor,\n    isReset,\n    questionContent,\n    addQuestion,\n    deleteSingleQuestion,\n    deleteAllQuestion,\n    questionData,\n    visible\n  } = props; // -- For add space --\n\n  const {\n    0: valueEditor,\n    1: setValueEditor\n  } = useState(questionContent);\n  const {\n    0: propetyEditor,\n    1: setPropetyEditor\n  } = useState({\n    textNode: null,\n    offset: null\n  });\n  const {\n    0: isFocus,\n    1: setIsFocus\n  } = useState(false);\n  const {\n    0: keyEditor,\n    1: setKeyEditor\n  } = useState({\n    id: null,\n    key: ''\n  });\n  const {\n    0: isAdd,\n    1: setIsAdd\n  } = useState(false);\n  const {\n    0: reloadContent,\n    1: setReloadContent\n  } = useState(false);\n  const {\n    0: listInput,\n    1: setListInput\n  } = useState([]);\n  const {\n    0: changePosition,\n    1: setChangePosition\n  } = useState(false);\n  const {\n    0: saveID,\n    1: setSaveID\n  } = useState(null); // -- For translate --\n\n  const {\n    0: textSelect,\n    1: setTextSelect\n  } = useState(null);\n  const {\n    0: textTranslate,\n    1: setTextTranslate\n  } = useState(null);\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: dataTranslate,\n    1: setDataTranslate\n  } = useState([]);\n  const {\n    0: isAddTranslate,\n    1: setIsAddTranslate\n  } = useState(false);\n  const {\n    0: reloadTranslate,\n    1: setReloadTranslate\n  } = useState(false); // console.log(\"Propety: \", propetyEditor);\n  // console.log(\"Value editor: \", valueEditor);\n  // console.log('Count Enter: ', countEnter);\n  // console.log(\"Position is: \", position);\n  // console.log('Key Editor: ', keyEditor);\n  // console.log(\"List Input: \", listInput);\n  // console.log(\"Is Focus: \", isFocus);\n  // console.log(\"Index Char:  \", indexChar);\n  // console.log('List input: ', listInput);\n  // console.log(\"Text Replace: \", textReplace);\n  // console.log('Save Id is: ', saveID);\n  // ================= FOR TRANSLATE ===================\n\n  const showModal = type => {\n    setIsModalVisible(true);\n\n    if (type == 'add') {\n      setIsAddTranslate(true);\n    } else {\n      setIsAddTranslate(false);\n    }\n  };\n\n  const handleOk = () => {\n    if (isAddTranslate) {\n      if (textSelect) {\n        handleAddTranslate();\n      }\n    } else {\n      handleFixTranslate();\n    }\n\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    setTextSelect(null);\n    setTextTranslate(null);\n  }; // GET TRANSLATE TEXT\n\n\n  const onChange_GetTranslateText = e => {\n    let text = e.target.value;\n    setTextTranslate(text);\n  };\n\n  const onKeyDownInput = e => {\n    if (e.key === 'Enter') {\n      handleAddTranslate();\n      setIsModalVisible(false);\n    }\n  }; // HANDLE FIX TRANSLATE\n\n\n  const handleFixTranslate = () => {\n    let elementNote = document.querySelectorAll('#editor-element .note-editable .text-note-of-translate');\n    elementNote.forEach((item, index) => {\n      let noteID = parseInt(item.getAttribute('data-note'));\n      let textItem = item.innerHTML;\n      let indexData = dataTranslate.findIndex(e => e.noteID === noteID);\n\n      if (dataTranslate[indexData].textTranslate !== textItem) {\n        item.innerHTML = dataTranslate[indexData].textTranslate;\n        item.setAttribute('title', dataTranslate[indexData].textTranslate);\n      }\n    });\n    setReloadTranslate(true);\n  }; // HANDLE ADD TRANSLATE\n\n\n  const handleAddTranslate = () => {\n    let elementEditor = document.querySelectorAll('#editor-element .note-editable');\n    let elementP = document.querySelectorAll('#editor-element .note-editable p');\n\n    const onAdd = item => {\n      let innerText = item.innerHTML;\n\n      if (innerText.includes(textSelect)) {\n        let noteID = null;\n\n        if (dataTranslate.length < 1) {\n          noteID = 0;\n        } else {\n          noteID = dataTranslate[dataTranslate.length - 1].noteID + 1;\n        }\n\n        item.innerHTML = innerText.replace(textSelect, `<input class=\"input-prevent-translate\"/><span title=\"${textTranslate}\" class=\"text-normal-of-translate\">${textSelect}<span data-note=\"${noteID}\" class=\"text-note-of-translate\">${textTranslate}</span></span><input class=\"input-prevent-translate\"/>`);\n        dataTranslate.push({\n          noteID: noteID,\n          textSelect: textSelect,\n          textTranslate: textTranslate\n        });\n        setDataTranslate([...dataTranslate]);\n      }\n    };\n\n    if (elementP.length > 0) {\n      elementP.forEach(item => {\n        onAdd(item);\n      });\n    } else {\n      onAdd(elementEditor[0]);\n    }\n\n    setTextTranslate(null);\n    setTextSelect(null);\n    setReloadTranslate(true);\n  };\n\n  const onFixTextTranslate = (e, noteID) => {\n    let text = e.target.value;\n    let index = dataTranslate.findIndex(item => item.noteID == noteID);\n    console.log('Index: ', index);\n    dataTranslate[index].textTranslate = text;\n    setDataTranslate([...dataTranslate]);\n  };\n\n  useEffect(() => {\n    let getNodes = str => new DOMParser().parseFromString(str, 'text/html').body.childNodes;\n\n    let editorElement = document.getElementById('editor-element');\n    editorElement.addEventListener('mouseup', e => {\n      var sel = window.getSelection && window.getSelection();\n\n      if (sel && sel.rangeCount > 0) {\n        let textSelect = window.getSelection().toString();\n        setTextSelect(textSelect);\n      }\n    });\n  }); // ================= FOR ADD SPACE ===================\n\n  const formatKey = e => {\n    console.log('KEY CODE: ', e.keyCode);\n\n    switch (e.keyCode) {\n      case 16:\n        console.log('key 16');\n        arrKey.splice(arrKey.length - 1, 1);\n        break;\n\n      case 8:\n        // backspace\n        arrKey.splice(arrKey.length - 1, 1);\n        indexChar--;\n\n        if (indexChar < 0) {\n          countEnter--;\n\n          if (countEnter < 0) {\n            countEnter = 0;\n          }\n\n          indexChar = 0;\n        }\n\n        textReplace = textReplace.slice(0, indexChar) + textReplace.slice(indexChar + 1);\n        break;\n\n      case 13:\n        // enter\n        countEnter++;\n        arrKey = [];\n        break;\n\n      default:\n        indexChar++;\n        arrKey.push(e.key);\n        break;\n    } // Remove backspace khỏi mảng\n\n\n    let newArr = arrKey.filter(item => item !== 'Backspace'); // Bóc tách và xóa backspace\n\n    for (let i = 0; i < 10; i++) {\n      if (newArr[newArr.length - 1] == ' ') {\n        newArr.splice(newArr.length - 1, 1);\n      } else {\n        break;\n      }\n    }\n\n    for (let i = 0; i < 5; i++) {\n      if (newArr[0] == ' ') {\n        newArr.splice(0, 1);\n      } else {\n        break;\n      }\n    }\n\n    return newArr;\n  }; // ON KEY UP\n\n\n  const onKeyDown = e => {\n    let node = null;\n    let id = null; // Get id of element\n\n    if (e.currentTarget.childNodes.length > 0) {\n      node = e.currentTarget.childNodes[countEnter]; // if (node && e.currentTarget.childNodes.length == 1) {\n      //   node.id = countEnter;\n      // }\n\n      if (node) {\n        id = node.id;\n      }\n    } // Get array character\n\n\n    let arrChar = formatKey(e); // Get key and set state\n\n    let key = arrChar.join('');\n    setKeyEditor({\n      id: id,\n      key: key\n    }); // Reset propety editor\n    // setPropetyEditor({\n    //   textNode: null,\n    //   offset: null,\n    // });\n  }; // ON CHANGE\n\n\n  const onChange = content => {\n    setIsFocus(false);\n    setIsAdd(false);\n    getDataEditor(content);\n    setValueEditor(content);\n  }; // ON FOCUS\n\n\n  const onFocus = e => {\n    countEnter = e.target.id; // setKeyEditor({\n    //   ...keyEditor,\n    //   id: e.target.id,\n    // });\n\n    setIsFocus(true);\n    setIsAdd(false);\n    let range;\n    let textNode;\n    let offset;\n\n    if (document.caretRangeFromPoint) {\n      range = document.caretRangeFromPoint(e.clientX, e.clientY);\n      textNode = range.startContainer;\n      offset = range.startOffset; //@ts-ignore\n    } else if (document.caretPositionFromPoint) {\n      //@ts-ignore\n      range = document.caretPositionFromPoint(e.clientX, e.clientY);\n      textNode = range.offsetNode;\n      offset = range.offset;\n    } else {\n      return;\n    }\n\n    if (range.startContainer.previousSibling || range.startContainer.nextSibling) {\n      textReplace = range.startContainer.textContent;\n      textReplace = textReplace.substring(0, textReplace.length - 1);\n    }\n\n    indexChar = offset;\n    setPropetyEditor({\n      textNode: textNode,\n      offset: offset\n    });\n  }; // Thao tác click add input vào đoạn văn\n\n\n  const handleAddSpace = () => {\n    console.log('handleAddSpace');\n    console.log('valueEditor: ', valueEditor); // onChange(valueEditor + ' ');\n    // On add space\n\n    const onAddSpace = () => {\n      // Set id for input\n      let inputID = createInputID();\n      let indexInput = listInput.indexOf(inputID); // On add space\n\n      let replacement = propetyEditor.textNode.splitText(propetyEditor.offset);\n      let inputE = document.createElement('input');\n      inputE.id = inputID.toString();\n      inputE.className = 'space-editor';\n      inputE.setAttribute('placeholder', `(${(indexInput + 1).toString()})`); // inputE.innerText = `(${(indexInput + 1).toString()})`;\n      // inputE.setAttribute(\"role\", \"textbox\");\n      // inputE.setAttribute(\"aria-labelledby\", \"txtboxLabel\");\n      // inputE.setAttribute(\"aria-multiline\", \"true\");\n      // inputE.setAttribute(\"contentEditable\", \"true\");\n\n      propetyEditor.textNode.parentNode.insertBefore(inputE, replacement); // Reload Content\n\n      setReloadContent(true);\n      setTimeout(() => {\n        setReloadContent(false);\n      }, 200);\n    }; // ---------------------//\n\n\n    if (!isFocus) {\n      setIsAdd(true);\n    } else {\n      if (propetyEditor.textNode && propetyEditor.textNode.nodeType == 3) {\n        onAddSpace();\n      }\n    }\n  }; // UPLOAD IMAGES\n\n\n  const onImageUpload = async fileList => {\n    try {\n      let res = await studentApi.uploadImage(fileList[0]);\n\n      if (res.status == 200) {\n        ReactSummernote.insertImage(res.data.data);\n      }\n    } catch (error) {} finally {}\n  }; // ======== CREATE INPUT ID ==========\n\n\n  const createInputID = () => {\n    let inputID = null; // Check add set id for input\n\n    if (listInput.length == 0) {\n      if (saveID) {\n        inputID = saveID + 1;\n      } else {\n        inputID = 0;\n      }\n    } else {\n      let max = Math.max(...listInput);\n      inputID = max + 1;\n    }\n\n    listInput.push(inputID);\n    setListInput([...listInput]);\n    return inputID;\n  }; // HANDLE RESET\n\n\n  useEffect(() => {\n    isReset && (ReactSummernote.reset(), setValueEditor(''), setListInput([]));\n  }, [isReset]); // Function any handle delete\n\n  const anyHandleDelete = () => {\n    setListInput([]);\n    countEnter = 0;\n    arrKey = [];\n    deleteAllQuestion && deleteAllQuestion();\n    setKeyEditor({\n      id: null,\n      key: ''\n    });\n  }; // ========================== ACTION WHEN CHANGE VALUE =======================================\n\n\n  useEffect(() => {\n    let editor = document.querySelectorAll('.note-editable');\n    let tagP = document.querySelectorAll('.note-editable p'); // Get node element in editor\n\n    let spaceEditor = document.querySelectorAll('.note-editable .space-editor'); // Check space is deleted\n\n    let newList = [];\n\n    if (spaceEditor) {\n      spaceEditor.forEach(item => {\n        item.id && newList.push(item.id);\n      });\n    }\n\n    if (listInput.length > 0) {\n      let difID = listInput.filter(x => !newList.includes(x.toString()));\n      console.log('DIF ID: ', difID);\n\n      if (difID.length > 0) {\n        deleteSingleQuestion && deleteSingleQuestion(difID[0]); // xóa câu hỏi ở ngoài\n\n        let indexID = listInput.indexOf(difID[0]);\n        listInput.splice(indexID, 1);\n        setListInput([...listInput]); // Kiểm tra và thay đổi vị trí của các ô input\n\n        setChangePosition(true);\n      }\n    } // Check delete all\n\n\n    if (editor[0].childNodes.length == 0) {\n      anyHandleDelete();\n    } else {\n      let isEmpty = true;\n      editor[0].childNodes.forEach((item, index) => {\n        let node = editor[0].children[index];\n\n        if ((node === null || node === void 0 ? void 0 : node.innerHTML) !== '<br>' && (node === null || node === void 0 ? void 0 : node.innerHTML) !== ' ') {\n          isEmpty = false;\n        }\n      });\n\n      if (isEmpty) {\n        anyHandleDelete();\n      }\n    }\n\n    if (tagP.length > 0) {\n      tagP.forEach((item, index) => {\n        // CHECK ITEM HAVE ID OR NOT => AND ADD ID FOR ITEM\n        item.id = index.toString(); // CHECK IF HAVE \"SPAN\" IN TAG P\n\n        if (item.children.length > 0) {\n          let node = item.children[0];\n\n          if (node && node.nodeName == 'SPAN') {\n            item.innerHTML = node.innerHTML;\n          }\n        } // ON CLICK HTML NODE\n\n\n        item.addEventListener('click', e => {\n          onFocus(e);\n          arrKey = [];\n          return false;\n        });\n      });\n    } else {\n      // check trường hợp trong editable là SPAN\n      editor[0].addEventListener('click', e => {\n        onFocus(e);\n        arrKey = [];\n        return false;\n      });\n    }\n  }, [valueEditor]);\n\n  function replaceNbsps(str) {\n    var re = new RegExp(String.fromCharCode(160), 'g');\n    return str.replace(re, ' ');\n  }\n\n  console.log('Key editor outside: ', keyEditor); // ========================== HANDLE ADD INPUT =======================================\n\n  useEffect(() => {\n    if (isAdd) {\n      let inputID = createInputID();\n      let indexInput = listInput.indexOf(inputID);\n      let editable = document.querySelectorAll('.note-editable');\n      let tagP = document.querySelectorAll('.note-editable p'); // Sau khi backspace tất cả thì mất phần tử <p> => check xem nếu ko tồn tại thì add space thẳng trong editor và ngược lại\n\n      if (tagP.length == 0) {\n        let content = editable[0].innerHTML;\n        console.log('Check content trong này: ', content);\n        content = content.replace(keyEditor.key, keyEditor.key + `<input id=\"${inputID}\" class='space-editor' placeholder=\"(${indexInput + 1})\">`);\n        console.log('Key editor: ', keyEditor.key);\n        console.log('Content lúc sau: ', content);\n        editable[0].innerHTML = content;\n      } else {\n        tagP.forEach(item => {\n          if (item.id === keyEditor.id) {\n            let content = item.innerHTML;\n            content = content.replace('&nbsp;', ' '); // --- Check empty key ---\n\n            if (keyEditor.key == '') {\n              // TH1: nếu trong text đã có input, sau khi click gần đó thì vị trí bắt đầu tính từ input trở đi nên phải kiểm tra\n              if (content.includes('space-editor')) {\n                let arrTextReplace = textReplace.split('');\n                arrTextReplace.splice(indexChar, 0, `<input id=\"${inputID}\" class='space-editor' placeholder=\"(${indexInput + 1})\">`);\n                let stringTextReplace = arrTextReplace.join('');\n                content = content.replace(textReplace, stringTextReplace);\n              } else {\n                let newContent = content.split('');\n                newContent.splice(indexChar, 0, `<input id=\"${inputID}\" class='space-editor' placeholder=\"(${indexInput + 1})\">`);\n                content = newContent.join('');\n              }\n            } else {\n              content = content.replace(keyEditor.key, keyEditor.key + `<input id=\"${inputID}\" class='space-editor' placeholder=\"(${indexInput + 1})\">`);\n            }\n\n            item.innerHTML = content;\n          }\n        });\n      } // Reset content\n\n\n      setReloadContent(true);\n      setTimeout(() => {\n        setReloadContent(false);\n      }, 200);\n    }\n  }, [isAdd]); // ========================== RELOAD CONTENT =======================================\n\n  useEffect(() => {\n    let spaceEditor = document.querySelectorAll('.note-editable .space-editor'); // Trường hợp các câu hỏi đã có id mới và cần làm mới lại\n\n    if (saveID == null) {\n      if ((spaceEditor === null || spaceEditor === void 0 ? void 0 : spaceEditor.length) > 0) {\n        spaceEditor.forEach((item, index) => {\n          let id = parseInt(item.id);\n\n          if (!listInput.includes(id)) {\n            listInput.push(id);\n            setListInput([...listInput]);\n            setSaveID(Math.max(...listInput));\n          }\n        });\n      }\n    }\n\n    if (reloadContent) {\n      arrKey = [];\n      setKeyEditor(_objectSpread(_objectSpread({}, keyEditor), {}, {\n        key: ''\n      }));\n      let allContentNode = document.querySelectorAll('.note-editable');\n      let allContent = allContentNode[0].innerHTML;\n      getDataEditor(allContent);\n      setValueEditor(allContent); // Check and add - Check nếu hiện space trong đoạn văn mới add thêm câu hỏi\n\n      let newList = [];\n      spaceEditor.forEach((item, index) => {\n        newList.push(parseInt(item.id));\n\n        if (parseInt(item.id) === listInput[listInput.length - 1]) {\n          addQuestion && addQuestion(listInput[listInput.length - 1]);\n        }\n      });\n\n      if (!newList.includes(listInput[listInput.length - 1])) {\n        listInput.splice(-1);\n        setListInput([...listInput]);\n      }\n    }\n  }, [reloadContent]);\n  useEffect(() => {\n    if (reloadTranslate) {\n      let allContentNode = document.querySelectorAll('.note-editable');\n      let allContent = allContentNode[0].innerHTML;\n      getDataEditor(allContent);\n      setValueEditor(allContent);\n      setReloadTranslate(false);\n    }\n  }, [reloadTranslate]); // ================ CHECK AND CHANGE POSITION WHEN DELTE 1 INPUT ===================\n\n  useEffect(() => {\n    let spaceEditor = document.querySelectorAll('.note-editable .space-editor');\n\n    if (changePosition) {\n      if (spaceEditor.length > 0) {\n        spaceEditor.forEach((item, index) => {\n          if (listInput.includes(parseInt(item.id))) {\n            let index = listInput.indexOf(parseInt(item.id));\n            item.setAttribute('placeholder', `(${(index + 1).toString()})`);\n          }\n        });\n      }\n\n      setChangePosition(false);\n    }\n  }, [changePosition]);\n  useEffect(() => {\n    if (!visible) {\n      ReactSummernote.reset(), setValueEditor('');\n    } else {\n      let editor = document.querySelectorAll('.note-editable'); // Thay thẻ div = input\n\n      let cloneValueEditor = valueEditor;\n\n      if ((questionData === null || questionData === void 0 ? void 0 : questionData.ExerciseList.length) > 0) {\n        questionData.ExerciseList.forEach(item => {\n          let indexInput = parseInt(item.inputID) + 1;\n          indexInput = indexInput.toString();\n          cloneValueEditor = cloneValueEditor.replace(`<div ques-id=\"${item.ID}\" id=\"${indexInput}\" class='space-editor' role='textbox' aria-labelledby='txtboxLabel' aria-multiline='true' contentEditable=\"true\">(${indexInput})</div>`, `<input id=\"${item.inputID}\" class=\"space-editor\" placeholder=\"(${indexInput})\">`);\n          console.log('Test: ', `<div ques-id=\"${item.ID}\" id=\"${indexInput}\" class=\"space-editor\" role=\"textbox\" aria-labelledby=\"txtboxLabel\" aria-multiline=\"true\" contenteditable=\"true\">(${indexInput})</div>`);\n          console.log('Data Clone: ', cloneValueEditor);\n        });\n        editor[0].innerHTML = cloneValueEditor;\n        setValueEditor(valueEditor);\n      } // if (valueEditor.includes('<div ques-id')) {\n      // \teditor[0].innerHTML = valueEditor.replace('<div ques-id', '<input ques-id');\n      // }\n\n    }\n  }, [visible]);\n  useEffect(() => {\n    let elementNote = document.querySelectorAll('#editor-element .note-editable .text-normal-of-translate');\n\n    if (elementNote.length > 0) {\n      elementNote.forEach(item => {\n        //@ts-ignore\n        let noteID = item.lastChild.attributes[0].nodeValue;\n        let textSelect = item.firstChild.nodeValue;\n        let textTranslate = item.lastChild.childNodes[0].nodeValue;\n        dataTranslate.push({\n          noteID: parseInt(noteID),\n          textSelect: textSelect,\n          textTranslate: textTranslate\n        });\n      });\n      setDataTranslate([...dataTranslate]);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Phi\\xEAn \\xE2m\",\n      visible: isModalVisible,\n      okText: \"L\\u01B0u\",\n      cancelText: \"H\\u1EE7y\",\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: isAddTranslate ? textSelect ? /*#__PURE__*/_jsxDEV(Input, {\n        autoFocus: true,\n        allowClear: true,\n        id: \"input-translate\",\n        className: \"style-input\",\n        value: textTranslate,\n        onChange: onChange_GetTranslateText,\n        onKeyDown: onKeyDownInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 500\n        },\n        children: \"Vui l\\xF2ng ch\\u1ECDn n\\u1ED9i dung c\\u1EA7n phi\\xEAn \\xE2m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-translate\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-center\",\n              children: \"N\\u1ED9i dung\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-center\",\n              children: \"Phi\\xEAn \\xE2m\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: dataTranslate.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.textSelect\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"show-text-translate\",\n                  type: \"text\",\n                  value: item.textTranslate,\n                  onChange: e => {\n                    onFixTextTranslate(e, item.noteID);\n                  },\n                  onKeyDown: e => {\n                    if (e.key === 'Enter') {\n                      handleFixTranslate();\n                      setIsModalVisible(false);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 11\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 10\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-editor custom\",\n      id: \"editor-element\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-editor add-translate d-flex align-items-center\",\n        onClick: () => showModal('add'),\n        children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 6\n        }, this), \" Th\\xEAm Phi\\xEAn \\xE2m\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-editor fix-translate d-flex align-items-center\",\n        onClick: () => showModal('fix'),\n        children: [/*#__PURE__*/_jsxDEV(EditOutlined, {\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 6\n        }, this), \" S\\u1EEDa phi\\xEAn \\xE2m\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-editor d-flex align-items-center\",\n        onClick: handleAddSpace,\n        children: [/*#__PURE__*/_jsxDEV(BorderOutlined, {\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 6\n        }, this), \" Th\\xEAm input\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ReactSummernote, {\n        value: valueEditor,\n        children: ReactHtmlParser(valueEditor) // onFocus={onFocus}\n        ,\n        options: {\n          lang: 'vn',\n          height: 220,\n          dialogsInBody: true,\n          toolbar: [['style', ['style']], ['font', ['bold', 'underline', 'clear']], ['fontname', ['fontname']], ['para', ['ul', 'ol', 'paragraph']], ['table', ['table']], ['insert', ['link', 'picture', 'video']], ['view', ['fullscreen', 'codeview']]]\n        },\n        onChange: content => onChange(content),\n        onKeyDown: onKeyDown,\n        onImageUpload: onImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport default EditorSummernote;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Elements/Editor/Editor.tsx"],"names":["React","useEffect","useState","ReactSummernote","studentApi","ReactHtmlParser","BorderOutlined","EditOutlined","PlusOutlined","Modal","Input","arrKey","countEnter","indexChar","textReplace","EditorSummernote","props","getDataEditor","isReset","questionContent","addQuestion","deleteSingleQuestion","deleteAllQuestion","questionData","visible","valueEditor","setValueEditor","propetyEditor","setPropetyEditor","textNode","offset","isFocus","setIsFocus","keyEditor","setKeyEditor","id","key","isAdd","setIsAdd","reloadContent","setReloadContent","listInput","setListInput","changePosition","setChangePosition","saveID","setSaveID","textSelect","setTextSelect","textTranslate","setTextTranslate","isModalVisible","setIsModalVisible","dataTranslate","setDataTranslate","isAddTranslate","setIsAddTranslate","reloadTranslate","setReloadTranslate","showModal","type","handleOk","handleAddTranslate","handleFixTranslate","handleCancel","onChange_GetTranslateText","e","text","target","value","onKeyDownInput","elementNote","document","querySelectorAll","forEach","item","index","noteID","parseInt","getAttribute","textItem","innerHTML","indexData","findIndex","setAttribute","elementEditor","elementP","onAdd","innerText","includes","length","replace","push","onFixTextTranslate","console","log","getNodes","str","DOMParser","parseFromString","body","childNodes","editorElement","getElementById","addEventListener","sel","window","getSelection","rangeCount","toString","formatKey","keyCode","splice","slice","newArr","filter","i","onKeyDown","node","currentTarget","arrChar","join","onChange","content","onFocus","range","caretRangeFromPoint","clientX","clientY","startContainer","startOffset","caretPositionFromPoint","offsetNode","previousSibling","nextSibling","textContent","substring","handleAddSpace","onAddSpace","inputID","createInputID","indexInput","indexOf","replacement","splitText","inputE","createElement","className","parentNode","insertBefore","setTimeout","nodeType","onImageUpload","fileList","res","uploadImage","status","insertImage","data","error","max","Math","reset","anyHandleDelete","editor","tagP","spaceEditor","newList","difID","x","indexID","isEmpty","children","nodeName","replaceNbsps","re","RegExp","String","fromCharCode","editable","arrTextReplace","split","stringTextReplace","newContent","allContentNode","allContent","cloneValueEditor","ExerciseList","ID","lastChild","attributes","nodeValue","firstChild","fontWeight","map","lang","height","dialogsInBody","toolbar"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport ReactSummernote from 'react-summernote'\r\nimport 'react-summernote/dist/react-summernote.css'\r\nimport 'react-summernote/lang/summernote-ru-RU'\r\nimport { studentApi } from '~/apiBase'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport 'bootstrap/js/src/modal'\r\nimport 'bootstrap/js/src/dropdown'\r\nimport 'bootstrap/js/src/tooltip'\r\nimport { BorderOutlined, EditOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport { Modal, Input } from 'antd'\r\n\r\nlet arrKey = []\r\nlet countEnter = 0\r\nlet indexChar = 0\r\nlet textReplace = ''\r\n\r\ntype dataTranslate = Array<{\r\n\tnoteID: number\r\n\ttextSelect: string\r\n\ttextTranslate: string\r\n}>\r\n\r\nconst EditorSummernote = (props) => {\r\n\tconst { getDataEditor, isReset, questionContent, addQuestion, deleteSingleQuestion, deleteAllQuestion, questionData, visible } = props\r\n\r\n\t// -- For add space --\r\n\tconst [valueEditor, setValueEditor] = useState(questionContent)\r\n\tconst [propetyEditor, setPropetyEditor] = useState({\r\n\t\ttextNode: null,\r\n\t\toffset: null\r\n\t})\r\n\tconst [isFocus, setIsFocus] = useState(false)\r\n\tconst [keyEditor, setKeyEditor] = useState({\r\n\t\tid: null,\r\n\t\tkey: ''\r\n\t})\r\n\tconst [isAdd, setIsAdd] = useState(false)\r\n\tconst [reloadContent, setReloadContent] = useState(false)\r\n\tconst [listInput, setListInput] = useState<Array<number>>([])\r\n\tconst [changePosition, setChangePosition] = useState(false)\r\n\tconst [saveID, setSaveID] = useState(null)\r\n\r\n\t// -- For translate --\r\n\tconst [textSelect, setTextSelect] = useState(null)\r\n\tconst [textTranslate, setTextTranslate] = useState(null)\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst [dataTranslate, setDataTranslate] = useState<dataTranslate>([])\r\n\tconst [isAddTranslate, setIsAddTranslate] = useState(false)\r\n\tconst [reloadTranslate, setReloadTranslate] = useState(false)\r\n\r\n\t// console.log(\"Propety: \", propetyEditor);\r\n\t// console.log(\"Value editor: \", valueEditor);\r\n\t// console.log('Count Enter: ', countEnter);\r\n\t// console.log(\"Position is: \", position);\r\n\t// console.log('Key Editor: ', keyEditor);\r\n\t// console.log(\"List Input: \", listInput);\r\n\t// console.log(\"Is Focus: \", isFocus);\r\n\t// console.log(\"Index Char:  \", indexChar);\r\n\t// console.log('List input: ', listInput);\r\n\t// console.log(\"Text Replace: \", textReplace);\r\n\t// console.log('Save Id is: ', saveID);\r\n\r\n\t// ================= FOR TRANSLATE ===================\r\n\tconst showModal = (type) => {\r\n\t\tsetIsModalVisible(true)\r\n\t\tif (type == 'add') {\r\n\t\t\tsetIsAddTranslate(true)\r\n\t\t} else {\r\n\t\t\tsetIsAddTranslate(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleOk = () => {\r\n\t\tif (isAddTranslate) {\r\n\t\t\tif (textSelect) {\r\n\t\t\t\thandleAddTranslate()\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\thandleFixTranslate()\r\n\t\t}\r\n\t\tsetIsModalVisible(false)\r\n\t}\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false)\r\n\t\tsetTextSelect(null)\r\n\t\tsetTextTranslate(null)\r\n\t}\r\n\r\n\t// GET TRANSLATE TEXT\r\n\tconst onChange_GetTranslateText = (e) => {\r\n\t\tlet text = e.target.value\r\n\t\tsetTextTranslate(text)\r\n\t}\r\n\r\n\tconst onKeyDownInput = (e) => {\r\n\t\tif (e.key === 'Enter') {\r\n\t\t\thandleAddTranslate()\r\n\t\t\tsetIsModalVisible(false)\r\n\t\t}\r\n\t}\r\n\r\n\t// HANDLE FIX TRANSLATE\r\n\tconst handleFixTranslate = () => {\r\n\t\tlet elementNote = document.querySelectorAll('#editor-element .note-editable .text-note-of-translate')\r\n\t\telementNote.forEach((item, index) => {\r\n\t\t\tlet noteID = parseInt(item.getAttribute('data-note'))\r\n\t\t\tlet textItem = item.innerHTML\r\n\r\n\t\t\tlet indexData = dataTranslate.findIndex((e) => e.noteID === noteID)\r\n\t\t\tif (dataTranslate[indexData].textTranslate !== textItem) {\r\n\t\t\t\titem.innerHTML = dataTranslate[indexData].textTranslate\r\n\t\t\t\titem.setAttribute('title', dataTranslate[indexData].textTranslate)\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetReloadTranslate(true)\r\n\t}\r\n\r\n\t// HANDLE ADD TRANSLATE\r\n\tconst handleAddTranslate = () => {\r\n\t\tlet elementEditor = document.querySelectorAll('#editor-element .note-editable')\r\n\t\tlet elementP = document.querySelectorAll('#editor-element .note-editable p')\r\n\r\n\t\tconst onAdd = (item) => {\r\n\t\t\tlet innerText = item.innerHTML\r\n\t\t\tif (innerText.includes(textSelect)) {\r\n\t\t\t\tlet noteID = null\r\n\t\t\t\tif (dataTranslate.length < 1) {\r\n\t\t\t\t\tnoteID = 0\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnoteID = dataTranslate[dataTranslate.length - 1].noteID + 1\r\n\t\t\t\t}\r\n\r\n\t\t\t\titem.innerHTML = innerText.replace(\r\n\t\t\t\t\ttextSelect,\r\n\t\t\t\t\t`<input class=\"input-prevent-translate\"/><span title=\"${textTranslate}\" class=\"text-normal-of-translate\">${textSelect}<span data-note=\"${noteID}\" class=\"text-note-of-translate\">${textTranslate}</span></span><input class=\"input-prevent-translate\"/>`\r\n\t\t\t\t)\r\n\r\n\t\t\t\tdataTranslate.push({\r\n\t\t\t\t\tnoteID: noteID,\r\n\t\t\t\t\ttextSelect: textSelect,\r\n\t\t\t\t\ttextTranslate: textTranslate\r\n\t\t\t\t})\r\n\t\t\t\tsetDataTranslate([...dataTranslate])\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (elementP.length > 0) {\r\n\t\t\telementP.forEach((item) => {\r\n\t\t\t\tonAdd(item)\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tonAdd(elementEditor[0])\r\n\t\t}\r\n\r\n\t\tsetTextTranslate(null)\r\n\t\tsetTextSelect(null)\r\n\t\tsetReloadTranslate(true)\r\n\t}\r\n\r\n\tconst onFixTextTranslate = (e, noteID) => {\r\n\t\tlet text = e.target.value\r\n\t\tlet index = dataTranslate.findIndex((item) => item.noteID == noteID)\r\n\r\n\t\tconsole.log('Index: ', index)\r\n\r\n\t\tdataTranslate[index].textTranslate = text\r\n\t\tsetDataTranslate([...dataTranslate])\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tlet getNodes = (str) => new DOMParser().parseFromString(str, 'text/html').body.childNodes\r\n\r\n\t\tlet editorElement = document.getElementById('editor-element')\r\n\t\teditorElement.addEventListener('mouseup', (e) => {\r\n\t\t\tvar sel = window.getSelection && window.getSelection()\r\n\t\t\tif (sel && sel.rangeCount > 0) {\r\n\t\t\t\tlet textSelect = window.getSelection().toString()\r\n\t\t\t\tsetTextSelect(textSelect)\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n\r\n\t// ================= FOR ADD SPACE ===================\r\n\tconst formatKey = (e) => {\r\n\t\tconsole.log('KEY CODE: ', e.keyCode)\r\n\t\tswitch (e.keyCode) {\r\n\t\t\tcase 16:\r\n\t\t\t\tconsole.log('key 16')\r\n\t\t\t\tarrKey.splice(arrKey.length - 1, 1)\r\n\t\t\t\tbreak\r\n\t\t\tcase 8: // backspace\r\n\t\t\t\tarrKey.splice(arrKey.length - 1, 1)\r\n\r\n\t\t\t\tindexChar--\r\n\t\t\t\tif (indexChar < 0) {\r\n\t\t\t\t\tcountEnter--\r\n\t\t\t\t\tif (countEnter < 0) {\r\n\t\t\t\t\t\tcountEnter = 0\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindexChar = 0\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextReplace = textReplace.slice(0, indexChar) + textReplace.slice(indexChar + 1)\r\n\r\n\t\t\t\tbreak\r\n\t\t\tcase 13: // enter\r\n\t\t\t\tcountEnter++\r\n\t\t\t\tarrKey = []\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tindexChar++\r\n\t\t\t\tarrKey.push(e.key)\r\n\t\t\t\tbreak\r\n\t\t}\r\n\r\n\t\t// Remove backspace khỏi mảng\r\n\t\tlet newArr = arrKey.filter((item) => item !== 'Backspace')\r\n\r\n\t\t// Bóc tách và xóa backspace\r\n\t\tfor (let i = 0; i < 10; i++) {\r\n\t\t\tif (newArr[newArr.length - 1] == ' ') {\r\n\t\t\t\tnewArr.splice(newArr.length - 1, 1)\r\n\t\t\t} else {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < 5; i++) {\r\n\t\t\tif (newArr[0] == ' ') {\r\n\t\t\t\tnewArr.splice(0, 1)\r\n\t\t\t} else {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn newArr\r\n\t}\r\n\r\n\t// ON KEY UP\r\n\tconst onKeyDown = (e) => {\r\n\t\tlet node = null\r\n\t\tlet id = null\r\n\r\n\t\t// Get id of element\r\n\t\tif (e.currentTarget.childNodes.length > 0) {\r\n\t\t\tnode = e.currentTarget.childNodes[countEnter]\r\n\t\t\t// if (node && e.currentTarget.childNodes.length == 1) {\r\n\t\t\t//   node.id = countEnter;\r\n\t\t\t// }\r\n\t\t\tif (node) {\r\n\t\t\t\tid = node.id\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get array character\r\n\t\tlet arrChar = formatKey(e)\r\n\r\n\t\t// Get key and set state\r\n\t\tlet key = arrChar.join('')\r\n\t\tsetKeyEditor({\r\n\t\t\tid: id,\r\n\t\t\tkey: key\r\n\t\t})\r\n\r\n\t\t// Reset propety editor\r\n\t\t// setPropetyEditor({\r\n\t\t//   textNode: null,\r\n\t\t//   offset: null,\r\n\t\t// });\r\n\t}\r\n\r\n\t// ON CHANGE\r\n\tconst onChange = (content) => {\r\n\t\tsetIsFocus(false)\r\n\t\tsetIsAdd(false)\r\n\r\n\t\tgetDataEditor(content)\r\n\t\tsetValueEditor(content)\r\n\t}\r\n\r\n\t// ON FOCUS\r\n\tconst onFocus = (e) => {\r\n\t\tcountEnter = e.target.id\r\n\r\n\t\t// setKeyEditor({\r\n\t\t//   ...keyEditor,\r\n\t\t//   id: e.target.id,\r\n\t\t// });\r\n\r\n\t\tsetIsFocus(true)\r\n\t\tsetIsAdd(false)\r\n\r\n\t\tlet range\r\n\t\tlet textNode\r\n\t\tlet offset\r\n\r\n\t\tif (document.caretRangeFromPoint) {\r\n\t\t\trange = document.caretRangeFromPoint(e.clientX, e.clientY)\r\n\t\t\ttextNode = range.startContainer\r\n\r\n\t\t\toffset = range.startOffset\r\n\t\t\t//@ts-ignore\r\n\t\t} else if (document.caretPositionFromPoint) {\r\n\t\t\t//@ts-ignore\r\n\t\t\trange = document.caretPositionFromPoint(e.clientX, e.clientY)\r\n\r\n\t\t\ttextNode = range.offsetNode\r\n\t\t\toffset = range.offset\r\n\t\t} else {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (range.startContainer.previousSibling || range.startContainer.nextSibling) {\r\n\t\t\ttextReplace = range.startContainer.textContent\r\n\t\t\ttextReplace = textReplace.substring(0, textReplace.length - 1)\r\n\t\t}\r\n\t\tindexChar = offset\r\n\r\n\t\tsetPropetyEditor({\r\n\t\t\ttextNode: textNode,\r\n\t\t\toffset: offset\r\n\t\t})\r\n\t}\r\n\r\n\t// Thao tác click add input vào đoạn văn\r\n\tconst handleAddSpace = () => {\r\n\t\tconsole.log('handleAddSpace')\r\n\t\tconsole.log('valueEditor: ', valueEditor)\r\n\r\n\t\t// onChange(valueEditor + ' ');\r\n\r\n\t\t// On add space\r\n\t\tconst onAddSpace = () => {\r\n\t\t\t// Set id for input\r\n\t\t\tlet inputID = createInputID()\r\n\t\t\tlet indexInput = listInput.indexOf(inputID)\r\n\r\n\t\t\t// On add space\r\n\t\t\tlet replacement = propetyEditor.textNode.splitText(propetyEditor.offset)\r\n\t\t\tlet inputE = document.createElement('input')\r\n\t\t\tinputE.id = inputID.toString()\r\n\t\t\tinputE.className = 'space-editor'\r\n\t\t\tinputE.setAttribute('placeholder', `(${(indexInput + 1).toString()})`)\r\n\r\n\t\t\t// inputE.innerText = `(${(indexInput + 1).toString()})`;\r\n\t\t\t// inputE.setAttribute(\"role\", \"textbox\");\r\n\t\t\t// inputE.setAttribute(\"aria-labelledby\", \"txtboxLabel\");\r\n\t\t\t// inputE.setAttribute(\"aria-multiline\", \"true\");\r\n\t\t\t// inputE.setAttribute(\"contentEditable\", \"true\");\r\n\t\t\tpropetyEditor.textNode.parentNode.insertBefore(inputE, replacement)\r\n\r\n\t\t\t// Reload Content\r\n\t\t\tsetReloadContent(true)\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetReloadContent(false)\r\n\t\t\t}, 200)\r\n\t\t}\r\n\t\t// ---------------------//\r\n\r\n\t\tif (!isFocus) {\r\n\t\t\tsetIsAdd(true)\r\n\t\t} else {\r\n\t\t\tif (propetyEditor.textNode && propetyEditor.textNode.nodeType == 3) {\r\n\t\t\t\tonAddSpace()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// UPLOAD IMAGES\r\n\tconst onImageUpload = async (fileList) => {\r\n\t\ttry {\r\n\t\t\tlet res = await studentApi.uploadImage(fileList[0])\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tReactSummernote.insertImage(res.data.data)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t}\r\n\t}\r\n\r\n\t// ======== CREATE INPUT ID ==========\r\n\tconst createInputID = () => {\r\n\t\tlet inputID = null\r\n\t\t// Check add set id for input\r\n\t\tif (listInput.length == 0) {\r\n\t\t\tif (saveID) {\r\n\t\t\t\tinputID = saveID + 1\r\n\t\t\t} else {\r\n\t\t\t\tinputID = 0\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet max = Math.max(...listInput)\r\n\t\t\tinputID = max + 1\r\n\t\t}\r\n\r\n\t\tlistInput.push(inputID)\r\n\t\tsetListInput([...listInput])\r\n\r\n\t\treturn inputID\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tuseEffect(() => {\r\n\t\tisReset && (ReactSummernote.reset(), setValueEditor(''), setListInput([]))\r\n\t}, [isReset])\r\n\r\n\t// Function any handle delete\r\n\tconst anyHandleDelete = () => {\r\n\t\tsetListInput([])\r\n\t\tcountEnter = 0\r\n\t\tarrKey = []\r\n\t\tdeleteAllQuestion && deleteAllQuestion()\r\n\t\tsetKeyEditor({\r\n\t\t\tid: null,\r\n\t\t\tkey: ''\r\n\t\t})\r\n\t}\r\n\r\n\t// ========================== ACTION WHEN CHANGE VALUE =======================================\r\n\tuseEffect(() => {\r\n\t\tlet editor = document.querySelectorAll('.note-editable')\r\n\t\tlet tagP = document.querySelectorAll('.note-editable p') // Get node element in editor\r\n\t\tlet spaceEditor = document.querySelectorAll('.note-editable .space-editor')\r\n\r\n\t\t// Check space is deleted\r\n\t\tlet newList = []\r\n\t\tif (spaceEditor) {\r\n\t\t\tspaceEditor.forEach((item) => {\r\n\t\t\t\titem.id && newList.push(item.id)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (listInput.length > 0) {\r\n\t\t\tlet difID = listInput.filter((x) => !newList.includes(x.toString()))\r\n\r\n\t\t\tconsole.log('DIF ID: ', difID)\r\n\r\n\t\t\tif (difID.length > 0) {\r\n\t\t\t\tdeleteSingleQuestion && deleteSingleQuestion(difID[0]) // xóa câu hỏi ở ngoài\r\n\t\t\t\tlet indexID = listInput.indexOf(difID[0])\r\n\t\t\t\tlistInput.splice(indexID, 1)\r\n\t\t\t\tsetListInput([...listInput])\r\n\r\n\t\t\t\t// Kiểm tra và thay đổi vị trí của các ô input\r\n\t\t\t\tsetChangePosition(true)\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Check delete all\r\n\t\tif (editor[0].childNodes.length == 0) {\r\n\t\t\tanyHandleDelete()\r\n\t\t} else {\r\n\t\t\tlet isEmpty = true\r\n\t\t\teditor[0].childNodes.forEach((item, index) => {\r\n\t\t\t\tlet node = editor[0].children[index]\r\n\t\t\t\tif (node?.innerHTML !== '<br>' && node?.innerHTML !== ' ') {\r\n\t\t\t\t\tisEmpty = false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (isEmpty) {\r\n\t\t\t\tanyHandleDelete()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (tagP.length > 0) {\r\n\t\t\ttagP.forEach((item, index) => {\r\n\t\t\t\t// CHECK ITEM HAVE ID OR NOT => AND ADD ID FOR ITEM\r\n\t\t\t\titem.id = index.toString()\r\n\r\n\t\t\t\t// CHECK IF HAVE \"SPAN\" IN TAG P\r\n\t\t\t\tif (item.children.length > 0) {\r\n\t\t\t\t\tlet node = item.children[0]\r\n\t\t\t\t\tif (node && node.nodeName == 'SPAN') {\r\n\t\t\t\t\t\titem.innerHTML = node.innerHTML\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// ON CLICK HTML NODE\r\n\t\t\t\titem.addEventListener('click', (e) => {\r\n\t\t\t\t\tonFocus(e)\r\n\t\t\t\t\tarrKey = []\r\n\t\t\t\t\treturn false\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\t// check trường hợp trong editable là SPAN\r\n\t\t\teditor[0].addEventListener('click', (e) => {\r\n\t\t\t\tonFocus(e)\r\n\t\t\t\tarrKey = []\r\n\t\t\t\treturn false\r\n\t\t\t})\r\n\t\t}\r\n\t}, [valueEditor])\r\n\r\n\tfunction replaceNbsps(str) {\r\n\t\tvar re = new RegExp(String.fromCharCode(160), 'g')\r\n\t\treturn str.replace(re, ' ')\r\n\t}\r\n\r\n\tconsole.log('Key editor outside: ', keyEditor)\r\n\r\n\t// ========================== HANDLE ADD INPUT =======================================\r\n\tuseEffect(() => {\r\n\t\tif (isAdd) {\r\n\t\t\tlet inputID = createInputID()\r\n\t\t\tlet indexInput = listInput.indexOf(inputID)\r\n\r\n\t\t\tlet editable = document.querySelectorAll('.note-editable')\r\n\t\t\tlet tagP = document.querySelectorAll('.note-editable p')\r\n\r\n\t\t\t// Sau khi backspace tất cả thì mất phần tử <p> => check xem nếu ko tồn tại thì add space thẳng trong editor và ngược lại\r\n\t\t\tif (tagP.length == 0) {\r\n\t\t\t\tlet content = editable[0].innerHTML\r\n\r\n\t\t\t\tconsole.log('Check content trong này: ', content)\r\n\r\n\t\t\t\tcontent = content.replace(\r\n\t\t\t\t\tkeyEditor.key,\r\n\t\t\t\t\tkeyEditor.key + `<input id=\"${inputID}\" class='space-editor' placeholder=\"(${indexInput + 1})\">`\r\n\t\t\t\t)\r\n\r\n\t\t\t\tconsole.log('Key editor: ', keyEditor.key)\r\n\t\t\t\tconsole.log('Content lúc sau: ', content)\r\n\r\n\t\t\t\teditable[0].innerHTML = content\r\n\t\t\t} else {\r\n\t\t\t\ttagP.forEach((item) => {\r\n\t\t\t\t\tif (item.id === keyEditor.id) {\r\n\t\t\t\t\t\tlet content = item.innerHTML\r\n\t\t\t\t\t\tcontent = content.replace('&nbsp;', ' ')\r\n\t\t\t\t\t\t// --- Check empty key ---\r\n\t\t\t\t\t\tif (keyEditor.key == '') {\r\n\t\t\t\t\t\t\t// TH1: nếu trong text đã có input, sau khi click gần đó thì vị trí bắt đầu tính từ input trở đi nên phải kiểm tra\r\n\t\t\t\t\t\t\tif (content.includes('space-editor')) {\r\n\t\t\t\t\t\t\t\tlet arrTextReplace = textReplace.split('')\r\n\r\n\t\t\t\t\t\t\t\tarrTextReplace.splice(indexChar, 0, `<input id=\"${inputID}\" class='space-editor' placeholder=\"(${indexInput + 1})\">`)\r\n\r\n\t\t\t\t\t\t\t\tlet stringTextReplace = arrTextReplace.join('')\r\n\r\n\t\t\t\t\t\t\t\tcontent = content.replace(textReplace, stringTextReplace)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlet newContent = content.split('')\r\n\t\t\t\t\t\t\t\tnewContent.splice(indexChar, 0, `<input id=\"${inputID}\" class='space-editor' placeholder=\"(${indexInput + 1})\">`)\r\n\t\t\t\t\t\t\t\tcontent = newContent.join('')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcontent = content.replace(\r\n\t\t\t\t\t\t\t\tkeyEditor.key,\r\n\t\t\t\t\t\t\t\tkeyEditor.key + `<input id=\"${inputID}\" class='space-editor' placeholder=\"(${indexInput + 1})\">`\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\titem.innerHTML = content\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t// Reset content\r\n\t\t\tsetReloadContent(true)\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetReloadContent(false)\r\n\t\t\t}, 200)\r\n\t\t}\r\n\t}, [isAdd])\r\n\r\n\t// ========================== RELOAD CONTENT =======================================\r\n\tuseEffect(() => {\r\n\t\tlet spaceEditor = document.querySelectorAll('.note-editable .space-editor')\r\n\r\n\t\t// Trường hợp các câu hỏi đã có id mới và cần làm mới lại\r\n\t\tif (saveID == null) {\r\n\t\t\tif (spaceEditor?.length > 0) {\r\n\t\t\t\tspaceEditor.forEach((item, index) => {\r\n\t\t\t\t\tlet id = parseInt(item.id)\r\n\t\t\t\t\tif (!listInput.includes(id)) {\r\n\t\t\t\t\t\tlistInput.push(id)\r\n\t\t\t\t\t\tsetListInput([...listInput])\r\n\t\t\t\t\t\tsetSaveID(Math.max(...listInput))\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (reloadContent) {\r\n\t\t\tarrKey = []\r\n\t\t\tsetKeyEditor({ ...keyEditor, key: '' })\r\n\t\t\tlet allContentNode = document.querySelectorAll('.note-editable')\r\n\t\t\tlet allContent = allContentNode[0].innerHTML\r\n\t\t\tgetDataEditor(allContent)\r\n\t\t\tsetValueEditor(allContent)\r\n\r\n\t\t\t// Check and add - Check nếu hiện space trong đoạn văn mới add thêm câu hỏi\r\n\t\t\tlet newList = []\r\n\t\t\tspaceEditor.forEach((item, index) => {\r\n\t\t\t\tnewList.push(parseInt(item.id))\r\n\t\t\t\tif (parseInt(item.id) === listInput[listInput.length - 1]) {\r\n\t\t\t\t\taddQuestion && addQuestion(listInput[listInput.length - 1])\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (!newList.includes(listInput[listInput.length - 1])) {\r\n\t\t\t\tlistInput.splice(-1)\r\n\t\t\t\tsetListInput([...listInput])\r\n\t\t\t}\r\n\t\t}\r\n\t}, [reloadContent])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (reloadTranslate) {\r\n\t\t\tlet allContentNode = document.querySelectorAll('.note-editable')\r\n\t\t\tlet allContent = allContentNode[0].innerHTML\r\n\t\t\tgetDataEditor(allContent)\r\n\t\t\tsetValueEditor(allContent)\r\n\t\t\tsetReloadTranslate(false)\r\n\t\t}\r\n\t}, [reloadTranslate])\r\n\r\n\t// ================ CHECK AND CHANGE POSITION WHEN DELTE 1 INPUT ===================\r\n\tuseEffect(() => {\r\n\t\tlet spaceEditor = document.querySelectorAll('.note-editable .space-editor')\r\n\t\tif (changePosition) {\r\n\t\t\tif (spaceEditor.length > 0) {\r\n\t\t\t\tspaceEditor.forEach((item, index) => {\r\n\t\t\t\t\tif (listInput.includes(parseInt(item.id))) {\r\n\t\t\t\t\t\tlet index = listInput.indexOf(parseInt(item.id))\r\n\t\t\t\t\t\titem.setAttribute('placeholder', `(${(index + 1).toString()})`)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tsetChangePosition(false)\r\n\t\t}\r\n\t}, [changePosition])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!visible) {\r\n\t\t\tReactSummernote.reset(), setValueEditor('')\r\n\t\t} else {\r\n\t\t\tlet editor = document.querySelectorAll('.note-editable')\r\n\r\n\t\t\t// Thay thẻ div = input\r\n\t\t\tlet cloneValueEditor = valueEditor\r\n\t\t\tif (questionData?.ExerciseList.length > 0) {\r\n\t\t\t\tquestionData.ExerciseList.forEach((item) => {\r\n\t\t\t\t\tlet indexInput: any = parseInt(item.inputID) + 1\r\n\t\t\t\t\tindexInput = indexInput.toString()\r\n\r\n\t\t\t\t\tcloneValueEditor = cloneValueEditor.replace(\r\n\t\t\t\t\t\t`<div ques-id=\"${item.ID}\" id=\"${indexInput}\" class='space-editor' role='textbox' aria-labelledby='txtboxLabel' aria-multiline='true' contentEditable=\"true\">(${indexInput})</div>`,\r\n\t\t\t\t\t\t`<input id=\"${item.inputID}\" class=\"space-editor\" placeholder=\"(${indexInput})\">`\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'Test: ',\r\n\t\t\t\t\t\t`<div ques-id=\"${item.ID}\" id=\"${indexInput}\" class=\"space-editor\" role=\"textbox\" aria-labelledby=\"txtboxLabel\" aria-multiline=\"true\" contenteditable=\"true\">(${indexInput})</div>`\r\n\t\t\t\t\t)\r\n\t\t\t\t\tconsole.log('Data Clone: ', cloneValueEditor)\r\n\t\t\t\t})\r\n\r\n\t\t\t\teditor[0].innerHTML = cloneValueEditor\r\n\t\t\t\tsetValueEditor(valueEditor)\r\n\t\t\t}\r\n\r\n\t\t\t// if (valueEditor.includes('<div ques-id')) {\r\n\t\t\t// \teditor[0].innerHTML = valueEditor.replace('<div ques-id', '<input ques-id');\r\n\t\t\t// }\r\n\t\t}\r\n\t}, [visible])\r\n\r\n\tuseEffect(() => {\r\n\t\tlet elementNote = document.querySelectorAll('#editor-element .note-editable .text-normal-of-translate')\r\n\r\n\t\tif (elementNote.length > 0) {\r\n\t\t\telementNote.forEach((item) => {\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tlet noteID = item.lastChild.attributes[0].nodeValue\r\n\t\t\t\tlet textSelect = item.firstChild.nodeValue\r\n\t\t\t\tlet textTranslate = item.lastChild.childNodes[0].nodeValue\r\n\t\t\t\tdataTranslate.push({\r\n\t\t\t\t\tnoteID: parseInt(noteID),\r\n\t\t\t\t\ttextSelect: textSelect,\r\n\t\t\t\t\ttextTranslate: textTranslate\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\tsetDataTranslate([...dataTranslate])\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal title=\"Phiên âm\" visible={isModalVisible} okText=\"Lưu\" cancelText=\"Hủy\" onOk={handleOk} onCancel={handleCancel}>\r\n\t\t\t\t{isAddTranslate ? (\r\n\t\t\t\t\ttextSelect ? (\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\tallowClear\r\n\t\t\t\t\t\t\tid=\"input-translate\"\r\n\t\t\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\t\t\tvalue={textTranslate}\r\n\t\t\t\t\t\t\tonChange={onChange_GetTranslateText}\r\n\t\t\t\t\t\t\tonKeyDown={onKeyDownInput}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p style={{ fontWeight: 500 }}>Vui lòng chọn nội dung cần phiên âm</p>\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"detail-translate\">\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<th className=\"text-center\">Nội dung</th>\r\n\t\t\t\t\t\t\t\t<th className=\"text-center\">Phiên âm</th>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{dataTranslate.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<td>{item.textSelect}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"show-text-translate\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={item.textTranslate}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFixTextTranslate(e, item.noteID)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonKeyDown={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleFixTranslate()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Modal>\r\n\t\t\t<div className=\"wrap-editor custom\" id=\"editor-element\">\r\n\t\t\t\t<button className=\"btn-editor add-translate d-flex align-items-center\" onClick={() => showModal('add')}>\r\n\t\t\t\t\t<PlusOutlined className=\"mr-2\" /> Thêm Phiên âm\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn-editor fix-translate d-flex align-items-center\" onClick={() => showModal('fix')}>\r\n\t\t\t\t\t<EditOutlined className=\"mr-2\" /> Sửa phiên âm\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn-editor d-flex align-items-center\" onClick={handleAddSpace}>\r\n\t\t\t\t\t<BorderOutlined className=\"mr-2\" /> Thêm input\r\n\t\t\t\t</button>\r\n\t\t\t\t<ReactSummernote\r\n\t\t\t\t\tvalue={valueEditor}\r\n\t\t\t\t\tchildren={ReactHtmlParser(valueEditor)}\r\n\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\tlang: 'vn',\r\n\t\t\t\t\t\theight: 220,\r\n\t\t\t\t\t\tdialogsInBody: true,\r\n\t\t\t\t\t\ttoolbar: [\r\n\t\t\t\t\t\t\t['style', ['style']],\r\n\t\t\t\t\t\t\t['font', ['bold', 'underline', 'clear']],\r\n\t\t\t\t\t\t\t['fontname', ['fontname']],\r\n\t\t\t\t\t\t\t['para', ['ul', 'ol', 'paragraph']],\r\n\t\t\t\t\t\t\t['table', ['table']],\r\n\t\t\t\t\t\t\t['insert', ['link', 'picture', 'video']],\r\n\t\t\t\t\t\t\t['view', ['fullscreen', 'codeview']]\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={(content) => onChange(content)}\r\n\t\t\t\t\tonKeyDown={onKeyDown}\r\n\t\t\t\t\tonImageUpload={onImageUpload}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default EditorSummernote\r\n"]},"metadata":{},"sourceType":"module"}
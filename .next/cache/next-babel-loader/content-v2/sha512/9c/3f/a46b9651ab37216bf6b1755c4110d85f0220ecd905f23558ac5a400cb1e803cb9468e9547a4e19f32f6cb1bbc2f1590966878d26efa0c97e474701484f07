{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\CourseList\\\\CourseListDetail\\\\NotificationCourse\\\\NotificationCourse.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { notificationCourseApi } from '~/apiBase/course-detail/notification-course';\nimport PowerTable from '~/components/PowerTable';\nimport { useWrap } from '~/context/wrap';\nimport NotificationCourseForm from './NotificationCourseForm';\nNotificationCourse.propTypes = {\n  courseID: PropTypes.number\n};\nNotificationCourse.defaultProps = {\n  courseID: 0\n};\n\nfunction NotificationCourse(props) {\n  const {\n    courseID\n  } = props;\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    0: notificationList,\n    1: setNotificationList\n  } = useState();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: 'GET_ALL',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const listFieldInit = {\n    pageSize: 10,\n    pageIndex: 1,\n    CourseID: courseID\n  };\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(listFieldInit); // PAGINATION\n\n  const getPagination = pageIndex => {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      pageIndex\n    }));\n  };\n\n  const getDataNotificationCourse = async () => {\n    try {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n      const res = await notificationCourseApi.getAll(filters);\n\n      if (res.status === 200) {\n        setNotificationList(res.data.data);\n        setTotalPage(res.data['TotalRow']);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    getDataNotificationCourse();\n  }, [filters]);\n\n  const onSubmit = async data => {\n    try {\n      setIsLoading({\n        type: 'ADD_NOTI',\n        status: true\n      });\n\n      const newData = _objectSpread(_objectSpread({}, data), {}, {\n        CourseID: courseID\n      });\n\n      const res = await notificationCourseApi.add(newData);\n\n      if (res.status === 200) {\n        showNoti('success', res.data.message);\n        setFilters(_objectSpread({}, listFieldInit));\n        return true;\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_NOTI',\n        status: false\n      });\n    }\n  };\n\n  const columns = [{\n    title: 'Thông báo qua email',\n    dataIndex: 'NotificationTitle',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Nội dung',\n    dataIndex: 'NotificationContent'\n  }, {\n    title: 'Người tạo',\n    dataIndex: 'CreatedBy'\n  }, {\n    title: 'Ngày tạo',\n    dataIndex: 'CreatedOn',\n    render: CreatedOn => moment(CreatedOn).format('DD/MM/YYYY')\n  }];\n  return /*#__PURE__*/_jsxDEV(PowerTable, {\n    currentPage: filters.pageIndex,\n    totalPage: totalPage,\n    getPagination: getPagination,\n    loading: isLoading,\n    addClass: \"basic-header\",\n    TitleCard: /*#__PURE__*/_jsxDEV(NotificationCourseForm, {\n      isLoading: isLoading,\n      handleSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }, this),\n    dataSource: notificationList,\n    columns: columns,\n    Extra: \"Th\\xF4ng b\\xE1o kh\\xF3a h\\u1ECDc\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 3\n  }, this);\n}\n\nexport default NotificationCourse;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/CourseList/CourseListDetail/NotificationCourse/NotificationCourse.tsx"],"names":["moment","PropTypes","React","useEffect","useState","notificationCourseApi","PowerTable","useWrap","NotificationCourseForm","NotificationCourse","propTypes","courseID","number","defaultProps","props","showNoti","notificationList","setNotificationList","isLoading","setIsLoading","type","status","totalPage","setTotalPage","listFieldInit","pageSize","pageIndex","CourseID","filters","setFilters","getPagination","getDataNotificationCourse","res","getAll","data","error","message","onSubmit","newData","add","columns","title","dataIndex","render","text","CreatedOn","format"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { notificationCourseApi } from '~/apiBase/course-detail/notification-course';\r\nimport PowerTable from '~/components/PowerTable';\r\nimport { useWrap } from '~/context/wrap';\r\nimport NotificationCourseForm from './NotificationCourseForm';\r\n\r\nNotificationCourse.propTypes = {\r\n\tcourseID: PropTypes.number\r\n};\r\nNotificationCourse.defaultProps = {\r\n\tcourseID: 0\r\n};\r\nfunction NotificationCourse(props) {\r\n\tconst { courseID } = props;\r\n\tconst { showNoti } = useWrap();\r\n\tconst [notificationList, setNotificationList] = useState<INotificationCourse[]>();\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: 'GET_ALL',\r\n\t\tstatus: false\r\n\t});\r\n\tconst [totalPage, setTotalPage] = useState(null);\r\n\tconst listFieldInit = {\r\n\t\tpageSize: 10,\r\n\t\tpageIndex: 1,\r\n\t\tCourseID: courseID\r\n\t};\r\n\tconst [filters, setFilters] = useState(listFieldInit);\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number) => {\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\tpageIndex\r\n\t\t});\r\n\t};\r\n\r\n\tconst getDataNotificationCourse = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\tconst res = await notificationCourseApi.getAll(filters);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetNotificationList(res.data.data);\r\n\t\t\t\tsetTotalPage(res.data['TotalRow']);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataNotificationCourse();\r\n\t}, [filters]);\r\n\r\n\tconst onSubmit = async (data: { NotificationTitle: string; NotificationContent: string }) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_NOTI',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\tconst newData = {\r\n\t\t\t\t...data,\r\n\t\t\t\tCourseID: courseID\r\n\t\t\t};\r\n\t\t\tconst res = await notificationCourseApi.add(newData);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tshowNoti('success', res.data.message);\r\n\t\t\t\tsetFilters({\r\n\t\t\t\t\t...listFieldInit\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_NOTI',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Thông báo qua email',\r\n\t\t\tdataIndex: 'NotificationTitle',\r\n\t\t\trender: (text) => <p className=\"font-weight-primary\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Nội dung',\r\n\t\t\tdataIndex: 'NotificationContent'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Người tạo',\r\n\t\t\tdataIndex: 'CreatedBy'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày tạo',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\trender: (CreatedOn) => moment(CreatedOn).format('DD/MM/YYYY')\r\n\t\t}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<PowerTable\r\n\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\ttotalPage={totalPage}\r\n\t\t\tgetPagination={getPagination}\r\n\t\t\tloading={isLoading}\r\n\t\t\taddClass=\"basic-header\"\r\n\t\t\tTitleCard={<NotificationCourseForm isLoading={isLoading} handleSubmit={onSubmit} />}\r\n\t\t\tdataSource={notificationList}\r\n\t\t\tcolumns={columns}\r\n\t\t\tExtra=\"Thông báo khóa học\"\r\n\t\t/>\r\n\t);\r\n}\r\nexport default NotificationCourse;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\QuestionBank\\\\GroupWrap.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { CheckOutlined, DeleteOutlined, DownOutlined, MoreOutlined, RightOutlined } from '@ant-design/icons';\nimport { Checkbox, Collapse, Modal, Popover, Tooltip } from 'antd';\nimport React, { useEffect, useRef, useState } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { exerciseGroupApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]';\nimport CreateQuestionForm from './CreateQuestionForm';\n\nconst GroupWrap = props => {\n  const {\n    isGetQuestion,\n    onGetListQuestionID,\n    listGroupID,\n    onRemoveQuestionAdd,\n    listQuestionAddOutside\n  } = useExamDetail();\n  const {\n    children,\n    isGroup,\n    listQuestion,\n    onFetchData,\n    onRemoveData,\n    onEditData,\n    onAddData,\n    getGroupID,\n    dataExam\n  } = props;\n  const {\n    Panel\n  } = Collapse;\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    0: isCollapse,\n    1: setIsCollapse\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState({\n    status: false,\n    id: null\n  });\n  const {\n    0: activeKey,\n    1: setActiveKey\n  } = useState(null);\n  const {\n    0: openForm,\n    1: setOpenForm\n  } = useState({\n    status: false,\n    data: null\n  });\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: deleteID,\n    1: setDeleteID\n  } = useState(null);\n  const {\n    0: linkAudio,\n    1: setLinkAudio\n  } = useState(listQuestion);\n  const audioRef = useRef(null);\n  const {\n    0: loadingAudio,\n    1: setLoadingAudio\n  } = useState(false);\n  const {\n    0: dataListQuestion,\n    1: setDataListQuestion\n  } = useState(null);\n  const {\n    0: lengthData,\n    1: setLengthData\n  } = useState(0); // console.log(\"List question in group: \", listQuestion);\n  // console.log(\"active Key: \", activeKey);\n  // ACTION TABLE\n\n  const showModalConfirm = e => {\n    e.stopPropagation();\n    setIsModalVisible(true);\n  }; // Confirm delete group\n\n\n  const handleDelete = async e => {\n    e.stopPropagation();\n    setIsModalVisible(false);\n    onRemoveData(deleteID);\n    showNoti('success', 'Xóa thành công');\n\n    try {\n      let res = await exerciseGroupApi.update({\n        ID: deleteID,\n        Enable: false\n      });\n    } catch (error) {}\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  }; // Open popover\n\n\n  const onChangePopover = id => {\n    !visible.status ? setVisible({\n      id: id,\n      status: true\n    }) : setVisible(_objectSpread(_objectSpread({}, visible), {}, {\n      status: false\n    }));\n  }; // Show menu in group item\n\n\n  const showMenu = e => {\n    e.stopPropagation();\n  }; // ACTION COLLAPSE\n\n\n  const onShowCollapse = groupID => {\n    getGroupID && getGroupID(groupID);\n\n    if (groupID == activeKey) {\n      setActiveKey(null);\n    } else {\n      setActiveKey(groupID);\n    }\n  };\n\n  const returnNewData = (groupID, item) => {\n    let cloneItem = JSON.parse(JSON.stringify(item));\n    delete cloneItem.ID;\n    cloneItem.Content = '';\n    cloneItem.ExerciseGroupID = item.ID;\n    cloneItem.LinkAudio = '';\n\n    switch (item.Type) {\n      // Choice\n      case 1:\n        cloneItem.ExerciseAnswer = [{\n          ID: 1,\n          AnswerContent: '',\n          isTrue: false\n        }, {\n          ID: 2,\n          AnswerContent: '',\n          isTrue: false\n        }, {\n          ID: 3,\n          AnswerContent: '',\n          isTrue: false\n        }, {\n          ID: 4,\n          AnswerContent: '',\n          isTrue: false\n        }];\n        break;\n      // Map\n\n      case 5:\n        cloneItem.ExerciseAnswer = [];\n        break;\n      // Multiple\n\n      case 4:\n        cloneItem.ExerciseAnswer = [];\n        break;\n      // Typing\n\n      case 3:\n        cloneItem.Content = item.Content;\n        cloneItem.ID = groupID;\n        cloneItem.LinkAudio = item.LinkAudio;\n        break;\n      // Drag;\n\n      case 2:\n        cloneItem.Content = item.Content;\n        cloneItem.ID = groupID;\n        cloneItem.LinkAudio = item.LinkAudio;\n        break;\n\n      default:\n        break;\n    }\n\n    return cloneItem;\n  }; // CONTENT POPOVER\n\n\n  const contentMenu = (groupID, item) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"function-group-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-btn\",\n        children: /*#__PURE__*/_jsxDEV(CreateQuestionForm, {\n          isGroup: isGroup,\n          questionData: item,\n          onFetchData: onFetchData,\n          handlePopover: () => onChangePopover(item.ID),\n          onEditData: data => onEditData(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-icon delete\",\n          onClick: e => (setDeleteID(item.ID), showModalConfirm(e), onChangePopover(item.ID)),\n          children: [/*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 7\n          }, this), \"X\\xF3a nh\\xF3m\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-btn\",\n        children: /*#__PURE__*/_jsxDEV(CreateQuestionForm, {\n          isGroup: {\n            status: false,\n            id: groupID\n          },\n          questionData: returnNewData(groupID, item),\n          onFetchData: onFetchData,\n          handlePopover: () => onChangePopover(item.ID),\n          onEditData: data => onEditData(data),\n          onAddData: data => onAddData(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 4\n    }, this);\n  };\n\n  useEffect(() => {\n    // Check active item when add new data\n    if ((dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.length) > 0) {\n      if (listQuestion.length > lengthData) {\n        setActiveKey(listQuestion[0].ID);\n        getGroupID(listQuestion[0].ID);\n      }\n    }\n\n    setLengthData(listQuestion.length); // Loading audio for change html audio (because the link not change when update state)\n\n    setLoadingAudio(true);\n    setTimeout(() => {\n      setLoadingAudio(false);\n    }, 100); // Make new data\n\n    setDataListQuestion(listQuestion);\n    setLinkAudio(listQuestion);\n  }, [listQuestion]); // On change - add question\n\n  const onChange_AddQuestion = (checked, quesID) => {\n    let objectQuestion = {\n      type: 2,\n      ExerciseOrExerciseGroupID: quesID\n    }; // Call function to get ID of question\n\n    if (checked) {\n      onGetListQuestionID(objectQuestion);\n    } else {\n      onRemoveQuestionAdd(objectQuestion);\n    } // Check isChecked in checkbox\n    // dataListQuestion.every((item) => {\n    //   if (item.ID == quesID) {\n    //     item.isChecked = checked;\n    //     return false;\n    //   }\n    //   return true;\n    // });\n    // setDataListQuestion([...dataListQuestion]);\n\n  };\n\n  useEffect(() => {\n    if ((dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.length) > 0) {\n      if ((listQuestionAddOutside === null || listQuestionAddOutside === void 0 ? void 0 : listQuestionAddOutside.length) > 0) {\n        dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.forEach(item => {\n          if (listQuestionAddOutside.some(object => object['ExerciseOrExerciseGroupID'] == item.ID)) {\n            item.isChecked = true;\n          } else {\n            item.isChecked = false;\n          }\n        });\n      } else {\n        dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.forEach(item => {\n          item.isChecked = false;\n        });\n      }\n\n      setDataListQuestion([...dataListQuestion]);\n    }\n  }, [listQuestionAddOutside]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Ch\\xFA \\xFD\",\n      visible: isModalVisible,\n      onOk: handleDelete,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 500,\n          color: '#292929'\n        },\n        children: \"B\\u1EA1n c\\xF3 ch\\u1EAFc mu\\u1ED1n x\\xF3a nh\\xF3m c\\xE2u h\\u1ECFi n\\xE0y?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 4\n    }, this), isGroup.status ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lms-collapse\",\n      children: (dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.length) == 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Danh s\\xE1ch c\\xF2n tr\\u1ED1ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 7\n      }, this) : dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-click\": \"trigger-collapse\",\n        className: \"collapse-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collapse-item__header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-function\",\n            onClick: e => onShowCollapse(item.ID),\n            children: item.ID == activeKey ? /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 35\n            }, this) : /*#__PURE__*/_jsxDEV(RightOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-action-right\",\n            style: {\n              right: dataExam ? '12px' : '0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Popover, {\n              content: contentMenu(item.ID, item),\n              trigger: \"hover\",\n              visible: item.ID == visible.id && visible.status,\n              onVisibleChange: () => onChangePopover(item.ID),\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-icon menu\",\n                onClick: e => showMenu(e),\n                children: /*#__PURE__*/_jsxDEV(MoreOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 11\n            }, this), dataExam && (listGroupID.includes(item.ID) ? /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"\\u0110\\xE3 c\\xF3 trong \\u0111\\u1EC1 thi\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-icon edit\",\n                children: /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 13\n            }, this) : /*#__PURE__*/_jsxDEV(Checkbox, {\n              className: \"checkbox-addquestion\",\n              checked: item.isChecked,\n              onChange: e => onChange_AddQuestion(e.target.checked, item.ID)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 13\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: [\"Nh\\xF3m \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `collapse-item__body ${activeKey == null ? 'd-none' : ''} ${item.ID == activeKey ? 'active' : 'un-active'} `,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"body-content w-100 d-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-audio mb-3\",\n                children: !loadingAudio ? linkAudio[index].LinkAudio !== '' && /*#__PURE__*/_jsxDEV(\"audio\", {\n                  controls: true,\n                  ref: audioRef,\n                  children: /*#__PURE__*/_jsxDEV(\"source\", {\n                    src: linkAudio[index].LinkAudio,\n                    type: \"audio/mpeg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 15\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"introduce mb-1\",\n                children: ReactHtmlParser(item.Introduce)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content\",\n                children: ReactHtmlParser(item.Content)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-content-question mt-3\",\n              children: /*#__PURE__*/React.cloneElement(children, {\n                groupID: item.ID\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 8\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false)]\n  }, void 0, true);\n};\n\nexport default GroupWrap;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/QuestionBank/GroupWrap.tsx"],"names":["CheckOutlined","DeleteOutlined","DownOutlined","MoreOutlined","RightOutlined","Checkbox","Collapse","Modal","Popover","Tooltip","React","useEffect","useRef","useState","ReactHtmlParser","exerciseGroupApi","useWrap","useExamDetail","CreateQuestionForm","GroupWrap","props","isGetQuestion","onGetListQuestionID","listGroupID","onRemoveQuestionAdd","listQuestionAddOutside","children","isGroup","listQuestion","onFetchData","onRemoveData","onEditData","onAddData","getGroupID","dataExam","Panel","showNoti","isCollapse","setIsCollapse","visible","setVisible","status","id","activeKey","setActiveKey","openForm","setOpenForm","data","isModalVisible","setIsModalVisible","deleteID","setDeleteID","linkAudio","setLinkAudio","audioRef","loadingAudio","setLoadingAudio","dataListQuestion","setDataListQuestion","lengthData","setLengthData","showModalConfirm","e","stopPropagation","handleDelete","res","update","ID","Enable","error","handleCancel","onChangePopover","showMenu","onShowCollapse","groupID","returnNewData","item","cloneItem","JSON","parse","stringify","Content","ExerciseGroupID","LinkAudio","Type","ExerciseAnswer","AnswerContent","isTrue","contentMenu","length","setTimeout","onChange_AddQuestion","checked","quesID","objectQuestion","type","ExerciseOrExerciseGroupID","forEach","some","object","isChecked","fontWeight","color","map","index","right","includes","target","Introduce","cloneElement"],"mappings":";;;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,cAAxB,EAAwCC,YAAxC,EAAsDC,YAAtD,EAAoEC,aAApE,QAAyF,mBAAzF;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,KAA7B,EAAoCC,OAApC,EAA6CC,OAA7C,QAA4D,MAA5D;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,aAAT,QAA8B,oDAA9B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,mBAAjB;AAAsCC,IAAAA,WAAtC;AAAmDC,IAAAA,mBAAnD;AAAwEC,IAAAA;AAAxE,MAAmGR,aAAa,EAAtH;AACA,QAAM;AAAES,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,YAArB;AAAmCC,IAAAA,WAAnC;AAAgDC,IAAAA,YAAhD;AAA8DC,IAAAA,UAA9D;AAA0EC,IAAAA,SAA1E;AAAqFC,IAAAA,UAArF;AAAiGC,IAAAA;AAAjG,MAA8Gd,KAApH;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAY7B,QAAlB;AACA,QAAM;AAAE8B,IAAAA;AAAF,MAAepB,OAAO,EAA5B;AACA,QAAM;AAAA,OAACqB,UAAD;AAAA,OAAaC;AAAb,MAA8BzB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAAC0B,OAAD;AAAA,OAAUC;AAAV,MAAwB3B,QAAQ,CAAC;AACtC4B,IAAAA,MAAM,EAAE,KAD8B;AAEtCC,IAAAA,EAAE,EAAE;AAFkC,GAAD,CAAtC;AAIA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4B/B,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAA,OAACgC,QAAD;AAAA,OAAWC;AAAX,MAA0BjC,QAAQ,CAAC;AACxC4B,IAAAA,MAAM,EAAE,KADgC;AAExCM,IAAAA,IAAI,EAAE;AAFkC,GAAD,CAAxC;AAIA,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCpC,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAA,OAACqC,QAAD;AAAA,OAAWC;AAAX,MAA0BtC,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAAA,OAACuC,SAAD;AAAA,OAAYC;AAAZ,MAA4BxC,QAAQ,CAACe,YAAD,CAA1C;AACA,QAAM0B,QAAQ,GAAG1C,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM;AAAA,OAAC2C,YAAD;AAAA,OAAeC;AAAf,MAAkC3C,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAA,OAAC4C,gBAAD;AAAA,OAAmBC;AAAnB,MAA0C7C,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM;AAAA,OAAC8C,UAAD;AAAA,OAAaC;AAAb,MAA8B/C,QAAQ,CAAC,CAAD,CAA5C,CArB4B,CAuB5B;AACA;AAEA;;AACA,QAAMgD,gBAAgB,GAAIC,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACC,eAAF;AACAd,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,GAHD,CA3B4B,CAgC5B;;;AACA,QAAMe,YAAY,GAAG,MAAOF,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACC,eAAF;AACAd,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAnB,IAAAA,YAAY,CAACoB,QAAD,CAAZ;AACAd,IAAAA,QAAQ,CAAC,SAAD,EAAY,gBAAZ,CAAR;;AAEA,QAAI;AACH,UAAI6B,GAAG,GAAG,MAAMlD,gBAAgB,CAACmD,MAAjB,CAAwB;AAAEC,QAAAA,EAAE,EAAEjB,QAAN;AAAgBkB,QAAAA,MAAM,EAAE;AAAxB,OAAxB,CAAhB;AACA,KAFD,CAEE,OAAOC,KAAP,EAAc,CAAE;AAClB,GATD;;AAWA,QAAMC,YAAY,GAAG,MAAM;AAC1BrB,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA,GAFD,CA5C4B,CAgD5B;;;AACA,QAAMsB,eAAe,GAAI7B,EAAD,IAAQ;AAC/B,KAACH,OAAO,CAACE,MAAT,GACGD,UAAU,CAAC;AACXE,MAAAA,EAAE,EAAEA,EADO;AAEXD,MAAAA,MAAM,EAAE;AAFG,KAAD,CADb,GAKGD,UAAU,iCACPD,OADO;AAEVE,MAAAA,MAAM,EAAE;AAFE,OALb;AASA,GAVD,CAjD4B,CA6D5B;;;AACA,QAAM+B,QAAQ,GAAIV,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,eAAF;AACA,GAFD,CA9D4B,CAkE5B;;;AACA,QAAMU,cAAc,GAAIC,OAAD,IAAa;AACnCzC,IAAAA,UAAU,IAAIA,UAAU,CAACyC,OAAD,CAAxB;;AACA,QAAIA,OAAO,IAAI/B,SAAf,EAA0B;AACzBC,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,KAFD,MAEO;AACNA,MAAAA,YAAY,CAAC8B,OAAD,CAAZ;AACA;AACD,GAPD;;AASA,QAAMC,aAAa,GAAG,CAACD,OAAD,EAAUE,IAAV,KAAmB;AACxC,QAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAAhB;AACA,WAAOC,SAAS,CAACV,EAAjB;AACAU,IAAAA,SAAS,CAACI,OAAV,GAAoB,EAApB;AACAJ,IAAAA,SAAS,CAACK,eAAV,GAA4BN,IAAI,CAACT,EAAjC;AACAU,IAAAA,SAAS,CAACM,SAAV,GAAsB,EAAtB;;AAEA,YAAQP,IAAI,CAACQ,IAAb;AACC;AACA,WAAK,CAAL;AACCP,QAAAA,SAAS,CAACQ,cAAV,GAA2B,CAC1B;AACClB,UAAAA,EAAE,EAAE,CADL;AAECmB,UAAAA,aAAa,EAAE,EAFhB;AAGCC,UAAAA,MAAM,EAAE;AAHT,SAD0B,EAM1B;AACCpB,UAAAA,EAAE,EAAE,CADL;AAECmB,UAAAA,aAAa,EAAE,EAFhB;AAGCC,UAAAA,MAAM,EAAE;AAHT,SAN0B,EAW1B;AACCpB,UAAAA,EAAE,EAAE,CADL;AAECmB,UAAAA,aAAa,EAAE,EAFhB;AAGCC,UAAAA,MAAM,EAAE;AAHT,SAX0B,EAgB1B;AACCpB,UAAAA,EAAE,EAAE,CADL;AAECmB,UAAAA,aAAa,EAAE,EAFhB;AAGCC,UAAAA,MAAM,EAAE;AAHT,SAhB0B,CAA3B;AAsBA;AAED;;AACA,WAAK,CAAL;AACCV,QAAAA,SAAS,CAACQ,cAAV,GAA2B,EAA3B;AACA;AACD;;AACA,WAAK,CAAL;AACCR,QAAAA,SAAS,CAACQ,cAAV,GAA2B,EAA3B;AACA;AAED;;AACA,WAAK,CAAL;AACCR,QAAAA,SAAS,CAACI,OAAV,GAAoBL,IAAI,CAACK,OAAzB;AACAJ,QAAAA,SAAS,CAACV,EAAV,GAAeO,OAAf;AACAG,QAAAA,SAAS,CAACM,SAAV,GAAsBP,IAAI,CAACO,SAA3B;AACA;AAED;;AACA,WAAK,CAAL;AACCN,QAAAA,SAAS,CAACI,OAAV,GAAoBL,IAAI,CAACK,OAAzB;AACAJ,QAAAA,SAAS,CAACV,EAAV,GAAeO,OAAf;AACAG,QAAAA,SAAS,CAACM,SAAV,GAAsBP,IAAI,CAACO,SAA3B;AACA;;AACD;AACC;AAlDF;;AAqDA,WAAON,SAAP;AACA,GA7DD,CA5E4B,CA2I5B;;;AACA,QAAMW,WAAW,GAAG,CAACd,OAAD,EAAUE,IAAV,KAAmB;AACtC,wBACC;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BAEC;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACC,QAAC,kBAAD;AACC,UAAA,OAAO,EAAEjD,OADV;AAEC,UAAA,YAAY,EAAEiD,IAFf;AAGC,UAAA,WAAW,EAAE/C,WAHd;AAIC,UAAA,aAAa,EAAE,MAAM0C,eAAe,CAACK,IAAI,CAACT,EAAN,CAJrC;AAKC,UAAA,UAAU,EAAGpB,IAAD,IAAUhB,UAAU,CAACgB,IAAD;AALjC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAFD,eAYC;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACC;AAAQ,UAAA,SAAS,EAAC,qBAAlB;AAAwC,UAAA,OAAO,EAAGe,CAAD,KAAQX,WAAW,CAACyB,IAAI,CAACT,EAAN,CAAX,EAAsBN,gBAAgB,CAACC,CAAD,CAAtC,EAA2CS,eAAe,CAACK,IAAI,CAACT,EAAN,CAAlE,CAAjD;AAAA,kCACC,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBADD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAZD,eAmBC;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACC,QAAC,kBAAD;AACC,UAAA,OAAO,EAAE;AAAE1B,YAAAA,MAAM,EAAE,KAAV;AAAiBC,YAAAA,EAAE,EAAEgC;AAArB,WADV;AAEC,UAAA,YAAY,EAAEC,aAAa,CAACD,OAAD,EAAUE,IAAV,CAF5B;AAGC,UAAA,WAAW,EAAE/C,WAHd;AAIC,UAAA,aAAa,EAAE,MAAM0C,eAAe,CAACK,IAAI,CAACT,EAAN,CAJrC;AAKC,UAAA,UAAU,EAAGpB,IAAD,IAAUhB,UAAU,CAACgB,IAAD,CALjC;AAMC,UAAA,SAAS,EAAGA,IAAD,IAAUf,SAAS,CAACe,IAAD;AAN/B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAnBD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAgCA,GAjCD;;AAmCApC,EAAAA,SAAS,CAAC,MAAM;AACf;AACA,QAAI,CAAA8C,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEgC,MAAlB,IAA2B,CAA/B,EAAkC;AACjC,UAAI7D,YAAY,CAAC6D,MAAb,GAAsB9B,UAA1B,EAAsC;AACrCf,QAAAA,YAAY,CAAChB,YAAY,CAAC,CAAD,CAAZ,CAAgBuC,EAAjB,CAAZ;AACAlC,QAAAA,UAAU,CAACL,YAAY,CAAC,CAAD,CAAZ,CAAgBuC,EAAjB,CAAV;AACA;AACD;;AACDP,IAAAA,aAAa,CAAChC,YAAY,CAAC6D,MAAd,CAAb,CARe,CAUf;;AACAjC,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAkC,IAAAA,UAAU,CAAC,MAAM;AAChBlC,MAAAA,eAAe,CAAC,KAAD,CAAf;AACA,KAFS,EAEP,GAFO,CAAV,CAZe,CAgBf;;AACAE,IAAAA,mBAAmB,CAAC9B,YAAD,CAAnB;AACAyB,IAAAA,YAAY,CAACzB,YAAD,CAAZ;AACA,GAnBQ,EAmBN,CAACA,YAAD,CAnBM,CAAT,CA/K4B,CAoM5B;;AACA,QAAM+D,oBAAoB,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACjD,QAAIC,cAAc,GAAG;AACpBC,MAAAA,IAAI,EAAE,CADc;AAEpBC,MAAAA,yBAAyB,EAAEH;AAFP,KAArB,CADiD,CAMjD;;AACA,QAAID,OAAJ,EAAa;AACZtE,MAAAA,mBAAmB,CAACwE,cAAD,CAAnB;AACA,KAFD,MAEO;AACNtE,MAAAA,mBAAmB,CAACsE,cAAD,CAAnB;AACA,KAXgD,CAajD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,GAvBD;;AAyBAnF,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAAA8C,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEgC,MAAlB,IAA2B,CAA/B,EAAkC;AACjC,UAAI,CAAAhE,sBAAsB,SAAtB,IAAAA,sBAAsB,WAAtB,YAAAA,sBAAsB,CAAEgE,MAAxB,IAAiC,CAArC,EAAwC;AACvChC,QAAAA,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEwC,OAAlB,CAA2BrB,IAAD,IAAU;AACnC,cAAInD,sBAAsB,CAACyE,IAAvB,CAA6BC,MAAD,IAAYA,MAAM,CAAC,2BAAD,CAAN,IAAuCvB,IAAI,CAACT,EAApF,CAAJ,EAA6F;AAC5FS,YAAAA,IAAI,CAACwB,SAAL,GAAiB,IAAjB;AACA,WAFD,MAEO;AACNxB,YAAAA,IAAI,CAACwB,SAAL,GAAiB,KAAjB;AACA;AACD,SAND;AAOA,OARD,MAQO;AACN3C,QAAAA,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEwC,OAAlB,CAA2BrB,IAAD,IAAU;AACnCA,UAAAA,IAAI,CAACwB,SAAL,GAAiB,KAAjB;AACA,SAFD;AAGA;;AACD1C,MAAAA,mBAAmB,CAAC,CAAC,GAAGD,gBAAJ,CAAD,CAAnB;AACA;AACD,GAjBQ,EAiBN,CAAChC,sBAAD,CAjBM,CAAT;AAmBA,sBACC;AAAA,4BACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,aAAb;AAAqB,MAAA,OAAO,EAAEuB,cAA9B;AAA8C,MAAA,IAAI,EAAEgB,YAApD;AAAkE,MAAA,QAAQ,EAAEM,YAA5E;AAAA,6BACC;AAAG,QAAA,KAAK,EAAE;AAAE+B,UAAAA,UAAU,EAAE,GAAd;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,EAKE3E,OAAO,CAACc,MAAR,gBACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACE,CAAAgB,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEgC,MAAlB,KAA4B,CAA5B,gBACA;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,+BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADA,GAKAhC,gBALA,aAKAA,gBALA,uBAKAA,gBAAgB,CAAE8C,GAAlB,CAAsB,CAAC3B,IAAD,EAAO4B,KAAP,kBACrB;AAAK,sBAAW,kBAAhB;AAAmC,QAAA,SAAS,EAAC,eAA7C;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACC;AAAQ,YAAA,SAAS,EAAC,cAAlB;AAAiC,YAAA,OAAO,EAAG1C,CAAD,IAAOW,cAAc,CAACG,IAAI,CAACT,EAAN,CAA/D;AAAA,sBACES,IAAI,CAACT,EAAL,IAAWxB,SAAX,gBAAuB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBAAvB,gBAA0C,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAD5C;AAAA;AAAA;AAAA;AAAA,kBADD,eAIC;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAmC,YAAA,KAAK,EAAE;AAAE8D,cAAAA,KAAK,EAAEvE,QAAQ,GAAG,MAAH,GAAY;AAA7B,aAA1C;AAAA,oCACC,QAAC,OAAD;AACC,cAAA,OAAO,EAAEsD,WAAW,CAACZ,IAAI,CAACT,EAAN,EAAUS,IAAV,CADrB;AAEC,cAAA,OAAO,EAAC,OAFT;AAGC,cAAA,OAAO,EAAEA,IAAI,CAACT,EAAL,IAAW5B,OAAO,CAACG,EAAnB,IAAyBH,OAAO,CAACE,MAH3C;AAIC,cAAA,eAAe,EAAE,MAAM8B,eAAe,CAACK,IAAI,CAACT,EAAN,CAJvC;AAAA,qCAMC;AAAQ,gBAAA,SAAS,EAAC,mBAAlB;AAAsC,gBAAA,OAAO,EAAGL,CAAD,IAAOU,QAAQ,CAACV,CAAD,CAA9D;AAAA,uCACC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAND;AAAA;AAAA;AAAA;AAAA,oBADD,EAWE5B,QAAQ,KACPX,WAAW,CAACmF,QAAZ,CAAqB9B,IAAI,CAACT,EAA1B,iBACA,QAAC,OAAD;AAAS,cAAA,KAAK,EAAC,yCAAf;AAAA,qCACC;AAAQ,gBAAA,SAAS,EAAC,mBAAlB;AAAA,uCACC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBADA,gBAOA,QAAC,QAAD;AACC,cAAA,SAAS,EAAC,sBADX;AAEC,cAAA,OAAO,EAAES,IAAI,CAACwB,SAFf;AAGC,cAAA,QAAQ,EAAGtC,CAAD,IAAO6B,oBAAoB,CAAC7B,CAAC,CAAC6C,MAAF,CAASf,OAAV,EAAmBhB,IAAI,CAACT,EAAxB;AAHtC;AAAA;AAAA;AAAA;AAAA,oBARO,CAXV;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJD,eA8BC;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,mCACC;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCAA6BqC,KAAK,GAAG,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBA9BD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAmCC;AACC,UAAA,SAAS,EAAG,uBAAsB7D,SAAS,IAAI,IAAb,GAAoB,QAApB,GAA+B,EAAG,IAAGiC,IAAI,CAACT,EAAL,IAAWxB,SAAX,GAAuB,QAAvB,GAAkC,WAAY,GADtH;AAAA,iCAGC;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,oCACC;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,sCACC;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,0BACE,CAACY,YAAD,GACAH,SAAS,CAACoD,KAAD,CAAT,CAAiBrB,SAAjB,KAA+B,EAA/B,iBACC;AAAO,kBAAA,QAAQ,MAAf;AAAgB,kBAAA,GAAG,EAAE7B,QAArB;AAAA,yCACC;AAAQ,oBAAA,GAAG,EAAEF,SAAS,CAACoD,KAAD,CAAT,CAAiBrB,SAA9B;AAAyC,oBAAA,IAAI,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,wBAFD,gBAOA;AARF;AAAA;AAAA;AAAA;AAAA,sBADD,eAYC;AAAK,gBAAA,SAAS,EAAC,gBAAf;AAAA,0BAAiCrE,eAAe,CAAC8D,IAAI,CAACgC,SAAN;AAAhD;AAAA;AAAA;AAAA;AAAA,sBAZD,eAaC;AAAK,gBAAA,SAAS,EAAC,SAAf;AAAA,0BAA0B9F,eAAe,CAAC8D,IAAI,CAACK,OAAN;AAAzC;AAAA;AAAA;AAAA;AAAA,sBAbD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAgBC;AAAK,cAAA,SAAS,EAAC,6BAAf;AAAA,qCAEEvE,KAAK,CAACmG,YAAN,CAAmBnF,QAAnB,EAA6B;AAAEgD,gBAAAA,OAAO,EAAEE,IAAI,CAACT;AAAhB,eAA7B;AAFF;AAAA;AAAA;AAAA;AAAA,oBAhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA,gBAnCD;AAAA,SAAkEqC,KAAlE;AAAA;AAAA;AAAA;AAAA,cADD;AANF;AAAA;AAAA;AAAA;AAAA,YADA,gBAyEA;AAAA,gBAAG9E;AAAH,qBA9EF;AAAA,kBADD;AAmFA,CApUD;;AAsUA,eAAeP,SAAf","sourcesContent":["import { CheckOutlined, DeleteOutlined, DownOutlined, MoreOutlined, RightOutlined } from '@ant-design/icons'\r\nimport { Checkbox, Collapse, Modal, Popover, Tooltip } from 'antd'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { exerciseGroupApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]'\r\nimport CreateQuestionForm from './CreateQuestionForm'\r\n\r\nconst GroupWrap = (props) => {\r\n\tconst { isGetQuestion, onGetListQuestionID, listGroupID, onRemoveQuestionAdd, listQuestionAddOutside } = useExamDetail()\r\n\tconst { children, isGroup, listQuestion, onFetchData, onRemoveData, onEditData, onAddData, getGroupID, dataExam } = props\r\n\tconst { Panel } = Collapse\r\n\tconst { showNoti } = useWrap()\r\n\tconst [isCollapse, setIsCollapse] = useState(false)\r\n\tconst [visible, setVisible] = useState({\r\n\t\tstatus: false,\r\n\t\tid: null\r\n\t})\r\n\tconst [activeKey, setActiveKey] = useState(null)\r\n\tconst [openForm, setOpenForm] = useState({\r\n\t\tstatus: false,\r\n\t\tdata: null\r\n\t})\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst [deleteID, setDeleteID] = useState(null)\r\n\tconst [linkAudio, setLinkAudio] = useState(listQuestion)\r\n\tconst audioRef = useRef(null)\r\n\tconst [loadingAudio, setLoadingAudio] = useState(false)\r\n\tconst [dataListQuestion, setDataListQuestion] = useState(null)\r\n\tconst [lengthData, setLengthData] = useState(0)\r\n\r\n\t// console.log(\"List question in group: \", listQuestion);\r\n\t// console.log(\"active Key: \", activeKey);\r\n\r\n\t// ACTION TABLE\r\n\tconst showModalConfirm = (e) => {\r\n\t\te.stopPropagation()\r\n\t\tsetIsModalVisible(true)\r\n\t}\r\n\r\n\t// Confirm delete group\r\n\tconst handleDelete = async (e) => {\r\n\t\te.stopPropagation()\r\n\t\tsetIsModalVisible(false)\r\n\t\tonRemoveData(deleteID)\r\n\t\tshowNoti('success', 'Xóa thành công')\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseGroupApi.update({ ID: deleteID, Enable: false })\r\n\t\t} catch (error) {}\r\n\t}\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false)\r\n\t}\r\n\r\n\t// Open popover\r\n\tconst onChangePopover = (id) => {\r\n\t\t!visible.status\r\n\t\t\t? setVisible({\r\n\t\t\t\t\tid: id,\r\n\t\t\t\t\tstatus: true\r\n\t\t\t  })\r\n\t\t\t: setVisible({\r\n\t\t\t\t\t...visible,\r\n\t\t\t\t\tstatus: false\r\n\t\t\t  })\r\n\t}\r\n\r\n\t// Show menu in group item\r\n\tconst showMenu = (e) => {\r\n\t\te.stopPropagation()\r\n\t}\r\n\r\n\t// ACTION COLLAPSE\r\n\tconst onShowCollapse = (groupID) => {\r\n\t\tgetGroupID && getGroupID(groupID)\r\n\t\tif (groupID == activeKey) {\r\n\t\t\tsetActiveKey(null)\r\n\t\t} else {\r\n\t\t\tsetActiveKey(groupID)\r\n\t\t}\r\n\t}\r\n\r\n\tconst returnNewData = (groupID, item) => {\r\n\t\tlet cloneItem = JSON.parse(JSON.stringify(item))\r\n\t\tdelete cloneItem.ID\r\n\t\tcloneItem.Content = ''\r\n\t\tcloneItem.ExerciseGroupID = item.ID\r\n\t\tcloneItem.LinkAudio = ''\r\n\r\n\t\tswitch (item.Type) {\r\n\t\t\t// Choice\r\n\t\t\tcase 1:\r\n\t\t\t\tcloneItem.ExerciseAnswer = [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tID: 1,\r\n\t\t\t\t\t\tAnswerContent: '',\r\n\t\t\t\t\t\tisTrue: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tID: 2,\r\n\t\t\t\t\t\tAnswerContent: '',\r\n\t\t\t\t\t\tisTrue: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tID: 3,\r\n\t\t\t\t\t\tAnswerContent: '',\r\n\t\t\t\t\t\tisTrue: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tID: 4,\r\n\t\t\t\t\t\tAnswerContent: '',\r\n\t\t\t\t\t\tisTrue: false\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t\tbreak\r\n\r\n\t\t\t// Map\r\n\t\t\tcase 5:\r\n\t\t\t\tcloneItem.ExerciseAnswer = []\r\n\t\t\t\tbreak\r\n\t\t\t// Multiple\r\n\t\t\tcase 4:\r\n\t\t\t\tcloneItem.ExerciseAnswer = []\r\n\t\t\t\tbreak\r\n\r\n\t\t\t// Typing\r\n\t\t\tcase 3:\r\n\t\t\t\tcloneItem.Content = item.Content\r\n\t\t\t\tcloneItem.ID = groupID\r\n\t\t\t\tcloneItem.LinkAudio = item.LinkAudio\r\n\t\t\t\tbreak\r\n\r\n\t\t\t// Drag;\r\n\t\t\tcase 2:\r\n\t\t\t\tcloneItem.Content = item.Content\r\n\t\t\t\tcloneItem.ID = groupID\r\n\t\t\t\tcloneItem.LinkAudio = item.LinkAudio\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\r\n\t\treturn cloneItem\r\n\t}\r\n\r\n\t// CONTENT POPOVER\r\n\tconst contentMenu = (groupID, item) => {\r\n\t\treturn (\r\n\t\t\t<div className=\"function-group-item\">\r\n\t\t\t\t{/** Fix group */}\r\n\t\t\t\t<div className=\"wrap-btn\">\r\n\t\t\t\t\t<CreateQuestionForm\r\n\t\t\t\t\t\tisGroup={isGroup}\r\n\t\t\t\t\t\tquestionData={item}\r\n\t\t\t\t\t\tonFetchData={onFetchData}\r\n\t\t\t\t\t\thandlePopover={() => onChangePopover(item.ID)}\r\n\t\t\t\t\t\tonEditData={(data) => onEditData(data)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/** Delete group */}\r\n\t\t\t\t<div className=\"wrap-btn\">\r\n\t\t\t\t\t<button className=\"btn btn-icon delete\" onClick={(e) => (setDeleteID(item.ID), showModalConfirm(e), onChangePopover(item.ID))}>\r\n\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\tXóa nhóm\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/** Add more question */}\r\n\t\t\t\t<div className=\"wrap-btn\">\r\n\t\t\t\t\t<CreateQuestionForm\r\n\t\t\t\t\t\tisGroup={{ status: false, id: groupID }}\r\n\t\t\t\t\t\tquestionData={returnNewData(groupID, item)}\r\n\t\t\t\t\t\tonFetchData={onFetchData}\r\n\t\t\t\t\t\thandlePopover={() => onChangePopover(item.ID)}\r\n\t\t\t\t\t\tonEditData={(data) => onEditData(data)}\r\n\t\t\t\t\t\tonAddData={(data) => onAddData(data)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t// Check active item when add new data\r\n\t\tif (dataListQuestion?.length > 0) {\r\n\t\t\tif (listQuestion.length > lengthData) {\r\n\t\t\t\tsetActiveKey(listQuestion[0].ID)\r\n\t\t\t\tgetGroupID(listQuestion[0].ID)\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetLengthData(listQuestion.length)\r\n\r\n\t\t// Loading audio for change html audio (because the link not change when update state)\r\n\t\tsetLoadingAudio(true)\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLoadingAudio(false)\r\n\t\t}, 100)\r\n\r\n\t\t// Make new data\r\n\t\tsetDataListQuestion(listQuestion)\r\n\t\tsetLinkAudio(listQuestion)\r\n\t}, [listQuestion])\r\n\r\n\t// On change - add question\r\n\tconst onChange_AddQuestion = (checked, quesID) => {\r\n\t\tlet objectQuestion = {\r\n\t\t\ttype: 2,\r\n\t\t\tExerciseOrExerciseGroupID: quesID\r\n\t\t}\r\n\r\n\t\t// Call function to get ID of question\r\n\t\tif (checked) {\r\n\t\t\tonGetListQuestionID(objectQuestion)\r\n\t\t} else {\r\n\t\t\tonRemoveQuestionAdd(objectQuestion)\r\n\t\t}\r\n\r\n\t\t// Check isChecked in checkbox\r\n\t\t// dataListQuestion.every((item) => {\r\n\t\t//   if (item.ID == quesID) {\r\n\t\t//     item.isChecked = checked;\r\n\t\t//     return false;\r\n\t\t//   }\r\n\t\t//   return true;\r\n\t\t// });\r\n\r\n\t\t// setDataListQuestion([...dataListQuestion]);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dataListQuestion?.length > 0) {\r\n\t\t\tif (listQuestionAddOutside?.length > 0) {\r\n\t\t\t\tdataListQuestion?.forEach((item) => {\r\n\t\t\t\t\tif (listQuestionAddOutside.some((object) => object['ExerciseOrExerciseGroupID'] == item.ID)) {\r\n\t\t\t\t\t\titem.isChecked = true\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\titem.isChecked = false\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tdataListQuestion?.forEach((item) => {\r\n\t\t\t\t\titem.isChecked = false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tsetDataListQuestion([...dataListQuestion])\r\n\t\t}\r\n\t}, [listQuestionAddOutside])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal title=\"Chú ý\" visible={isModalVisible} onOk={handleDelete} onCancel={handleCancel}>\r\n\t\t\t\t<p style={{ fontWeight: 500, color: '#292929' }}>Bạn có chắc muốn xóa nhóm câu hỏi này?</p>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t{isGroup.status ? (\r\n\t\t\t\t<div className=\"lms-collapse\">\r\n\t\t\t\t\t{dataListQuestion?.length == 0 ? (\r\n\t\t\t\t\t\t<p className=\"text-center\">\r\n\t\t\t\t\t\t\t<b>Danh sách còn trống</b>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tdataListQuestion?.map((item, index) => (\r\n\t\t\t\t\t\t\t<div data-click=\"trigger-collapse\" className=\"collapse-item\" key={index}>\r\n\t\t\t\t\t\t\t\t<div className=\"collapse-item__header\">\r\n\t\t\t\t\t\t\t\t\t<button className=\"btn-function\" onClick={(e) => onShowCollapse(item.ID)}>\r\n\t\t\t\t\t\t\t\t\t\t{item.ID == activeKey ? <DownOutlined /> : <RightOutlined />}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<div className=\"wrap-action-right\" style={{ right: dataExam ? '12px' : '0' }}>\r\n\t\t\t\t\t\t\t\t\t\t<Popover\r\n\t\t\t\t\t\t\t\t\t\t\tcontent={contentMenu(item.ID, item)}\r\n\t\t\t\t\t\t\t\t\t\t\ttrigger=\"hover\"\r\n\t\t\t\t\t\t\t\t\t\t\tvisible={item.ID == visible.id && visible.status}\r\n\t\t\t\t\t\t\t\t\t\t\tonVisibleChange={() => onChangePopover(item.ID)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-icon menu\" onClick={(e) => showMenu(e)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MoreOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</Popover>\r\n\t\t\t\t\t\t\t\t\t\t{dataExam &&\r\n\t\t\t\t\t\t\t\t\t\t\t(listGroupID.includes(item.ID) ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Đã có trong đề thi\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-icon edit\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"checkbox-addquestion\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={item.isChecked}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => onChange_AddQuestion(e.target.checked, item.ID)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"header-content\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"title\">Nhóm {index + 1}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={`collapse-item__body ${activeKey == null ? 'd-none' : ''} ${item.ID == activeKey ? 'active' : 'un-active'} `}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"body-content w-100 d-block\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"group-content\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"file-audio mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{!loadingAudio ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlinkAudio[index].LinkAudio !== '' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<audio controls ref={audioRef}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<source src={linkAudio[index].LinkAudio} type=\"audio/mpeg\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</audio>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"introduce mb-1\">{ReactHtmlParser(item.Introduce)}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"content\">{ReactHtmlParser(item.Content)}</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"group-content-question mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t{/* {children} */}\r\n\t\t\t\t\t\t\t\t\t\t\t{React.cloneElement(children, { groupID: item.ID })}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>{children}</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default GroupWrap\r\n"]},"metadata":{},"sourceType":"module"}
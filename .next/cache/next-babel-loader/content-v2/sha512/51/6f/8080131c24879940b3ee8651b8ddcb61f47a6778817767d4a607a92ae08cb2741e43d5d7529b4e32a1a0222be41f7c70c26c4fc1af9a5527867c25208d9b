{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\notification\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport PowerTable from '~/components/PowerTable';\nimport LayoutBase from '~/components/LayoutBase';\nimport { AlertCircle } from 'react-feather';\nimport { notificationApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport moment from 'moment';\nimport { Checkbox, Tooltip } from 'antd';\nimport ReactHtmlParser from 'react-html-parser';\nimport Modal from 'antd/lib/modal/Modal';\n\nconst Notification = () => {\n  const {\n    0: dataTable,\n    1: setDataTable\n  } = useState([]);\n  const {\n    0: dataSeen,\n    1: setDataSeen\n  } = useState({\n    ID: null\n  });\n  const {\n    0: contentRow,\n    1: setContentRow\n  } = useState({\n    content: null,\n    title: null,\n    status: null\n  });\n  const {\n    showNoti,\n    handleReloadNoti\n  } = useWrap();\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  let pageIndex = 1; // PARAMS API GETALL\n\n  const listTodoApi = {\n    pageSize: 10,\n    pageIndex: pageIndex\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi); // GET DATA\n\n  const getDataTable = () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    (async () => {\n      try {\n        let res = await notificationApi.getAllWithUser(todoApi);\n\n        if (res.status == 204) {\n          showNoti('danger', 'Không có dữ liệu');\n        }\n\n        if (res.status == 200) {\n          setTotalPage(res.data.totalRow);\n          setDataTable(res.data.data);\n        }\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'GET_ALL',\n          status: false\n        });\n      }\n    })();\n  }; // PAGINATION\n\n\n  const getPagination = pageNumber => {\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      //   ...listFieldSearch,\n      pageIndex: pageIndex\n    }));\n  };\n\n  const _onSubmit = async data => {\n    setIsLoading({\n      type: 'UPDATE_DATA',\n      status: true\n    });\n    let res = null;\n\n    try {\n      var _res;\n\n      res = await notificationApi.updateSeen(data);\n      ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && (showNoti('success', 'Cập nhật thành công'), getDataTable());\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n    }\n\n    return res;\n  };\n\n  const onChange = e => {\n    console.log('Checked Value: ', e.target.value);\n    const data = {\n      ID: e.target.value\n    };\n\n    _onSubmit(data);\n  };\n\n  const columns = [{\n    title: () => /*#__PURE__*/_jsxDEV(Checkbox, {\n      value: 0,\n      onChange: onChange,\n      defaultChecked: false,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"color-white\",\n        children: \"Xem t\\u1EA5t c\\u1EA3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this),\n    dataIndex: 'Status',\n    // render: (record) => (\n    //     record.Status == 0\n    //     ? ( <Checkbox value={record.ID} onChange={onChange}><span className=\"font-weight-black\">Xem</span></Checkbox>)\n    //     : (<Checkbox checked><span className=\"font-weight-black\">Xem</span></Checkbox>)\n    // ),\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: text == 0 ? /*#__PURE__*/_jsxDEV(Checkbox, {\n        className: \"uncheck\",\n        value: record.ID,\n        onChange: onChange,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Xem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: true,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Xem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this)\n  }, {\n    title: 'Tên thông báo',\n    dataIndex: 'NotificationTitle',\n    // ...FilterColumn(\"center\")\n    render: text => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Nội dung thông báo',\n    dataIndex: 'NotificationContent',\n    render: text => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-notification\",\n      children: ReactHtmlParser(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 22\n    }, this) // ...FilterColumn(\"supplier\")\n\n  }, {\n    title: 'Thời gian',\n    dataIndex: 'CreatedOn',\n    render: date => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"font-weight-primary\",\n      children: moment(date).format('DD/MM/YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 22\n    }, this)\n  }, {\n    render: record => /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Chi ti\\u1EBFt\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-icon delete\",\n        onClick: () => {\n          setIsModalVisible(true);\n          setDataSeen({\n            ID: record.ID\n          });\n          setContentRow({\n            content: record.NotificationContent,\n            title: record.NotificationTitle,\n            status: record.Status\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(AlertCircle, {\n          color: \"#32c6a4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }, this)\n  }];\n  useEffect(() => {\n    getDataTable();\n  }, [todoApi]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      title: /*#__PURE__*/_jsxDEV(AlertCircle, {\n        color: \"#32c6a4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 12\n      }, this),\n      visible: isModalVisible,\n      onOk: () => {\n        setIsModalVisible(false);\n        contentRow.status == 0 && _onSubmit(dataSeen);\n      },\n      onCancel: () => {\n        setIsModalVisible(false);\n        contentRow.status == 0 && _onSubmit(dataSeen);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: contentRow.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ReactHtmlParser(contentRow.content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PowerTable, {\n      loading: isLoading,\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: pageNumber => getPagination(pageNumber),\n      addClass: \"basic-header\",\n      TitlePage: \"Danh s\\xE1ch th\\xF4ng b\\xE1o\" // TitleCard={\n      //     <PurposeForm\n      //         showAdd={true}\n      //         isLoading={isLoading}\n      //         _onSubmit={(data: any) => _onSubmit(data)}\n      //     />}\n      ,\n      dataSource: dataTable,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nNotification.layout = LayoutBase;\nexport default Notification;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/notification/index.tsx"],"names":["React","useEffect","useState","PowerTable","LayoutBase","AlertCircle","notificationApi","useWrap","moment","Checkbox","Tooltip","ReactHtmlParser","Modal","Notification","dataTable","setDataTable","dataSeen","setDataSeen","ID","contentRow","setContentRow","content","title","status","showNoti","handleReloadNoti","isModalVisible","setIsModalVisible","isLoading","setIsLoading","type","totalPage","setTotalPage","currentPage","setCurrentPage","pageIndex","listTodoApi","pageSize","todoApi","setTodoApi","getDataTable","res","getAllWithUser","data","totalRow","error","message","getPagination","pageNumber","_onSubmit","updateSeen","onChange","e","console","log","target","value","columns","dataIndex","render","text","record","date","format","NotificationContent","NotificationTitle","Status","layout"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SAASC,eAAT,QAAgC,WAAhC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,EAA6BC,OAA7B,QAA4C,MAA5C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,sBAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAC1B,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACc,QAAD;AAAA,OAAWC;AAAX,MAA0Bf,QAAQ,CAAC;AACxCgB,IAAAA,EAAE,EAAE;AADoC,GAAD,CAAxC;AAGA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BlB,QAAQ,CAAC;AAC5CmB,IAAAA,OAAO,EAAE,IADmC;AAE5CC,IAAAA,KAAK,EAAE,IAFqC;AAG5CC,IAAAA,MAAM,EAAE;AAHoC,GAAD,CAA5C;AAKA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAiClB,OAAO,EAA9C;AACA,QAAM;AAAA,OAACmB,cAAD;AAAA,OAAiBC;AAAjB,MAAsCzB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAA,OAAC0B,SAAD;AAAA,OAAYC;AAAZ,MAA4B3B,QAAQ,CAAC;AAC1C4B,IAAAA,IAAI,EAAE,EADoC;AAE1CP,IAAAA,MAAM,EAAE;AAFkC,GAAD,CAA1C;AAIA,QAAM;AAAA,OAACQ,SAAD;AAAA,OAAYC;AAAZ,MAA4B9B,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAA,OAAC+B,WAAD;AAAA,OAAcC;AAAd,MAAgChC,QAAQ,CAAC,CAAD,CAA9C;AAEA,MAAIiC,SAAS,GAAG,CAAhB,CAnB0B,CAoB1B;;AACA,QAAMC,WAAW,GAAG;AACnBC,IAAAA,QAAQ,EAAE,EADS;AAEnBF,IAAAA,SAAS,EAAEA;AAFQ,GAApB;AAIA,QAAM;AAAA,OAACG,OAAD;AAAA,OAAUC;AAAV,MAAwBrC,QAAQ,CAACkC,WAAD,CAAtC,CAzB0B,CA2B1B;;AACA,QAAMI,YAAY,GAAG,MAAM;AAC1BX,IAAAA,YAAY,CAAC;AACZC,MAAAA,IAAI,EAAE,SADM;AAEZP,MAAAA,MAAM,EAAE;AAFI,KAAD,CAAZ;;AAIC,KAAC,YAAY;AACb,UAAI;AACH,YAAIkB,GAAG,GAAG,MAAMnC,eAAe,CAACoC,cAAhB,CAA+BJ,OAA/B,CAAhB;;AACA,YAAIG,GAAG,CAAClB,MAAJ,IAAc,GAAlB,EAAuB;AACtBC,UAAAA,QAAQ,CAAC,QAAD,EAAW,kBAAX,CAAR;AACA;;AACD,YAAIiB,GAAG,CAAClB,MAAJ,IAAc,GAAlB,EAAuB;AACtBS,UAAAA,YAAY,CAACS,GAAG,CAACE,IAAJ,CAASC,QAAV,CAAZ;AACA7B,UAAAA,YAAY,CAAC0B,GAAG,CAACE,IAAJ,CAASA,IAAV,CAAZ;AACA;AACD,OATD,CASE,OAAOE,KAAP,EAAc;AACfrB,QAAAA,QAAQ,CAAC,QAAD,EAAWqB,KAAK,CAACC,OAAjB,CAAR;AACA,OAXD,SAWU;AACTjB,QAAAA,YAAY,CAAC;AACZC,UAAAA,IAAI,EAAE,SADM;AAEZP,UAAAA,MAAM,EAAE;AAFI,SAAD,CAAZ;AAIA;AACD,KAlBA;AAmBD,GAxBD,CA5B0B,CAsD1B;;;AACA,QAAMwB,aAAa,GAAIC,UAAD,IAAwB;AAC7Cb,IAAAA,SAAS,GAAGa,UAAZ;AACAd,IAAAA,cAAc,CAACc,UAAD,CAAd;AACAT,IAAAA,UAAU,iCACND,OADM;AAET;AACAH,MAAAA,SAAS,EAAEA;AAHF,OAAV;AAKA,GARD;;AAUA,QAAMc,SAAS,GAAG,MAAON,IAAP,IAAqB;AACtCd,IAAAA,YAAY,CAAC;AACZC,MAAAA,IAAI,EAAE,aADM;AAEZP,MAAAA,MAAM,EAAE;AAFI,KAAD,CAAZ;AAKA,QAAIkB,GAAG,GAAG,IAAV;;AACA,QAAI;AAAA;;AACHA,MAAAA,GAAG,GAAG,MAAMnC,eAAe,CAAC4C,UAAhB,CAA2BP,IAA3B,CAAZ;AACA,eAAAF,GAAG,UAAH,oCAAKlB,MAAL,KAAe,GAAf,KAAuBC,QAAQ,CAAC,SAAD,EAAY,qBAAZ,CAAR,EAA4CgB,YAAY,EAA/E;AACA,KAHD,CAGE,OAAOK,KAAP,EAAc;AACfrB,MAAAA,QAAQ,CAAC,QAAD,EAAWqB,KAAK,CAACC,OAAjB,CAAR;AACA,KALD,SAKU;AACTjB,MAAAA,YAAY,CAAC;AACZC,QAAAA,IAAI,EAAE,UADM;AAEZP,QAAAA,MAAM,EAAE;AAFI,OAAD,CAAZ;AAIA;;AAED,WAAOkB,GAAP;AACA,GApBD;;AAsBA,QAAMU,QAAQ,GAAIC,CAAD,IAAO;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,CAAC,CAACG,MAAF,CAASC,KAAxC;AACA,UAAMb,IAAI,GAAG;AACZzB,MAAAA,EAAE,EAAEkC,CAAC,CAACG,MAAF,CAASC;AADD,KAAb;;AAGAP,IAAAA,SAAS,CAACN,IAAD,CAAT;AACA,GAND;;AAQA,QAAMc,OAAO,GAAG,CACf;AACCnC,IAAAA,KAAK,EAAE,mBACN,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE,CAAjB;AAAoB,MAAA,QAAQ,EAAE6B,QAA9B;AAAwC,MAAA,cAAc,EAAE,KAAxD;AAAA,6BACC;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFF;AAMCO,IAAAA,SAAS,EAAE,QANZ;AAOC;AACA;AACA;AACA;AACA;AACAC,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,kBACP;AAAA,gBACED,IAAI,IAAI,CAAR,gBACA,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,SAApB;AAA8B,QAAA,KAAK,EAAEC,MAAM,CAAC3C,EAA5C;AAAgD,QAAA,QAAQ,EAAEiC,QAA1D;AAAA,+BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADA,gBAKA,QAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAA,+BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AAbF,GADe,EA2Bf;AACC7B,IAAAA,KAAK,EAAE,eADR;AAECoC,IAAAA,SAAS,EAAE,mBAFZ;AAGC;AACAC,IAAAA,MAAM,EAAGC,IAAD,iBAAU;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA,gBAAqCA;AAArC;AAAA;AAAA;AAAA;AAAA;AAJnB,GA3Be,EAiCf;AACCtC,IAAAA,KAAK,EAAE,oBADR;AAECoC,IAAAA,SAAS,EAAE,qBAFZ;AAGCC,IAAAA,MAAM,EAAGC,IAAD,iBAAU;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBAAuCjD,eAAe,CAACiD,IAAD;AAAtD;AAAA;AAAA;AAAA;AAAA,YAHnB,CAIC;;AAJD,GAjCe,EAuCf;AACCtC,IAAAA,KAAK,EAAE,WADR;AAECoC,IAAAA,SAAS,EAAE,WAFZ;AAGCC,IAAAA,MAAM,EAAGG,IAAD,iBAAU;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA,gBAAuCtD,MAAM,CAACsD,IAAD,CAAN,CAAaC,MAAb,CAAoB,YAApB;AAAvC;AAAA;AAAA;AAAA;AAAA;AAHnB,GAvCe,EA4Cf;AACCJ,IAAAA,MAAM,EAAGE,MAAD,iBACP,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,eAAf;AAAA,6BACC;AACC,QAAA,SAAS,EAAC,qBADX;AAEC,QAAA,OAAO,EAAE,MAAM;AACdlC,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAV,UAAAA,WAAW,CAAC;AACXC,YAAAA,EAAE,EAAE2C,MAAM,CAAC3C;AADA,WAAD,CAAX;AAGAE,UAAAA,aAAa,CAAC;AACbC,YAAAA,OAAO,EAAEwC,MAAM,CAACG,mBADH;AAEb1C,YAAAA,KAAK,EAAEuC,MAAM,CAACI,iBAFD;AAGb1C,YAAAA,MAAM,EAAEsC,MAAM,CAACK;AAHF,WAAD,CAAb;AAKA,SAZF;AAAA,+BAcC,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAdD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAFF,GA5Ce,CAAhB;AAoEAjE,EAAAA,SAAS,CAAC,MAAM;AACfuC,IAAAA,YAAY;AACZ,GAFQ,EAEN,CAACF,OAAD,CAFM,CAAT;AAIA,sBACC;AAAA,4BACC,QAAC,KAAD;AACC,MAAA,KAAK,eAAE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cADR;AAEC,MAAA,OAAO,EAAEZ,cAFV;AAGC,MAAA,IAAI,EAAE,MAAM;AACXC,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAR,QAAAA,UAAU,CAACI,MAAX,IAAqB,CAArB,IAA0B0B,SAAS,CAACjC,QAAD,CAAnC;AACA,OANF;AAOC,MAAA,QAAQ,EAAE,MAAM;AACfW,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAR,QAAAA,UAAU,CAACI,MAAX,IAAqB,CAArB,IAA0B0B,SAAS,CAACjC,QAAD,CAAnC;AACA,OAVF;AAAA,8BAYC;AAAA,kBAAKG,UAAU,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA,cAZD,eAaC;AAAA,kBAAMX,eAAe,CAACQ,UAAU,CAACE,OAAZ;AAArB;AAAA;AAAA;AAAA;AAAA,cAbD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAgBC,QAAC,UAAD;AACC,MAAA,OAAO,EAAEO,SADV;AAEC,MAAA,WAAW,EAAEK,WAFd;AAGC,MAAA,SAAS,EAAEF,SAAS,IAAIA,SAHzB;AAIC,MAAA,aAAa,EAAGiB,UAAD,IAAwBD,aAAa,CAACC,UAAD,CAJrD;AAKC,MAAA,QAAQ,EAAC,cALV;AAMC,MAAA,SAAS,EAAC,8BANX,CAOC;AACA;AACA;AACA;AACA;AACA;AAZD;AAaC,MAAA,UAAU,EAAElC,SAbb;AAcC,MAAA,OAAO,EAAE2C;AAdV;AAAA;AAAA;AAAA;AAAA,YAhBD;AAAA,kBADD;AAmCA,CA1MD;;AA2MA5C,YAAY,CAACsD,MAAb,GAAsB/D,UAAtB;AACA,eAAeS,YAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport { AlertCircle } from 'react-feather'\r\n\r\nimport { notificationApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\nimport moment from 'moment'\r\nimport { Checkbox, Row, Col, Tooltip } from 'antd'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport Modal from 'antd/lib/modal/Modal'\r\n\r\nconst Notification = () => {\r\n\tconst [dataTable, setDataTable] = useState([])\r\n\tconst [dataSeen, setDataSeen] = useState({\r\n\t\tID: null\r\n\t})\r\n\tconst [contentRow, setContentRow] = useState({\r\n\t\tcontent: null,\r\n\t\ttitle: null,\r\n\t\tstatus: null\r\n\t})\r\n\tconst { showNoti, handleReloadNoti } = useWrap()\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\r\n\tlet pageIndex = 1\r\n\t// PARAMS API GETALL\r\n\tconst listTodoApi = {\r\n\t\tpageSize: 10,\r\n\t\tpageIndex: pageIndex\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// GET DATA\r\n\tconst getDataTable = () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\t;(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await notificationApi.getAllWithUser(todoApi)\r\n\t\t\t\tif (res.status == 204) {\r\n\t\t\t\t\tshowNoti('danger', 'Không có dữ liệu')\r\n\t\t\t\t}\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t\t\tsetDataTable(res.data.data)\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})()\r\n\t}\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tpageIndex = pageNumber\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t//   ...listFieldSearch,\r\n\t\t\tpageIndex: pageIndex\r\n\t\t})\r\n\t}\r\n\r\n\tconst _onSubmit = async (data: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'UPDATE_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet res = null\r\n\t\ttry {\r\n\t\t\tres = await notificationApi.updateSeen(data)\r\n\t\t\tres?.status == 200 && (showNoti('success', 'Cập nhật thành công'), getDataTable())\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\tconst onChange = (e) => {\r\n\t\tconsole.log('Checked Value: ', e.target.value)\r\n\t\tconst data = {\r\n\t\t\tID: e.target.value\r\n\t\t}\r\n\t\t_onSubmit(data)\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: () => (\r\n\t\t\t\t<Checkbox value={0} onChange={onChange} defaultChecked={false}>\r\n\t\t\t\t\t<span className=\"color-white\">Xem tất cả</span>\r\n\t\t\t\t</Checkbox>\r\n\t\t\t),\r\n\t\t\tdataIndex: 'Status',\r\n\t\t\t// render: (record) => (\r\n\t\t\t//     record.Status == 0\r\n\t\t\t//     ? ( <Checkbox value={record.ID} onChange={onChange}><span className=\"font-weight-black\">Xem</span></Checkbox>)\r\n\t\t\t//     : (<Checkbox checked><span className=\"font-weight-black\">Xem</span></Checkbox>)\r\n\t\t\t// ),\r\n\t\t\trender: (text, record) => (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{text == 0 ? (\r\n\t\t\t\t\t\t<Checkbox className=\"uncheck\" value={record.ID} onChange={onChange}>\r\n\t\t\t\t\t\t\t<span>Xem</span>\r\n\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Checkbox checked>\r\n\t\t\t\t\t\t\t<span>Xem</span>\r\n\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tên thông báo',\r\n\t\t\tdataIndex: 'NotificationTitle',\r\n\t\t\t// ...FilterColumn(\"center\")\r\n\t\t\trender: (text) => <span className=\"font-weight-black\">{text}</span>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Nội dung thông báo',\r\n\t\t\tdataIndex: 'NotificationContent',\r\n\t\t\trender: (text) => <div className=\"content-notification\">{ReactHtmlParser(text)}</div>\r\n\t\t\t// ...FilterColumn(\"supplier\")\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Thời gian',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\trender: (date) => <span className=\"font-weight-primary\">{moment(date).format('DD/MM/YYYY')}</span>\r\n\t\t},\r\n\t\t{\r\n\t\t\trender: (record) => (\r\n\t\t\t\t<Tooltip title=\"Chi tiết\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn btn-icon delete\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetIsModalVisible(true)\r\n\t\t\t\t\t\t\tsetDataSeen({\r\n\t\t\t\t\t\t\t\tID: record.ID\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tsetContentRow({\r\n\t\t\t\t\t\t\t\tcontent: record.NotificationContent,\r\n\t\t\t\t\t\t\t\ttitle: record.NotificationTitle,\r\n\t\t\t\t\t\t\t\tstatus: record.Status\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<AlertCircle color=\"#32c6a4\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataTable()\r\n\t}, [todoApi])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={<AlertCircle color=\"#32c6a4\" />}\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\t\tcontentRow.status == 0 && _onSubmit(dataSeen)\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\t\tcontentRow.status == 0 && _onSubmit(dataSeen)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<h4>{contentRow.title}</h4>\r\n\t\t\t\t<div>{ReactHtmlParser(contentRow.content)}</div>\r\n\t\t\t</Modal>\r\n\t\t\t<PowerTable\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Danh sách thông báo\"\r\n\t\t\t\t// TitleCard={\r\n\t\t\t\t//     <PurposeForm\r\n\t\t\t\t//         showAdd={true}\r\n\t\t\t\t//         isLoading={isLoading}\r\n\t\t\t\t//         _onSubmit={(data: any) => _onSubmit(data)}\r\n\t\t\t\t//     />}\r\n\t\t\t\tdataSource={dataTable}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\nNotification.layout = LayoutBase\r\nexport default Notification\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Sales\\\\SalesSalary\\\\SalesSalary.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Input } from 'antd';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { saleCampaignApi, saleSalaryApi, staffApi } from '~/apiBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nimport { fmSelectArr, numberWithCommas, parsePriceStrToNumber } from '~/utils/functions';\n\nfunction SalesSalary(props) {\n  const {\n    0: saleSalaryList,\n    1: setSaleSalaryList\n  } = useState([]);\n  const {\n    showNoti,\n    isAdmin\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: optionListForFilter,\n    1: setOptionListForFilter\n  } = useState({\n    optionSaleCampaignList: [],\n    optionCounselorList: []\n  });\n  const {\n    0: activeColumnSearch,\n    1: setActiveColumnSearch\n  } = useState('');\n  const sortOptionList = [{\n    dataSort: {\n      sort: 0,\n      sortType: true\n    },\n    value: 1,\n    text: 'Lương tăng dần'\n  }, {\n    dataSort: {\n      sort: 0,\n      sortType: false\n    },\n    value: 2,\n    text: 'Lương giảm dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: true\n    },\n    value: 3,\n    text: 'Tổng lương tăng dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: false\n    },\n    value: 4,\n    text: 'Tổng lương giảm dần'\n  }]; // FILTER\n\n  const listFieldInit = {\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false,\n    CounselorsID: null,\n    SaleCampaignID: null,\n    DonePaid: false\n  };\n  let refValue = useRef({\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false\n  });\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(listFieldInit); // PAGINATION\n\n  const getPagination = (pageIndex, pageSize) => {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize,\n      pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  }; // SORT\n\n\n  const onSort = option => {\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), refValue.current));\n  }; // RESET SEARCH\n\n\n  const onResetSearch = () => {\n    setActiveColumnSearch('');\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), {}, {\n      pageSize: refValue.current.pageSize\n    }));\n  }; // ACTION SEARCH\n\n\n  const onSearch = (valueSearch, dataIndex) => {\n    setActiveColumnSearch(dataIndex);\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1,\n      [dataIndex]: valueSearch\n    }));\n  }; // GET DATA TABLE\n\n\n  const fetchSaleCampaignList = async () => {\n    try {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n      const res = await saleSalaryApi.getAll(filters);\n\n      if (res.status === 200) {\n        setSaleSalaryList(res.data.data);\n        setTotalPage(res.data.totalRow);\n      }\n\n      if (res.status === 204) {\n        setSaleSalaryList([]);\n        setTotalPage(0);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchSaleCampaignList();\n  }, [filters]);\n\n  const fetchDataForFilter = async () => {\n    try {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n      const [counselorRes, saleCampaignRes] = await Promise.all([staffApi.getAll({\n        selectAll: true,\n        RoleID: 6\n      }), saleCampaignApi.getAll({\n        selectAll: true\n      })]);\n      const rs = {\n        optionSaleCampaignList: [],\n        optionCounselorList: []\n      };\n\n      if (counselorRes.status === 200) {\n        rs.optionCounselorList = fmSelectArr(counselorRes.data.data, 'FullNameUnicode', 'UserInformationID');\n      }\n\n      if (saleCampaignRes.status === 200) {\n        rs.optionSaleCampaignList = fmSelectArr(saleCampaignRes.data.data, 'Name', 'ID');\n      }\n\n      setOptionListForFilter(rs);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchDataForFilter();\n  }, []);\n\n  const onChangeBonus = async (key, vl, idx) => {\n    try {\n      const newSaleSalaryList = [...saleSalaryList];\n      const newSaleSalary = key === 'Bonus' ? _objectSpread(_objectSpread({}, newSaleSalaryList[idx]), {}, {\n        Bonus: parsePriceStrToNumber(vl),\n        TotalSalary: newSaleSalaryList[idx].Salary + parsePriceStrToNumber(vl)\n      }) : _objectSpread(_objectSpread({}, newSaleSalaryList[idx]), {}, {\n        Note: vl\n      });\n      newSaleSalaryList.splice(idx, 1, newSaleSalary);\n      setSaleSalaryList(newSaleSalaryList);\n    } catch (error) {\n      console.log('onChangeBonus', error.message);\n    }\n  };\n\n  const onUpdateSaleSalary = idx => {\n    return async () => {\n      try {\n        setIsLoading({\n          type: 'GET_ALL',\n          status: true\n        });\n        const newSaleSalaryList = [...saleSalaryList];\n        const {\n          ID,\n          Bonus,\n          Note\n        } = newSaleSalaryList[idx];\n        const newSaleSalary = {\n          ID,\n          Bonus,\n          Note,\n          DonePaid: true\n        };\n        const res = await saleSalaryApi.update(newSaleSalary);\n\n        if (res.status === 200) {\n          newSaleSalaryList.splice(idx, 1);\n          setSaleSalaryList(newSaleSalaryList);\n          showNoti('success', res.data.message);\n        }\n      } catch (error) {\n        showNoti('danger', error.message);\n        console.log('onUpdateSaleSalary', error.message);\n      } finally {\n        setIsLoading({\n          type: 'GET_ALL',\n          status: false\n        });\n      }\n    };\n  };\n\n  const columns = [_objectSpread(_objectSpread({\n    title: 'Tư vấn viên',\n    dataIndex: 'CounselorsName'\n  }, FilterColumn('CounselorsID', onSearch, onResetSearch, 'select', optionListForFilter.optionCounselorList)), {}, {\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 22\n    }, this),\n    className: activeColumnSearch === 'CounselorsID' ? 'active-column-search' : ''\n  }), _objectSpread(_objectSpread({\n    title: 'Chiến dịch',\n    dataIndex: 'SaleCampaignName'\n  }, FilterColumn('SaleCampaignID', onSearch, onResetSearch, 'select', optionListForFilter.optionSaleCampaignList)), {}, {\n    className: activeColumnSearch === 'SaleCampaignID' ? 'active-column-search' : ''\n  }), {\n    title: 'Lương chiến dịch',\n    dataIndex: 'Salary',\n    width: 140,\n    render: price => numberWithCommas(price)\n  }, {\n    title: 'Thưởng',\n    dataIndex: 'Bonus',\n    render: (price, item, idx) => /*#__PURE__*/_jsxDEV(Input, {\n      value: price > 0 ? numberWithCommas(price) : '',\n      style: {\n        width: 150\n      },\n      placeholder: \"Nh\\u1EADp th\\u01B0\\u1EDFng\",\n      className: \"style-input\",\n      allowClear: true,\n      onChange: e => onChangeBonus('Bonus', e.target.value, idx)\n    }, item.ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 5\n    }, this)\n  }, {\n    title: 'Tổng lương',\n    dataIndex: 'TotalSalary',\n    width: 140,\n    render: price => numberWithCommas(price)\n  }, {\n    title: 'Ghi chú',\n    dataIndex: 'Note',\n    render: (price, item, idx) => /*#__PURE__*/_jsxDEV(Input, {\n      style: {\n        width: 150\n      },\n      placeholder: \"Nh\\u1EADp ghi ch\\xFA\",\n      className: \"style-input\",\n      allowClear: true,\n      onChange: e => onChangeBonus('Note', e.target.value, idx)\n    }, item.ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }, this)\n  }, {\n    width: 140,\n    align: 'center',\n    render: (record, _, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => e.stopPropagation(),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning add-new\",\n        onClick: onUpdateSaleSalary(idx),\n        children: \"Thanh to\\xE1n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 5\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(PowerTable, {\n    loading: isLoading,\n    currentPage: filters.pageIndex,\n    totalPage: totalPage,\n    getPagination: getPagination,\n    addClass: \"basic-header\",\n    TitlePage: \"Duy\\u1EC7t l\\u01B0\\u01A1ng\",\n    dataSource: saleSalaryList,\n    columns: columns,\n    Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extra-table\",\n      children: /*#__PURE__*/_jsxDEV(SortBox, {\n        width: 180,\n        handleSort: onSort,\n        dataOption: sortOptionList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 3\n  }, this);\n}\n\nexport default SalesSalary;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Sales/SalesSalary/SalesSalary.tsx"],"names":["Input","React","useEffect","useRef","useState","saleCampaignApi","saleSalaryApi","staffApi","SortBox","PowerTable","FilterColumn","useWrap","fmSelectArr","numberWithCommas","parsePriceStrToNumber","SalesSalary","props","saleSalaryList","setSaleSalaryList","showNoti","isAdmin","isLoading","setIsLoading","type","status","totalPage","setTotalPage","optionListForFilter","setOptionListForFilter","optionSaleCampaignList","optionCounselorList","activeColumnSearch","setActiveColumnSearch","sortOptionList","dataSort","sort","sortType","value","text","listFieldInit","pageIndex","pageSize","CounselorsID","SaleCampaignID","DonePaid","refValue","filters","setFilters","getPagination","current","onSort","option","title","onResetSearch","onSearch","valueSearch","dataIndex","fetchSaleCampaignList","res","getAll","data","totalRow","error","message","fetchDataForFilter","counselorRes","saleCampaignRes","Promise","all","selectAll","RoleID","rs","onChangeBonus","key","vl","idx","newSaleSalaryList","newSaleSalary","Bonus","TotalSalary","Salary","Note","splice","console","log","onUpdateSaleSalary","ID","update","columns","render","className","width","price","item","e","target","align","record","_","stopPropagation"],"mappings":"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","sourcesContent":["import { Input } from 'antd'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { saleCampaignApi, saleSalaryApi, staffApi } from '~/apiBase'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { fmSelectArr, numberWithCommas, parsePriceStrToNumber } from '~/utils/functions'\r\n\r\ntype IOptionListFilter = {\r\n\toptionSaleCampaignList: IOptionCommon[]\r\n\toptionCounselorList: IOptionCommon[]\r\n}\r\nfunction SalesSalary(props) {\r\n\tconst [saleSalaryList, setSaleSalaryList] = useState<ISaleSalary[]>([])\r\n\tconst { showNoti, isAdmin } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [optionListForFilter, setOptionListForFilter] = useState<IOptionListFilter>({\r\n\t\toptionSaleCampaignList: [],\r\n\t\toptionCounselorList: []\r\n\t})\r\n\tconst [activeColumnSearch, setActiveColumnSearch] = useState('')\r\n\tconst sortOptionList = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 1,\r\n\t\t\ttext: 'Lương tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 0,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 2,\r\n\t\t\ttext: 'Lương giảm dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 3,\r\n\t\t\ttext: 'Tổng lương tăng dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 4,\r\n\t\t\ttext: 'Tổng lương giảm dần'\r\n\t\t}\r\n\t]\r\n\t// FILTER\r\n\tconst listFieldInit = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false,\r\n\r\n\t\tCounselorsID: null,\r\n\t\tSaleCampaignID: null,\r\n\t\tDonePaid: false\r\n\t}\r\n\tlet refValue = useRef({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false\r\n\t})\r\n\tconst [filters, setFilters] = useState(listFieldInit)\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tpageSize,\r\n\t\t\tpageIndex\r\n\t\t}\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\t...refValue.current\r\n\t\t})\r\n\t}\r\n\t// SORT\r\n\tconst onSort = (option) => {\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current\r\n\t\t})\r\n\t}\r\n\t// RESET SEARCH\r\n\tconst onResetSearch = () => {\r\n\t\tsetActiveColumnSearch('')\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\tpageSize: refValue.current.pageSize\r\n\t\t})\r\n\t}\r\n\t// ACTION SEARCH\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tsetActiveColumnSearch(dataIndex)\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t[dataIndex]: valueSearch\r\n\t\t})\r\n\t}\r\n\r\n\t// GET DATA TABLE\r\n\tconst fetchSaleCampaignList = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t})\r\n\t\t\tconst res = await saleSalaryApi.getAll(filters)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetSaleSalaryList(res.data.data)\r\n\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetSaleSalaryList([])\r\n\t\t\t\tsetTotalPage(0)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchSaleCampaignList()\r\n\t}, [filters])\r\n\r\n\tconst fetchDataForFilter = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t})\r\n\t\t\tconst [counselorRes, saleCampaignRes] = await Promise.all([\r\n\t\t\t\tstaffApi.getAll({ selectAll: true, RoleID: 6 }),\r\n\t\t\t\tsaleCampaignApi.getAll({ selectAll: true })\r\n\t\t\t])\r\n\t\t\tconst rs: IOptionListFilter = {\r\n\t\t\t\toptionSaleCampaignList: [],\r\n\t\t\t\toptionCounselorList: []\r\n\t\t\t}\r\n\t\t\tif (counselorRes.status === 200) {\r\n\t\t\t\trs.optionCounselorList = fmSelectArr(counselorRes.data.data, 'FullNameUnicode', 'UserInformationID')\r\n\t\t\t}\r\n\t\t\tif (saleCampaignRes.status === 200) {\r\n\t\t\t\trs.optionSaleCampaignList = fmSelectArr(saleCampaignRes.data.data, 'Name', 'ID')\r\n\t\t\t}\r\n\t\t\tsetOptionListForFilter(rs)\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchDataForFilter()\r\n\t}, [])\r\n\r\n\tconst onChangeBonus = async (key: string, vl: string, idx: number) => {\r\n\t\ttry {\r\n\t\t\tconst newSaleSalaryList = [...saleSalaryList]\r\n\t\t\tconst newSaleSalary: ISaleSalary =\r\n\t\t\t\tkey === 'Bonus'\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t...newSaleSalaryList[idx],\r\n\t\t\t\t\t\t\tBonus: parsePriceStrToNumber(vl),\r\n\t\t\t\t\t\t\tTotalSalary: newSaleSalaryList[idx].Salary + parsePriceStrToNumber(vl)\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t...newSaleSalaryList[idx],\r\n\t\t\t\t\t\t\tNote: vl\r\n\t\t\t\t\t  }\r\n\t\t\tnewSaleSalaryList.splice(idx, 1, newSaleSalary)\r\n\t\t\tsetSaleSalaryList(newSaleSalaryList)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('onChangeBonus', error.message)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onUpdateSaleSalary = (idx: number) => {\r\n\t\treturn async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t})\r\n\t\t\t\tconst newSaleSalaryList = [...saleSalaryList]\r\n\r\n\t\t\t\tconst { ID, Bonus, Note } = newSaleSalaryList[idx]\r\n\r\n\t\t\t\tconst newSaleSalary: {\r\n\t\t\t\t\tID: number\r\n\t\t\t\t\tBonus: number\r\n\t\t\t\t\tDonePaid: boolean\r\n\t\t\t\t\tNote: string\r\n\t\t\t\t} = {\r\n\t\t\t\t\tID,\r\n\t\t\t\t\tBonus,\r\n\t\t\t\t\tNote,\r\n\t\t\t\t\tDonePaid: true\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst res = await saleSalaryApi.update(newSaleSalary)\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tnewSaleSalaryList.splice(idx, 1)\r\n\t\t\t\t\tsetSaleSalaryList(newSaleSalaryList)\r\n\t\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t\tconsole.log('onUpdateSaleSalary', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Tư vấn viên',\r\n\t\t\tdataIndex: 'CounselorsName',\r\n\t\t\t...FilterColumn('CounselorsID', onSearch, onResetSearch, 'select', optionListForFilter.optionCounselorList),\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>,\r\n\t\t\tclassName: activeColumnSearch === 'CounselorsID' ? 'active-column-search' : ''\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Chiến dịch',\r\n\t\t\tdataIndex: 'SaleCampaignName',\r\n\t\t\t...FilterColumn('SaleCampaignID', onSearch, onResetSearch, 'select', optionListForFilter.optionSaleCampaignList),\r\n\t\t\tclassName: activeColumnSearch === 'SaleCampaignID' ? 'active-column-search' : ''\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Lương chiến dịch',\r\n\t\t\tdataIndex: 'Salary',\r\n\t\t\twidth: 140,\r\n\t\t\trender: (price) => numberWithCommas(price)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Thưởng',\r\n\t\t\tdataIndex: 'Bonus',\r\n\t\t\trender: (price, item: ISaleSalary, idx) => (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tkey={item.ID}\r\n\t\t\t\t\tvalue={price > 0 ? numberWithCommas(price) : ''}\r\n\t\t\t\t\tstyle={{ width: 150 }}\r\n\t\t\t\t\tplaceholder=\"Nhập thưởng\"\r\n\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\tallowClear={true}\r\n\t\t\t\t\tonChange={(e) => onChangeBonus('Bonus', e.target.value, idx)}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tổng lương',\r\n\t\t\tdataIndex: 'TotalSalary',\r\n\t\t\twidth: 140,\r\n\t\t\trender: (price) => numberWithCommas(price)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ghi chú',\r\n\t\t\tdataIndex: 'Note',\r\n\t\t\trender: (price, item: ISaleSalary, idx) => (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tkey={item.ID}\r\n\t\t\t\t\tstyle={{ width: 150 }}\r\n\t\t\t\t\tplaceholder=\"Nhập ghi chú\"\r\n\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\tallowClear={true}\r\n\t\t\t\t\tonChange={(e) => onChangeBonus('Note', e.target.value, idx)}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 140,\r\n\t\t\talign: 'center',\r\n\t\t\trender: (record: ISaleSalary, _, idx) => (\r\n\t\t\t\t<div onClick={(e) => e.stopPropagation()}>\r\n\t\t\t\t\t<button className=\"btn btn-warning add-new\" onClick={onUpdateSaleSalary(idx)}>\r\n\t\t\t\t\t\tThanh toán\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\treturn (\r\n\t\t<PowerTable\r\n\t\t\tloading={isLoading}\r\n\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\ttotalPage={totalPage}\r\n\t\t\tgetPagination={getPagination}\r\n\t\t\taddClass=\"basic-header\"\r\n\t\t\tTitlePage=\"Duyệt lương\"\r\n\t\t\tdataSource={saleSalaryList}\r\n\t\t\tcolumns={columns}\r\n\t\t\tExtra={\r\n\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t<SortBox width={180} handleSort={onSort} dataOption={sortOptionList} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default SalesSalary\r\n"]},"metadata":{},"sourceType":"module"}
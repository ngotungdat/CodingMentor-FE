{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\pages\\\\option\\\\center\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Switch, Tooltip } from 'antd';\nimport Link from 'next/link';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { areaApi, branchApi } from '~/apiBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport CenterForm from '~/components/Global/Option/CenterForm';\nimport LayoutBase from '~/components/LayoutBase';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nvar listFieldSearch = {\n  pageIndex: 1,\n  branchCode: null,\n  branchName: null\n};\nvar dataOption = [{\n  dataSort: {\n    sort: 1,\n    sortType: false\n  },\n  text: 'Mã giảm dần'\n}, {\n  dataSort: {\n    sort: 1,\n    sortType: true\n  },\n  text: 'Mã tăng dần'\n}, {\n  dataSort: {\n    sort: 2,\n    sortType: false\n  },\n  text: 'Tên giảm dần'\n}, {\n  dataSort: {\n    sort: 2,\n    sortType: true\n  },\n  text: 'Tên tăng dần '\n}];\n\nvar Center = function Center() {\n  _s();\n\n  var _useState = useState([]),\n      center = _useState[0],\n      setCenter = _useState[1];\n\n  var _useState2 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      pageSize = _useWrap.pageSize;\n\n  var _useState3 = useState(null),\n      totalPage = _useState3[0],\n      setTotalPage = _useState3[1];\n\n  var _useState4 = useState(null),\n      indexRow = _useState4[0],\n      setIndexRow = _useState4[1];\n\n  var _useState5 = useState(1),\n      currentPage = _useState5[0],\n      setCurrentPage = _useState5[1];\n\n  var _useState6 = useState(null),\n      dataArea = _useState6[0],\n      setDataArea = _useState6[1];\n\n  var listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: currentPage,\n    sort: null,\n    sortType: null,\n    branchCode: null,\n    branchName: null\n  };\n\n  var _useState7 = useState(listTodoApi),\n      todoApi = _useState7[0],\n      setTodoApi = _useState7[1]; // -------------- GET DATA CENTER ----------------\n\n\n  var getDataCenter = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return branchApi.getAll(todoApi);\n\n            case 4:\n              res = _context.sent;\n              res.status == 200 && (setCenter(res.data.data), setTotalPage(res.data.totalRow));\n              res.status == 204 && showNoti('danger', 'Không có dữ liệu') && setCenter([]);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              showNoti('danger', _context.t0.message);\n\n            case 12:\n              _context.prev = 12;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function getDataCenter() {\n      return _ref.apply(this, arguments);\n    };\n  }(); //GET DATA AREA\n\n\n  var getAllArea = function getAllArea() {\n    ;\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return areaApi.getAll({\n                pageIndex: 1,\n                pageSize: 9999\n              });\n\n            case 3:\n              res = _context2.sent;\n              res.status == 200 && setDataArea(res.data.data);\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              showNoti('danger', _context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }))();\n  }; // ---------------- AFTER SUBMIT -----------------\n\n\n  var afterPost = function afterPost(mes) {\n    showNoti('success', mes);\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // ----------------- ON SUBMIT --------------------\n\n\n  var _onSubmit2 = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dataSubmit) {\n      var res, newDataSource, _res;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              res = null;\n\n              if (!dataSubmit.ID) {\n                _context3.next = 18;\n                break;\n              }\n\n              _context3.prev = 3;\n              _context3.next = 6;\n              return branchApi.update(dataSubmit);\n\n            case 6:\n              res = _context3.sent;\n\n              if (res.status == 200) {\n                newDataSource = _toConsumableArray(center);\n                newDataSource.splice(indexRow, 1, dataSubmit);\n                setCenter(newDataSource);\n                showNoti('success', res.data.message);\n              }\n\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](3);\n              showNoti('danger', _context3.t0.message);\n\n            case 13:\n              _context3.prev = 13;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context3.finish(13);\n\n            case 16:\n              _context3.next = 31;\n              break;\n\n            case 18:\n              _context3.prev = 18;\n              _context3.next = 21;\n              return branchApi.add(dataSubmit);\n\n            case 21:\n              res = _context3.sent;\n              ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && afterPost(res.data.message);\n              _context3.next = 28;\n              break;\n\n            case 25:\n              _context3.prev = 25;\n              _context3.t1 = _context3[\"catch\"](18);\n              showNoti('danger', _context3.t1.message);\n\n            case 28:\n              _context3.prev = 28;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context3.finish(28);\n\n            case 31:\n              return _context3.abrupt(\"return\", res);\n\n            case 32:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 10, 13, 16], [18, 25, 28, 31]]);\n    }));\n\n    return function _onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // ----------------- TURN OF ------------------------\n\n\n  var changeStatus = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(checked, idRow) {\n      var dataChange, res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              dataChange = {\n                ID: idRow,\n                Enable: checked\n              };\n              _context4.prev = 2;\n              _context4.next = 5;\n              return branchApi.update(dataChange);\n\n            case 5:\n              res = _context4.sent;\n              res.status == 200 && setTodoApi(_objectSpread({}, todoApi));\n              _context4.next = 12;\n              break;\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](2);\n              showNoti('danger', _context4.t0.Message);\n\n            case 12:\n              _context4.prev = 12;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context4.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 9, 12, 15]]);\n    }));\n\n    return function changeStatus(_x2, _x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // -------------- GET PAGE_NUMBER -----------------\n\n\n  var _getPagination = function getPagination(pageNumber) {\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      pageIndex: pageNumber\n    }));\n  }; // --------------- HANDLE SORT ----------------------\n\n\n  var _handleSort = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(option) {\n      var newTodoApi;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n                pageIndex: 1,\n                sort: option.title.sort,\n                sortType: option.title.sortType\n              });\n              setCurrentPage(1), setTodoApi(newTodoApi);\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function handleSort(_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); // -------------- CHECK FIELD ---------------------\n\n\n  var checkField = function checkField(valueSearch, dataIndex) {\n    var newList = _objectSpread({}, listFieldSearch);\n\n    Object.keys(newList).forEach(function (key) {\n      if (key != dataIndex) {\n        if (key != 'pageIndex') {\n          newList[key] = null;\n        }\n      } else {\n        newList[key] = valueSearch;\n      }\n    });\n    return newList;\n  }; // ------------ ON SEARCH -----------------------\n\n\n  var onSearch = function onSearch(valueSearch, dataIndex) {\n    var clearKey = checkField(valueSearch, dataIndex);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), clearKey));\n  }; // HANDLE RESET\n\n\n  var resetListFieldSearch = function resetListFieldSearch() {\n    Object.keys(listFieldSearch).forEach(function (key) {\n      if (key != 'pageIndex') {\n        listFieldSearch[key] = null;\n      }\n    });\n  };\n\n  var handleReset = function handleReset() {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1), resetListFieldSearch();\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(function () {\n    getDataCenter();\n  }, [todoApi]);\n  useEffect(function () {\n    getAllArea();\n  }, []);\n  var columns = [_objectSpread({\n    title: 'Mã trung tâm',\n    width: 150,\n    dataIndex: 'BranchCode'\n  }, FilterColumn('branchCode', onSearch, handleReset, 'text')), _objectSpread({\n    title: 'Tên trung tâm',\n    dataIndex: 'BranchName',\n    width: 150\n  }, FilterColumn('branchName', onSearch, handleReset, 'text')), {\n    title: 'Địa chỉ',\n    width: 150,\n    dataIndex: 'Address'\n  }, {\n    title: 'Số điện thoại',\n    width: 150,\n    dataIndex: 'Phone'\n  }, {\n    title: 'Email',\n    dataIndex: 'Email'\n  }, {\n    title: 'Trạng thái',\n    width: 100,\n    dataIndex: 'Enable',\n    render: function render(Enable, record) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          checkedChildren: \"Hi\\u1EC7n\",\n          unCheckedChildren: \"\\u1EA8n\",\n          checked: Enable,\n          size: \"default\",\n          onChange: function onChange(checked) {\n            return changeStatus(checked, record.ID);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false);\n    }\n  }, {\n    width: 100,\n    render: function render(text, data, index) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: {\n            pathname: '/option/center/rooms-detail/[slug]',\n            query: {\n              slug: \"\".concat(data.ID)\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Xem ph\\xF2ng\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-icon\",\n              children: /*#__PURE__*/_jsxDEV(Eye, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 9\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 8\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"C\\u1EADp nh\\u1EADt trung t\\xE2m\",\n          children: /*#__PURE__*/_jsxDEV(CenterForm, {\n            dataArea: dataArea,\n            getIndex: function getIndex() {\n              return setIndexRow(index);\n            },\n            index: index,\n            branchId: data.ID,\n            rowData: data,\n            isLoading: isLoading,\n            _onSubmit: function _onSubmit(data) {\n              return _onSubmit2(data);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PowerTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: function getPagination(pageNumber) {\n        return _getPagination(pageNumber);\n      },\n      loading: isLoading,\n      addClass: \"basic-header\",\n      TitlePage: \"Danh s\\xE1ch trung t\\xE2m\" // TitleCard={<CenterForm dataArea={dataArea} isLoading={isLoading} _onSubmit={(data: any) => _onSubmit(data)} />}\n      ,\n      dataSource: center,\n      columns: columns,\n      Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: /*#__PURE__*/_jsxDEV(SortBox, {\n          handleSort: function handleSort(value) {\n            return _handleSort(value);\n          },\n          dataOption: dataOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(Center, \"H/rfqFDusY1XZD4CwXGGAXJCXP0=\", false, function () {\n  return [useWrap];\n});\n\n_c = Center;\nCenter.layout = LayoutBase;\nexport default Center;\n\nvar _c;\n\n$RefreshReg$(_c, \"Center\");","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/pages/option/center/index.tsx"],"names":["Switch","Tooltip","Link","React","Fragment","useEffect","useState","areaApi","branchApi","SortBox","CenterForm","LayoutBase","PowerTable","FilterColumn","useWrap","listFieldSearch","pageIndex","branchCode","branchName","dataOption","dataSort","sort","sortType","text","Center","center","setCenter","type","status","isLoading","setIsLoading","showNoti","pageSize","totalPage","setTotalPage","indexRow","setIndexRow","currentPage","setCurrentPage","dataArea","setDataArea","listTodoApi","todoApi","setTodoApi","getDataCenter","getAll","res","data","totalRow","message","getAllArea","afterPost","mes","_onSubmit","dataSubmit","ID","update","newDataSource","splice","add","changeStatus","checked","idRow","dataChange","Enable","Message","getPagination","pageNumber","handleSort","option","newTodoApi","title","checkField","valueSearch","dataIndex","newList","Object","keys","forEach","key","onSearch","clearKey","resetListFieldSearch","handleReset","columns","width","render","record","index","pathname","query","slug","value","layout"],"mappings":"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","sourcesContent":["import { Switch, Tooltip } from 'antd'\r\nimport Link from 'next/link'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { areaApi, branchApi } from '~/apiBase'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport CenterForm from '~/components/Global/Option/CenterForm'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nlet listFieldSearch = {\r\n\tpageIndex: 1,\r\n\tbranchCode: null,\r\n\tbranchName: null\r\n}\r\n\r\nconst dataOption = [\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 1,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Mã giảm dần'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 1,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Mã tăng dần'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Tên giảm dần'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Tên tăng dần '\r\n\t}\r\n]\r\n\r\nconst Center = () => {\r\n\tconst [center, setCenter] = useState<IBranch[]>([])\r\n\tconst [isLoading, setIsLoading] = useState({ type: '', status: false })\r\n\tconst { showNoti, pageSize } = useWrap()\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [indexRow, setIndexRow] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [dataArea, setDataArea] = useState<IArea[]>(null)\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: currentPage,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tbranchCode: null,\r\n\t\tbranchName: null\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// -------------- GET DATA CENTER ----------------\r\n\tconst getDataCenter = async () => {\r\n\t\tsetIsLoading({ type: 'GET_ALL', status: true })\r\n\t\ttry {\r\n\t\t\tlet res = await branchApi.getAll(todoApi)\r\n\t\t\tres.status == 200 && (setCenter(res.data.data), setTotalPage(res.data.totalRow))\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu') && setCenter([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'GET_ALL', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\t//GET DATA AREA\r\n\tconst getAllArea = () => {\r\n\t\t; (async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await areaApi.getAll({ pageIndex: 1, pageSize: 9999 })\r\n\t\t\t\tres.status == 200 && setDataArea(res.data.data)\r\n\t\t\t} catch (err) {\r\n\t\t\t\tshowNoti('danger', err)\r\n\t\t\t}\r\n\t\t})()\r\n\t}\r\n\r\n\t// ---------------- AFTER SUBMIT -----------------\r\n\tconst afterPost = (mes) => {\r\n\t\tshowNoti('success', mes)\r\n\t\tsetTodoApi({ ...listTodoApi, pageIndex: 1 })\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// ----------------- ON SUBMIT --------------------\r\n\tconst _onSubmit = async (dataSubmit: any) => {\r\n\t\tsetIsLoading({ type: 'ADD_DATA', status: true })\r\n\t\tlet res = null\r\n\t\tif (dataSubmit.ID) {\r\n\t\t\ttry {\r\n\t\t\t\tres = await branchApi.update(dataSubmit)\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tlet newDataSource = [...center]\r\n\t\t\t\t\tnewDataSource.splice(indexRow, 1, dataSubmit)\r\n\t\t\t\t\tsetCenter(newDataSource)\r\n\t\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({ type: 'ADD_DATA', status: false })\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tres = await branchApi.add(dataSubmit)\r\n\t\t\t\tres?.status == 200 && afterPost(res.data.message)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({ type: 'ADD_DATA', status: false })\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\t// ----------------- TURN OF ------------------------\r\n\tconst changeStatus = async (checked: boolean, idRow: number) => {\r\n\t\tsetIsLoading({ type: 'GET_ALL', status: true })\r\n\t\tlet dataChange = { ID: idRow, Enable: checked }\r\n\t\ttry {\r\n\t\t\tlet res = await branchApi.update(dataChange)\r\n\t\t\tres.status == 200 && setTodoApi({ ...todoApi })\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.Message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'GET_ALL', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({ ...todoApi, pageIndex: pageNumber })\r\n\t}\r\n\r\n\t// --------------- HANDLE SORT ----------------------\r\n\tconst handleSort = async (option) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetCurrentPage(1), setTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// -------------- CHECK FIELD ---------------------\r\n\tconst checkField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = { ...listFieldSearch }\r\n\t\tObject.keys(newList).forEach(function (key) {\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\t\tnewList[key] = null\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewList[key] = valueSearch\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn newList\r\n\t}\r\n\r\n\t// ------------ ON SEARCH -----------------------\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tlet clearKey = checkField(valueSearch, dataIndex)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t...clearKey\r\n\t\t})\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tconst resetListFieldSearch = () => {\r\n\t\tObject.keys(listFieldSearch).forEach(function (key) {\r\n\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\tlistFieldSearch[key] = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({ ...listTodoApi, pageIndex: 1 })\r\n\t\tsetCurrentPage(1), resetListFieldSearch()\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tgetDataCenter()\r\n\t}, [todoApi])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAllArea()\r\n\t}, [])\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Mã trung tâm',\r\n\t\t\twidth: 150,\r\n\t\t\tdataIndex: 'BranchCode',\r\n\t\t\t...FilterColumn('branchCode', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tên trung tâm',\r\n\t\t\tdataIndex: 'BranchName',\r\n\t\t\twidth: 150,\r\n\t\t\t...FilterColumn('branchName', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{ title: 'Địa chỉ', width: 150, dataIndex: 'Address' },\r\n\t\t{\r\n\t\t\ttitle: 'Số điện thoại',\r\n\t\t\twidth: 150,\r\n\t\t\tdataIndex: 'Phone'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Email',\r\n\t\t\tdataIndex: 'Email'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\twidth: 100,\r\n\t\t\tdataIndex: 'Enable',\r\n\t\t\trender: (Enable: boolean, record: any) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Switch\r\n\t\t\t\t\t\tcheckedChildren=\"Hiện\"\r\n\t\t\t\t\t\tunCheckedChildren=\"Ẩn\"\r\n\t\t\t\t\t\tchecked={Enable}\r\n\t\t\t\t\t\tsize=\"default\"\r\n\t\t\t\t\t\tonChange={(checked) => changeStatus(checked, record.ID)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: 100,\r\n\t\t\trender: (text: string, data: any, index: number) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\tpathname: '/option/center/rooms-detail/[slug]',\r\n\t\t\t\t\t\t\tquery: { slug: `${data.ID}` }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tooltip title=\"Xem phòng\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-icon\">\r\n\t\t\t\t\t\t\t\t<Eye />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Tooltip title=\"Cập nhật trung tâm\">\r\n\t\t\t\t\t\t<CenterForm\r\n\t\t\t\t\t\t\tdataArea={dataArea}\r\n\t\t\t\t\t\t\tgetIndex={() => setIndexRow(index)}\r\n\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\tbranchId={data.ID}\r\n\t\t\t\t\t\t\trowData={data}\r\n\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t_onSubmit={(data: any) => _onSubmit(data)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<PowerTable\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Danh sách trung tâm\"\r\n\t\t\t\t// TitleCard={<CenterForm dataArea={dataArea} isLoading={isLoading} _onSubmit={(data: any) => _onSubmit(data)} />}\r\n\t\t\t\tdataSource={center}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t<SortBox handleSort={(value) => handleSort(value)} dataOption={dataOption} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\nCenter.layout = LayoutBase\r\nexport default Center\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Profile\\\\ProfileCustomer\\\\InfoPaymentCard\\\\RefundsTable.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Check } from 'react-feather';\nimport { refundsApi, voucherApi } from '~/apiBase';\nimport { ExpandRefundRow } from '~/components/Elements/ExpandBox';\nimport ExpandTable from '~/components/ExpandTable';\nimport { useWrap } from '~/context/wrap';\nimport { numberWithCommas } from '~/utils/functions';\nRefundsTable.propTypes = {\n  studentID: PropTypes.number\n};\nRefundsTable.defaultProps = {\n  studentID: 0\n};\n\nfunction RefundsTable(props) {\n  const {\n    studentID\n  } = props;\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: null,\n    status: false\n  });\n  const {\n    0: refundList,\n    1: setRefundList\n  } = useState([]);\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: infoVoucherList,\n    1: setInfoVoucherList\n  } = useState([]);\n  const listFieldInit = {\n    pageIndex: 1,\n    pageSize: pageSize,\n    sort: -1,\n    sortType: false,\n    UserInformationID: studentID\n  };\n  let refValue = useRef({\n    pageIndex: 1,\n    pageSize: 10,\n    sort: -1,\n    sortType: false\n  });\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(listFieldInit); // PAGINATION\n\n  const getPagination = (pageIndex, pageSize) => {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize,\n      pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  };\n\n  const getRefundList = async () => {\n    try {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n      const res = await refundsApi.getAll(filters);\n\n      if (res.status === 200) {\n        setRefundList(res.data.data);\n        setTotalPage(res.data.totalRow);\n      }\n\n      if (res.status == 204) {\n        setRefundList([]);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    getRefundList();\n  }, [filters]);\n  const columns = [{\n    title: 'Ngày tạo',\n    dataIndex: 'CreatedOn',\n    render: date => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: moment(date).format('DD/MM/YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Trung tâm',\n    dataIndex: 'BranchName'\n  }, {\n    title: 'Số tiền',\n    dataIndex: 'Price',\n    render: price => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-primary\",\n        children: numberWithCommas(price)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    title: 'Trạng thái',\n    dataIndex: 'StatusName',\n    align: 'center',\n    render: fnStatus => {\n      switch (fnStatus) {\n        case 'Chờ duyệt':\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag green\",\n            children: fnStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 14\n          }, this);\n\n        case 'Không duyệt':\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag red\",\n            children: fnStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 14\n          }, this);\n\n        case 'Đã duyệt':\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag yellow\",\n            children: fnStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 14\n          }, this);\n          break;\n      }\n    }\n  }, {\n    title: 'Xóa khỏi lớp',\n    dataIndex: 'isExpulsion',\n    align: 'center',\n    render: isExpulsion => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isExpulsion ? /*#__PURE__*/_jsxDEV(Check, {\n          color: \"#0da779\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 30\n        }, this) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 12\n      }, this);\n    }\n  }]; //\n\n  const fetchInfoVoucherList = async ID => {\n    try {\n      setIsLoading({\n        type: 'FETCH_INFO_VOUCHER',\n        status: true\n      });\n      const res = await voucherApi.getAll({\n        RefundsID: ID\n      });\n\n      if (res.status === 200) {\n        setInfoVoucherList(res.data.data);\n      }\n\n      if (res.status === 204) {\n        setInfoVoucherList(null);\n      }\n    } catch (error) {\n      console.log(fetchInfoVoucherList, error.message);\n    } finally {\n      setIsLoading({\n        type: 'FETCH_INFO_VOUCHER',\n        status: false\n      });\n    }\n  };\n\n  const expandableObj = {\n    expandedRowRender: record => /*#__PURE__*/_jsxDEV(ExpandRefundRow, {\n      isLoading: isLoading,\n      dataRow: record,\n      infoVoucherList: infoVoucherList\n    }, record.ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 4\n    }, this),\n    onExpand: (expanded, record) => {\n      if (expanded) {\n        fetchInfoVoucherList(record.ID);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ExpandTable, {\n    loading: isLoading,\n    currentPage: filters.pageIndex,\n    totalPage: totalPage,\n    getPagination: getPagination,\n    noScroll: true,\n    dataSource: refundList,\n    columns: columns,\n    Extra: /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"L\\u1ECBch s\\u1EED ho\\xE0n ti\\u1EC1n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }, this),\n    expandable: expandableObj\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 3\n  }, this);\n}\n\nexport default RefundsTable;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Profile/ProfileCustomer/InfoPaymentCard/RefundsTable.tsx"],"names":["moment","PropTypes","React","useEffect","useRef","useState","Check","refundsApi","voucherApi","ExpandRefundRow","ExpandTable","useWrap","numberWithCommas","RefundsTable","propTypes","studentID","number","defaultProps","props","showNoti","pageSize","isLoading","setIsLoading","type","status","refundList","setRefundList","totalPage","setTotalPage","infoVoucherList","setInfoVoucherList","listFieldInit","pageIndex","sort","sortType","UserInformationID","refValue","filters","setFilters","getPagination","current","getRefundList","res","getAll","data","totalRow","error","message","columns","title","dataIndex","render","date","format","price","align","fnStatus","isExpulsion","fetchInfoVoucherList","ID","RefundsID","console","log","expandableObj","expandedRowRender","record","onExpand","expanded"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Check } from 'react-feather';\r\nimport { refundsApi, voucherApi } from '~/apiBase';\r\nimport { ExpandRefundRow } from '~/components/Elements/ExpandBox';\r\nimport ExpandTable from '~/components/ExpandTable';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { numberWithCommas } from '~/utils/functions';\r\n\r\nRefundsTable.propTypes = {\r\n\tstudentID: PropTypes.number\r\n};\r\nRefundsTable.defaultProps = {\r\n\tstudentID: 0\r\n};\r\nfunction RefundsTable(props) {\r\n\tconst { studentID } = props;\r\n\tconst { showNoti, pageSize } = useWrap();\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: null,\r\n\t\tstatus: false\r\n\t});\r\n\tconst [refundList, setRefundList] = useState<IRefunds[]>([]);\r\n\tconst [totalPage, setTotalPage] = useState(null);\r\n\tconst [infoVoucherList, setInfoVoucherList] = useState<IVoucher[]>([]);\r\n\r\n\tconst listFieldInit = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: pageSize,\r\n\t\tsort: -1,\r\n\t\tsortType: false,\r\n\t\tUserInformationID: studentID\r\n\t};\r\n\tlet refValue = useRef({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\t\tsort: -1,\r\n\t\tsortType: false\r\n\t});\r\n\tconst [filters, setFilters] = useState(listFieldInit);\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10;\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tpageSize,\r\n\t\t\tpageIndex\r\n\t\t};\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\t...refValue.current\r\n\t\t});\r\n\t};\r\n\r\n\tconst getRefundList = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\tconst res = await refundsApi.getAll(filters);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetRefundList(res.data.data);\r\n\t\t\t\tsetTotalPage(res.data.totalRow);\r\n\t\t\t}\r\n\t\t\tif (res.status == 204) {\r\n\t\t\t\tsetRefundList([]);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetRefundList();\r\n\t}, [filters]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Ngày tạo',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\trender: (date) => <p className=\"font-weight-black\">{moment(date).format('DD/MM/YYYY')}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trung tâm',\r\n\t\t\tdataIndex: 'BranchName'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Số tiền',\r\n\t\t\tdataIndex: 'Price',\r\n\t\t\trender: (price) => {\r\n\t\t\t\treturn <p className=\"font-weight-primary\">{numberWithCommas(price)}</p>;\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tdataIndex: 'StatusName',\r\n\t\t\talign: 'center',\r\n\t\t\trender: (fnStatus) => {\r\n\t\t\t\tswitch (fnStatus) {\r\n\t\t\t\t\tcase 'Chờ duyệt':\r\n\t\t\t\t\t\treturn <span className=\"tag green\">{fnStatus}</span>;\r\n\t\t\t\t\tcase 'Không duyệt':\r\n\t\t\t\t\t\treturn <span className=\"tag red\">{fnStatus}</span>;\r\n\t\t\t\t\tcase 'Đã duyệt':\r\n\t\t\t\t\t\treturn <span className=\"tag yellow\">{fnStatus}</span>;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Xóa khỏi lớp',\r\n\t\t\tdataIndex: 'isExpulsion',\r\n\t\t\talign: 'center',\r\n\t\t\trender: (isExpulsion) => {\r\n\t\t\t\treturn <p>{isExpulsion ? <Check color=\"#0da779\" /> : ''}</p>;\r\n\t\t\t}\r\n\t\t}\r\n\t];\r\n\r\n\t//\r\n\tconst fetchInfoVoucherList = async (ID: number) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_INFO_VOUCHER',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\tconst res = await voucherApi.getAll({\r\n\t\t\t\tRefundsID: ID\r\n\t\t\t});\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetInfoVoucherList(res.data.data);\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetInfoVoucherList(null);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(fetchInfoVoucherList, error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_INFO_VOUCHER',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst expandableObj = {\r\n\t\texpandedRowRender: (record) => (\r\n\t\t\t<ExpandRefundRow isLoading={isLoading} key={record.ID} dataRow={record} infoVoucherList={infoVoucherList} />\r\n\t\t),\r\n\t\tonExpand: (expanded, record) => {\r\n\t\t\tif (expanded) {\r\n\t\t\t\tfetchInfoVoucherList(record.ID);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ExpandTable\r\n\t\t\tloading={isLoading}\r\n\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\ttotalPage={totalPage}\r\n\t\t\tgetPagination={getPagination}\r\n\t\t\tnoScroll\r\n\t\t\tdataSource={refundList}\r\n\t\t\tcolumns={columns}\r\n\t\t\tExtra={<h5>Lịch sử hoàn tiền</h5>}\r\n\t\t\texpandable={expandableObj}\r\n\t\t/>\r\n\t);\r\n}\r\nexport default RefundsTable;\r\n"]},"metadata":{},"sourceType":"module"}
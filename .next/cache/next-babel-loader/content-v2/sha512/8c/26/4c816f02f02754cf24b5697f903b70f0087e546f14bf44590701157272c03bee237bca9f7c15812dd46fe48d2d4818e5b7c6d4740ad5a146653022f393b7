{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\ExpandTable\\\\index.tsx\";\nimport { Card, Table } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useWrap } from '~/context/wrap';\n\nconst ExpandTable = props => {\n  var _props$loading, _props$loading2;\n\n  const {\n    getTitlePage\n  } = useWrap();\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    selectedRowKeys: []\n  });\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    0: rowKeys,\n    1: setRowKeys\n  } = useState([{\n    currentPage: 1,\n    listKeys: []\n  }]);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: activeIndex,\n    1: setActiveIndex\n  } = useState(null);\n  const {\n    0: heightTable,\n    1: setHeightTable\n  } = useState(450);\n\n  const closeAllExpandFunc = () => {\n    setRowKeys([{\n      currentPage: 1,\n      listKeys: []\n    }]);\n  };\n\n  const selectRow = record => {\n    const selectedRowKeys = [];\n\n    if (selectedRowKeys.indexOf(record.key) >= 0) {\n      selectedRowKeys.splice(selectedRowKeys.indexOf(record.key), 1);\n    } else {\n      selectedRowKeys.push(record.key);\n    }\n\n    setState({\n      selectedRowKeys\n    });\n  };\n\n  const onSelectedRowKeysChange = (selectedRowKeys, selectRow) => {\n    props.onSelectRow(selectRow) && props.onSelectRow(selectRow);\n    setState({\n      selectedRowKeys\n    });\n  };\n\n  const changePagination = (pageNumber, pageSize) => {\n    setCurrentPage(pageNumber);\n\n    if (!rowKeys.some(object => object['currentPage'] == pageNumber)) {\n      rowKeys.push({\n        currentPage: pageNumber,\n        listKeys: []\n      });\n    }\n\n    setRowKeys([...rowKeys]);\n\n    if (typeof props.getPagination != 'undefined') {\n      props.getPagination(pageNumber, pageSize);\n    } else {\n      return pageNumber;\n    }\n  };\n\n  const onChangeExpand = expandedRows => {\n    setActiveIndex(parseInt(expandedRows[expandedRows.length - 1]));\n\n    if (rowKeys.some(object => object['currentPage'] == currentPage)) {\n      let index = rowKeys.findIndex(item => item.currentPage == currentPage);\n      rowKeys[index].listKeys = expandedRows;\n    }\n\n    setRowKeys([...rowKeys]);\n  };\n\n  const returnRowKeys = () => {\n    let rowK = null;\n\n    if (rowKeys.some(object => object['currentPage'] == currentPage)) {\n      rowK = rowKeys.find(item => item.currentPage === currentPage).listKeys;\n    } else {\n      rowK = [];\n    }\n\n    if (rowK.length > 1) {\n      rowK.splice(rowK.length - 2, 1);\n    }\n\n    return rowK;\n  };\n\n  const onExpand = (expand, record) => {\n    if (typeof props.handleExpand != 'undefined') {\n      props.handleExpand(record);\n    }\n  }; // const onRowchange = (row) => {\n  //   console.log(\"ROW: \", row);\n  // };\n\n\n  const onShowSizeChange = (current, size) => {\n    props.onChangePageSize && props.onChangePageSize(current, size);\n  };\n\n  const rowSelection = {\n    selectedRowKeys: state.selectedRowKeys,\n    onChange: onSelectedRowKeysChange,\n    hideSelectAll: false\n  };\n\n  const onSelect = () => {};\n\n  useEffect(() => {\n    if (props.TitlePage) {\n      getTitlePage(props.TitlePage);\n    }\n\n    if (props.dataSource) {\n      let dataClone = [...props.dataSource];\n      dataClone.forEach((item, index) => {\n        item.key = index.toString();\n      });\n      setDataSource(dataClone);\n    }\n  }, [props.dataSource]);\n  useEffect(() => {\n    if (props.closeAllExpand) {\n      closeAllExpandFunc();\n    }\n  }, [props.closeAllExpand]);\n  useEffect(() => {\n    let wS = screen.width;\n\n    if (wS < 800) {// setHeightTable(600);\n      // console.log('start respon');\n    }\n  }, []);\n  useEffect(() => {\n    if (props.isResetKey) {\n      setState({\n        selectedRowKeys: []\n      });\n    }\n  }, [props.isResetKey]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-table table-expand\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: `cardRadius ${props.addClass && props.addClass} ${props.Size ? props.Size : ''}`,\n        title: props.Extra,\n        extra: props.TitleCard,\n        children: [props.children, /*#__PURE__*/_jsxDEV(Table, {\n          loading: ((_props$loading = props.loading) === null || _props$loading === void 0 ? void 0 : _props$loading.type) == 'GET_ALL' && ((_props$loading2 = props.loading) === null || _props$loading2 === void 0 ? void 0 : _props$loading2.status),\n          bordered: props.haveBorder ? props.haveBorder : false,\n          scroll: {\n            x: 'max-content',\n            y: heightTable\n          },\n          columns: props.columns,\n          dataSource: dataSource,\n          size: \"middle\",\n          pagination: {\n            pageSize: 30,\n            pageSizeOptions: ['30'],\n            onShowSizeChange: onShowSizeChange,\n            total: props.totalPage && props.totalPage,\n            showTotal: () => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-weight-black\",\n              children: [\"T\\u1ED5ng c\\u1ED9ng: \", props.totalPage]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this),\n            onChange: (pageNumber, pageSize) => changePagination(pageNumber, pageSize),\n            current: props.currentPage && props.currentPage\n          } // rowSelection={rowSelection}\n          ,\n          rowClassName: (record, index) => index == activeIndex ? 'table-row-active' : index % 2 === 0 ? 'table-row-light' : 'table-row-dark',\n          onRow: (record, index) => ({\n            onClick: () => {\n              selectRow(record);\n              setActiveIndex(index);\n            }\n          }),\n          expandable: rowKeys[0].listKeys.length > 0 && props.expandable,\n          expandedRowRender: (record, index, indent, expaned) => expaned ? props.expandable : null,\n          onExpandedRowsChange: onChangeExpand,\n          onExpand: onExpand,\n          expandedRowKeys: returnRowKeys(),\n          rowSelection: props.isSelect ? rowSelection : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nexport default ExpandTable;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/ExpandTable/index.tsx"],"names":["Card","Table","React","useEffect","useState","useWrap","ExpandTable","props","getTitlePage","state","setState","selectedRowKeys","dataSource","setDataSource","rowKeys","setRowKeys","currentPage","listKeys","setCurrentPage","activeIndex","setActiveIndex","heightTable","setHeightTable","closeAllExpandFunc","selectRow","record","indexOf","key","splice","push","onSelectedRowKeysChange","onSelectRow","changePagination","pageNumber","pageSize","some","object","getPagination","onChangeExpand","expandedRows","parseInt","length","index","findIndex","item","returnRowKeys","rowK","find","onExpand","expand","handleExpand","onShowSizeChange","current","size","onChangePageSize","rowSelection","onChange","hideSelectAll","onSelect","TitlePage","dataClone","forEach","toString","closeAllExpand","wS","screen","width","isResetKey","addClass","Size","Extra","TitleCard","children","loading","type","status","haveBorder","x","y","columns","pageSizeOptions","total","totalPage","showTotal","onClick","expandable","indent","expaned","isSelect"],"mappings":"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","sourcesContent":["import { Card, Table } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst ExpandTable = (props) => {\r\n\tconst { getTitlePage } = useWrap()\r\n\tconst [state, setState] = useState({ selectedRowKeys: [] })\r\n\tconst [dataSource, setDataSource] = useState([])\r\n\tconst [rowKeys, setRowKeys] = useState([\r\n\t\t{\r\n\t\t\tcurrentPage: 1,\r\n\t\t\tlistKeys: []\r\n\t\t}\r\n\t])\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [activeIndex, setActiveIndex] = useState(null)\r\n\tconst [heightTable, setHeightTable] = useState<number>(450)\r\n\r\n\tconst closeAllExpandFunc = () => {\r\n\t\tsetRowKeys([\r\n\t\t\t{\r\n\t\t\t\tcurrentPage: 1,\r\n\t\t\t\tlistKeys: []\r\n\t\t\t}\r\n\t\t])\r\n\t}\r\n\r\n\tconst selectRow = (record) => {\r\n\t\tconst selectedRowKeys = []\r\n\r\n\t\tif (selectedRowKeys.indexOf(record.key) >= 0) {\r\n\t\t\tselectedRowKeys.splice(selectedRowKeys.indexOf(record.key), 1)\r\n\t\t} else {\r\n\t\t\tselectedRowKeys.push(record.key)\r\n\t\t}\r\n\t\tsetState({ selectedRowKeys })\r\n\t}\r\n\r\n\tconst onSelectedRowKeysChange = (selectedRowKeys, selectRow) => {\r\n\t\tprops.onSelectRow(selectRow) && props.onSelectRow(selectRow)\r\n\t\tsetState({ selectedRowKeys })\r\n\t}\r\n\r\n\tconst changePagination = (pageNumber, pageSize) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tif (!rowKeys.some((object) => object['currentPage'] == pageNumber)) {\r\n\t\t\trowKeys.push({\r\n\t\t\t\tcurrentPage: pageNumber,\r\n\t\t\t\tlistKeys: []\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tsetRowKeys([...rowKeys])\r\n\r\n\t\tif (typeof props.getPagination != 'undefined') {\r\n\t\t\tprops.getPagination(pageNumber, pageSize)\r\n\t\t} else {\r\n\t\t\treturn pageNumber\r\n\t\t}\r\n\t}\r\n\r\n\tconst onChangeExpand = (expandedRows) => {\r\n\t\tsetActiveIndex(parseInt(expandedRows[expandedRows.length - 1]))\r\n\r\n\t\tif (rowKeys.some((object) => object['currentPage'] == currentPage)) {\r\n\t\t\tlet index = rowKeys.findIndex((item) => item.currentPage == currentPage)\r\n\t\t\trowKeys[index].listKeys = expandedRows\r\n\t\t}\r\n\r\n\t\tsetRowKeys([...rowKeys])\r\n\t}\r\n\r\n\tconst returnRowKeys = () => {\r\n\t\tlet rowK = null\r\n\r\n\t\tif (rowKeys.some((object) => object['currentPage'] == currentPage)) {\r\n\t\t\trowK = rowKeys.find((item) => item.currentPage === currentPage).listKeys\r\n\t\t} else {\r\n\t\t\trowK = []\r\n\t\t}\r\n\r\n\t\tif (rowK.length > 1) {\r\n\t\t\trowK.splice(rowK.length - 2, 1)\r\n\t\t}\r\n\r\n\t\treturn rowK\r\n\t}\r\n\r\n\tconst onExpand = (expand, record) => {\r\n\t\tif (typeof props.handleExpand != 'undefined') {\r\n\t\t\tprops.handleExpand(record)\r\n\t\t}\r\n\t}\r\n\r\n\t// const onRowchange = (row) => {\r\n\t//   console.log(\"ROW: \", row);\r\n\t// };\r\n\r\n\tconst onShowSizeChange = (current, size) => {\r\n\t\tprops.onChangePageSize && props.onChangePageSize(current, size)\r\n\t}\r\n\r\n\tconst rowSelection = {\r\n\t\tselectedRowKeys: state.selectedRowKeys,\r\n\t\tonChange: onSelectedRowKeysChange,\r\n\t\thideSelectAll: false\r\n\t}\r\n\r\n\tconst onSelect = () => {}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.TitlePage) {\r\n\t\t\tgetTitlePage(props.TitlePage)\r\n\t\t}\r\n\t\tif (props.dataSource) {\r\n\t\t\tlet dataClone = [...props.dataSource]\r\n\t\t\tdataClone.forEach((item, index) => {\r\n\t\t\t\titem.key = index.toString()\r\n\t\t\t})\r\n\t\t\tsetDataSource(dataClone)\r\n\t\t}\r\n\t}, [props.dataSource])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.closeAllExpand) {\r\n\t\t\tcloseAllExpandFunc()\r\n\t\t}\r\n\t}, [props.closeAllExpand])\r\n\r\n\tuseEffect(() => {\r\n\t\tlet wS = screen.width\r\n\t\tif (wS < 800) {\r\n\t\t\t// setHeightTable(600);\r\n\t\t\t// console.log('start respon');\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.isResetKey) {\r\n\t\t\tsetState({ selectedRowKeys: [] })\r\n\t\t}\r\n\t}, [props.isResetKey])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"wrap-table table-expand\">\r\n\t\t\t\t<Card\r\n\t\t\t\t\tclassName={`cardRadius ${props.addClass && props.addClass} ${props.Size ? props.Size : ''}`}\r\n\t\t\t\t\ttitle={props.Extra}\r\n\t\t\t\t\textra={props.TitleCard}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tloading={props.loading?.type == 'GET_ALL' && props.loading?.status}\r\n\t\t\t\t\t\tbordered={props.haveBorder ? props.haveBorder : false}\r\n\t\t\t\t\t\tscroll={{ x: 'max-content', y: heightTable }}\r\n\t\t\t\t\t\tcolumns={props.columns}\r\n\t\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\t\tsize=\"middle\"\r\n\t\t\t\t\t\tpagination={{\r\n\t\t\t\t\t\t\tpageSize: 30,\r\n\t\t\t\t\t\t\tpageSizeOptions: ['30'],\r\n\t\t\t\t\t\t\tonShowSizeChange: onShowSizeChange,\r\n\t\t\t\t\t\t\ttotal: props.totalPage && props.totalPage,\r\n\t\t\t\t\t\t\tshowTotal: () => <div className=\"font-weight-black\">Tổng cộng: {props.totalPage}</div>,\r\n\t\t\t\t\t\t\tonChange: (pageNumber, pageSize) => changePagination(pageNumber, pageSize),\r\n\t\t\t\t\t\t\tcurrent: props.currentPage && props.currentPage\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t// rowSelection={rowSelection}\r\n\t\t\t\t\t\trowClassName={(record, index) =>\r\n\t\t\t\t\t\t\tindex == activeIndex ? 'table-row-active' : index % 2 === 0 ? 'table-row-light' : 'table-row-dark'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonRow={(record, index) => ({\r\n\t\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\t\tselectRow(record)\r\n\t\t\t\t\t\t\t\tsetActiveIndex(index)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\texpandable={rowKeys[0].listKeys.length > 0 && props.expandable}\r\n\t\t\t\t\t\texpandedRowRender={(record, index, indent, expaned) => (expaned ? props.expandable : null)}\r\n\t\t\t\t\t\tonExpandedRowsChange={onChangeExpand}\r\n\t\t\t\t\t\tonExpand={onExpand}\r\n\t\t\t\t\t\texpandedRowKeys={returnRowKeys()}\r\n\t\t\t\t\t\trowSelection={props.isSelect ? rowSelection : null}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ExpandTable\r\n"]},"metadata":{},"sourceType":"module"}
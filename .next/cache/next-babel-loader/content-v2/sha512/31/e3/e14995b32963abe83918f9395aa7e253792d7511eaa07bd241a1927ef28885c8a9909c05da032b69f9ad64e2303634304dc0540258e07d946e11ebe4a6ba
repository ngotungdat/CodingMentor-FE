{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\DoingTest\\\\MainTest.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { CheckCircleOutlined, CloseOutlined, LeftOutlined, ProfileFilled, RightOutlined } from '@ant-design/icons';\nimport { Card, Checkbox, Modal, Skeleton, Spin } from 'antd';\nimport dynamic from 'next/dynamic';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { doingTestApi, examAppointmentResultApi, examDetailApi } from '~/apiBase';\nimport { homeworkResultApi } from '~/apiBase/course-detail/home-work-result';\nimport { courseExamApi } from '~/apiBase/package/course-exam';\nimport CountDown from '~/components/Elements/CountDown/CountDown';\nimport DecideModal from '~/components/Elements/DecideModal';\nimport { useDoingTest } from '~/context/useDoingTest';\nimport { useWrap } from '~/context/wrap';\nimport TimeUpModal from './TimeUpModal';\nconst ListQuestion = dynamic(() => import('~/components/Global/DoingTest/ListQuestion'), {\n  loading: () => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 17\n  }, this),\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('~/components/Global/DoingTest/ListQuestion')],\n    modules: [\"..\\\\components\\\\Global\\\\DoingTest\\\\MainTest.tsx -> \" + '~/components/Global/DoingTest/ListQuestion']\n  }\n});\n\nconst MainTest = props => {\n  const {\n    getListQuestionID,\n    getActiveID,\n    activeID,\n    listPicked\n  } = useDoingTest();\n  const {\n    examID,\n    infoExam,\n    packageDetailID,\n    dataDoneTest,\n    isDone,\n    listIDFromDoneTest,\n    listGroupIDFromDoneTest,\n    closeMainTest,\n    type,\n    CurriculumDetailID\n  } = props;\n  const listTodoApi = {\n    pageIndex: 1,\n    pageSize: 999,\n    ExamTopicID: examID\n  };\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: dataQuestion,\n    1: setDataQuestion\n  } = useState(null);\n  const {\n    0: isGroup,\n    1: setIsGroup\n  } = useState(false);\n  const {\n    0: addMinutes,\n    1: setAddMinutes\n  } = useState(null);\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: listQuestionID,\n    1: setListQuestionID\n  } = useState([]); // Lấy tất cả ID đã có\n\n  const {\n    0: listGroupID,\n    1: setListGroupID\n  } = useState([]); // Lấy tất cả group ID đã có\n\n  const {\n    0: spaceQuestion,\n    1: setSpaceQuestion\n  } = useState({\n    start: 0,\n    end: null\n  });\n  const {\n    0: pageCurrent,\n    1: setPageCurrent\n  } = useState(1);\n  const {\n    0: listPreview,\n    1: setListPreview\n  } = useState([]);\n  const router = useRouter();\n  const {\n    packageResult,\n    getPackageResult\n  } = useDoingTest();\n  const {\n    userInformation\n  } = useWrap();\n  const {\n    0: loadingSubmit,\n    1: setLoadingSubmit\n  } = useState(false);\n  const {\n    0: isLong,\n    1: setIsLong\n  } = useState(false);\n  const {\n    0: isModalConfirm,\n    1: setIsModalConfirm\n  } = useState(false);\n  const {\n    0: isModalSuccess,\n    1: setIsModalSuccess\n  } = useState(false);\n  const {\n    0: openTimeUpModal,\n    1: setOpenTimeUpModal\n  } = useState(false);\n  const {\n    0: checkTested,\n    1: setCheckTested\n  } = useState(false);\n  const {\n    0: openPagi,\n    1: setOpenPagi\n  } = useState(false); // Use for list question in mobile\n\n  const {\n    0: child,\n    1: setChild\n  } = useState('');\n\n  const checkIsTested = async () => {\n    setIsLoading(true);\n\n    try {\n      let res = await examAppointmentResultApi.checkIsTested(packageDetailID);\n\n      if (res.status == 200) {\n        if (res.data.data) {\n          setCheckTested(true);\n          setIsLoading(false);\n        } else {\n          getListQuestion();\n        }\n      }\n    } catch (error) {\n      setIsLoading(false);\n    }\n  }; // --- GET LIST QUESTION ---\n\n\n  const getListQuestion = async () => {\n    let cloneListQuestionID = [...listQuestionID];\n    let cloneListGroupID = [...listGroupID];\n    setIsLoading(true);\n\n    try {\n      let res = await examDetailApi.getAll(todoApi);\n\n      if (res.status == 200) {\n        setDataQuestion(res.data.data); // Add questionid to list\n\n        res.data.data.forEach((item, index) => {\n          if (item.Enable) {\n            item.ExerciseGroupID !== 0 && cloneListGroupID.push(item.ExerciseGroupID);\n            item.ExerciseTopic.forEach(ques => {\n              cloneListQuestionID.push(ques.ExerciseID);\n            });\n          }\n        }); // Calculate space question\n\n        checkSpaceQuestionAtFirst(res.data.data);\n        setListGroupID([...cloneListGroupID]);\n        setListQuestionID([...cloneListQuestionID]);\n      }\n\n      if (res.status == 204) {\n        setDataQuestion([]);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const checkSpaceQuestionAtFirst = data => {\n    if (data[0].ExerciseGroupID !== 0) {\n      setIsGroup(true);\n      setSpaceQuestion({\n        start: 0,\n        end: 1\n      });\n    } else {\n      data.every((item, index) => {\n        if (index == spaceQuestion.start + 1) {\n          if (item.ExerciseGroupID !== 0) {\n            setSpaceQuestion(_objectSpread(_objectSpread({}, spaceQuestion), {}, {\n              end: index\n            }));\n            return false;\n          } else {\n            setIsGroup(false);\n            setSpaceQuestion(_objectSpread(_objectSpread({}, spaceQuestion), {}, {\n              end: index + 1\n            }));\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  }; // -- CHECK IS SINGLE\n\n\n  const checkIsSingle = indexCurrent => {\n    if (indexCurrent !== spaceQuestion.start && indexCurrent !== 0 && indexCurrent !== spaceQuestion.end) {\n      if (spaceQuestion.end - spaceQuestion.start == 2) {\n        if (indexCurrent > spaceQuestion.start && indexCurrent < spaceQuestion.end) {\n          indexCurrent = indexCurrent - 1;\n        }\n      }\n    }\n\n    dataQuestion.every((item, index) => {\n      if (index == indexCurrent + 1) {\n        if (item.ExerciseGroupID !== 0) {\n          // nếu là group\n          setSpaceQuestion({\n            start: indexCurrent,\n            end: index\n          });\n          return false;\n        } else {\n          setSpaceQuestion({\n            start: indexCurrent,\n            end: index + 1\n          });\n          return false;\n        }\n      }\n\n      return true;\n    });\n\n    if (indexCurrent + 1 === dataQuestion.length) {\n      setSpaceQuestion({\n        start: indexCurrent,\n        end: indexCurrent + 1\n      });\n    }\n  }; // -- CHECK IS GROUP --\n\n\n  const checkIsGroup = page => {\n    let exerciseID = listQuestionID[page - 1];\n    dataQuestion.every((item, index) => {\n      // Kiểm tra nếu trong list Exercise Topic có exercise ID thì bắt đầu lấy được vị trí\n      if (item.ExerciseTopic.some(object => object['ExerciseID'] == exerciseID)) {\n        // Kiểm tra ở vị trí này là câu hỏi nhóm hay đơn\n        if (item.ExerciseGroupID !== 0) {\n          // Nếu là nhóm\n          setSpaceQuestion({\n            start: index,\n            end: index + 1\n          });\n          setIsGroup(true);\n        } else {\n          setIsGroup(false);\n          checkIsSingle(index);\n        }\n\n        return false;\n      }\n\n      return true;\n    }); // return isGroup;\n  }; // --- ON CHAGNE PAGINATION\n\n\n  const onChange_pagination = (e, page) => {\n    setPageCurrent(page);\n\n    if (e !== 'x') {\n      e.preventDefault();\n    } // setActiveID(listQuestionID[page - 1]);\n\n\n    getActiveID(listQuestionID[page - 1]);\n    checkIsGroup(page);\n  }; // - Previous page\n\n\n  const onChange_PreviousPage = () => {\n    listQuestionID.every((item, index) => {\n      if (item === activeID) {\n        if (index == 0) {\n          setPageCurrent(listQuestionID.length);\n          checkIsGroup(listQuestionID.length);\n          getActiveID(listQuestionID[listQuestionID.length - 1]);\n        } else {\n          setPageCurrent(pageCurrent => pageCurrent - 1);\n          checkIsGroup(pageCurrent - 1);\n          getActiveID(listQuestionID[index - 1]);\n        }\n\n        return false;\n      }\n\n      return true;\n    });\n  }; // - Next Page\n\n\n  const onChange_NextPage = e => {\n    listQuestionID.every((item, index) => {\n      if (item === activeID) {\n        if (index === listQuestionID.length - 1) {\n          setPageCurrent(1);\n          checkIsGroup(1);\n          getActiveID(listQuestionID[0]);\n        } else {\n          setPageCurrent(pageCurrent => pageCurrent + 1);\n          checkIsGroup(pageCurrent + 1);\n          getActiveID(listQuestionID[index + 1]);\n        }\n\n        return false;\n      }\n\n      return true;\n    });\n  }; // - Preview\n\n\n  function onChange_preview(e) {\n    const checked = e.target.checked;\n\n    if (!listPreview.includes(activeID)) {\n      listPreview.push(activeID);\n      setListPreview([...listPreview]);\n    } else {\n      let newListPreview = listPreview.filter(item => item -= activeID);\n      setListPreview([...newListPreview]);\n    }\n  } // --- TIME UP ---\n\n\n  const timeUp = () => {\n    setOpenTimeUpModal(true);\n    setTimeout(() => {\n      setOpenTimeUpModal(false);\n      onSubmit_DoingTest();\n    }, 1500);\n  }; // --- ACTION SHOW MODAL ---\n\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const remakeData = () => {\n    let cloneData = _objectSpread({}, packageResult);\n\n    let dataSubmit = null;\n    cloneData.SetPackageResultDetailInfoList.forEach(item => {\n      if (item.Type == 3 || item.Type == 2 || item.Type == 5) {\n        item.SetPackageExerciseStudentInfoList.forEach(e => {\n          if (e.SetPackageExerciseAnswerStudentList.length == 0) {\n            e.SetPackageExerciseAnswerStudentList.push({\n              AnswerID: 0,\n              AnswerContent: '',\n              FileAudio: ''\n            });\n          }\n        });\n      }\n    }); // Kiểm tra bài test thuộc dạng nào (type)\n    // test - Kiểm tra đầu vào\n    // examination - Đề bán, đề thi\n    // check - Đề kiểm tra\n\n    const deleteOldElement = (data, type) => {\n      let dataClone = _objectSpread({}, data);\n\n      switch (type) {\n        case 'test':\n          dataClone.ExamAppointmentResultDetailInfoList.forEach(item => {\n            delete item['SetPackageExerciseStudentInfoList'];\n            item.ExamAppointmentExerciseStudentInfoList.forEach(ans => {\n              delete ans['SetPackageExerciseAnswerStudentList'];\n            });\n          });\n          break;\n\n        case 'check':\n          dataClone.CourseExamresultDetailInfoList.forEach(item => {\n            delete item['SetPackageExerciseStudentInfoList'];\n            item.CourseExamExerciseStudentInfoList.forEach(ans => {\n              delete ans['SetPackageExerciseAnswerStudentList'];\n            });\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      return dataClone;\n    };\n\n    switch (type) {\n      case 'test':\n        let dataTestFirst = {\n          StudentID: null,\n          ExamAppointmentID: null,\n          ExamAppointmentResultDetailInfoList: []\n        };\n        dataTestFirst.StudentID = cloneData.StudentID;\n        dataTestFirst.ExamAppointmentID = cloneData.SetPackageDetailID;\n        dataTestFirst.ExamAppointmentResultDetailInfoList = [];\n        cloneData.SetPackageResultDetailInfoList.forEach(ques => {\n          ques.ExamAppointmentExerciseStudentInfoList = [...ques.SetPackageExerciseStudentInfoList];\n          dataTestFirst.ExamAppointmentResultDetailInfoList.push(ques);\n          dataTestFirst.ExamAppointmentResultDetailInfoList.forEach(item => {\n            item.ExamAppointmentExerciseStudentInfoList.forEach(ans => {\n              ans.ExamAppointmentExerciseAnswerStudentList = [...ans.SetPackageExerciseAnswerStudentList];\n            });\n          });\n        });\n        dataSubmit = _objectSpread({}, dataTestFirst);\n        break;\n\n      case 'check':\n        let dataCheck = {\n          StudentID: null,\n          CourseID: null,\n          CurriculumDetailID: parseInt(CurriculumDetailID),\n          CourseExamresultDetailInfoList: []\n        };\n        dataCheck.StudentID = cloneData.StudentID;\n        dataCheck.CourseID = cloneData.SetPackageDetailID;\n        dataCheck.CourseExamresultDetailInfoList = [];\n        cloneData.SetPackageResultDetailInfoList.forEach(ques => {\n          ques.CourseExamExerciseStudentInfoList = [...ques.SetPackageExerciseStudentInfoList];\n          dataCheck.CourseExamresultDetailInfoList.push(ques);\n          dataCheck.CourseExamresultDetailInfoList.forEach(item => {\n            item.CourseExamExerciseStudentInfoList.forEach(ans => {\n              ans.CourseExamExerciseAnswerStudentList = [...ans.SetPackageExerciseAnswerStudentList];\n            });\n          });\n        });\n        dataSubmit = _objectSpread({}, dataCheck);\n        break;\n\n      case 'examination':\n        dataSubmit = _objectSpread({}, cloneData);\n        break;\n\n      default:\n        break;\n    }\n\n    return dataSubmit;\n  }; // ===== ON SUBMIT DOING TEST =====\n\n\n  const returnRouter = data => {\n    var _router$query, _router$query2, _router$query3, _router$query4;\n\n    let obj = {};\n\n    switch (type) {\n      case 'test':\n        obj = {\n          pathname: '/customer/service/service-test-student/detail/[slug]',\n          query: {\n            slug: data.ExamAppointmentID,\n            examID: data.ExamTopicID,\n            ExamAppointmentResultID: data.ID\n          }\n        };\n        break;\n\n      case 'check':\n        obj = {\n          pathname: '/course-exam/detail/[slug]',\n          query: {\n            slug: data.ID,\n            examID: data.ExamTopicID,\n            packageDetailID: (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.packageDetailID\n          }\n        };\n        break;\n\n      default:\n        obj = {\n          pathname: (_router$query2 = router.query) !== null && _router$query2 !== void 0 && _router$query2.isExercise ? '/course/exercise/result/[slug]' : '/package/package-result-student/detail/[slug]',\n          query: {\n            slug: (_router$query3 = router.query) !== null && _router$query3 !== void 0 && _router$query3.isExercise ? data.HomeworkID : data.ID,\n            examID: data.ExamTopicID,\n            packageDetailID: (_router$query4 = router.query) === null || _router$query4 === void 0 ? void 0 : _router$query4.packageDetailID\n          }\n        };\n        break;\n    }\n\n    return obj;\n  };\n\n  const onSubmit_DoingTest = async () => {\n    var _router$query5;\n\n    console.log('onSubmit_DoingTest');\n    console.log('type: ', type);\n    setIsModalConfirm(false);\n    setLoadingSubmit(true);\n    let dataSubmit = remakeData();\n    let res = null;\n\n    try {\n      switch (type) {\n        case 'test':\n          // Kiểm tra đầu vào\n          res = await examAppointmentResultApi.add(dataSubmit);\n          break;\n\n        case 'check':\n          // Kiểm tra trong khóa học\n          res = await courseExamApi.add(dataSubmit);\n          break;\n\n        case 'examination':\n          // Thi cử - đề bán\n          res = (_router$query5 = router.query) !== null && _router$query5 !== void 0 && _router$query5.isExercise ? await homeworkResultApi.add(_objectSpread({}, dataSubmit)) : await doingTestApi.add(dataSubmit);\n          break;\n\n        default:\n          break;\n      }\n\n      if (res.status === 200) {\n        setIsModalSuccess(true);\n        setTimeout(() => {\n          router.push(returnRouter(res.data.data));\n        }, 1000);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoadingSubmit(false);\n    }\n  }; // Return text confirm\n\n\n  const returnTextConfirm = () => {\n    let textConfirm = 'Bạn có chắc muốn nộp bài?';\n\n    if (listPicked.length < listQuestionID.length) {\n      let numberOfQuestion = listQuestionID.length - listPicked.length;\n      textConfirm = `Bạn còn ${numberOfQuestion} câu chưa làm. Bạn có chắc muốn nộp bài?`;\n    }\n\n    return textConfirm;\n  };\n\n  const handleClick_openPagi = () => {\n    setOpenPagi(!openPagi);\n  }; // ===== ALL USE EFFECT ====\n\n\n  useEffect(() => {\n    if (!isDone) {\n      if (type === 'test') {\n        checkIsTested();\n      } else {\n        getListQuestion();\n      }\n\n      packageResult.SetPackageDetailID = parseInt(packageDetailID);\n      getPackageResult(_objectSpread({}, packageResult));\n    } else {\n      setDataQuestion(dataDoneTest);\n      checkSpaceQuestionAtFirst(dataDoneTest);\n      setListQuestionID(listIDFromDoneTest);\n      setListGroupID(listGroupIDFromDoneTest);\n    }\n  }, []);\n  useEffect(() => {\n    if ((listQuestionID === null || listQuestionID === void 0 ? void 0 : listQuestionID.length) > 0) {\n      getListQuestionID(listQuestionID);\n      getActiveID(listQuestionID[0]);\n    }\n  }, [listQuestionID]);\n  useEffect(() => {\n    if (userInformation) {\n      getPackageResult(_objectSpread(_objectSpread({}, packageResult), {}, {\n        SetPackageDetailID: parseInt(packageDetailID),\n        StudentID: userInformation.UserInformationID\n      }));\n    }\n  }, [userInformation]);\n  useEffect(() => {\n    if (!isDone) {\n      if ((dataQuestion === null || dataQuestion === void 0 ? void 0 : dataQuestion.length) > 0) {\n        dataQuestion.forEach((item, index) => {\n          let listQuestion = [];\n          item.ExerciseTopic.forEach((ques, index) => {\n            listQuestion.push({\n              ExerciseID: ques.ExerciseID,\n              SetPackageExerciseAnswerStudentList: []\n            });\n          });\n          packageResult.SetPackageResultDetailInfoList.push({\n            ExamTopicDetailID: item.ID,\n            ExerciseGroupID: item.ExerciseGroupID,\n            Level: item.Level,\n            Type: item.Type,\n            SkillID: item.SkillID,\n            SetPackageExerciseStudentInfoList: listQuestion\n          });\n          getPackageResult(_objectSpread({}, packageResult));\n        });\n      }\n    }\n\n    if (dataQuestion !== null && dataQuestion !== undefined) {\n      onChange_pagination('x', 1);\n    }\n  }, [dataQuestion]);\n  useEffect(() => {\n    if (infoExam && dataQuestion) {\n      // Run time\n      const add_minutes = function (dt, minutes) {\n        return new Date(dt.getTime() + minutes * 60000);\n      }(new Date(), infoExam.Time);\n\n      setAddMinutes(add_minutes);\n    }\n  }, [infoExam, dataQuestion]);\n\n  const alertUser = e => {\n    e.preventDefault();\n    e.returnValue = '';\n  };\n\n  useEffect(() => {\n    let testFooter = document.getElementById('test-footer');\n\n    if (testFooter) {\n      let heightFooter = testFooter.offsetHeight;\n\n      if (heightFooter > 70) {\n        setIsLong(true);\n      }\n    }\n\n    if (!dataDoneTest) {\n      if (!isModalSuccess) {\n        window.addEventListener('beforeunload', alertUser);\n        return () => {\n          window.removeEventListener('beforeunload', alertUser);\n        };\n      }\n    }\n  });\n  useEffect(() => {\n    if (activeID) {\n      let index = listQuestionID.findIndex(id => id === activeID);\n      setPageCurrent(index + 1);\n    }\n  }, [activeID]);\n  const audio = useRef(null);\n\n  const convertData = json => {\n    var stringified = JSON.stringify(json);\n    stringified = stringified.replace('SetPackageResultDetailInfoList', 'HomeworkResultDetailInfoList');\n\n    while (stringified.indexOf('SetPackageExerciseStudentInfoList') !== -1 || stringified.indexOf('SetPackageExerciseAnswerStudentList') !== -1) {\n      stringified = stringified.replace('SetPackageExerciseStudentInfoList', 'HomeworkExerciseStudentInfoList');\n      stringified = stringified.replace('SetPackageExerciseAnswerStudentList', 'HomeworkExerciseAnswerStudentList');\n    }\n\n    var jsonObject = JSON.parse(stringified);\n    return jsonObject;\n  };\n\n  const onSubmitExercise = async () => {\n    setIsModalConfirm(false);\n    setLoadingSubmit(true);\n    let dataSubmit = remakeData();\n    let res = null;\n\n    try {\n      res = await homeworkResultApi.add(convertData(_objectSpread(_objectSpread({}, dataSubmit), {}, {\n        HomeworkID: dataSubmit.SetPackageDetailID\n      })));\n\n      if (res.status === 200) {\n        setIsModalSuccess(true);\n        setTimeout(() => {\n          router.push(returnRouter(res.data.data[0]));\n        }, 1000);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoadingSubmit(false);\n    }\n  };\n\n  const isDrag = () => {\n    let flag = 0;\n\n    for (let i = 0; i < dataQuestion.length; i++) {\n      for (let j = 0; j < ((_dataQuestion$i = dataQuestion[i]) === null || _dataQuestion$i === void 0 ? void 0 : _dataQuestion$i.ExerciseTopic.length); j++) {\n        var _dataQuestion$i, _dataQuestion$i2, _dataQuestion$i2$Exer, _dataQuestion$i3;\n\n        if (((_dataQuestion$i2 = dataQuestion[i]) === null || _dataQuestion$i2 === void 0 ? void 0 : (_dataQuestion$i2$Exer = _dataQuestion$i2.ExerciseTopic[j]) === null || _dataQuestion$i2$Exer === void 0 ? void 0 : _dataQuestion$i2$Exer.ExerciseID) == activeID && ((_dataQuestion$i3 = dataQuestion[i]) === null || _dataQuestion$i3 === void 0 ? void 0 : _dataQuestion$i3.Type) == 2) {\n          flag = 0;\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `test-wrapper doing-test ${isDone && 'done-test'}`,\n    children: [/*#__PURE__*/_jsxDEV(TimeUpModal, {\n      isVisible: openTimeUpModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Th\\xF4ng b\\xE1o\",\n      footer: null,\n      className: \"\",\n      visible: isModalSuccess,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-submit-success-test\",\n        children: [/*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: \"N\\u1ED9p b\\xE0i th\\xE0nh c\\xF4ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(DecideModal, {\n      isOpen: isModalConfirm,\n      isCancel: () => setIsModalConfirm(false),\n      isOk: () => {\n        var _router$query6;\n\n        ((_router$query6 = router.query) === null || _router$query6 === void 0 ? void 0 : _router$query6.isExercise) == 'true' ? onSubmitExercise() : onSubmit_DoingTest();\n      },\n      content: returnTextConfirm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Ch\\xFA \\xFD!\",\n      visible: isModalVisible,\n      okText: \"\\u0110\\u1ED3ng \\xFD\",\n      cancelText: \"\\u0110\\xF3ng\",\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 500\n        },\n        children: \"B\\u1EA1n ch\\u01B0a ch\\u1ECDn \\u0111\\u1EC1 thi. Chuy\\u1EC3n \\u0111\\u1EBFn trang b\\u1ED9 \\u0111\\u1EC1?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"test-card\",\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-title-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"name-type-test\",\n            children: infoExam === null || infoExam === void 0 ? void 0 : infoExam.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"info-user\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: infoExam === null || infoExam === void 0 ? void 0 : infoExam.ProgramName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 7\n        }, this), infoExam !== null && (infoExam === null || infoExam === void 0 ? void 0 : infoExam.Audio) !== undefined && infoExam.Audio !== null && infoExam.Audio !== '' && /*#__PURE__*/_jsxDEV(\"audio\", {\n          className: \"none-poiter hide-on-mobile\",\n          autoPlay: true,\n          controls: true,\n          ref: audio,\n          onEnded: () => {},\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: infoExam.Audio,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 6\n      }, this),\n      extra: infoExam && (dataQuestion === null || dataQuestion === void 0 ? void 0 : dataQuestion.length) > 0 && addMinutes && /*#__PURE__*/_jsxDEV(CountDown, {\n        addMinutes: addMinutes,\n        onFinish: () => !isModalVisible && timeUp()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 20\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: '105%',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            height: '90%'\n          },\n          children: dataQuestion !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: isDrag() ? 'test-body' : 'test-body',\n              children: [loadingSubmit && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-submit text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-100 text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 701,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mt-3\",\n                    style: {\n                      fontStyle: 'italic',\n                      fontWeight: 500\n                    },\n                    children: \"\\u0110ang ti\\u1EBFn h\\xE0nh n\\u1ED9p b\\xE0i...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 702,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 11\n              }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-100 mt-4 \",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-50\",\n                  children: [/*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 712,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 713,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 711,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 11\n              }, this) : (dataQuestion === null || dataQuestion === void 0 ? void 0 : dataQuestion.length) > 0 ? dataQuestion.slice(spaceQuestion.start, spaceQuestion.end).map((item, index) => {\n                if (isGroup) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"doingtest-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"\",\n                      style: {\n                        height: '100%'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-lg-6 col-md-12 col-sm-12 col-12 pl-0 pl-0-mobile\",\n                        style: {\n                          height: '100%'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(ListQuestion, {\n                          setChild: setChild,\n                          dataQuestion: item,\n                          listQuestionID: listQuestionID,\n                          openPagi: openPagi\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 723,\n                          columnNumber: 17\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 722,\n                        columnNumber: 16\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 721,\n                      columnNumber: 15\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 720,\n                    columnNumber: 14\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"doingtest-single\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-12\",\n                        children: /*#__PURE__*/_jsxDEV(ListQuestion, {\n                          dataQuestion: item,\n                          listQuestionID: listQuestionID\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 733,\n                          columnNumber: 17\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 732,\n                        columnNumber: 16\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 731,\n                      columnNumber: 15\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 730,\n                    columnNumber: 14\n                  }, this);\n                }\n              }) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-100 text-center\",\n                children: !checkTested ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontWeight: 500\n                  },\n                  children: \"\\u0110\\u1EC1 thi n\\xE0y ch\\u01B0a c\\xF3 c\\xE2u h\\u1ECFi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 13\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      fontWeight: 500\n                    },\n                    children: \"B\\u1EA1n \\u0111\\xE3 l\\xE0m \\u0111\\u1EC1 test n\\xE0y r\\u1ED3i\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 746,\n                    columnNumber: 14\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    href: {\n                      pathname: '/customer/service/service-test-student'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"btn btn-warning\",\n                      children: \"Tho\\xE1t ra\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 752,\n                      columnNumber: 15\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 747,\n                    columnNumber: 14\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 745,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 9\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"Basic Modal\",\n          visible: false,\n          onOk: handleClick_openPagi,\n          onCancel: handleClick_openPagi,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 0\n            },\n            children: (dataQuestion === null || dataQuestion === void 0 ? void 0 : dataQuestion.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `footer-pagination row-pagination ${openPagi ? 'show-mobile' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"close-icon\",\n                onClick: handleClick_openPagi,\n                children: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"pagi-name\",\n                children: \"Danh s\\xE1ch c\\xE2u h\\u1ECFi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 770,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"box-preview\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: listPreview.includes(activeID) ? true : false,\n                  onChange: onChange_preview,\n                  children: \"Preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 772,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 771,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"pagi-btn previous\",\n                onClick: onChange_PreviousPage,\n                children: /*#__PURE__*/_jsxDEV(LeftOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 777,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-answer\",\n                children: (listQuestionID === null || listQuestionID === void 0 ? void 0 : listQuestionID.length) > 0 && listQuestionID.map((questionID, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: `item `,\n                  value: questionID,\n                  style: {\n                    marginBottom: isLong ? '10px' : ''\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"\",\n                    onClick: e => onChange_pagination(e, index + 1),\n                    className: `\n                      \t\t${questionID == activeID ? 'activeDoing' : ''} ${listPicked.includes(questionID) ? 'checked' : ''} ${listPreview.includes(questionID) ? 'checked_preview' : ''}`,\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 783,\n                    columnNumber: 14\n                  }, this)\n                }, questionID, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 782,\n                  columnNumber: 13\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"pagi-btn next\",\n                onClick: onChange_NextPage,\n                children: /*#__PURE__*/_jsxDEV(RightOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 797,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 796,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: -100\n          },\n          children: (dataQuestion === null || dataQuestion === void 0 ? void 0 : dataQuestion.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: !openPagi ? 'test-footer' : 'test-footer-mobile',\n            id: \"test-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pagination-mobile \",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"listQuestion\",\n                onClick: handleClick_openPagi,\n                children: /*#__PURE__*/_jsxDEV(ProfileFilled, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"pagi-btn previous\",\n                onClick: onChange_PreviousPage,\n                children: /*#__PURE__*/_jsxDEV(LeftOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 812,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"pagi-btn next\",\n                onClick: onChange_NextPage,\n                children: /*#__PURE__*/_jsxDEV(RightOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 815,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `footer-pagination row-pagination ${openPagi ? 'show-mobile' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"close-icon\",\n                onClick: handleClick_openPagi,\n                children: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 821,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 820,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"pagi-name\",\n                children: \"Danh s\\xE1ch c\\xE2u h\\u1ECFi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"box-previe\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: listPreview.includes(activeID) ? true : false,\n                  onChange: onChange_preview,\n                  children: \"Preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 827,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 826,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"pagi-btn previous\",\n                onClick: onChange_PreviousPage,\n                children: /*#__PURE__*/_jsxDEV(LeftOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 833,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-answer\",\n                style: {\n                  marginTop: -5\n                },\n                children: (listQuestionID === null || listQuestionID === void 0 ? void 0 : listQuestionID.length) > 0 && listQuestionID.map((questionID, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: `item`,\n                  value: questionID,\n                  style: {\n                    marginBottom: 5\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"\",\n                    onClick: e => onChange_pagination(e, index + 1),\n                    className: `${questionID == activeID ? 'activeDoing' : ''}${listPicked.includes(questionID) ? ' checked' : ''}${listPreview.includes(questionID) ? ' checked_preview' : ''}`,\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 840,\n                    columnNumber: 14\n                  }, this)\n                }, questionID, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 839,\n                  columnNumber: 13\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"pagi-btn next\",\n                onClick: onChange_NextPage,\n                children: /*#__PURE__*/_jsxDEV(RightOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 854,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 853,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-submit text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: () => !dataDoneTest ? setIsModalConfirm(true) : closeMainTest && closeMainTest(),\n                children: !dataDoneTest ? 'Nộp bài' : 'Đóng'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 644,\n    columnNumber: 3\n  }, this);\n};\n\nexport default MainTest;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/DoingTest/MainTest.tsx"],"names":["CheckCircleOutlined","CloseOutlined","LeftOutlined","ProfileFilled","RightOutlined","Card","Checkbox","Modal","Skeleton","Spin","dynamic","Link","useRouter","React","useEffect","useRef","useState","doingTestApi","examAppointmentResultApi","examDetailApi","homeworkResultApi","courseExamApi","CountDown","DecideModal","useDoingTest","useWrap","TimeUpModal","ListQuestion","loading","ssr","MainTest","props","getListQuestionID","getActiveID","activeID","listPicked","examID","infoExam","packageDetailID","dataDoneTest","isDone","listIDFromDoneTest","listGroupIDFromDoneTest","closeMainTest","type","CurriculumDetailID","listTodoApi","pageIndex","pageSize","ExamTopicID","showNoti","todoApi","setTodoApi","isLoading","setIsLoading","dataQuestion","setDataQuestion","isGroup","setIsGroup","addMinutes","setAddMinutes","isModalVisible","setIsModalVisible","listQuestionID","setListQuestionID","listGroupID","setListGroupID","spaceQuestion","setSpaceQuestion","start","end","pageCurrent","setPageCurrent","listPreview","setListPreview","router","packageResult","getPackageResult","userInformation","loadingSubmit","setLoadingSubmit","isLong","setIsLong","isModalConfirm","setIsModalConfirm","isModalSuccess","setIsModalSuccess","openTimeUpModal","setOpenTimeUpModal","checkTested","setCheckTested","openPagi","setOpenPagi","child","setChild","checkIsTested","res","status","data","getListQuestion","error","cloneListQuestionID","cloneListGroupID","getAll","forEach","item","index","Enable","ExerciseGroupID","push","ExerciseTopic","ques","ExerciseID","checkSpaceQuestionAtFirst","message","every","checkIsSingle","indexCurrent","length","checkIsGroup","page","exerciseID","some","object","onChange_pagination","e","preventDefault","onChange_PreviousPage","onChange_NextPage","onChange_preview","checked","target","includes","newListPreview","filter","timeUp","setTimeout","onSubmit_DoingTest","handleOk","handleCancel","remakeData","cloneData","dataSubmit","SetPackageResultDetailInfoList","Type","SetPackageExerciseStudentInfoList","SetPackageExerciseAnswerStudentList","AnswerID","AnswerContent","FileAudio","deleteOldElement","dataClone","ExamAppointmentResultDetailInfoList","ExamAppointmentExerciseStudentInfoList","ans","CourseExamresultDetailInfoList","CourseExamExerciseStudentInfoList","dataTestFirst","StudentID","ExamAppointmentID","SetPackageDetailID","ExamAppointmentExerciseAnswerStudentList","dataCheck","CourseID","parseInt","CourseExamExerciseAnswerStudentList","returnRouter","obj","pathname","query","slug","ExamAppointmentResultID","ID","isExercise","HomeworkID","console","log","add","returnTextConfirm","textConfirm","numberOfQuestion","handleClick_openPagi","UserInformationID","listQuestion","ExamTopicDetailID","Level","SkillID","undefined","add_minutes","dt","minutes","Date","getTime","Time","alertUser","returnValue","testFooter","document","getElementById","heightFooter","offsetHeight","window","addEventListener","removeEventListener","findIndex","id","audio","convertData","json","stringified","JSON","stringify","replace","indexOf","jsonObject","parse","onSubmitExercise","isDrag","flag","i","j","fontWeight","Name","ProgramName","Audio","width","height","display","flexDirection","fontStyle","slice","map","marginBottom","questionID","marginTop"],"mappings":"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","sourcesContent":["import { CheckCircleOutlined, CloseOutlined, LeftOutlined, ProfileFilled, RightOutlined } from '@ant-design/icons'\r\nimport { Card, Checkbox, Modal, Skeleton, Spin } from 'antd'\r\nimport dynamic from 'next/dynamic'\r\nimport Link from 'next/link'\r\nimport { useRouter } from 'next/router'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { doingTestApi, examAppointmentResultApi, examDetailApi } from '~/apiBase'\r\nimport { homeworkResultApi } from '~/apiBase/course-detail/home-work-result'\r\nimport { courseExamApi } from '~/apiBase/package/course-exam'\r\nimport CountDown from '~/components/Elements/CountDown/CountDown'\r\nimport DecideModal from '~/components/Elements/DecideModal'\r\nimport { useDoingTest } from '~/context/useDoingTest'\r\nimport { useWrap } from '~/context/wrap'\r\nimport TimeUpModal from './TimeUpModal'\r\n\r\nconst ListQuestion = dynamic(() => import('~/components/Global/DoingTest/ListQuestion'), {\r\n\tloading: () => <p>...</p>,\r\n\tssr: false\r\n})\r\n\r\nconst MainTest = (props) => {\r\n\tconst { getListQuestionID, getActiveID, activeID, listPicked } = useDoingTest()\r\n\tconst {\r\n\t\texamID,\r\n\t\tinfoExam,\r\n\t\tpackageDetailID,\r\n\t\tdataDoneTest,\r\n\t\tisDone,\r\n\t\tlistIDFromDoneTest,\r\n\t\tlistGroupIDFromDoneTest,\r\n\t\tcloseMainTest,\r\n\t\ttype,\r\n\t\tCurriculumDetailID\r\n\t} = props\r\n\r\n\tconst listTodoApi = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 999,\r\n\t\tExamTopicID: examID\r\n\t}\r\n\r\n\tconst { showNoti } = useWrap()\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\tconst [dataQuestion, setDataQuestion] = useState<IExamDetail[]>(null)\r\n\tconst [isGroup, setIsGroup] = useState(false)\r\n\tconst [addMinutes, setAddMinutes] = useState(null)\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst [listQuestionID, setListQuestionID] = useState([]) // Lấy tất cả ID đã có\r\n\tconst [listGroupID, setListGroupID] = useState([]) // Lấy tất cả group ID đã có\r\n\tconst [spaceQuestion, setSpaceQuestion] = useState({ start: 0, end: null })\r\n\tconst [pageCurrent, setPageCurrent] = useState<number>(1)\r\n\tconst [listPreview, setListPreview] = useState<Array<number>>([])\r\n\tconst router = useRouter()\r\n\tconst { packageResult, getPackageResult } = useDoingTest()\r\n\tconst { userInformation } = useWrap()\r\n\tconst [loadingSubmit, setLoadingSubmit] = useState(false)\r\n\tconst [isLong, setIsLong] = useState(false)\r\n\tconst [isModalConfirm, setIsModalConfirm] = useState(false)\r\n\tconst [isModalSuccess, setIsModalSuccess] = useState(false)\r\n\tconst [openTimeUpModal, setOpenTimeUpModal] = useState(false)\r\n\tconst [checkTested, setCheckTested] = useState(false)\r\n\tconst [openPagi, setOpenPagi] = useState(false) // Use for list question in mobile\r\n\tconst [child, setChild] = useState<any>('')\r\n\r\n\tconst checkIsTested = async () => {\r\n\t\tsetIsLoading(true)\r\n\t\ttry {\r\n\t\t\tlet res = await examAppointmentResultApi.checkIsTested(packageDetailID)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tif (res.data.data) {\r\n\t\t\t\t\tsetCheckTested(true)\r\n\t\t\t\t\tsetIsLoading(false)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgetListQuestion()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tsetIsLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\t// --- GET LIST QUESTION ---\r\n\tconst getListQuestion = async () => {\r\n\t\tlet cloneListQuestionID = [...listQuestionID]\r\n\t\tlet cloneListGroupID = [...listGroupID]\r\n\t\tsetIsLoading(true)\r\n\t\ttry {\r\n\t\t\tlet res = await examDetailApi.getAll(todoApi)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetDataQuestion(res.data.data)\r\n\r\n\t\t\t\t// Add questionid to list\r\n\t\t\t\tres.data.data.forEach((item, index) => {\r\n\t\t\t\t\tif (item.Enable) {\r\n\t\t\t\t\t\titem.ExerciseGroupID !== 0 && cloneListGroupID.push(item.ExerciseGroupID)\r\n\t\t\t\t\t\titem.ExerciseTopic.forEach((ques) => {\r\n\t\t\t\t\t\t\tcloneListQuestionID.push(ques.ExerciseID)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// Calculate space question\r\n\t\t\t\tcheckSpaceQuestionAtFirst(res.data.data)\r\n\r\n\t\t\t\tsetListGroupID([...cloneListGroupID])\r\n\t\t\t\tsetListQuestionID([...cloneListQuestionID])\r\n\t\t\t}\r\n\t\t\tif (res.status == 204) {\r\n\t\t\t\tsetDataQuestion([])\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst checkSpaceQuestionAtFirst = (data: any) => {\r\n\t\tif (data[0].ExerciseGroupID !== 0) {\r\n\t\t\tsetIsGroup(true)\r\n\t\t\tsetSpaceQuestion({\r\n\t\t\t\tstart: 0,\r\n\t\t\t\tend: 1\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tdata.every((item: any, index: any) => {\r\n\t\t\t\tif (index == spaceQuestion.start + 1) {\r\n\t\t\t\t\tif (item.ExerciseGroupID !== 0) {\r\n\t\t\t\t\t\tsetSpaceQuestion({\r\n\t\t\t\t\t\t\t...spaceQuestion,\r\n\t\t\t\t\t\t\tend: index\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetIsGroup(false)\r\n\t\t\t\t\t\tsetSpaceQuestion({\r\n\t\t\t\t\t\t\t...spaceQuestion,\r\n\t\t\t\t\t\t\tend: index + 1\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// -- CHECK IS SINGLE\r\n\tconst checkIsSingle = (indexCurrent) => {\r\n\t\tif (indexCurrent !== spaceQuestion.start && indexCurrent !== 0 && indexCurrent !== spaceQuestion.end) {\r\n\t\t\tif (spaceQuestion.end - spaceQuestion.start == 2) {\r\n\t\t\t\tif (indexCurrent > spaceQuestion.start && indexCurrent < spaceQuestion.end) {\r\n\t\t\t\t\tindexCurrent = indexCurrent - 1\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdataQuestion.every((item, index) => {\r\n\t\t\tif (index == indexCurrent + 1) {\r\n\t\t\t\tif (item.ExerciseGroupID !== 0) {\r\n\t\t\t\t\t// nếu là group\r\n\r\n\t\t\t\t\tsetSpaceQuestion({\r\n\t\t\t\t\t\tstart: indexCurrent,\r\n\t\t\t\t\t\tend: index\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn false\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetSpaceQuestion({\r\n\t\t\t\t\t\tstart: indexCurrent,\r\n\t\t\t\t\t\tend: index + 1\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true\r\n\t\t})\r\n\r\n\t\tif (indexCurrent + 1 === dataQuestion.length) {\r\n\t\t\tsetSpaceQuestion({\r\n\t\t\t\tstart: indexCurrent,\r\n\t\t\t\tend: indexCurrent + 1\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// -- CHECK IS GROUP --\r\n\tconst checkIsGroup = (page: number) => {\r\n\t\tlet exerciseID = listQuestionID[page - 1]\r\n\r\n\t\tdataQuestion.every((item, index) => {\r\n\t\t\t// Kiểm tra nếu trong list Exercise Topic có exercise ID thì bắt đầu lấy được vị trí\r\n\t\t\tif (item.ExerciseTopic.some((object) => object['ExerciseID'] == exerciseID)) {\r\n\t\t\t\t// Kiểm tra ở vị trí này là câu hỏi nhóm hay đơn\r\n\t\t\t\tif (item.ExerciseGroupID !== 0) {\r\n\t\t\t\t\t// Nếu là nhóm\r\n\t\t\t\t\tsetSpaceQuestion({\r\n\t\t\t\t\t\tstart: index,\r\n\t\t\t\t\t\tend: index + 1\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetIsGroup(true)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetIsGroup(false)\r\n\t\t\t\t\tcheckIsSingle(index)\r\n\t\t\t\t}\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\r\n\t\t// return isGroup;\r\n\t}\r\n\r\n\t// --- ON CHAGNE PAGINATION\r\n\r\n\tconst onChange_pagination = (e, page: number) => {\r\n\t\tsetPageCurrent(page)\r\n\t\tif (e !== 'x') {\r\n\t\t\te.preventDefault()\r\n\t\t}\r\n\t\t// setActiveID(listQuestionID[page - 1]);\r\n\t\tgetActiveID(listQuestionID[page - 1])\r\n\r\n\t\tcheckIsGroup(page)\r\n\t}\r\n\r\n\t// - Previous page\r\n\tconst onChange_PreviousPage = () => {\r\n\t\tlistQuestionID.every((item, index) => {\r\n\t\t\tif (item === activeID) {\r\n\t\t\t\tif (index == 0) {\r\n\t\t\t\t\tsetPageCurrent(listQuestionID.length)\r\n\t\t\t\t\tcheckIsGroup(listQuestionID.length)\r\n\t\t\t\t\tgetActiveID(listQuestionID[listQuestionID.length - 1])\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetPageCurrent((pageCurrent) => pageCurrent - 1)\r\n\t\t\t\t\tcheckIsGroup(pageCurrent - 1)\r\n\t\t\t\t\tgetActiveID(listQuestionID[index - 1])\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t}\r\n\r\n\t// - Next Page\r\n\tconst onChange_NextPage = (e) => {\r\n\t\tlistQuestionID.every((item, index) => {\r\n\t\t\tif (item === activeID) {\r\n\t\t\t\tif (index === listQuestionID.length - 1) {\r\n\t\t\t\t\tsetPageCurrent(1)\r\n\t\t\t\t\tcheckIsGroup(1)\r\n\t\t\t\t\tgetActiveID(listQuestionID[0])\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetPageCurrent((pageCurrent) => pageCurrent + 1)\r\n\t\t\t\t\tcheckIsGroup(pageCurrent + 1)\r\n\t\t\t\t\tgetActiveID(listQuestionID[index + 1])\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t}\r\n\r\n\t// - Preview\r\n\tfunction onChange_preview(e) {\r\n\t\tconst checked = e.target.checked\r\n\t\tif (!listPreview.includes(activeID)) {\r\n\t\t\tlistPreview.push(activeID)\r\n\t\t\tsetListPreview([...listPreview])\r\n\t\t} else {\r\n\t\t\tlet newListPreview = listPreview.filter((item) => (item! -= activeID))\r\n\t\t\tsetListPreview([...newListPreview])\r\n\t\t}\r\n\t}\r\n\r\n\t// --- TIME UP ---\r\n\tconst timeUp = () => {\r\n\t\tsetOpenTimeUpModal(true)\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetOpenTimeUpModal(false)\r\n\t\t\tonSubmit_DoingTest()\r\n\t\t}, 1500)\r\n\t}\r\n\r\n\t// --- ACTION SHOW MODAL ---\r\n\tconst handleOk = () => {\r\n\t\tsetIsModalVisible(false)\r\n\t}\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false)\r\n\t}\r\n\r\n\tconst remakeData = () => {\r\n\t\tlet cloneData = { ...packageResult }\r\n\t\tlet dataSubmit = null\r\n\r\n\t\tcloneData.SetPackageResultDetailInfoList.forEach((item) => {\r\n\t\t\tif (item.Type == 3 || item.Type == 2 || item.Type == 5) {\r\n\t\t\t\titem.SetPackageExerciseStudentInfoList.forEach((e) => {\r\n\t\t\t\t\tif (e.SetPackageExerciseAnswerStudentList.length == 0) {\r\n\t\t\t\t\t\te.SetPackageExerciseAnswerStudentList.push({\r\n\t\t\t\t\t\t\tAnswerID: 0,\r\n\t\t\t\t\t\t\tAnswerContent: '',\r\n\t\t\t\t\t\t\tFileAudio: ''\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// Kiểm tra bài test thuộc dạng nào (type)\r\n\t\t// test - Kiểm tra đầu vào\r\n\t\t// examination - Đề bán, đề thi\r\n\t\t// check - Đề kiểm tra\r\n\r\n\t\tconst deleteOldElement = (data: any, type: string) => {\r\n\t\t\tlet dataClone = { ...data }\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'test':\r\n\t\t\t\t\tdataClone.ExamAppointmentResultDetailInfoList.forEach((item) => {\r\n\t\t\t\t\t\tdelete item['SetPackageExerciseStudentInfoList']\r\n\t\t\t\t\t\titem.ExamAppointmentExerciseStudentInfoList.forEach((ans) => {\r\n\t\t\t\t\t\t\tdelete ans['SetPackageExerciseAnswerStudentList']\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'check':\r\n\t\t\t\t\tdataClone.CourseExamresultDetailInfoList.forEach((item) => {\r\n\t\t\t\t\t\tdelete item['SetPackageExerciseStudentInfoList']\r\n\t\t\t\t\t\titem.CourseExamExerciseStudentInfoList.forEach((ans) => {\r\n\t\t\t\t\t\t\tdelete ans['SetPackageExerciseAnswerStudentList']\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\treturn dataClone\r\n\t\t}\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase 'test':\r\n\t\t\t\tlet dataTestFirst: ITestFirst = {\r\n\t\t\t\t\tStudentID: null,\r\n\t\t\t\t\tExamAppointmentID: null,\r\n\t\t\t\t\tExamAppointmentResultDetailInfoList: []\r\n\t\t\t\t}\r\n\t\t\t\tdataTestFirst.StudentID = cloneData.StudentID\r\n\t\t\t\tdataTestFirst.ExamAppointmentID = cloneData.SetPackageDetailID\r\n\t\t\t\tdataTestFirst.ExamAppointmentResultDetailInfoList = []\r\n\t\t\t\tcloneData.SetPackageResultDetailInfoList.forEach((ques: any) => {\r\n\t\t\t\t\tques.ExamAppointmentExerciseStudentInfoList = [...ques.SetPackageExerciseStudentInfoList]\r\n\t\t\t\t\tdataTestFirst.ExamAppointmentResultDetailInfoList.push(ques)\r\n\t\t\t\t\tdataTestFirst.ExamAppointmentResultDetailInfoList.forEach((item: any) => {\r\n\t\t\t\t\t\titem.ExamAppointmentExerciseStudentInfoList.forEach((ans: any) => {\r\n\t\t\t\t\t\t\tans.ExamAppointmentExerciseAnswerStudentList = [...ans.SetPackageExerciseAnswerStudentList]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\tdataSubmit = { ...dataTestFirst }\r\n\t\t\t\tbreak\r\n\t\t\tcase 'check':\r\n\t\t\t\tlet dataCheck: ITestCheck = {\r\n\t\t\t\t\tStudentID: null,\r\n\t\t\t\t\tCourseID: null,\r\n\t\t\t\t\tCurriculumDetailID: parseInt(CurriculumDetailID),\r\n\t\t\t\t\tCourseExamresultDetailInfoList: []\r\n\t\t\t\t}\r\n\t\t\t\tdataCheck.StudentID = cloneData.StudentID\r\n\t\t\t\tdataCheck.CourseID = cloneData.SetPackageDetailID\r\n\t\t\t\tdataCheck.CourseExamresultDetailInfoList = []\r\n\t\t\t\tcloneData.SetPackageResultDetailInfoList.forEach((ques: any) => {\r\n\t\t\t\t\tques.CourseExamExerciseStudentInfoList = [...ques.SetPackageExerciseStudentInfoList]\r\n\t\t\t\t\tdataCheck.CourseExamresultDetailInfoList.push(ques)\r\n\t\t\t\t\tdataCheck.CourseExamresultDetailInfoList.forEach((item: any) => {\r\n\t\t\t\t\t\titem.CourseExamExerciseStudentInfoList.forEach((ans: any) => {\r\n\t\t\t\t\t\t\tans.CourseExamExerciseAnswerStudentList = [...ans.SetPackageExerciseAnswerStudentList]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\tdataSubmit = { ...dataCheck }\r\n\t\t\t\tbreak\r\n\t\t\tcase 'examination':\r\n\t\t\t\tdataSubmit = { ...cloneData }\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t\treturn dataSubmit\r\n\t}\r\n\r\n\t// ===== ON SUBMIT DOING TEST =====\r\n\tconst returnRouter = (data) => {\r\n\t\tlet obj = {}\r\n\t\tswitch (type) {\r\n\t\t\tcase 'test':\r\n\t\t\t\tobj = {\r\n\t\t\t\t\tpathname: '/customer/service/service-test-student/detail/[slug]',\r\n\t\t\t\t\tquery: { slug: data.ExamAppointmentID, examID: data.ExamTopicID, ExamAppointmentResultID: data.ID }\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t\tcase 'check':\r\n\t\t\t\tobj = {\r\n\t\t\t\t\tpathname: '/course-exam/detail/[slug]',\r\n\t\t\t\t\tquery: { slug: data.ID, examID: data.ExamTopicID, packageDetailID: router.query?.packageDetailID }\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tobj = {\r\n\t\t\t\t\tpathname: router.query?.isExercise ? '/course/exercise/result/[slug]' : '/package/package-result-student/detail/[slug]',\r\n\t\t\t\t\tquery: {\r\n\t\t\t\t\t\tslug: router.query?.isExercise ? data.HomeworkID : data.ID,\r\n\t\t\t\t\t\texamID: data.ExamTopicID,\r\n\t\t\t\t\t\tpackageDetailID: router.query?.packageDetailID\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t\treturn obj\r\n\t}\r\n\r\n\tconst onSubmit_DoingTest = async () => {\r\n\t\tconsole.log('onSubmit_DoingTest')\r\n\t\tconsole.log('type: ', type)\r\n\r\n\t\tsetIsModalConfirm(false)\r\n\t\tsetLoadingSubmit(true)\r\n\t\tlet dataSubmit = remakeData()\r\n\t\tlet res = null\r\n\t\ttry {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'test': // Kiểm tra đầu vào\r\n\t\t\t\t\tres = await examAppointmentResultApi.add(dataSubmit)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'check': // Kiểm tra trong khóa học\r\n\t\t\t\t\tres = await courseExamApi.add(dataSubmit)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'examination': // Thi cử - đề bán\r\n\t\t\t\t\tres = router.query?.isExercise ? await homeworkResultApi.add({ ...dataSubmit }) : await doingTestApi.add(dataSubmit)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetIsModalSuccess(true)\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\trouter.push(returnRouter(res.data.data))\r\n\t\t\t\t}, 1000)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingSubmit(false)\r\n\t\t}\r\n\t}\r\n\r\n\t// Return text confirm\r\n\tconst returnTextConfirm = () => {\r\n\t\tlet textConfirm = 'Bạn có chắc muốn nộp bài?'\r\n\t\tif (listPicked.length < listQuestionID.length) {\r\n\t\t\tlet numberOfQuestion = listQuestionID.length - listPicked.length\r\n\t\t\ttextConfirm = `Bạn còn ${numberOfQuestion} câu chưa làm. Bạn có chắc muốn nộp bài?`\r\n\t\t}\r\n\r\n\t\treturn textConfirm\r\n\t}\r\n\r\n\tconst handleClick_openPagi = () => {\r\n\t\tsetOpenPagi(!openPagi)\r\n\t}\r\n\r\n\t// ===== ALL USE EFFECT ====\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isDone) {\r\n\t\t\tif (type === 'test') {\r\n\t\t\t\tcheckIsTested()\r\n\t\t\t} else {\r\n\t\t\t\tgetListQuestion()\r\n\t\t\t}\r\n\r\n\t\t\tpackageResult.SetPackageDetailID = parseInt(packageDetailID)\r\n\t\t\tgetPackageResult({ ...packageResult })\r\n\t\t} else {\r\n\t\t\tsetDataQuestion(dataDoneTest)\r\n\t\t\tcheckSpaceQuestionAtFirst(dataDoneTest)\r\n\t\t\tsetListQuestionID(listIDFromDoneTest)\r\n\t\t\tsetListGroupID(listGroupIDFromDoneTest)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (listQuestionID?.length > 0) {\r\n\t\t\tgetListQuestionID(listQuestionID)\r\n\t\t\tgetActiveID(listQuestionID[0])\r\n\t\t}\r\n\t}, [listQuestionID])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userInformation) {\r\n\t\t\tgetPackageResult({\r\n\t\t\t\t...packageResult,\r\n\t\t\t\tSetPackageDetailID: parseInt(packageDetailID),\r\n\t\t\t\tStudentID: userInformation.UserInformationID\r\n\t\t\t})\r\n\t\t}\r\n\t}, [userInformation])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isDone) {\r\n\t\t\tif (dataQuestion?.length > 0) {\r\n\t\t\t\tdataQuestion.forEach((item: any, index: any) => {\r\n\t\t\t\t\tlet listQuestion = []\r\n\t\t\t\t\titem.ExerciseTopic.forEach((ques: any, index: any) => {\r\n\t\t\t\t\t\tlistQuestion.push({\r\n\t\t\t\t\t\t\tExerciseID: ques.ExerciseID,\r\n\t\t\t\t\t\t\tSetPackageExerciseAnswerStudentList: []\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList.push({\r\n\t\t\t\t\t\tExamTopicDetailID: item.ID,\r\n\t\t\t\t\t\tExerciseGroupID: item.ExerciseGroupID,\r\n\t\t\t\t\t\tLevel: item.Level,\r\n\t\t\t\t\t\tType: item.Type,\r\n\t\t\t\t\t\tSkillID: item.SkillID,\r\n\t\t\t\t\t\tSetPackageExerciseStudentInfoList: listQuestion\r\n\t\t\t\t\t})\r\n\t\t\t\t\tgetPackageResult({\r\n\t\t\t\t\t\t...packageResult\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataQuestion !== null && dataQuestion !== undefined) {\r\n\t\t\tonChange_pagination('x', 1)\r\n\t\t}\r\n\t}, [dataQuestion])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (infoExam && dataQuestion) {\r\n\t\t\t// Run time\r\n\t\t\tconst add_minutes = (function (dt, minutes) {\r\n\t\t\t\treturn new Date(dt.getTime() + minutes * 60000)\r\n\t\t\t})(new Date(), infoExam.Time)\r\n\t\t\tsetAddMinutes(add_minutes)\r\n\t\t}\r\n\t}, [infoExam, dataQuestion])\r\n\r\n\tconst alertUser = (e) => {\r\n\t\te.preventDefault()\r\n\t\te.returnValue = ''\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tlet testFooter = document.getElementById('test-footer')\r\n\t\tif (testFooter) {\r\n\t\t\tlet heightFooter = testFooter.offsetHeight\r\n\t\t\tif (heightFooter > 70) {\r\n\t\t\t\tsetIsLong(true)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!dataDoneTest) {\r\n\t\t\tif (!isModalSuccess) {\r\n\t\t\t\twindow.addEventListener('beforeunload', alertUser)\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\twindow.removeEventListener('beforeunload', alertUser)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeID) {\r\n\t\t\tlet index = listQuestionID.findIndex((id) => id === activeID)\r\n\t\t\tsetPageCurrent(index + 1)\r\n\t\t}\r\n\t}, [activeID])\r\n\r\n\tconst audio = useRef(null)\r\n\r\n\tconst convertData = (json) => {\r\n\t\tvar stringified = JSON.stringify(json)\r\n\t\tstringified = stringified.replace('SetPackageResultDetailInfoList', 'HomeworkResultDetailInfoList')\r\n\t\twhile (\r\n\t\t\tstringified.indexOf('SetPackageExerciseStudentInfoList') !== -1 ||\r\n\t\t\tstringified.indexOf('SetPackageExerciseAnswerStudentList') !== -1\r\n\t\t) {\r\n\t\t\tstringified = stringified.replace('SetPackageExerciseStudentInfoList', 'HomeworkExerciseStudentInfoList')\r\n\t\t\tstringified = stringified.replace('SetPackageExerciseAnswerStudentList', 'HomeworkExerciseAnswerStudentList')\r\n\t\t}\r\n\t\tvar jsonObject = JSON.parse(stringified)\r\n\t\treturn jsonObject\r\n\t}\r\n\r\n\tconst onSubmitExercise = async () => {\r\n\t\tsetIsModalConfirm(false)\r\n\t\tsetLoadingSubmit(true)\r\n\t\tlet dataSubmit = remakeData()\r\n\t\tlet res = null\r\n\t\ttry {\r\n\t\t\tres = await homeworkResultApi.add(convertData({ ...dataSubmit, HomeworkID: dataSubmit.SetPackageDetailID }))\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetIsModalSuccess(true)\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\trouter.push(returnRouter(res.data.data[0]))\r\n\t\t\t\t}, 1000)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingSubmit(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst isDrag = () => {\r\n\t\tlet flag = 0\r\n\t\tfor (let i = 0; i < dataQuestion.length; i++) {\r\n\t\t\tfor (let j = 0; j < dataQuestion[i]?.ExerciseTopic.length; j++) {\r\n\t\t\t\tif (dataQuestion[i]?.ExerciseTopic[j]?.ExerciseID == activeID && dataQuestion[i]?.Type == 2) {\r\n\t\t\t\t\tflag = 0\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`test-wrapper doing-test ${isDone && 'done-test'}`}>\r\n\t\t\t{/** Modal báo hết giờ làm bài */}\r\n\t\t\t<TimeUpModal isVisible={openTimeUpModal} />\r\n\t\t\t{/* Modal báo thành công **/}\r\n\t\t\t<Modal title=\"Thông báo\" footer={null} className=\"\" visible={isModalSuccess}>\r\n\t\t\t\t<div className=\"modal-submit-success-test\">\r\n\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t<p className=\"text\">Nộp bài thành công</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t\t{/* Modal xác nhận submit **/}\r\n\t\t\t<DecideModal\r\n\t\t\t\tisOpen={isModalConfirm}\r\n\t\t\t\tisCancel={() => setIsModalConfirm(false)}\r\n\t\t\t\tisOk={() => {\r\n\t\t\t\t\trouter.query?.isExercise == 'true' ? onSubmitExercise() : onSubmit_DoingTest()\r\n\t\t\t\t}}\r\n\t\t\t\tcontent={returnTextConfirm()}\r\n\t\t\t/>\r\n\t\t\t{/* Modal hết giờ làm bài **/}\r\n\t\t\t<Modal title=\"Chú ý!\" visible={isModalVisible} okText=\"Đồng ý\" cancelText=\"Đóng\" onOk={handleOk} onCancel={handleCancel}>\r\n\t\t\t\t<p style={{ fontWeight: 500 }}>Bạn chưa chọn đề thi. Chuyển đến trang bộ đề?</p>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t{/* Card Main Test **/}\r\n\t\t\t<Card\r\n\t\t\t\tclassName=\"test-card\"\r\n\t\t\t\ttitle={\r\n\t\t\t\t\t<div className=\"test-info\">\r\n\t\t\t\t\t\t<div className=\"test-title-info\">\r\n\t\t\t\t\t\t\t<h6 className=\"name-type-test\">{infoExam?.Name}</h6>\r\n\t\t\t\t\t\t\t<p className=\"info-user\">\r\n\t\t\t\t\t\t\t\t<span>{infoExam?.ProgramName}</span>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{infoExam !== null && infoExam?.Audio !== undefined && infoExam.Audio !== null && infoExam.Audio !== '' && (\r\n\t\t\t\t\t\t\t<audio className=\"none-poiter hide-on-mobile\" autoPlay={true} controls ref={audio} onEnded={() => {}}>\r\n\t\t\t\t\t\t\t\t<source src={infoExam.Audio} type=\"audio/mpeg\" />\r\n\t\t\t\t\t\t\t</audio>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\textra={\r\n\t\t\t\t\tinfoExam &&\r\n\t\t\t\t\tdataQuestion?.length > 0 &&\r\n\t\t\t\t\taddMinutes && <CountDown addMinutes={addMinutes} onFinish={() => !isModalVisible && timeUp()} />\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<div style={{ width: '100%', height: '105%', display: 'flex', flexDirection: 'column' }}>\r\n\t\t\t\t\t<div style={{ width: '100%', height: '90%' }}>\r\n\t\t\t\t\t\t{dataQuestion !== null && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<div className={isDrag() ? 'test-body' : 'test-body'}>\r\n\t\t\t\t\t\t\t\t\t{loadingSubmit && (\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"loading-submit text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"w-100 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Spin />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"mt-3\" style={{ fontStyle: 'italic', fontWeight: 500 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tĐang tiến hành nộp bài...\r\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"w-100 mt-4 \">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"w-50\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Skeleton />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Skeleton />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t) : dataQuestion?.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\tdataQuestion.slice(spaceQuestion.start, spaceQuestion.end).map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (isGroup) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"doingtest-group\" key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"\" style={{ height: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-6 col-md-12 col-sm-12 col-12 pl-0 pl-0-mobile\" style={{ height: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListQuestion setChild={setChild} dataQuestion={item} listQuestionID={listQuestionID} openPagi={openPagi} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"doingtest-single\" key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListQuestion dataQuestion={item} listQuestionID={listQuestionID} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"w-100 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t{!checkTested ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p style={{ fontWeight: 500 }}>Đề thi này chưa có câu hỏi</p>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p style={{ fontWeight: 500 }}>Bạn đã làm đề test này rồi</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/customer/service/service-test-student'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"btn btn-warning\">Thoát ra</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Modal title=\"Basic Modal\" visible={false} onOk={handleClick_openPagi} onCancel={handleClick_openPagi}>\r\n\t\t\t\t\t\t<div style={{ marginBottom: 0 }}>\r\n\t\t\t\t\t\t\t{dataQuestion?.length > 0 && (\r\n\t\t\t\t\t\t\t\t<div className={`footer-pagination row-pagination ${openPagi ? 'show-mobile' : ''}`}>\r\n\t\t\t\t\t\t\t\t\t<button className=\"close-icon\" onClick={handleClick_openPagi}>\r\n\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<p className=\"pagi-name\">Danh sách câu hỏi</p>\r\n\t\t\t\t\t\t\t\t\t<div className=\"box-preview\">\r\n\t\t\t\t\t\t\t\t\t\t<Checkbox checked={listPreview.includes(activeID) ? true : false} onChange={onChange_preview}>\r\n\t\t\t\t\t\t\t\t\t\t\tPreview\r\n\t\t\t\t\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<button className=\"pagi-btn previous\" onClick={onChange_PreviousPage}>\r\n\t\t\t\t\t\t\t\t\t\t<LeftOutlined />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<ul className=\"list-answer\">\r\n\t\t\t\t\t\t\t\t\t\t{listQuestionID?.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tlistQuestionID.map((questionID, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li className={`item `} value={questionID} key={questionID} style={{ marginBottom: isLong ? '10px' : '' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => onChange_pagination(e, index + 1)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`\r\n                      \t\t${questionID == activeID ? 'activeDoing' : ''} ${listPicked.includes(questionID) ? 'checked' : ''} ${\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlistPreview.includes(questionID) ? 'checked_preview' : ''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{index + 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t<button className=\"pagi-btn next\" onClick={onChange_NextPage}>\r\n\t\t\t\t\t\t\t\t\t\t<RightOutlined />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t<div style={{ marginBottom: -100 }}>\r\n\t\t\t\t\t\t{dataQuestion?.length > 0 && (\r\n\t\t\t\t\t\t\t<div className={!openPagi ? 'test-footer' : 'test-footer-mobile'} id=\"test-footer\">\r\n\t\t\t\t\t\t\t\t<div className=\"pagination-mobile \">\r\n\t\t\t\t\t\t\t\t\t<button className=\"listQuestion\" onClick={handleClick_openPagi}>\r\n\t\t\t\t\t\t\t\t\t\t<ProfileFilled />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<button className=\"pagi-btn previous\" onClick={onChange_PreviousPage}>\r\n\t\t\t\t\t\t\t\t\t\t<LeftOutlined />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<button className=\"pagi-btn next\" onClick={onChange_NextPage}>\r\n\t\t\t\t\t\t\t\t\t\t<RightOutlined />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className={`footer-pagination row-pagination ${openPagi ? 'show-mobile' : ''}`}>\r\n\t\t\t\t\t\t\t\t\t<button className=\"close-icon\" onClick={handleClick_openPagi}>\r\n\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t\t<p className=\"pagi-name\">Danh sách câu hỏi</p>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"box-previe\">\r\n\t\t\t\t\t\t\t\t\t\t<Checkbox checked={listPreview.includes(activeID) ? true : false} onChange={onChange_preview}>\r\n\t\t\t\t\t\t\t\t\t\t\tPreview\r\n\t\t\t\t\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<button className=\"pagi-btn previous\" onClick={onChange_PreviousPage}>\r\n\t\t\t\t\t\t\t\t\t\t<LeftOutlined />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t\t<ul className=\"list-answer\" style={{ marginTop: -5 }}>\r\n\t\t\t\t\t\t\t\t\t\t{listQuestionID?.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tlistQuestionID.map((questionID: any, index: any) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li className={`item`} value={questionID} key={questionID} style={{ marginBottom: 5 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => onChange_pagination(e, index + 1)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${questionID == activeID ? 'activeDoing' : ''}${listPicked.includes(questionID) ? ' checked' : ''}${\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlistPreview.includes(questionID) ? ' checked_preview' : ''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{index + 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t\t\t\t\t<button className=\"pagi-btn next\" onClick={onChange_NextPage}>\r\n\t\t\t\t\t\t\t\t\t\t<RightOutlined />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"footer-submit text-right\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => (!dataDoneTest ? setIsModalConfirm(true) : closeMainTest && closeMainTest())}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{!dataDoneTest ? 'Nộp bài' : 'Đóng'}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MainTest\r\n"]},"metadata":{},"sourceType":"module"}
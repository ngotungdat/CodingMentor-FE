{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\FormControl\\\\UploadAvatarField\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Form, Spin, Upload } from 'antd';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Controller } from 'react-hook-form';\nimport { studentApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\n\nvar UploadAvatarField = function UploadAvatarField(props) {\n  _s();\n\n  var _errors$name;\n\n  var form = props.form,\n      name = props.name,\n      label = props.label,\n      disabled = props.disabled,\n      style = props.style,\n      className = props.className;\n\n  var _useState = useState(''),\n      imgUrl = _useState[0],\n      setImgUrl = _useState[1];\n\n  var _useState2 = useState(false),\n      loadingImage = _useState2[0],\n      setLoadingImage = _useState2[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var errors = form.formState.errors;\n  var hasError = errors[name];\n\n  var handleUploadAvatar = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (!(file.status === 'uploading')) {\n                _context.next = 4;\n                break;\n              }\n\n              setLoadingImage(true);\n              return _context.abrupt(\"return\");\n\n            case 4:\n              if (!(file.status === 'done')) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 7;\n              return studentApi.uploadImage(file.originFileObj);\n\n            case 7:\n              res = _context.sent;\n\n              if (!(res.status === 200)) {\n                _context.next = 11;\n                break;\n              }\n\n              setImgUrl(res.data.data);\n              return _context.abrupt(\"return\", res);\n\n            case 11:\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('UploadAvatarField-handleUploadAvatar', _context.t0);\n\n            case 16:\n              _context.prev = 16;\n              setLoadingImage(false);\n              return _context.finish(16);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 13, 16, 19]]);\n    }));\n\n    return function handleUploadAvatar(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var beforeUpload = function beforeUpload(file) {\n    var validTypeList = ['image/png', 'image/jpg', 'image/jpeg', 'image/bmp'];\n    var isValidType = validTypeList.includes(file.type);\n\n    if (!isValidType) {\n      showNoti('danger', \"\".concat(file.name, \" kh\\xF4ng \\u0111\\xFAng \\u0111\\u1ECBnh d\\u1EA1ng (jpg | jpeg | png | bmp).\"));\n    }\n\n    return isValidType;\n  };\n\n  var UploadButton = function UploadButton(props) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-upload  \".concat(loadingImage && 'loading'),\n        children: loadingImage ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 80\n        }, _this) : /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 102\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form.Item, {\n    style: style,\n    label: label,\n    className: \"\".concat(className, \" \").concat(hasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''),\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      name: name,\n      control: form.control,\n      render: function render(_ref2) {\n        var field = _ref2.field;\n        return /*#__PURE__*/_jsxDEV(Upload, {\n          name: field.name,\n          ref: field.ref,\n          listType: \"picture-card\",\n          className: \"avatar-uploader\",\n          disabled: disabled,\n          showUploadList: false,\n          beforeUpload: beforeUpload,\n          onChange: function onChange(obj) {\n            handleUploadAvatar(obj.file).then(function (res) {\n              return (res === null || res === void 0 ? void 0 : res.status) === 200 && field.onChange(res.data.data);\n            });\n          },\n          children: [loadingImage ? /*#__PURE__*/_jsxDEV(Spin, {\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 9\n          }, _this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgUrl || field.value,\n            alt: \"avatar\",\n            style: {\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover',\n              display: imgUrl || field.value ? 'block' : 'none',\n              zIndex: 1000\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/_jsxDEV(UploadButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 8\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, _this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ant-form-item-explain ant-form-item-explain-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(UploadAvatarField, \"WfUlolLPLFnj1YudvKB3ePvd3EU=\", false, function () {\n  return [useWrap];\n});\n\n_c = UploadAvatarField;\nUploadAvatarField.propTypes = {\n  form: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  disabled: PropTypes.bool,\n  style: PropTypes.shape({}),\n  className: PropTypes.string\n};\nUploadAvatarField.defaultProps = {\n  label: '',\n  disabled: false,\n  style: {},\n  className: ''\n};\nexport default UploadAvatarField;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadAvatarField\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/FormControl/UploadAvatarField/index.tsx"],"names":["LoadingOutlined","PlusOutlined","Form","Spin","Upload","PropTypes","React","useState","Controller","studentApi","useWrap","UploadAvatarField","props","form","name","label","disabled","style","className","imgUrl","setImgUrl","loadingImage","setLoadingImage","showNoti","errors","formState","hasError","handleUploadAvatar","file","status","uploadImage","originFileObj","res","data","console","log","beforeUpload","validTypeList","isValidType","includes","type","UploadButton","control","field","ref","obj","then","onChange","value","width","height","objectFit","display","zIndex","message","propTypes","object","isRequired","string","bool","shape","defaultProps"],"mappings":"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","sourcesContent":["import { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport { Form, Spin, Upload } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useState } from 'react'\r\nimport { Controller } from 'react-hook-form'\r\nimport { studentApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\ninterface RcFile extends File {\r\n\tuid: string\r\n\tlastModifiedDate: Date\r\n}\r\ntype IFile = {\r\n\tuid: string\r\n\tsize?: number\r\n\tname: string\r\n\tfileName?: string\r\n\tlastModified?: number\r\n\tlastModifiedDate?: Date\r\n\turl?: string\r\n\tstatus?: 'error' | 'success' | 'done' | 'uploading' | 'removed'\r\n\tpercent?: number\r\n\tthumbUrl?: string\r\n\toriginFileObj?: RcFile\r\n\tresponse?: string\r\n\terror?: any\r\n\tlinkProps?: any\r\n\ttype?: string\r\n\txhr?: any\r\n\tpreview?: string\r\n}\r\ntype IFileList = {\r\n\tfile: IFile\r\n\tfileList: IFile[]\r\n}\r\nconst UploadAvatarField = (props) => {\r\n\tconst { form, name, label, disabled, style, className } = props\r\n\r\n\tconst [imgUrl, setImgUrl] = useState('')\r\n\tconst [loadingImage, setLoadingImage] = useState(false)\r\n\tconst { showNoti } = useWrap()\r\n\tconst { errors } = form.formState\r\n\tconst hasError = errors[name]\r\n\r\n\tconst handleUploadAvatar = async (file: any) => {\r\n\t\ttry {\r\n\t\t\tif (file.status === 'uploading') {\r\n\t\t\t\tsetLoadingImage(true)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (file.status === 'done') {\r\n\t\t\t\tconst res = await studentApi.uploadImage(file.originFileObj)\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tsetImgUrl(res.data.data)\r\n\t\t\t\t\treturn res\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('UploadAvatarField-handleUploadAvatar', err)\r\n\t\t} finally {\r\n\t\t\tsetLoadingImage(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst beforeUpload = (file: IFile) => {\r\n\t\tconst validTypeList = ['image/png', 'image/jpg', 'image/jpeg', 'image/bmp']\r\n\t\tconst isValidType = validTypeList.includes(file.type)\r\n\t\tif (!isValidType) {\r\n\t\t\tshowNoti('danger', `${file.name} không đúng định dạng (jpg | jpeg | png | bmp).`)\r\n\t\t}\r\n\t\treturn isValidType\r\n\t}\r\n\r\n\tconst UploadButton = (props) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className={`bg-upload  ${loadingImage && 'loading'}`}>{loadingImage ? <LoadingOutlined /> : <PlusOutlined />}</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form.Item style={style} label={label} className={`${className} ${hasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''}`}>\r\n\t\t\t<Controller\r\n\t\t\t\tname={name}\r\n\t\t\t\tcontrol={form.control}\r\n\t\t\t\trender={({ field }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\tname={field.name}\r\n\t\t\t\t\t\t\tref={field.ref}\r\n\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\tonChange={(obj) => {\r\n\t\t\t\t\t\t\t\thandleUploadAvatar(obj.file).then((res) => res?.status === 200 && field.onChange(res.data.data))\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{loadingImage ? (\r\n\t\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={imgUrl || field.value}\r\n\t\t\t\t\t\t\t\t\talt=\"avatar\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\t\t\t\tdisplay: imgUrl || field.value ? 'block' : 'none',\r\n\t\t\t\t\t\t\t\t\t\tzIndex: 1000\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<UploadButton />\r\n\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{hasError && (\r\n\t\t\t\t<div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n\t\t\t\t\t<div role=\"alert\">{errors[name]?.message}</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Form.Item>\r\n\t)\r\n}\r\nUploadAvatarField.propTypes = {\r\n\tform: PropTypes.object.isRequired,\r\n\tname: PropTypes.string.isRequired,\r\n\tlabel: PropTypes.string,\r\n\tdisabled: PropTypes.bool,\r\n\tstyle: PropTypes.shape({}),\r\n\tclassName: PropTypes.string\r\n}\r\nUploadAvatarField.defaultProps = {\r\n\tlabel: '',\r\n\tdisabled: false,\r\n\tstyle: {},\r\n\tclassName: ''\r\n}\r\nexport default UploadAvatarField\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Header\\\\notification.tsx\";\nimport { BellOutlined, NotificationOutlined, NotificationTwoTone } from '@ant-design/icons';\nimport { Card, List, Popover } from 'antd';\nimport Modal from 'antd/lib/modal/Modal';\nimport Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\nimport { AlertCircle } from 'react-feather';\nimport ReactHtmlParser from 'react-html-parser';\nimport { notificationApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\n\nconst Notification = () => {\n  const {\n    reloadNotification,\n    handleReloadNoti\n  } = useWrap();\n  const {\n    0: dataTable,\n    1: setDataTable\n  } = useState([]);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: dataSeen,\n    1: setDataSeen\n  } = useState({\n    ID: null\n  });\n  const {\n    0: contentRow,\n    1: setContentRow\n  } = useState({\n    content: null,\n    title: null,\n    status: null\n  });\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const listTodoApi = {\n    pageSize: 10,\n    pageIndex: 1\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi);\n\n  const getDataNotification = () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    (async () => {\n      try {\n        let res = await notificationApi.getAllWithUser(todoApi);\n\n        if (res.status == 204) {\n          // showNoti(\"danger\", \"Không có dữ liệu\");\n          console.log('Lỗi: Không tìm thấy');\n        }\n\n        if (res.status == 200) {\n          setDataTable(res.data.data);\n        }\n      } catch (error) {\n        // showNoti(\"danger\", error.message);\n        console.log('error: ', error);\n      } finally {\n        setIsLoading({\n          type: 'GET_ALL',\n          status: false\n        });\n      }\n    })();\n  };\n\n  const _onSubmit = async data => {\n    setIsLoading({\n      type: 'UPDATE_DATA',\n      status: true\n    });\n    let res = null;\n\n    try {\n      res = await notificationApi.updateSeen(data);\n      res.Status == 200 && console.log('update thành công'), getDataNotification();\n    } catch (error) {\n      console.log('error', error.message);\n    } finally {\n      setIsLoading({\n        type: 'UPDATE_DATA',\n        status: false\n      });\n    }\n\n    return res;\n  };\n\n  const content_notification = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `wrap-notification middle`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content_notification\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Th\\xF4ng b\\xE1o\",\n        extra: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/notification\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Xem t\\u1EA5t c\\u1EA3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this),\n        bordered: false,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          itemLayout: \"horizontal\",\n          dataSource: dataTable,\n          className: \"list-notification\",\n          renderItem: item => /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: () => {\n              setIsModalVisible(true);\n              setShow(false);\n              setDataSeen({\n                ID: item.ID\n              });\n              setContentRow({\n                content: item.NotificationContent,\n                title: item.NotificationTitle,\n                status: item.Status\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(List.Item, {\n              className: item.Status == 0 ? 'new' : 'old',\n              children: item.Status == 0 ? /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n                avatar: /*#__PURE__*/_jsxDEV(NotificationTwoTone, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 20\n                }, this),\n                title: item.NotificationTitle,\n                description: ReactHtmlParser(item.NotificationContent)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 11\n              }, this) : /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n                avatar: /*#__PURE__*/_jsxDEV(NotificationOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 20\n                }, this),\n                title: item.NotificationTitle,\n                description: ReactHtmlParser(item.NotificationContent)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, this);\n\n  let countNoti = 0;\n\n  for (let i = 0; i < dataTable.length; i++) {\n    if (dataTable[i].Status == 0) {\n      countNoti++;\n    }\n  }\n\n  const handleVisibleChange = visible => {\n    setShow(visible);\n  };\n\n  useEffect(() => {\n    getDataNotification(); // const interval = setInterval(() => {\n    //     getDataNotification();\n    //   }, 1000);\n    // return () => clearInterval(interval);\n  }, [countNoti, todoApi]);\n  useEffect(() => {\n    if (reloadNotification) {\n      getDataNotification();\n      handleReloadNoti();\n    }\n  }, [reloadNotification]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      title: /*#__PURE__*/_jsxDEV(AlertCircle, {\n        color: \"#32c6a4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 12\n      }, this),\n      visible: isModalVisible,\n      width: 700,\n      okButtonProps: {\n        style: {\n          display: 'none'\n        }\n      },\n      onCancel: () => {\n        setIsModalVisible(false);\n        contentRow.status == 0 && _onSubmit(dataSeen);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: contentRow.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ReactHtmlParser(contentRow.content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      placement: \"bottomRight\",\n      content: content_notification,\n      trigger: \"click\",\n      visible: show,\n      onVisibleChange: visible => handleVisibleChange(visible),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shopping__cart-detail cart-icon d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            textDecoration: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(BellOutlined, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: countNoti > 0 ? 'count-notification' : 'hide',\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: countNoti > 9 ? `9+` : countNoti\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Notification;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Header/notification.tsx"],"names":["BellOutlined","NotificationOutlined","NotificationTwoTone","Card","List","Popover","Modal","Link","React","useEffect","useState","AlertCircle","ReactHtmlParser","notificationApi","useWrap","Notification","reloadNotification","handleReloadNoti","dataTable","setDataTable","show","setShow","isLoading","setIsLoading","type","status","dataSeen","setDataSeen","ID","contentRow","setContentRow","content","title","isModalVisible","setIsModalVisible","listTodoApi","pageSize","pageIndex","todoApi","setTodoApi","getDataNotification","res","getAllWithUser","console","log","data","error","_onSubmit","updateSeen","Status","message","content_notification","item","NotificationContent","NotificationTitle","countNoti","i","length","handleVisibleChange","visible","style","display","textDecoration"],"mappings":"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","sourcesContent":["import { BellOutlined, NotificationOutlined, NotificationTwoTone } from '@ant-design/icons'\r\nimport { Card, List, Popover } from 'antd'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport Link from 'next/link'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AlertCircle } from 'react-feather'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { notificationApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst Notification = () => {\r\n\tconst { reloadNotification, handleReloadNoti } = useWrap()\r\n\tconst [dataTable, setDataTable] = useState([])\r\n\tconst [show, setShow] = useState(false)\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [dataSeen, setDataSeen] = useState({\r\n\t\tID: null\r\n\t})\r\n\tconst [contentRow, setContentRow] = useState({\r\n\t\tcontent: null,\r\n\t\ttitle: null,\r\n\t\tstatus: null\r\n\t})\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n\tconst listTodoApi = {\r\n\t\tpageSize: 10,\r\n\t\tpageIndex: 1\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\tconst getDataNotification = () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\t;(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await notificationApi.getAllWithUser(todoApi)\r\n\t\t\t\tif (res.status == 204) {\r\n\t\t\t\t\t// showNoti(\"danger\", \"Không có dữ liệu\");\r\n\t\t\t\t\tconsole.log('Lỗi: Không tìm thấy')\r\n\t\t\t\t}\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tsetDataTable(res.data.data)\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\t// showNoti(\"danger\", error.message);\r\n\t\t\t\tconsole.log('error: ', error)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})()\r\n\t}\r\n\r\n\tconst _onSubmit = async (data: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'UPDATE_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet res = null\r\n\t\ttry {\r\n\t\t\tres = await notificationApi.updateSeen(data)\r\n\t\t\tres.Status == 200 && console.log('update thành công'), getDataNotification()\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'UPDATE_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\tconst content_notification = (\r\n\t\t<div className={`wrap-notification middle`}>\r\n\t\t\t<div className=\"content_notification\">\r\n\t\t\t\t<Card\r\n\t\t\t\t\ttitle=\"Thông báo\"\r\n\t\t\t\t\textra={\r\n\t\t\t\t\t\t<Link href=\"/notification\">\r\n\t\t\t\t\t\t\t<a>Xem tất cả</a>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbordered={false}\r\n\t\t\t\t>\r\n\t\t\t\t\t<List\r\n\t\t\t\t\t\titemLayout=\"horizontal\"\r\n\t\t\t\t\t\tdataSource={dataTable}\r\n\t\t\t\t\t\tclassName=\"list-notification\"\r\n\t\t\t\t\t\trenderItem={(item) => (\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetIsModalVisible(true)\r\n\t\t\t\t\t\t\t\t\tsetShow(false)\r\n\t\t\t\t\t\t\t\t\tsetDataSeen({\r\n\t\t\t\t\t\t\t\t\t\tID: item.ID\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\tsetContentRow({\r\n\t\t\t\t\t\t\t\t\t\tcontent: item.NotificationContent,\r\n\t\t\t\t\t\t\t\t\t\ttitle: item.NotificationTitle,\r\n\t\t\t\t\t\t\t\t\t\tstatus: item.Status\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<List.Item className={item.Status == 0 ? 'new' : 'old'}>\r\n\t\t\t\t\t\t\t\t\t{item.Status == 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t<List.Item.Meta\r\n\t\t\t\t\t\t\t\t\t\t\tavatar={<NotificationTwoTone />}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.NotificationTitle}\r\n\t\t\t\t\t\t\t\t\t\t\tdescription={ReactHtmlParser(item.NotificationContent)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<List.Item.Meta\r\n\t\t\t\t\t\t\t\t\t\t\tavatar={<NotificationOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.NotificationTitle}\r\n\t\t\t\t\t\t\t\t\t\t\tdescription={ReactHtmlParser(item.NotificationContent)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n\tlet countNoti = 0\r\n\r\n\tfor (let i = 0; i < dataTable.length; i++) {\r\n\t\tif (dataTable[i].Status == 0) {\r\n\t\t\tcountNoti++\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleVisibleChange = (visible) => {\r\n\t\tsetShow(visible)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataNotification()\r\n\t\t// const interval = setInterval(() => {\r\n\t\t//     getDataNotification();\r\n\t\t//   }, 1000);\r\n\t\t// return () => clearInterval(interval);\r\n\t}, [countNoti, todoApi])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (reloadNotification) {\r\n\t\t\tgetDataNotification()\r\n\t\t\thandleReloadNoti()\r\n\t\t}\r\n\t}, [reloadNotification])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={<AlertCircle color=\"#32c6a4\" />}\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\twidth={700}\r\n\t\t\t\tokButtonProps={{\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tdisplay: 'none'\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\t\tcontentRow.status == 0 && _onSubmit(dataSeen)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<h4>{contentRow.title}</h4>\r\n\t\t\t\t<div>{ReactHtmlParser(contentRow.content)}</div>\r\n\t\t\t</Modal>\r\n\t\t\t<Popover\r\n\t\t\t\tplacement=\"bottomRight\"\r\n\t\t\t\tcontent={content_notification}\r\n\t\t\t\ttrigger=\"click\"\r\n\t\t\t\tvisible={show}\r\n\t\t\t\tonVisibleChange={(visible) => handleVisibleChange(visible)}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"shopping__cart-detail cart-icon d-flex justify-content-center align-items-center\">\r\n\t\t\t\t\t<a style={{ textDecoration: 'none' }}>\r\n\t\t\t\t\t\t<BellOutlined size={18} />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<span className={countNoti > 0 ? 'count-notification' : 'hide'}>\r\n\t\t\t\t\t\t<span>{countNoti > 9 ? `9+` : countNoti}</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</Popover>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Notification\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nimport { getSession } from 'next-auth/client';\n\nfunction getUrl(config) {\n  if (config.baseURL) {\n    return config.url.replace(config.baseURL, '').split('?')[0];\n  }\n\n  return config.url;\n}\n\nexport const authHeader_X = async () => {\n  const session = await getSession();\n\n  if (session && session.accessToken) {\n    return {\n      'x-access-token': session.accessToken\n    };\n  } else {\n    return {};\n  }\n};\nexport const authHeader_Bearer = async () => {\n  const session = await getSession();\n\n  if (session && session.accessToken) {\n    return {\n      Authorization: 'Bearer ' + session.accessToken\n    };\n  } else {\n    return {};\n  }\n};\nexport const instance = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_ENDPOINT,\n  headers: {\n    Accept: 'application/json'\n  }\n});\ninstance.interceptors.request.use(async config => {\n  const url = getUrl(config);\n  console.log(`%c ${config.method.toUpperCase()} - ${url}:`, 'color: #0086b3; font-weight: bold', config);\n  return config;\n}, error => {\n  console.log(`%c ${error.response.status}  :`, 'color: red; font-weight: bold', error.response.data);\n  return Promise.reject(error);\n});\ninstance.interceptors.response.use(response => {\n  return response;\n}, // async (response) => {\n//   console.log(\n//     `%c ${response.status} - ${getUrl(response.config)}:`,\n//     \"color: #008000; font-weight: bold\",\n//     response\n//   );\n//   return response;\n// },\nfunction (error) {\n  if (error.response) {\n    // server trả response về là lỗi code đã handle\n    console.log(`%c ${error.response.status}  :`, 'color: red; font-weight: bold', error.response.data);\n    return Promise.reject({\n      status: error.response.status,\n      message: error.response.data.message\n    });\n  } else if (error.request) {\n    // request mãi mãi ko thấy response\n    // `error.request` là XMLHttpRequest trong website còn nodejs là http.ClientRequest\n    console.log(`%c ${JSON.stringify(error)}  :`, 'color: red; font-weight: bold', error.response.data);\n    return Promise.reject(error.request);\n  } else {\n    // có gì đó sai sai, hình như là hàm request sai\n    console.log(`%c ${JSON.stringify(error)}  :`, 'color: red; font-weight: bold', 'có gì đó sai sai, hình như là setting sai');\n    return Promise.reject(error);\n  }\n});","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/services/instance.tsx"],"names":["axios","getSession","getUrl","config","baseURL","url","replace","split","authHeader_X","session","accessToken","authHeader_Bearer","Authorization","instance","create","process","env","NEXT_PUBLIC_API_ENDPOINT","headers","Accept","interceptors","request","use","console","log","method","toUpperCase","error","response","status","data","Promise","reject","message","JSON","stringify"],"mappings":"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","sourcesContent":["import axios, { AxiosRequestConfig, AxiosResponse } from 'axios'\r\nimport { getSession } from 'next-auth/client'\r\n\r\nfunction getUrl(config) {\r\n\tif (config.baseURL) {\r\n\t\treturn config.url.replace(config.baseURL, '').split('?')[0]\r\n\t}\r\n\treturn config.url\r\n}\r\n\r\nexport const authHeader_X = async () => {\r\n\tconst session = await getSession()\r\n\tif (session && session.accessToken) {\r\n\t\treturn { 'x-access-token': session.accessToken }\r\n\t} else {\r\n\t\treturn {}\r\n\t}\r\n}\r\nexport const authHeader_Bearer = async () => {\r\n\tconst session = await getSession()\r\n\r\n\tif (session && session.accessToken) {\r\n\t\treturn { Authorization: 'Bearer ' + session.accessToken }\r\n\t} else {\r\n\t\treturn {}\r\n\t}\r\n}\r\nexport const instance = axios.create({\r\n\tbaseURL: process.env.NEXT_PUBLIC_API_ENDPOINT,\r\n\theaders: {\r\n\t\tAccept: 'application/json'\r\n\t}\r\n})\r\n\r\ninstance.interceptors.request.use(\r\n\tasync (config: AxiosRequestConfig) => {\r\n\t\tconst url = getUrl(config)\r\n\t\tconsole.log(`%c ${config.method.toUpperCase()} - ${url}:`, 'color: #0086b3; font-weight: bold', config)\r\n\r\n\t\treturn config\r\n\t},\r\n\t(error) => {\r\n\t\tconsole.log(`%c ${error.response.status}  :`, 'color: red; font-weight: bold', error.response.data)\r\n\t\treturn Promise.reject(error)\r\n\t}\r\n)\r\n\r\ninstance.interceptors.response.use(\r\n\t(response: AxiosResponse) => {\r\n\t\treturn response\r\n\t},\r\n\t// async (response) => {\r\n\t//   console.log(\r\n\t//     `%c ${response.status} - ${getUrl(response.config)}:`,\r\n\t//     \"color: #008000; font-weight: bold\",\r\n\t//     response\r\n\t//   );\r\n\r\n\t//   return response;\r\n\t// },\r\n\tfunction (error) {\r\n\t\tif (error.response) {\r\n\t\t\t// server trả response về là lỗi code đã handle\r\n\t\t\tconsole.log(`%c ${error.response.status}  :`, 'color: red; font-weight: bold', error.response.data)\r\n\t\t\treturn Promise.reject({\r\n\t\t\t\tstatus: error.response.status,\r\n\t\t\t\tmessage: error.response.data.message\r\n\t\t\t})\r\n\t\t} else if (error.request) {\r\n\t\t\t// request mãi mãi ko thấy response\r\n\t\t\t// `error.request` là XMLHttpRequest trong website còn nodejs là http.ClientRequest\r\n\t\t\tconsole.log(`%c ${JSON.stringify(error)}  :`, 'color: red; font-weight: bold', error.response.data)\r\n\t\t\treturn Promise.reject(error.request)\r\n\t\t} else {\r\n\t\t\t// có gì đó sai sai, hình như là hàm request sai\r\n\t\t\tconsole.log(`%c ${JSON.stringify(error)}  :`, 'color: red; font-weight: bold', 'có gì đó sai sai, hình như là setting sai')\r\n\t\t\treturn Promise.reject(error)\r\n\t\t}\r\n\t}\r\n)\r\n"]},"metadata":{},"sourceType":"module"}
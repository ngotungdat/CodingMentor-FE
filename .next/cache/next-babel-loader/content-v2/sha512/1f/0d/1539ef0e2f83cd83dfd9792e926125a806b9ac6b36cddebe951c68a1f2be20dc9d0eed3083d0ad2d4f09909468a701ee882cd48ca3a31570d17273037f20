{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Customer\\\\Student\\\\StudentAdvisory\\\\StudentAdvisoryNote.tsx\";\nimport React, { useState } from 'react';\nimport NestedTable from '~/components/Elements/NestedTable';\nimport moment from 'moment';\nimport { FormOutlined } from '@ant-design/icons';\nimport { Modal, Tooltip, Input, Spin } from 'antd';\nimport { studentAdviseApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nconst {\n  TextArea\n} = Input;\n\nconst StudentAdvisoryNote = props => {\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    dataSource,\n    userID,\n    onFetchData\n  } = props;\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n  const {\n    0: valueNote,\n    1: setValueNote\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: activeData,\n    1: setActiveData\n  } = useState(null);\n  const columns = [{\n    title: 'Ghi chú',\n    dataIndex: 'Note'\n  }, {\n    title: 'Tạo ngày',\n    dataIndex: 'CreatedOn',\n    render: date => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: moment(date).format('DD/MM/YYYY HH:mm')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Người tạo',\n    dataIndex: 'CreatedBy'\n  }, {\n    render: data => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-icon edit\",\n      onClick: () => showModal(data),\n      children: /*#__PURE__*/_jsxDEV(FormOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }];\n\n  const addNote = async () => {\n    setLoading(true);\n    let res = null;\n\n    try {\n      if (activeData) {\n        res = await studentAdviseApi.updateNote({\n          ID: activeData.ID,\n          Note: valueNote\n        });\n      } else {\n        res = await studentAdviseApi.addNote({\n          CustomerConsultationID: userID,\n          Note: valueNote\n        });\n      }\n\n      if (res.status == 200) {\n        showNoti('success', activeData ? 'Cập nhật ghi chú thành công' : 'Thêm ghi chú thành công');\n        setIsModalVisible(false);\n        onFetchData && onFetchData();\n        setActiveData(null);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const showModal = dataRow => {\n    setIsModalVisible(true);\n\n    if (dataRow) {\n      setActiveData(dataRow);\n      setValueNote(dataRow.Note);\n    } else {\n      setActiveData(null);\n    }\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-2\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      footer: null,\n      title: \"Th\\xEAm ghi ch\\xFA\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {\n        value: valueNote,\n        onChange: e => setValueNote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary w-100\",\n          onClick: addNote,\n          children: [\"L\\u01B0u \", loading && /*#__PURE__*/_jsxDEV(Spin, {\n            className: \"loading-base\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 23\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Th\\xEAm ghi ch\\xFA\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: () => showModal(null),\n        children: \"Th\\xEAm ghi ch\\xFA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-7\",\n        children: /*#__PURE__*/_jsxDEV(NestedTable, {\n          onFetchData: onFetchData,\n          addClass: \"basic-header\",\n          dataSource: dataSource,\n          columns: columns,\n          haveBorder: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 3\n  }, this);\n};\n\nexport default StudentAdvisoryNote;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Customer/Student/StudentAdvisory/StudentAdvisoryNote.tsx"],"names":["React","useState","NestedTable","moment","FormOutlined","Modal","Tooltip","Input","Spin","studentAdviseApi","useWrap","TextArea","StudentAdvisoryNote","props","showNoti","dataSource","userID","onFetchData","isModalVisible","setIsModalVisible","valueNote","setValueNote","loading","setLoading","activeData","setActiveData","columns","title","dataIndex","render","date","format","data","showModal","addNote","res","updateNote","ID","Note","CustomerConsultationID","status","error","message","dataRow","handleOk","handleCancel","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport NestedTable from '~/components/Elements/NestedTable';\r\nimport moment from 'moment';\r\nimport { FormOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Modal, Tooltip, Input, Spin } from 'antd';\r\nimport { studentAdviseApi } from '~/apiBase';\r\nimport { useWrap } from '~/context/wrap';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst StudentAdvisoryNote = (props) => {\r\n\tconst { showNoti } = useWrap();\r\n\tconst { dataSource, userID, onFetchData } = props;\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst [valueNote, setValueNote] = useState(null);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [activeData, setActiveData] = useState(null);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Ghi chú',\r\n\t\t\tdataIndex: 'Note'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tạo ngày',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\trender: (date) => <p>{moment(date).format('DD/MM/YYYY HH:mm')}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Người tạo',\r\n\t\t\tdataIndex: 'CreatedBy'\r\n\t\t},\r\n\t\t{\r\n\t\t\trender: (data) => (\r\n\t\t\t\t<button className=\"btn btn-icon edit\" onClick={() => showModal(data)}>\r\n\t\t\t\t\t<FormOutlined />\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t}\r\n\t];\r\n\r\n\tconst addNote = async () => {\r\n\t\tsetLoading(true);\r\n\t\tlet res = null;\r\n\t\ttry {\r\n\t\t\tif (activeData) {\r\n\t\t\t\tres = await studentAdviseApi.updateNote({\r\n\t\t\t\t\tID: activeData.ID,\r\n\t\t\t\t\tNote: valueNote\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tres = await studentAdviseApi.addNote({\r\n\t\t\t\t\tCustomerConsultationID: userID,\r\n\t\t\t\t\tNote: valueNote\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tshowNoti('success', activeData ? 'Cập nhật ghi chú thành công' : 'Thêm ghi chú thành công');\r\n\t\t\t\tsetIsModalVisible(false);\r\n\t\t\t\tonFetchData && onFetchData();\r\n\t\t\t\tsetActiveData(null);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst showModal = (dataRow) => {\r\n\t\tsetIsModalVisible(true);\r\n\t\tif (dataRow) {\r\n\t\t\tsetActiveData(dataRow);\r\n\t\t\tsetValueNote(dataRow.Note);\r\n\t\t} else {\r\n\t\t\tsetActiveData(null);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleOk = () => {\r\n\t\tsetIsModalVisible(false);\r\n\t};\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"mt-2\">\r\n\t\t\t<Modal footer={null} title=\"Thêm ghi chú\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n\t\t\t\t<TextArea value={valueNote} onChange={(e) => setValueNote(e.target.value)} />\r\n\t\t\t\t<div className=\"text-center mt-3\">\r\n\t\t\t\t\t<button className=\"btn btn-primary w-100\" onClick={addNote}>\r\n\t\t\t\t\t\tLưu {loading && <Spin className=\"loading-base\" />}{' '}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t\t<Tooltip title=\"Thêm ghi chú\">\r\n\t\t\t\t<button className=\"btn btn-warning\" onClick={() => showModal(null)}>\r\n\t\t\t\t\tThêm ghi chú\r\n\t\t\t\t</button>\r\n\t\t\t</Tooltip>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-7\">\r\n\t\t\t\t\t<NestedTable\r\n\t\t\t\t\t\tonFetchData={onFetchData}\r\n\t\t\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\thaveBorder={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default StudentAdvisoryNote;\r\n"]},"metadata":{},"sourceType":"module"}
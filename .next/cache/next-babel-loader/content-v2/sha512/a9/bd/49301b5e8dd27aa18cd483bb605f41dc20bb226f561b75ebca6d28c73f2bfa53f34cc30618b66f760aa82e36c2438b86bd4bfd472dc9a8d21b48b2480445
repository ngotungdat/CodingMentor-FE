{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\auth\\\\signin.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { signIn, getProviders } from 'next-auth/client';\nimport { useRouter } from 'next/router';\nimport LoginForm from '~/components/LoginForm';\nimport { useWrap } from '~/context/wrap';\nimport AuthLayout from '~/components/AuthLayout';\nimport { getTypeURL } from '~/utils/functions';\n\nfunction SignIn({\n  csrfToken\n}) {\n  const {\n    showNoti\n  } = useWrap();\n  const router = useRouter();\n  const {\n    0: haveError,\n    1: setHaveError\n  } = useState('');\n  useEffect(() => {\n    var _router$query;\n\n    if ((_router$query = router.query) !== null && _router$query !== void 0 && _router$query.error) {\n      const {\n        error\n      } = router.query;\n      const erData = JSON.parse(error.toString().split('Error:')[0]);\n\n      switch (erData.status) {\n        case 200:\n          showNoti('success', 'Đăng nhập thành công');\n          break;\n\n        case 400:\n          showNoti('danger', 'Tên đăng nhập hoặc mật khẩu không đúng');\n          setHaveError(erData.message);\n          break;\n\n        case 404:\n          console.log('Không truy cập được API');\n          break;\n\n        case 500:\n          console.log('Lỗi API');\n\n        default:\n          console.log(JSON.stringify(erData));\n          break;\n      }\n    }\n\n    return () => {};\n  }, []);\n  const {\n    0: currentUrl,\n    1: setCurrentUrl\n  } = useState('');\n  useEffect(() => {\n    setCurrentUrl(window.location.href);\n  }, []);\n\n  const _Submit = data => {\n    let type = getTypeURL(currentUrl);\n    signIn('credentials-signin', _objectSpread(_objectSpread({}, data), {}, {\n      callbackUrl: type == 'LOCALHOST' ? 'http://localhost:3003' : type == 'DEMO' ? 'https://mona-elms.com' : 'https://pea-elms.herokuapp.com',\n      redirect: true\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      onSubmit: _Submit,\n      csrfToken: csrfToken,\n      error: haveError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\nSignIn.layout = AuthLayout;\nexport default SignIn;\nexport async function getServerSideProps(context) {\n  const providers = await getProviders();\n  return {\n    props: {\n      providers\n    }\n  };\n}","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/auth/signin.tsx"],"names":["React","useEffect","useState","signIn","getProviders","useRouter","LoginForm","useWrap","AuthLayout","getTypeURL","SignIn","csrfToken","showNoti","router","haveError","setHaveError","query","error","erData","JSON","parse","toString","split","status","message","console","log","stringify","currentUrl","setCurrentUrl","window","location","href","_Submit","data","type","callbackUrl","redirect","layout","getServerSideProps","context","providers","props"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,kBAArC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA+B;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAeL,OAAO,EAA5B;AACA,QAAMM,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACf,yBAAIY,MAAM,CAACG,KAAX,0CAAI,cAAcC,KAAlB,EAAyB;AACxB,YAAM;AAAEA,QAAAA;AAAF,UAAYJ,MAAM,CAACG,KAAzB;AACA,YAAME,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,QAAN,GAAiBC,KAAjB,CAAuB,QAAvB,EAAiC,CAAjC,CAAX,CAAf;;AACA,cAAQJ,MAAM,CAACK,MAAf;AACC,aAAK,GAAL;AACCX,UAAAA,QAAQ,CAAC,SAAD,EAAY,sBAAZ,CAAR;AACA;;AACD,aAAK,GAAL;AACCA,UAAAA,QAAQ,CAAC,QAAD,EAAW,wCAAX,CAAR;AACAG,UAAAA,YAAY,CAACG,MAAM,CAACM,OAAR,CAAZ;AACA;;AACD,aAAK,GAAL;AACCC,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA;;AACD,aAAK,GAAL;AACCD,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACD;AACCD,UAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACQ,SAAL,CAAeT,MAAf,CAAZ;AACA;AAfF;AAiBA;;AACD,WAAO,MAAM,CAAE,CAAf;AACA,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,QAAM;AAAA,OAACU,UAAD;AAAA,OAAaC;AAAb,MAA8B3B,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf4B,IAAAA,aAAa,CAACC,MAAM,CAACC,QAAP,CAAgBC,IAAjB,CAAb;AACA,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,OAAO,GAAIC,IAAD,IAAe;AAC9B,QAAIC,IAAI,GAAG1B,UAAU,CAACmB,UAAD,CAArB;AACAzB,IAAAA,MAAM,CAAC,oBAAD,kCACF+B,IADE;AAELE,MAAAA,WAAW,EACVD,IAAI,IAAI,WAAR,GAAsB,uBAAtB,GAAgDA,IAAI,IAAI,MAAR,GAAiB,uBAAjB,GAA2C,gCAHvF;AAILE,MAAAA,QAAQ,EAAE;AAJL,OAAN;AAMA,GARD;;AAUA,sBACC;AAAA,2BACC,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEJ,OAArB;AAA8B,MAAA,SAAS,EAAEtB,SAAzC;AAAoD,MAAA,KAAK,EAAEG;AAA3D;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAKA;;AAEDJ,MAAM,CAAC4B,MAAP,GAAgB9B,UAAhB;AAEA,eAAeE,MAAf;AAEA,OAAO,eAAe6B,kBAAf,CAAkCC,OAAlC,EAA2C;AACjD,QAAMC,SAAS,GAAG,MAAMrC,YAAY,EAApC;AACA,SAAO;AACNsC,IAAAA,KAAK,EAAE;AAAED,MAAAA;AAAF;AADD,GAAP;AAGA","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { signIn, getProviders } from 'next-auth/client'\r\nimport { useRouter } from 'next/router'\r\nimport LoginForm from '~/components/LoginForm'\r\nimport { useWrap } from '~/context/wrap'\r\nimport AuthLayout from '~/components/AuthLayout'\r\nimport { getTypeURL } from '~/utils/functions'\r\n\r\nfunction SignIn({ csrfToken }) {\r\n\tconst { showNoti } = useWrap()\r\n\tconst router = useRouter()\r\n\tconst [haveError, setHaveError] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\tif (router.query?.error) {\r\n\t\t\tconst { error } = router.query\r\n\t\t\tconst erData = JSON.parse(error.toString().split('Error:')[0])\r\n\t\t\tswitch (erData.status) {\r\n\t\t\t\tcase 200:\r\n\t\t\t\t\tshowNoti('success', 'Đăng nhập thành công')\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 400:\r\n\t\t\t\t\tshowNoti('danger', 'Tên đăng nhập hoặc mật khẩu không đúng')\r\n\t\t\t\t\tsetHaveError(erData.message)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 404:\r\n\t\t\t\t\tconsole.log('Không truy cập được API')\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 500:\r\n\t\t\t\t\tconsole.log('Lỗi API')\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log(JSON.stringify(erData))\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn () => {}\r\n\t}, [])\r\n\r\n\tconst [currentUrl, setCurrentUrl] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCurrentUrl(window.location.href)\r\n\t}, [])\r\n\r\n\tconst _Submit = (data: any) => {\r\n\t\tlet type = getTypeURL(currentUrl)\r\n\t\tsignIn('credentials-signin', {\r\n\t\t\t...data,\r\n\t\t\tcallbackUrl:\r\n\t\t\t\ttype == 'LOCALHOST' ? 'http://localhost:3003' : type == 'DEMO' ? 'https://mona-elms.com' : 'https://pea-elms.herokuapp.com',\r\n\t\t\tredirect: true\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<LoginForm onSubmit={_Submit} csrfToken={csrfToken} error={haveError} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nSignIn.layout = AuthLayout\r\n\r\nexport default SignIn\r\n\r\nexport async function getServerSideProps(context) {\r\n\tconst providers = await getProviders()\r\n\treturn {\r\n\t\tprops: { providers }\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
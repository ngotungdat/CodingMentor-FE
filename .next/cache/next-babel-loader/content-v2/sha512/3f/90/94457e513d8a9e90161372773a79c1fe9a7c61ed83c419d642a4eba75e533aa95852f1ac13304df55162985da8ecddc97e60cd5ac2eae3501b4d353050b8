{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\ExamAppointment\\\\ExamAppointmentResult.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ProfileOutlined } from '@ant-design/icons';\nimport { Card, Skeleton, Spin } from 'antd';\nimport router from 'next/router';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Bookmark } from 'react-feather';\nimport ReactHtmlParser from 'react-html-parser';\nimport { examAppointmentResultApi } from '~/apiBase';\nimport TitlePage from '~/components/Elements/TitlePage';\nimport ListQuestion from '~/components/Global/DoingTest/ListQuestion';\nimport { useDoneTest } from '~/context/useDoneTest';\nimport { useWrap } from '~/context/wrap';\nimport MainTest from '../DoingTest/MainTest';\n\nconst ExamAppointmentResult = () => {\n  // ---- Get Router ----\n  const {\n    ExamAppointmentResultID: ExamAppointmentResultID,\n    examID: examID,\n    score: score\n  } = router.query;\n  const ExamAppointmentID = router.query.slug;\n  const {} = useDoneTest();\n  const {\n    teacherMarking: teacherMarking\n  } = router.query;\n  const {\n    getDoneTestData,\n    doneTestData,\n    dataMarking,\n    getDataMarking\n  } = useDoneTest();\n  const {\n    0: detailResult,\n    1: setDetailResult\n  } = useState([]);\n  const {\n    0: visibleNofi,\n    1: setVisibleNofi\n  } = useState(false);\n  const boxEl = useRef(null); // console.log('score: ', score);\n\n  const paramsDefault = {\n    pageSize: 999,\n    pageIndex: 1,\n    ExamAppointmentResultID: parseInt(ExamAppointmentResultID) // ExerciseType: teacherMarking ? 2 : null\n\n  };\n  const {\n    0: params,\n    1: setParams\n  } = useState(paramsDefault);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: listQuestionID,\n    1: setListQuestionID\n  } = useState([]); // Lấy tất cả ID đã có\n\n  const {\n    0: listGroupID,\n    1: setListGroupID\n  } = useState([]); // Lấy tất cả group ID đã có\n\n  const {\n    0: showMainTest,\n    1: setShowMainTest\n  } = useState(false);\n  const {\n    showNoti,\n    userInformation\n  } = useWrap();\n  const {\n    0: isShowAll,\n    1: setIsShowAll\n  } = useState(false);\n  const {\n    0: isMarked,\n    1: setIsMarked\n  } = useState(false);\n  const {\n    0: showNote,\n    1: setShowNote\n  } = useState(false);\n  const {\n    0: infoTest,\n    1: setInfoTest\n  } = useState(null);\n  const {\n    0: loadingInfoTest,\n    1: setLoadingInfoTest\n  } = useState(false);\n\n  const getInfoTest = async () => {\n    setLoadingInfoTest(true);\n\n    try {\n      let res = await examAppointmentResultApi.getAll({\n        ExamAppointmentID: ExamAppointmentID,\n        UserInformationID: userInformation.UserInformationID\n      });\n\n      if (res.status === 200) {\n        let dataInfo = res.data.data[0];\n        let totalQuestion = dataInfo.ListeningNumber + dataInfo.ReadingNumber;\n        setInfoTest(_objectSpread(_objectSpread({}, res.data.data[0]), {}, {\n          TotalQuestion: totalQuestion\n        }));\n      }\n    } catch (error) {\n      // showNoti('danger', error.message);\n      console.log('error', error.message);\n    } finally {\n      setLoadingInfoTest(false);\n    }\n  };\n\n  const getDataSetPackageResult = async () => {\n    let cloneListQuestionID = [...listQuestionID];\n    let cloneListGroupID = [...listGroupID];\n    setLoading(true);\n\n    try {\n      let res = await examAppointmentResultApi.getResultExam(params); //@ts-ignore\n\n      if (res.status == 200) {\n        convertDataDoneTest(res.data.data); // Add to data marking if have teacher marking\n\n        if (teacherMarking) {\n          setIsMarked(res.data.isDone);\n\n          if (!dataMarking) {\n            let newDataMarking = {\n              SetPackageResultID: parseInt(router.query.ExamAppointmentID),\n              Note: '',\n              setPackageExerciseStudentsList: []\n            };\n            res.data.data.forEach(item => {\n              item.SetPackageExerciseStudent.forEach(ques => {\n                newDataMarking.setPackageExerciseStudentsList.push({\n                  ID: ques.ID,\n                  Point: 0\n                });\n              });\n            });\n            getDataMarking(_objectSpread({}, newDataMarking));\n          }\n        } // Add questionid to list\n\n\n        res.data.data.forEach((item, index) => {\n          if (item.Enable) {\n            item.ExerciseGroupID !== 0 && cloneListGroupID.push(item.ExerciseGroupID);\n            item.ExamAppointmentExerciseStudent.forEach(ques => {\n              cloneListQuestionID.push(ques.ExerciseID);\n            });\n          }\n        }); // ----- //\n\n        getDoneTestData(res.data.data);\n        setListGroupID([...cloneListGroupID]);\n        setListQuestionID([...cloneListQuestionID]);\n      }\n\n      if (res.status == 204) {\n        showNoti('danger', 'Không tìm thấy dữ liệu!');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setLoading(false);\n    }\n  }; //\n\n\n  const convertDataDoneTest = data => {\n    let cloneData = [...data];\n    cloneData.forEach(item => {\n      item.ExerciseTopic = [...item.ExamAppointmentExerciseStudent];\n      item.ExerciseTopic.forEach(ques => {\n        ques.ExerciseAnswer = [...ques.ExamAppointmentExerciseAnswerStudent];\n      });\n    });\n    setDetailResult([...cloneData]);\n  };\n\n  const returnSpaceQuestion = data => {\n    let indexStart = listQuestionID.indexOf(data[0].ExerciseID);\n    let indexEnd = listQuestionID.indexOf(data[data.length - 1].ExerciseID);\n    let text = '';\n\n    if (indexStart === indexEnd) {\n      text = 'Câu ' + (indexStart + 1).toString();\n    } else {\n      text = 'Câu ' + (indexStart + 1).toString() + ' - ' + (indexEnd + 1).toString();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"space-question\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 10\n    }, this);\n  }; // const showWritingQuestion = () => {\n  // \tif (isShowAll) {\n  // \t\tsetParams({\n  // \t\t\t...paramsDefault,\n  // \t\t\tExerciseType: 2\n  // \t\t});\n  // \t} else {\n  // \t\tsetParams({\n  // \t\t\t...paramsDefault,\n  // \t\t\tExerciseType: null\n  // \t\t});\n  // \t}\n  // \tsetIsShowAll(!isShowAll);\n  // };\n\n\n  useEffect(() => {\n    getDataSetPackageResult();\n  }, [params]);\n  useEffect(() => {\n    if (dataMarking && !showNote) {\n      if (dataMarking.setPackageExerciseStudentsList.length > 0) {\n        dataMarking.setPackageExerciseStudentsList.every(item => {\n          if (item.Point) {\n            setVisibleNofi(true);\n            setShowNote(true);\n            setTimeout(() => {\n              setVisibleNofi(false);\n            }, 5000);\n            return false;\n          }\n\n          return true;\n        });\n      }\n    }\n  }, [dataMarking]);\n  useEffect(() => {\n    if (userInformation) {\n      getInfoTest();\n    }\n  }, [userInformation]);\n  console.log(infoTest === null || infoTest === void 0 ? void 0 : infoTest.isDone);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showMainTest ? /*#__PURE__*/_jsxDEV(MainTest, {\n      dataDoneTest: detailResult,\n      isDone: true,\n      listIDFromDoneTest: listQuestionID,\n      listGroupIDFromDoneTest: listGroupID,\n      closeMainTest: () => setShowMainTest(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-wrapper done-test\",\n      children: [/*#__PURE__*/_jsxDEV(TitlePage, {\n        title: \"K\\u1EBFt qu\\u1EA3 b\\u1ED9 \\u0111\\u1EC1 chi ti\\u1EBFt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 col-12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"\",\n            title: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title-question-bank\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"title-big\",\n                children: [/*#__PURE__*/_jsxDEV(Bookmark, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 12\n                }, this), \"Danh s\\xE1ch k\\u1EBFt qu\\u1EA3\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 10\n            }, this),\n            extra: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary ml-2\",\n                onClick: () => setShowMainTest(true),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"d-flex align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(ProfileOutlined, {\n                    className: \"mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 13\n                  }, this), \"Xem chi ti\\u1EBFt\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 11\n              }, this)\n            }, void 0, false),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"test-body done-test-card \",\n              ref: boxEl,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wrap-box-info mb-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"box-info\",\n                  children: [((infoTest === null || infoTest === void 0 ? void 0 : infoTest.isDone) || score) && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"box-info__item box-info__score\",\n                    children: [\"S\\u1ED1 \\u0111i\\u1EC3m\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"number\",\n                      children: loadingInfoTest ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                        paragraph: false,\n                        loading: true,\n                        title: true,\n                        active: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 264,\n                        columnNumber: 34\n                      }, this) : infoTest === null || infoTest === void 0 ? void 0 : infoTest.PointTotal\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 14\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"box-info__item box-info__correct\",\n                    children: [\"S\\u1ED1 c\\xE2u \\u0111\\xFAng\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"number\",\n                      children: loadingInfoTest ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                        paragraph: false,\n                        loading: true,\n                        title: true,\n                        active: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 15\n                      }, this) : infoTest ? (infoTest === null || infoTest === void 0 ? void 0 : infoTest.ReadingCorrect) + (infoTest === null || infoTest === void 0 ? void 0 : infoTest.ListeningCorrect) + '/' + (infoTest === null || infoTest === void 0 ? void 0 : infoTest.TotalQuestion) : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 10\n              }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mt-5\",\n                children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 11\n              }, this) : (detailResult === null || detailResult === void 0 ? void 0 : detailResult.length) == 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-center font-weight-bold mt-2\",\n                children: \"Kh\\xF4ng c\\xF3 d\\u1EEF li\\u1EC7u\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 11\n              }, this) : doneTestData && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: detailResult.map((item, index) => {\n                  if (item.ExerciseGroupID !== 0) {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"wrap-group-list\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"box-detail\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"row\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col-md-11\",\n                            children: [returnSpaceQuestion(item.ExerciseTopic), item.Content && item.Content !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"box-content\",\n                              children: item.Content && ReactHtmlParser(item.Content)\n                            }, index, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 301,\n                              columnNumber: 21\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 298,\n                            columnNumber: 19\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col-md-1\",\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"point-question text-right mt-4\",\n                              children: item.ExerciseTopic[0].Point\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 307,\n                              columnNumber: 20\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 306,\n                            columnNumber: 19\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 297,\n                          columnNumber: 18\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: /*#__PURE__*/_jsxDEV(ListQuestion, {\n                            showScore: score,\n                            isMarked: isMarked,\n                            dataQuestion: item,\n                            listQuestionID: listQuestionID\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 312,\n                            columnNumber: 19\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 311,\n                          columnNumber: 18\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 17\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 16\n                    }, this);\n                  } else {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(ListQuestion, {\n                        isMarked: isMarked,\n                        dataQuestion: item,\n                        listQuestionID: listQuestionID\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 325,\n                        columnNumber: 17\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 16\n                    }, this);\n                  }\n                })\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\nexport default ExamAppointmentResult;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/ExamAppointment/ExamAppointmentResult.tsx"],"names":["ProfileOutlined","Card","Skeleton","Spin","router","React","useEffect","useRef","useState","Bookmark","ReactHtmlParser","examAppointmentResultApi","TitlePage","ListQuestion","useDoneTest","useWrap","MainTest","ExamAppointmentResult","ExamAppointmentResultID","examID","score","query","ExamAppointmentID","slug","teacherMarking","getDoneTestData","doneTestData","dataMarking","getDataMarking","detailResult","setDetailResult","visibleNofi","setVisibleNofi","boxEl","paramsDefault","pageSize","pageIndex","parseInt","params","setParams","loading","setLoading","listQuestionID","setListQuestionID","listGroupID","setListGroupID","showMainTest","setShowMainTest","showNoti","userInformation","isShowAll","setIsShowAll","isMarked","setIsMarked","showNote","setShowNote","infoTest","setInfoTest","loadingInfoTest","setLoadingInfoTest","getInfoTest","res","getAll","UserInformationID","status","dataInfo","data","totalQuestion","ListeningNumber","ReadingNumber","TotalQuestion","error","console","log","message","getDataSetPackageResult","cloneListQuestionID","cloneListGroupID","getResultExam","convertDataDoneTest","isDone","newDataMarking","SetPackageResultID","Note","setPackageExerciseStudentsList","forEach","item","SetPackageExerciseStudent","ques","push","ID","Point","index","Enable","ExerciseGroupID","ExamAppointmentExerciseStudent","ExerciseID","cloneData","ExerciseTopic","ExerciseAnswer","ExamAppointmentExerciseAnswerStudent","returnSpaceQuestion","indexStart","indexOf","indexEnd","length","text","toString","every","setTimeout","PointTotal","ReadingCorrect","ListeningCorrect","map","Content"],"mappings":"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","sourcesContent":["import { ProfileOutlined } from '@ant-design/icons'\r\nimport { Card, Skeleton, Spin } from 'antd'\r\nimport router from 'next/router'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Bookmark } from 'react-feather'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { examAppointmentResultApi } from '~/apiBase'\r\nimport TitlePage from '~/components/Elements/TitlePage'\r\nimport ListQuestion from '~/components/Global/DoingTest/ListQuestion'\r\nimport { useDoneTest } from '~/context/useDoneTest'\r\nimport { useWrap } from '~/context/wrap'\r\nimport MainTest from '../DoingTest/MainTest'\r\n\r\nconst ExamAppointmentResult = () => {\r\n\t// ---- Get Router ----\r\n\r\n\tconst { ExamAppointmentResultID: ExamAppointmentResultID, examID: examID, score: score } = router.query\r\n\tconst ExamAppointmentID = router.query.slug as string\r\n\tconst {} = useDoneTest()\r\n\tconst { teacherMarking: teacherMarking } = router.query\r\n\tconst { getDoneTestData, doneTestData, dataMarking, getDataMarking } = useDoneTest()\r\n\tconst [detailResult, setDetailResult] = useState([])\r\n\tconst [visibleNofi, setVisibleNofi] = useState(false)\r\n\tconst boxEl = useRef(null)\r\n\r\n\t// console.log('score: ', score);\r\n\r\n\tconst paramsDefault = {\r\n\t\tpageSize: 999,\r\n\t\tpageIndex: 1,\r\n\t\tExamAppointmentResultID: parseInt(ExamAppointmentResultID as string)\r\n\t\t// ExerciseType: teacherMarking ? 2 : null\r\n\t}\r\n\tconst [params, setParams] = useState(paramsDefault)\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [listQuestionID, setListQuestionID] = useState([]) // Lấy tất cả ID đã có\r\n\tconst [listGroupID, setListGroupID] = useState([]) // Lấy tất cả group ID đã có\r\n\r\n\tconst [showMainTest, setShowMainTest] = useState(false)\r\n\tconst { showNoti, userInformation } = useWrap()\r\n\tconst [isShowAll, setIsShowAll] = useState(false)\r\n\tconst [isMarked, setIsMarked] = useState(false)\r\n\tconst [showNote, setShowNote] = useState(false)\r\n\tconst [infoTest, setInfoTest] = useState(null)\r\n\tconst [loadingInfoTest, setLoadingInfoTest] = useState(false)\r\n\r\n\tconst getInfoTest = async () => {\r\n\t\tsetLoadingInfoTest(true)\r\n\t\ttry {\r\n\t\t\tlet res = await examAppointmentResultApi.getAll({\r\n\t\t\t\tExamAppointmentID: ExamAppointmentID,\r\n\t\t\t\tUserInformationID: userInformation.UserInformationID\r\n\t\t\t})\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tlet dataInfo: any = res.data.data[0]\r\n\t\t\t\tlet totalQuestion = dataInfo.ListeningNumber + dataInfo.ReadingNumber\r\n\t\t\t\tsetInfoTest({\r\n\t\t\t\t\t...res.data.data[0],\r\n\t\t\t\t\tTotalQuestion: totalQuestion\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\t// showNoti('danger', error.message);\r\n\t\t\tconsole.log('error', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingInfoTest(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst getDataSetPackageResult = async () => {\r\n\t\tlet cloneListQuestionID = [...listQuestionID]\r\n\t\tlet cloneListGroupID = [...listGroupID]\r\n\t\tsetLoading(true)\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await examAppointmentResultApi.getResultExam(params)\r\n\r\n\t\t\t//@ts-ignore\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tconvertDataDoneTest(res.data.data)\r\n\r\n\t\t\t\t// Add to data marking if have teacher marking\r\n\t\t\t\tif (teacherMarking) {\r\n\t\t\t\t\tsetIsMarked(res.data.isDone)\r\n\t\t\t\t\tif (!dataMarking) {\r\n\t\t\t\t\t\tlet newDataMarking = {\r\n\t\t\t\t\t\t\tSetPackageResultID: parseInt(router.query.ExamAppointmentID as string),\r\n\t\t\t\t\t\t\tNote: '',\r\n\t\t\t\t\t\t\tsetPackageExerciseStudentsList: []\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tres.data.data.forEach((item) => {\r\n\t\t\t\t\t\t\titem.SetPackageExerciseStudent.forEach((ques) => {\r\n\t\t\t\t\t\t\t\tnewDataMarking.setPackageExerciseStudentsList.push({\r\n\t\t\t\t\t\t\t\t\tID: ques.ID,\r\n\t\t\t\t\t\t\t\t\tPoint: 0\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tgetDataMarking({ ...newDataMarking })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add questionid to list\r\n\t\t\t\tres.data.data.forEach((item, index) => {\r\n\t\t\t\t\tif (item.Enable) {\r\n\t\t\t\t\t\titem.ExerciseGroupID !== 0 && cloneListGroupID.push(item.ExerciseGroupID)\r\n\t\t\t\t\t\titem.ExamAppointmentExerciseStudent.forEach((ques) => {\r\n\t\t\t\t\t\t\tcloneListQuestionID.push(ques.ExerciseID)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// ----- //\r\n\r\n\t\t\t\tgetDoneTestData(res.data.data)\r\n\t\t\t\tsetListGroupID([...cloneListGroupID])\r\n\t\t\t\tsetListQuestionID([...cloneListQuestionID])\r\n\t\t\t}\r\n\r\n\t\t\tif (res.status == 204) {\r\n\t\t\t\tshowNoti('danger', 'Không tìm thấy dữ liệu!')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\t//\r\n\r\n\tconst convertDataDoneTest = (data) => {\r\n\t\tlet cloneData = [...data]\r\n\r\n\t\tcloneData.forEach((item) => {\r\n\t\t\titem.ExerciseTopic = [...item.ExamAppointmentExerciseStudent]\r\n\t\t\titem.ExerciseTopic.forEach((ques) => {\r\n\t\t\t\tques.ExerciseAnswer = [...ques.ExamAppointmentExerciseAnswerStudent]\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\tsetDetailResult([...cloneData])\r\n\t}\r\n\r\n\tconst returnSpaceQuestion = (data) => {\r\n\t\tlet indexStart = listQuestionID.indexOf(data[0].ExerciseID)\r\n\t\tlet indexEnd = listQuestionID.indexOf(data[data.length - 1].ExerciseID)\r\n\r\n\t\tlet text = ''\r\n\t\tif (indexStart === indexEnd) {\r\n\t\t\ttext = 'Câu ' + (indexStart + 1).toString()\r\n\t\t} else {\r\n\t\t\ttext = 'Câu ' + (indexStart + 1).toString() + ' - ' + (indexEnd + 1).toString()\r\n\t\t}\r\n\r\n\t\treturn <p className=\"space-question\">{text}</p>\r\n\t}\r\n\r\n\t// const showWritingQuestion = () => {\r\n\t// \tif (isShowAll) {\r\n\t// \t\tsetParams({\r\n\t// \t\t\t...paramsDefault,\r\n\t// \t\t\tExerciseType: 2\r\n\t// \t\t});\r\n\t// \t} else {\r\n\t// \t\tsetParams({\r\n\t// \t\t\t...paramsDefault,\r\n\t// \t\t\tExerciseType: null\r\n\t// \t\t});\r\n\t// \t}\r\n\t// \tsetIsShowAll(!isShowAll);\r\n\t// };\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataSetPackageResult()\r\n\t}, [params])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dataMarking && !showNote) {\r\n\t\t\tif (dataMarking.setPackageExerciseStudentsList.length > 0) {\r\n\t\t\t\tdataMarking.setPackageExerciseStudentsList.every((item) => {\r\n\t\t\t\t\tif (item.Point) {\r\n\t\t\t\t\t\tsetVisibleNofi(true)\r\n\t\t\t\t\t\tsetShowNote(true)\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetVisibleNofi(false)\r\n\t\t\t\t\t\t}, 5000)\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}, [dataMarking])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userInformation) {\r\n\t\t\tgetInfoTest()\r\n\t\t}\r\n\t}, [userInformation])\r\n\r\n\tconsole.log(infoTest?.isDone)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{showMainTest ? (\r\n\t\t\t\t<MainTest\r\n\t\t\t\t\tdataDoneTest={detailResult}\r\n\t\t\t\t\tisDone={true}\r\n\t\t\t\t\tlistIDFromDoneTest={listQuestionID}\r\n\t\t\t\t\tlistGroupIDFromDoneTest={listGroupID}\r\n\t\t\t\t\tcloseMainTest={() => setShowMainTest(false)}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"test-wrapper done-test\">\r\n\t\t\t\t\t<TitlePage title=\"Kết quả bộ đề chi tiết\" />\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-md-12 col-12\">\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t<div className=\"title-question-bank\">\r\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"title-big\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Bookmark />\r\n\t\t\t\t\t\t\t\t\t\t\tDanh sách kết quả\r\n\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\textra={\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{/* <Link\r\n\t\t\t\t\t\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/doing-test',\r\n\t\t\t\t\t\t\t\t\t\t\t\tquery: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texamID: examID,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpackageDetailID: packageDetailID\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"btn btn-warning\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RedoOutlined className=\"mr-2\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tLàm lại đề\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</Link> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-secondary ml-2\" onClick={() => setShowMainTest(true)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ProfileOutlined className=\"mr-2\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\tXem chi tiết\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className=\"test-body done-test-card \" ref={boxEl}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"wrap-box-info mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"box-info\">\r\n\t\t\t\t\t\t\t\t\t\t\t{(infoTest?.isDone || score) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"box-info__item box-info__score\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSố điểm\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"number\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{loadingInfoTest ? <Skeleton paragraph={false} loading={true} title={true} active /> : infoTest?.PointTotal}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"box-info__item box-info__correct\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tSố câu đúng\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"number\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{loadingInfoTest ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Skeleton paragraph={false} loading={true} title={true} active />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : infoTest ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinfoTest?.ReadingCorrect + infoTest?.ListeningCorrect + '/' + infoTest?.TotalQuestion\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center mt-5\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Spin />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t) : detailResult?.length == 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-center font-weight-bold mt-2\">Không có dữ liệu</p>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\tdoneTestData && (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{detailResult.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.ExerciseGroupID !== 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"wrap-group-list\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"box-detail\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-11\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{returnSpaceQuestion(item.ExerciseTopic)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.Content && item.Content !== '' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"box-content\" key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.Content && ReactHtmlParser(item.Content)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"point-question text-right mt-4\">{item.ExerciseTopic[0].Point}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListQuestion\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowScore={score}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisMarked={isMarked}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataQuestion={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListQuestion isMarked={isMarked} dataQuestion={item} listQuestionID={listQuestionID} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ExamAppointmentResult\r\n"]},"metadata":{},"sourceType":"module"}
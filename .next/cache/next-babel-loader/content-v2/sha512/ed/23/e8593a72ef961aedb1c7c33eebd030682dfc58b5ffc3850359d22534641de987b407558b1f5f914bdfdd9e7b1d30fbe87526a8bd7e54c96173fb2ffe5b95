{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useRef } from 'react';\n\nvar debounceImpl = function debounceImpl(cb, delay) {\n  var isDebounced = null;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    clearTimeout(isDebounced);\n    isDebounced = setTimeout(function () {\n      return cb.apply(void 0, args);\n    }, delay);\n  };\n};\n\nexport var useDebounce = function useDebounce(cb, delay, deps) {\n  _s();\n\n  var cbRef = useRef(cb);\n  useEffect(function () {\n    cbRef.current = cb;\n  });\n  return useCallback(debounceImpl(function () {\n    return cbRef.current.apply(cbRef, arguments);\n  }, delay), deps);\n};\n\n_s(useDebounce, \"UZDFrHMC6cSqohrWwKX7wVnJ2CA=\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/context/useDebounce.tsx"],"names":["useCallback","useEffect","useRef","debounceImpl","cb","delay","isDebounced","args","clearTimeout","setTimeout","useDebounce","deps","cbRef","current"],"mappings":";;AAAA,SAAwBA,WAAxB,EAAqCC,SAArC,EAAgDC,MAAhD,QAA6D,OAA7D;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,EAAD,EAAKC,KAAL,EAAuB;AAC3C,MAAIC,WAAW,GAAG,IAAlB;AACA,SAAO,YAAa;AAAA,sCAATC,IAAS;AAATA,MAAAA,IAAS;AAAA;;AACnBC,IAAAA,YAAY,CAACF,WAAD,CAAZ;AACAA,IAAAA,WAAW,GAAGG,UAAU,CAAC;AAAA,aAAML,EAAE,MAAF,SAAMG,IAAN,CAAN;AAAA,KAAD,EAAoBF,KAApB,CAAxB;AACA,GAHD;AAIA,CAND;;AAQA,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACN,EAAD,EAAKC,KAAL,EAAoBM,IAApB,EAA8C;AAAA;;AACxE,MAAMC,KAAK,GAAGV,MAAM,CAACE,EAAD,CAApB;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACfW,IAAAA,KAAK,CAACC,OAAN,GAAgBT,EAAhB;AACA,GAFQ,CAAT;AAIA,SAAOJ,WAAW,CACjBG,YAAY,CAAC;AAAA,WAAaS,KAAK,CAACC,OAAN,OAAAD,KAAK,YAAlB;AAAA,GAAD,EAAsCP,KAAtC,CADK,EAEjBM,IAFiB,CAAlB;AAIA,CAXM;;GAAMD,W","sourcesContent":["import {DependencyList, useCallback, useEffect, useRef} from 'react';\r\n\r\nconst debounceImpl = (cb, delay: number) => {\r\n\tlet isDebounced = null;\r\n\treturn (...args) => {\r\n\t\tclearTimeout(isDebounced);\r\n\t\tisDebounced = setTimeout(() => cb(...args), delay);\r\n\t};\r\n};\r\n\r\nexport const useDebounce = (cb, delay: number, deps?: DependencyList) => {\r\n\tconst cbRef = useRef(cb);\r\n\r\n\tuseEffect(() => {\r\n\t\tcbRef.current = cb;\r\n\t});\r\n\r\n\treturn useCallback(\r\n\t\tdebounceImpl((...args) => cbRef.current(...args), delay),\r\n\t\tdeps\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
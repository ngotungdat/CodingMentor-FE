{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Teacher\\\\TeacherSalary\\\\salary-of-teacher-detail.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Tooltip, Modal } from 'antd';\nimport { numberWithCommas } from '~/utils/functions';\nimport { useWrap } from '~/context/wrap';\nimport { teacherSalaryApi } from '~/apiBase/staff-manage/teacher-salary';\nimport PowerTable from '~/components/PowerTable';\n\nconst SalaryOfTeacherDetail = ({\n  price,\n  record\n}) => {\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const defaultParams = {\n    pageIndex: 1,\n    pageSize: pageSize,\n    sortType: true,\n    SalaryOfTeacherID: record.ID\n  };\n\n  const getNum = num => {\n    return num < 10 ? '0' + num : num;\n  };\n\n  const getStrDate = date => {\n    const nDate = new Date(date);\n    return getNum(nDate.getDate()) + '-' + getNum(nDate.getMonth() + 1) + '-' + nDate.getFullYear();\n  };\n\n  const columns = [{\n    title: 'Giáo viên',\n    dataIndex: 'TeacherName',\n    render: (price, record) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 31\n    }, this)\n  }, {\n    title: 'Môn học',\n    dataIndex: 'CourseName',\n    render: (price, record) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 31\n    }, this)\n  }, {\n    title: 'Buổi học',\n    dataIndex: 'LessonNumber',\n    align: 'center',\n    render: (price, record) => /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        width: 70\n      },\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 31\n    }, this)\n  }, {\n    title: 'Ngày dạy',\n    dataIndex: 'Date',\n    align: 'center',\n    render: (price, record) => /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        width: 100\n      },\n      children: getStrDate(price)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 31\n    }, this)\n  }, {\n    title: 'Thời gian học',\n    dataIndex: 'StudyTimeName',\n    render: (price, record) => /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        width: 100\n      },\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 31\n    }, this)\n  }, {\n    title: 'Lương môn học',\n    dataIndex: 'SalaryOfLesson',\n    render: (price, record) => /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        width: 120\n      },\n      children: numberWithCommas(price)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 31\n    }, this)\n  }];\n\n  const getDataSource = async () => {\n    try {\n      let res = await teacherSalaryApi.getDetail(defaultParams);\n      console.log(res.data.data);\n\n      if (res.status == 200) {\n        setDataSource(res.data.data);\n      }\n\n      if (res.status == 204) {\n        setDataSource([]);\n      }\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    getDataSource();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"font-weight-primary btn btn-icon edit\",\n      onClick: () => {\n        setVisible(true);\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Xem chi ti\\u1EBFt\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"custom-btn-shit\",\n          children: numberWithCommas(price)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      width: 800,\n      title: \"Chi ti\\u1EBFt l\\u01B0\\u01A1ng gi\\xE1o vi\\xEAn\",\n      visible: visible,\n      onCancel: () => setVisible(false),\n      footer: false,\n      children: /*#__PURE__*/_jsxDEV(PowerTable, {\n        columns: columns,\n        dataSource: dataSource\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport default SalaryOfTeacherDetail;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Teacher/TeacherSalary/salary-of-teacher-detail.tsx"],"names":["React","useState","useEffect","Tooltip","Modal","numberWithCommas","useWrap","teacherSalaryApi","PowerTable","SalaryOfTeacherDetail","price","record","visible","setVisible","dataSource","setDataSource","showNoti","pageSize","defaultParams","pageIndex","sortType","SalaryOfTeacherID","ID","getNum","num","getStrDate","date","nDate","Date","getDate","getMonth","getFullYear","columns","title","dataIndex","render","align","width","getDataSource","res","getDetail","console","log","data","status","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,MAA/B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,gBAAT,QAAiC,uCAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAuB;AACpD,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACa,UAAD;AAAA,OAAaC;AAAb,MAA8Bd,QAAQ,CAAyB,EAAzB,CAA5C;AACA,QAAM;AAAEe,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBX,OAAO,EAAtC;AACA,QAAMY,aAAa,GAAG;AACrBC,IAAAA,SAAS,EAAE,CADU;AAErBF,IAAAA,QAAQ,EAAEA,QAFW;AAGrBG,IAAAA,QAAQ,EAAE,IAHW;AAIrBC,IAAAA,iBAAiB,EAAEV,MAAM,CAACW;AAJL,GAAtB;;AAOA,QAAMC,MAAM,GAAIC,GAAD,IAAS;AACvB,WAAOA,GAAG,GAAG,EAAN,GAAW,MAAMA,GAAjB,GAAuBA,GAA9B;AACA,GAFD;;AAIA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AAC5B,UAAMC,KAAK,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAd;AACA,WAAOH,MAAM,CAACI,KAAK,CAACE,OAAN,EAAD,CAAN,GAA0B,GAA1B,GAAgCN,MAAM,CAACI,KAAK,CAACG,QAAN,KAAmB,CAApB,CAAtC,GAA+D,GAA/D,GAAqEH,KAAK,CAACI,WAAN,EAA5E;AACA,GAHD;;AAKA,QAAMC,OAAO,GAAG,CACf;AACCC,IAAAA,KAAK,EAAE,WADR;AAECC,IAAAA,SAAS,EAAE,aAFZ;AAGCC,IAAAA,MAAM,EAAE,CAACzB,KAAD,EAAQC,MAAR,kBAAmB;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA,gBAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA;AAH5B,GADe,EAMf;AACCuB,IAAAA,KAAK,EAAE,SADR;AAECC,IAAAA,SAAS,EAAE,YAFZ;AAGCC,IAAAA,MAAM,EAAE,CAACzB,KAAD,EAAQC,MAAR,kBAAmB;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA,gBAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA;AAH5B,GANe,EAWf;AACCuB,IAAAA,KAAK,EAAE,UADR;AAECC,IAAAA,SAAS,EAAE,cAFZ;AAGCE,IAAAA,KAAK,EAAE,QAHR;AAICD,IAAAA,MAAM,EAAE,CAACzB,KAAD,EAAQC,MAAR,kBAAmB;AAAG,MAAA,KAAK,EAAE;AAAE0B,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA,gBAA0B3B;AAA1B;AAAA;AAAA;AAAA;AAAA;AAJ5B,GAXe,EAiBf;AACCuB,IAAAA,KAAK,EAAE,UADR;AAECC,IAAAA,SAAS,EAAE,MAFZ;AAGCE,IAAAA,KAAK,EAAE,QAHR;AAICD,IAAAA,MAAM,EAAE,CAACzB,KAAD,EAAQC,MAAR,kBAAmB;AAAG,MAAA,KAAK,EAAE;AAAE0B,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA,gBAA2BZ,UAAU,CAACf,KAAD;AAArC;AAAA;AAAA;AAAA;AAAA;AAJ5B,GAjBe,EAuBf;AACCuB,IAAAA,KAAK,EAAE,eADR;AAECC,IAAAA,SAAS,EAAE,eAFZ;AAGCC,IAAAA,MAAM,EAAE,CAACzB,KAAD,EAAQC,MAAR,kBAAmB;AAAG,MAAA,KAAK,EAAE;AAAE0B,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA,gBAA2B3B;AAA3B;AAAA;AAAA;AAAA;AAAA;AAH5B,GAvBe,EA4Bf;AACCuB,IAAAA,KAAK,EAAE,eADR;AAECC,IAAAA,SAAS,EAAE,gBAFZ;AAGCC,IAAAA,MAAM,EAAE,CAACzB,KAAD,EAAQC,MAAR,kBAAmB;AAAG,MAAA,KAAK,EAAE;AAAE0B,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA,gBAA2BhC,gBAAgB,CAACK,KAAD;AAA3C;AAAA;AAAA;AAAA;AAAA;AAH5B,GA5Be,CAAhB;;AAmCA,QAAM4B,aAAa,GAAG,YAAY;AACjC,QAAI;AACH,UAAIC,GAAG,GAAG,MAAMhC,gBAAgB,CAACiC,SAAjB,CAA2BtB,aAA3B,CAAhB;AACAuB,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAJ,CAASA,IAArB;;AACA,UAAIJ,GAAG,CAACK,MAAJ,IAAc,GAAlB,EAAuB;AACtB7B,QAAAA,aAAa,CAACwB,GAAG,CAACI,IAAJ,CAASA,IAAV,CAAb;AACA;;AACD,UAAIJ,GAAG,CAACK,MAAJ,IAAc,GAAlB,EAAuB;AACtB7B,QAAAA,aAAa,CAAC,EAAD,CAAb;AACA;AACD,KATD,CASE,OAAO8B,KAAP,EAAc,CAAE;AAClB,GAXD;;AAaA3C,EAAAA,SAAS,CAAC,MAAM;AACfoC,IAAAA,aAAa;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAA,4BACC;AACC,MAAA,SAAS,EAAC,uCADX;AAEC,MAAA,OAAO,EAAE,MAAM;AACdzB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,OAJF;AAAA,6BAMC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,mBAAf;AAAA,+BACC;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAA,oBAAqCR,gBAAgB,CAACK,KAAD;AAArD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAND;AAAA;AAAA;AAAA;AAAA,YADD,eAYC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE,GAAd;AAAmB,MAAA,KAAK,EAAC,+CAAzB;AAAoD,MAAA,OAAO,EAAEE,OAA7D;AAAsE,MAAA,QAAQ,EAAE,MAAMC,UAAU,CAAC,KAAD,CAAhG;AAAyG,MAAA,MAAM,EAAE,KAAjH;AAAA,6BACC,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEmB,OAArB;AAA8B,QAAA,UAAU,EAAElB;AAA1C;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAZD;AAAA,kBADD;AAkBA,CA1FD;;AA4FA,eAAeL,qBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Tooltip, Modal } from 'antd'\r\nimport { numberWithCommas } from '~/utils/functions'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { teacherSalaryApi } from '~/apiBase/staff-manage/teacher-salary'\r\nimport PowerTable from '~/components/PowerTable'\r\n\r\nconst SalaryOfTeacherDetail = ({ price, record }) => {\r\n\tconst [visible, setVisible] = useState(false)\r\n\tconst [dataSource, setDataSource] = useState<ITeacherSalaryDetail[]>([])\r\n\tconst { showNoti, pageSize } = useWrap()\r\n\tconst defaultParams = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: pageSize,\r\n\t\tsortType: true,\r\n\t\tSalaryOfTeacherID: record.ID\r\n\t}\r\n\r\n\tconst getNum = (num) => {\r\n\t\treturn num < 10 ? '0' + num : num\r\n\t}\r\n\r\n\tconst getStrDate = (date) => {\r\n\t\tconst nDate = new Date(date)\r\n\t\treturn getNum(nDate.getDate()) + '-' + getNum(nDate.getMonth() + 1) + '-' + nDate.getFullYear()\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Giáo viên',\r\n\t\t\tdataIndex: 'TeacherName',\r\n\t\t\trender: (price, record) => <p className=\"font-weight-primary\">{price}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Môn học',\r\n\t\t\tdataIndex: 'CourseName',\r\n\t\t\trender: (price, record) => <p className=\"font-weight-primary\">{price}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Buổi học',\r\n\t\t\tdataIndex: 'LessonNumber',\r\n\t\t\talign: 'center',\r\n\t\t\trender: (price, record) => <p style={{ width: 70 }}>{price}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày dạy',\r\n\t\t\tdataIndex: 'Date',\r\n\t\t\talign: 'center',\r\n\t\t\trender: (price, record) => <p style={{ width: 100 }}>{getStrDate(price)}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Thời gian học',\r\n\t\t\tdataIndex: 'StudyTimeName',\r\n\t\t\trender: (price, record) => <p style={{ width: 100 }}>{price}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Lương môn học',\r\n\t\t\tdataIndex: 'SalaryOfLesson',\r\n\t\t\trender: (price, record) => <p style={{ width: 120 }}>{numberWithCommas(price)}</p>\r\n\t\t}\r\n\t]\r\n\r\n\tconst getDataSource = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await teacherSalaryApi.getDetail(defaultParams)\r\n\t\t\tconsole.log(res.data.data)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetDataSource(res.data.data)\r\n\t\t\t}\r\n\t\t\tif (res.status == 204) {\r\n\t\t\t\tsetDataSource([])\r\n\t\t\t}\r\n\t\t} catch (error) {}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"font-weight-primary btn btn-icon edit\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetVisible(true)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Tooltip title=\"Xem chi tiết\">\r\n\t\t\t\t\t<button className=\"custom-btn-shit\">{numberWithCommas(price)}</button>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</button>\r\n\r\n\t\t\t<Modal width={800} title=\"Chi tiết lương giáo viên\" visible={visible} onCancel={() => setVisible(false)} footer={false}>\r\n\t\t\t\t<PowerTable columns={columns} dataSource={dataSource}></PowerTable>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SalaryOfTeacherDetail\r\n"]},"metadata":{},"sourceType":"module"}
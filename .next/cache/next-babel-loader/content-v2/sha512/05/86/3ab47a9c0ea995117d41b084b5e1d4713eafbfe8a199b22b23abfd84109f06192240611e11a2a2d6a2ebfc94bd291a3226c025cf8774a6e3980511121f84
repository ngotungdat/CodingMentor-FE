{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Dashboard\\\\StatisticalRateVideoCourse.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Skeleton } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total';\nimport { dataPie } from '~/lib/dashboard/data';\nimport RateChart from './RateChart';\n\nvar StatisticalRate = function StatisticalRate() {\n  _s();\n\n  var _useState = useState([]),\n      statisticalRateVideoCourse = _useState[0],\n      setStatisticalRateVideoCourse = _useState[1];\n\n  var _useState2 = useState(false),\n      inView = _useState2[0],\n      setInView = _useState2[1];\n\n  var _useState3 = useState({\n    status: '',\n    loading: false\n  }),\n      isLoading = _useState3[0],\n      setIsLoading = _useState3[1];\n\n  var _useState4 = useState({\n    branch: 0,\n    StartYear: 2017,\n    EndYear: 2022,\n    Year: new Date().getFullYear(),\n    Month: new Date().getMonth() + 1\n  }),\n      todoApi = _useState4[0],\n      setTodoApi = _useState4[1];\n\n  var getStatisticalRateVideoCourse = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading({\n                status: 'GET_STAT_RATE',\n                loading: true\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return statisticalApi.getStatisticalRateVideoCourse();\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                setStatisticalRateVideoCourse(res.data.data);\n              }\n\n              if (res.status === 204) {\n                setStatisticalRateVideoCourse([]);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 11:\n              _context.prev = 11;\n              setIsLoading({\n                status: 'GET_STAT_RATE',\n                loading: false\n              });\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9, 11, 14]]);\n    }));\n\n    return function getStatisticalRateVideoCourse() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getStatisticalRateVideoCourse();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading.status === 'GET_STAT_RATE' && isLoading.loading == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-xl-6 col-12\",\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        active: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-xl-6 col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-comment\",\n        children: /*#__PURE__*/_jsxDEV(RateChart, {\n          statisticalRate: statisticalRateVideoCourse,\n          dataPie: dataPie,\n          isLoading: isLoading,\n          type: \"VIDEO_COURSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false);\n};\n\n_s(StatisticalRate, \"+B8NWXM6cyEsHEUycU+qOo7JJV0=\");\n\n_c = StatisticalRate;\nexport default StatisticalRate;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatisticalRate\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Dashboard/StatisticalRateVideoCourse.tsx"],"names":["Skeleton","React","useState","useEffect","statisticalApi","dataPie","RateChart","StatisticalRate","statisticalRateVideoCourse","setStatisticalRateVideoCourse","inView","setInView","status","loading","isLoading","setIsLoading","branch","StartYear","EndYear","Year","Date","getFullYear","Month","getMonth","todoApi","setTodoApi","getStatisticalRateVideoCourse","res","data"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,MAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAAA,kBACuCL,QAAQ,CAAc,EAAd,CAD/C;AAAA,MACtBM,0BADsB;AAAA,MACMC,6BADN;;AAAA,mBAEDP,QAAQ,CAAC,KAAD,CAFP;AAAA,MAEtBQ,MAFsB;AAAA,MAEdC,SAFc;;AAAA,mBAGKT,QAAQ,CAAC;AAC1CU,IAAAA,MAAM,EAAE,EADkC;AAE1CC,IAAAA,OAAO,EAAE;AAFiC,GAAD,CAHb;AAAA,MAGtBC,SAHsB;AAAA,MAGXC,YAHW;;AAAA,mBAOCb,QAAQ,CAAC;AACtCc,IAAAA,MAAM,EAAE,CAD8B;AAEtCC,IAAAA,SAAS,EAAE,IAF2B;AAGtCC,IAAAA,OAAO,EAAE,IAH6B;AAItCC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAJgC;AAKtCC,IAAAA,KAAK,EAAE,IAAIF,IAAJ,GAAWG,QAAX,KAAwB;AALO,GAAD,CAPT;AAAA,MAOtBC,OAPsB;AAAA,MAObC,UAPa;;AAe7B,MAAMC,6BAA6B;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACrCX,cAAAA,YAAY,CAAC;AAAEH,gBAAAA,MAAM,EAAE,eAAV;AAA2BC,gBAAAA,OAAO,EAAE;AAApC,eAAD,CAAZ;AADqC;AAAA;AAAA,qBAGpBT,cAAc,CAACsB,6BAAf,EAHoB;;AAAA;AAGhCC,cAAAA,GAHgC;;AAIpC,kBAAIA,GAAG,CAACf,MAAJ,KAAe,GAAnB,EAAwB;AACvBH,gBAAAA,6BAA6B,CAACkB,GAAG,CAACC,IAAJ,CAASA,IAAV,CAA7B;AACA;;AACD,kBAAID,GAAG,CAACf,MAAJ,KAAe,GAAnB,EAAwB;AACvBH,gBAAAA,6BAA6B,CAAC,EAAD,CAA7B;AACA;;AATmC;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAYpCM,cAAAA,YAAY,CAAC;AAAEH,gBAAAA,MAAM,EAAE,eAAV;AAA2BC,gBAAAA,OAAO,EAAE;AAApC,eAAD,CAAZ;AAZoC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAA7Ba,6BAA6B;AAAA;AAAA;AAAA,KAAnC;;AAgBAvB,EAAAA,SAAS,CAAC,YAAM;AACfuB,IAAAA,6BAA6B;AAC7B,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAA,cACEZ,SAAS,CAACF,MAAV,KAAqB,eAArB,IAAwCE,SAAS,CAACD,OAAV,IAAqB,IAA7D,gBACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACC,QAAC,QAAD;AAAU,QAAA,MAAM;AAAhB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,aADA,gBAKA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACC,QAAC,SAAD;AAAW,UAAA,eAAe,EAAEL,0BAA5B;AAAwD,UAAA,OAAO,EAAEH,OAAjE;AAA0E,UAAA,SAAS,EAAES,SAArF;AAAgG,UAAA,IAAI,EAAC;AAArG;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AANF,mBADD;AAeA,CAlDD;;GAAMP,e;;KAAAA,e;AAoDN,eAAeA,eAAf","sourcesContent":["import { Skeleton } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total'\r\nimport { dataPie } from '~/lib/dashboard/data'\r\nimport RateChart from './RateChart'\r\n\r\nconst StatisticalRate = () => {\r\n\tconst [statisticalRateVideoCourse, setStatisticalRateVideoCourse] = useState<IStatRate[]>([])\r\n\tconst [inView, setInView] = useState(false)\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\tstatus: '',\r\n\t\tloading: false\r\n\t})\r\n\tconst [todoApi, setTodoApi] = useState({\r\n\t\tbranch: 0,\r\n\t\tStartYear: 2017,\r\n\t\tEndYear: 2022,\r\n\t\tYear: new Date().getFullYear(),\r\n\t\tMonth: new Date().getMonth() + 1\r\n\t})\r\n\r\n\tconst getStatisticalRateVideoCourse = async () => {\r\n\t\tsetIsLoading({ status: 'GET_STAT_RATE', loading: true })\r\n\t\ttry {\r\n\t\t\tlet res = await statisticalApi.getStatisticalRateVideoCourse()\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetStatisticalRateVideoCourse(res.data.data)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetStatisticalRateVideoCourse([])\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ status: 'GET_STAT_RATE', loading: false })\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetStatisticalRateVideoCourse()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading.status === 'GET_STAT_RATE' && isLoading.loading == true ? (\r\n\t\t\t\t<div className=\"col-xl-6 col-12\">\r\n\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"col-xl-6 col-12\">\r\n\t\t\t\t\t<div className=\"chart-comment\">\r\n\t\t\t\t\t\t<RateChart statisticalRate={statisticalRateVideoCourse} dataPie={dataPie} isLoading={isLoading} type=\"VIDEO_COURSE\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default StatisticalRate\r\n"]},"metadata":{},"sourceType":"module"}
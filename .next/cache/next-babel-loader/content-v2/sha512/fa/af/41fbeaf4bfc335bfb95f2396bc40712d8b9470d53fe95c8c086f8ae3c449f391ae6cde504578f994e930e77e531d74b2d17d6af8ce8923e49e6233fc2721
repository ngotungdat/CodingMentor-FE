{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport NextAuth from 'next-auth';\nimport Providers from 'next-auth/providers';\nimport { SocialLogin, login, loginByDev } from '~/services/auth';\nconst options = {\n  providers: [Providers.Credentials({\n    id: 'credentials-signin',\n    name: 'Tài khoản',\n    authorize: async credentials => {\n      try {\n        const rs = credentials !== null && credentials !== void 0 && credentials.isSocial ? await SocialLogin(credentials) : await login(credentials);\n        return credentials !== null && credentials !== void 0 && credentials.isSocial ? Promise.resolve(rs) : Promise.resolve(rs.data);\n      } catch (error) {\n        return Promise.reject(new Error(encodeURIComponent(JSON.stringify(error))));\n      }\n    }\n  }), Providers.Credentials({\n    id: 'credentials-dev-signin',\n    name: 'Dev signin',\n    authorize: async credentials => {\n      try {\n        const rs = await loginByDev(credentials);\n        return Promise.resolve(rs.data);\n      } catch (error) {\n        return Promise.reject(new Error(encodeURIComponent(JSON.stringify(error))));\n      }\n    }\n  })],\n  session: {\n    jwt: true\n  },\n  jwt: {\n    secret: 'YzQzYzg0MzljNzE5ODk0ZDQwZGQ0NGNhOGI5MmU4OThlNmVlODZlYTc0M2Y5MjFjNDdmYWI2ZmJmZjFjNjBjMQ==',\n    encryption: true\n  },\n  callbacks: {\n    signIn: async (user, account, profile) => {\n      return Promise.resolve(true);\n    },\n    session: async (session, token) => {\n      if (token) {\n        session.accessToken = token.token;\n        session.user = _objectSpread({}, token.data);\n      }\n\n      return Promise.resolve(session);\n    },\n    jwt: async (token, user, account, profile, isNewUser) => {\n      const isSignIn = user ? true : false;\n\n      if (isSignIn) {\n        token.auth_time = Math.floor(Date.now() / 1000);\n      }\n\n      if ((account === null || account === void 0 ? void 0 : account.type) === 'credentials') {\n        const newToken = _objectSpread(_objectSpread(_objectSpread({}, token), user), {}, {\n          isNewUser\n        });\n\n        return Promise.resolve(newToken);\n      }\n\n      return Promise.resolve(token);\n    },\n    redirect: async (url, baseUrl) => {\n      return url.startsWith(baseUrl) ? Promise.resolve(baseUrl) : Promise.resolve(baseUrl);\n    }\n  },\n  pages: {\n    signIn: '/auth/signin',\n    signOut: '/auth/signin',\n    error: '/auth/signin',\n    newUser: null\n  },\n  debug: true\n};\n\nconst Auth = (req, res) => NextAuth(req, res, options);\n\nexport default Auth;","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/pages/api/auth/[...nextauth].tsx"],"names":["NextAuth","Providers","SocialLogin","login","loginByDev","options","providers","Credentials","id","name","authorize","credentials","rs","isSocial","Promise","resolve","data","error","reject","Error","encodeURIComponent","JSON","stringify","session","jwt","secret","encryption","callbacks","signIn","user","account","profile","token","accessToken","isNewUser","isSignIn","auth_time","Math","floor","Date","now","type","newToken","redirect","url","baseUrl","startsWith","pages","signOut","newUser","debug","Auth","req","res"],"mappings":"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","sourcesContent":["import NextAuth from 'next-auth'\r\nimport Providers from 'next-auth/providers'\r\nimport { SocialLogin, login, loginByDev } from '~/services/auth'\r\n\r\nconst options = {\r\n\tproviders: [\r\n\t\tProviders.Credentials({\r\n\t\t\tid: 'credentials-signin',\r\n\t\t\tname: 'Tài khoản',\r\n\t\t\tauthorize: async (credentials: any) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst rs: any = credentials?.isSocial ? await SocialLogin(credentials) : await login(credentials)\r\n\t\t\t\t\treturn credentials?.isSocial ? Promise.resolve(rs) : Promise.resolve(rs.data)\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\treturn Promise.reject(new Error(encodeURIComponent(JSON.stringify(error))))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}),\r\n\t\tProviders.Credentials({\r\n\t\t\tid: 'credentials-dev-signin',\r\n\t\t\tname: 'Dev signin',\r\n\t\t\tauthorize: async (credentials: any) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst rs: any = await loginByDev(credentials)\r\n\t\t\t\t\treturn Promise.resolve(rs.data)\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\treturn Promise.reject(new Error(encodeURIComponent(JSON.stringify(error))))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t],\r\n\r\n\tsession: {\r\n\t\tjwt: true\r\n\t},\r\n\r\n\tjwt: {\r\n\t\tsecret: 'YzQzYzg0MzljNzE5ODk0ZDQwZGQ0NGNhOGI5MmU4OThlNmVlODZlYTc0M2Y5MjFjNDdmYWI2ZmJmZjFjNjBjMQ==',\r\n\t\tencryption: true\r\n\t},\r\n\r\n\tcallbacks: {\r\n\t\tsignIn: async (user, account, profile) => {\r\n\t\t\treturn Promise.resolve(true)\r\n\t\t},\r\n\t\tsession: async (session, token) => {\r\n\t\t\tif (token) {\r\n\t\t\t\tsession.accessToken = token.token\r\n\t\t\t\tsession.user = { ...token.data }\r\n\t\t\t}\r\n\t\t\treturn Promise.resolve(session)\r\n\t\t},\r\n\t\tjwt: async (token, user, account, profile, isNewUser) => {\r\n\t\t\tconst isSignIn = user ? true : false\r\n\t\t\tif (isSignIn) {\r\n\t\t\t\ttoken.auth_time = Math.floor(Date.now() / 1000)\r\n\t\t\t}\r\n\t\t\tif (account?.type === 'credentials') {\r\n\t\t\t\tconst newToken = {\r\n\t\t\t\t\t...token,\r\n\t\t\t\t\t...user,\r\n\t\t\t\t\tisNewUser\r\n\t\t\t\t}\r\n\t\t\t\treturn Promise.resolve(newToken)\r\n\t\t\t}\r\n\t\t\treturn Promise.resolve(token)\r\n\t\t},\r\n\t\tredirect: async (url, baseUrl) => {\r\n\t\t\treturn url.startsWith(baseUrl) ? Promise.resolve(baseUrl) : Promise.resolve(baseUrl)\r\n\t\t}\r\n\t},\r\n\r\n\tpages: {\r\n\t\tsignIn: '/auth/signin',\r\n\t\tsignOut: '/auth/signin',\r\n\t\terror: '/auth/signin',\r\n\t\tnewUser: null\r\n\t},\r\n\r\n\tdebug: true\r\n}\r\n\r\nconst Auth = (req, res) => NextAuth(req, res, options)\r\n\r\nexport default Auth\r\n"]},"metadata":{},"sourceType":"module"}
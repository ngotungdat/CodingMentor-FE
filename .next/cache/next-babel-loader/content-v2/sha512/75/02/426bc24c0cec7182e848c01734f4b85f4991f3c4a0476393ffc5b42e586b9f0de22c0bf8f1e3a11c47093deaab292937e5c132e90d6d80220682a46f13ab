{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Teacher\\\\TeacherProfile.tsx\";\nimport { Card, Checkbox, Spin, Table, Tabs } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { teacherApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport ConfirmAssignModal from './Teacher/ConfirmAssignModal';\nconst {\n  TabPane\n} = Tabs;\n\nconst TeacherProfile = props => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      isSubmitting,\n      errors,\n      isSubmitted\n    }\n  } = useForm();\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    dataUser,\n    isLoading,\n    updateTeacherID,\n    userID,\n    dataSubject,\n    updateTeacherForSubject,\n    onFetchData\n  } = props;\n  const onSubmit = handleSubmit(data => {\n    console.log('Data submit:', data);\n\n    if (Object.keys(data).length === 1) {\n      showNoti('danger', 'Bạn chưa chỉnh sửa');\n    } else {\n      let res = updateTeacherID(data);\n      res.then(function (rs) {\n        rs && rs.status == 200;\n      });\n    }\n  });\n  const columns = [{\n    title: 'Tên Chương trình học',\n    width: 200,\n    dataIndex: 'ProgramName',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Trạng thái',\n    width: 150,\n    dataIndex: 'IsSelected',\n    render: (text, data) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: data.IsSelected ? 'tag green' : 'tag red',\n      children: data.IsSelected ? 'Dạy tất cả' : 'Không được dạy tất cả'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, {\n    title: 'Thao tác',\n    width: 100,\n    render: (text, data) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ConfirmAssignModal, {\n          data: data,\n          _onSubmit: info => handleSubmitAssignment(info),\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this)\n      }, void 0, false);\n    }\n  }];\n\n  const handleSubmitAssignment = async info => {\n    setLoading({\n      type: 'ASSIGN_TEACHER',\n      status: true\n    });\n\n    try {\n      let res = await teacherApi.updateTeacherForAllSubject({\n        teacherId: userID,\n        programId: info.key,\n        IsSelected: info.IsSelected ? false : true\n      });\n\n      if (res.status === 200) {\n        showNoti('success', 'Thay đổi thành công!');\n        onFetchData && onFetchData();\n        return true;\n      }\n\n      if (res.status === 204) {\n        showNoti('danger', 'Chưa có môn học trong chương trình này!');\n        onFetchData && onFetchData();\n        return true;\n      }\n    } catch (error) {} finally {\n      setLoading({\n        type: 'ASSIGN_TEACHER',\n        status: false\n      });\n    }\n  };\n\n  const expandedRowRender = record => {\n    const columns = [];\n    const data = [{\n      Subject: 'Subject'\n    }];\n\n    for (let i = 0; i < Object.keys(record.Subject).length; i++) {\n      columns.push({\n        key: record.Subject[i].SubjectID,\n        title: record.Subject[i].SubjectName,\n        dataIndex: 'Subject',\n        render: () => /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: record.Subject[i].SubjectID,\n          checked: record.Subject[i].IsSelected ? true : false,\n          onChange: onChangeCheckBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, this)\n      });\n    }\n\n    const onChangeCheckBox = e => {\n      // console.log(`checked = ${e.target.value}`);\n      const data = {\n        UserInformationID: userID,\n        SubjectID: e.target.value\n      };\n      let res = updateTeacherForSubject(data);\n      res.then(function (rs) {\n        rs && rs.status == 200;\n      });\n    };\n\n    if (Object.keys(record.Subject).length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mini-table\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          dataSource: data,\n          pagination: false,\n          className: \"tb-expand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ch\\u01B0a c\\xF3 m\\xF4n h\\u1ECDc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this);\n    }\n  };\n\n  useEffect(() => {\n    setValue('UserInformationID', userID);\n  }, []);\n\n  if (isLoading.status == true) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"space-top-card text-center\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"space-top-card\",\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          defaultActiveKey: \"1\",\n          children: /*#__PURE__*/_jsxDEV(TabPane, {\n            tab: \"Th\\xF4ng tin l\\u1EDBp h\\u1ECDc\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-8 col-12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"wrap-table table-expand\",\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    className: \"teacher-detail-table\",\n                    dataSource: dataSubject,\n                    columns: columns,\n                    size: \"middle\",\n                    scroll: {\n                      x: 600\n                    },\n                    expandable: {\n                      expandedRowRender: record => expandedRowRender(record)\n                    },\n                    pagination: false\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 8\n            }, this)\n          }, \"2\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  }\n};\n\nexport default TeacherProfile;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Teacher/TeacherProfile.tsx"],"names":["Card","Checkbox","Spin","Table","Tabs","React","useEffect","useState","useForm","teacherApi","useWrap","ConfirmAssignModal","TabPane","TeacherProfile","props","loading","setLoading","type","status","register","handleSubmit","setValue","formState","isSubmitting","errors","isSubmitted","showNoti","dataUser","isLoading","updateTeacherID","userID","dataSubject","updateTeacherForSubject","onFetchData","onSubmit","data","console","log","Object","keys","length","res","then","rs","columns","title","width","dataIndex","render","text","IsSelected","info","handleSubmitAssignment","updateTeacherForAllSubject","teacherId","programId","key","error","expandedRowRender","record","Subject","i","push","SubjectID","SubjectName","onChangeCheckBox","e","UserInformationID","target","value","x"],"mappings":"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","sourcesContent":["import { Card, Checkbox, Spin, Table, Tabs } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { teacherApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\nimport ConfirmAssignModal from './Teacher/ConfirmAssignModal'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nconst TeacherProfile = (props) => {\r\n\tconst [loading, setLoading] = useState({ type: '', status: false })\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tsetValue,\r\n\t\tformState: { isSubmitting, errors, isSubmitted }\r\n\t} = useForm()\r\n\tconst { showNoti } = useWrap()\r\n\r\n\tconst { dataUser, isLoading, updateTeacherID, userID, dataSubject, updateTeacherForSubject, onFetchData } = props\r\n\r\n\tconst onSubmit = handleSubmit((data) => {\r\n\t\tconsole.log('Data submit:', data)\r\n\t\tif (Object.keys(data).length === 1) {\r\n\t\t\tshowNoti('danger', 'Bạn chưa chỉnh sửa')\r\n\t\t} else {\r\n\t\t\tlet res = updateTeacherID(data)\r\n\t\t\tres.then(function (rs: any) {\r\n\t\t\t\trs && rs.status == 200\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Tên Chương trình học',\r\n\t\t\twidth: 200,\r\n\t\t\tdataIndex: 'ProgramName',\r\n\t\t\trender: (text) => <p className=\"font-weight-primary\">{text}</p>\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\twidth: 150,\r\n\t\t\tdataIndex: 'IsSelected',\r\n\t\t\trender: (text, data) => (\r\n\t\t\t\t<p className={data.IsSelected ? 'tag green' : 'tag red'}>{data.IsSelected ? 'Dạy tất cả' : 'Không được dạy tất cả'}</p>\r\n\t\t\t)\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\ttitle: 'Thao tác',\r\n\t\t\twidth: 100,\r\n\t\t\trender: (text, data) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<ConfirmAssignModal data={data} _onSubmit={(info) => handleSubmitAssignment(info)} loading={loading} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n\r\n\tconst handleSubmitAssignment = async (info) => {\r\n\t\tsetLoading({ type: 'ASSIGN_TEACHER', status: true })\r\n\t\ttry {\r\n\t\t\tlet res = await teacherApi.updateTeacherForAllSubject({\r\n\t\t\t\tteacherId: userID,\r\n\t\t\t\tprogramId: info.key,\r\n\t\t\t\tIsSelected: info.IsSelected ? false : true\r\n\t\t\t})\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tshowNoti('success', 'Thay đổi thành công!')\r\n\t\t\t\tonFetchData && onFetchData()\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', 'Chưa có môn học trong chương trình này!')\r\n\t\t\t\tonFetchData && onFetchData()\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetLoading({ type: 'ASSIGN_TEACHER', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\tconst expandedRowRender = (record) => {\r\n\t\tconst columns = []\r\n\t\tconst data = [\r\n\t\t\t{\r\n\t\t\t\tSubject: 'Subject'\r\n\t\t\t}\r\n\t\t]\r\n\r\n\t\tfor (let i = 0; i < Object.keys(record.Subject).length; i++) {\r\n\t\t\tcolumns.push({\r\n\t\t\t\tkey: record.Subject[i].SubjectID,\r\n\t\t\t\ttitle: record.Subject[i].SubjectName,\r\n\t\t\t\tdataIndex: 'Subject',\r\n\t\t\t\trender: () => (\r\n\t\t\t\t\t<Checkbox value={record.Subject[i].SubjectID} checked={record.Subject[i].IsSelected ? true : false} onChange={onChangeCheckBox} />\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst onChangeCheckBox = (e) => {\r\n\t\t\t// console.log(`checked = ${e.target.value}`);\r\n\t\t\tconst data = {\r\n\t\t\t\tUserInformationID: userID,\r\n\t\t\t\tSubjectID: e.target.value\r\n\t\t\t}\r\n\t\t\tlet res = updateTeacherForSubject(data)\r\n\t\t\tres.then(function (rs: any) {\r\n\t\t\t\trs && rs.status == 200\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (Object.keys(record.Subject).length) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"mini-table\">\r\n\t\t\t\t\t<Table columns={columns} dataSource={data} pagination={false} className=\"tb-expand\" />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn <p>Chưa có môn học</p>\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetValue('UserInformationID', userID)\r\n\t}, [])\r\n\r\n\tif (isLoading.status == true) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Card className=\"space-top-card text-center\">\r\n\t\t\t\t\t<Spin></Spin>\r\n\t\t\t\t</Card>\r\n\t\t\t</>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Card className=\"space-top-card\">\r\n\t\t\t\t\t<Tabs defaultActiveKey=\"1\">\r\n\t\t\t\t\t\t{/* <TabPane tab=\"Tài khoản nhân viên\" key=\"1\">\r\n              <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-8 col-12\">\r\n                  <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-4 col-12\">\r\n                        <Form.Item\r\n                          label=\"Họ và tên\"\r\n                          name=\"họ và tên\"\r\n                          initialValue={dataUser?.FullNameUnicode}\r\n                        >\r\n                          <Input\r\n                            className=\"style-input\"\r\n                            size=\"large\"\r\n                            onChange={(e) =>\r\n                              setValue(\"FullNameUnicode\", e.target.value)\r\n                            }\r\n                          />\r\n                        </Form.Item>\r\n                      </div>\r\n                      <div className=\"col-md-4 col-12\">\r\n                        <Form.Item\r\n                          label=\"Giới tính\"\r\n                          name=\"Giới tính\"\r\n                          initialValue={dataUser?.Gender == 0 ? \"Nữ\" : \"Nam\"}\r\n                        >\r\n                          <Select\r\n                            className=\"style-input\"\r\n                            size=\"large\"\r\n                            onChange={(value) => setValue(\"Gender\", value)}\r\n                          >\r\n                            <Option value={0}>Nữ</Option>\r\n                            <Option value={1}>Nam</Option>\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </div>\r\n                      <div className=\"col-md-4 col-12\">\r\n                        <Form.Item\r\n                          label=\"Ngày sinh\"\r\n                          name=\"DOB\"\r\n                          initialValue={moment(dataUser?.DOB)}\r\n                        >\r\n                          <DatePicker\r\n                            className=\"style-input\"\r\n                            format={dateFormat}\r\n                            onChange={(date, dateString) =>\r\n                              setValue(\"DOB\", dateString)\r\n                            }\r\n                          ></DatePicker>\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6 col-12\">\r\n                        <Form.Item\r\n                          label=\"Địa chỉ email\"\r\n                          name=\"Địa chỉ email\"\r\n                          initialValue={dataUser?.Email}\r\n                        >\r\n                          <Input\r\n                            className=\"style-input\"\r\n                            size=\"large\"\r\n                            onChange={(e) => setValue(\"Email\", e.target.value)}\r\n                          />\r\n                        </Form.Item>\r\n                      </div>\r\n                      <div className=\"col-md-6 col-12\">\r\n                        <Form.Item\r\n                          label=\"Số điện thoại\"\r\n                          name=\"Số điện thoại\"\r\n                          initialValue={dataUser?.Mobile}\r\n                        >\r\n                          <Input\r\n                            className=\"style-input\"\r\n                            size=\"large\"\r\n                            onChange={(e) => setValue(\"Mobile\", e.target.value)}\r\n                          />\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12\">\r\n                        <Form.Item\r\n                          label=\"Địa chỉ\"\r\n                          name=\"Địa chỉ\"\r\n                          initialValue={dataUser?.Address}\r\n                        >\r\n                          <Input\r\n                            className=\"style-input\"\r\n                            size=\"large\"\r\n                            onChange={(e) =>\r\n                              setValue(\"Address\", e.target.value)\r\n                            }\r\n                          />\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12\">\r\n                        <Form.Item label=\"Hình đại diện\">\r\n                          <ImgCrop grid>\r\n                            <AvatarBase\r\n                              imageUrl={dataUser?.Avatar}\r\n                              getValue={(value) => setValue(\"Avatar\", value)}\r\n                            />\r\n                          </ImgCrop>\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12 d-flex justify-content-center\">\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                          Cập nhật thông tin\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </TabPane> */}\r\n\t\t\t\t\t\t<TabPane tab=\"Thông tin lớp học\" key=\"2\">\r\n\t\t\t\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-8 col-12\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"wrap-table table-expand\">\r\n\t\t\t\t\t\t\t\t\t\t<Table\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"teacher-detail-table\"\r\n\t\t\t\t\t\t\t\t\t\t\tdataSource={dataSubject}\r\n\t\t\t\t\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"middle\"\r\n\t\t\t\t\t\t\t\t\t\t\tscroll={{ x: 600 }}\r\n\t\t\t\t\t\t\t\t\t\t\texpandable={{\r\n\t\t\t\t\t\t\t\t\t\t\t\texpandedRowRender: (record) => expandedRowRender(record)\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tpagination={false}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</Card>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default TeacherProfile\r\n"]},"metadata":{},"sourceType":"module"}
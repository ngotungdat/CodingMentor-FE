{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Profile\\\\ProfileCustomer\\\\InfoStudyCard\\\\InfoStudyCard.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { programApi, studyRoleApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport update from 'immutability-helper';\nimport { Card, Table } from 'antd';\nimport AddStudyRole from './AddStudyRole';\nconst type = 'DraggableBodyRow';\n\nconst DraggableBodyRow = (_ref) => {\n  let {\n    index,\n    moveRow,\n    className,\n    style\n  } = _ref,\n      restProps = _objectWithoutProperties(_ref, [\"index\", \"moveRow\", \"className\", \"style\"]);\n\n  const ref = useRef();\n  const [{\n    isOver,\n    dropClassName\n  }, drop] = useDrop({\n    accept: type,\n    collect: monitor => {\n      //@ts-ignore\n      const {\n        index: dragIndex\n      } = monitor.getItem() || {};\n\n      if (dragIndex === index) {\n        return {};\n      }\n\n      return {\n        isOver: monitor.isOver(),\n        dropClassName: dragIndex < index ? ' drop-over-downward' : ' drop-over-upward'\n      };\n    },\n    drop: item => {\n      //@ts-ignore\n      moveRow(item.index, index);\n    }\n  });\n  const [, drag] = useDrag({\n    type,\n    item: {\n      index\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  drop(drag(ref));\n  return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread({\n    ref: ref,\n    className: `${className}${isOver ? dropClassName : ''}`,\n    style: _objectSpread({\n      cursor: 'move'\n    }, style)\n  }, restProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\nconst InfoStudyCard = props => {\n  const {\n    studentID\n  } = props;\n  const {\n    0: dataProgram,\n    1: setDataProgram\n  } = useState([]);\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: 1,\n    StudentID: studentID\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi);\n\n  const getDataProgram = async () => {\n    try {\n      let res = await programApi.getAll({\n        selectAll: true\n      });\n\n      if (res.status == 200) {\n        let newData = res.data.data.map(item => ({\n          title: item.ProgramName,\n          value: item.ID\n        }));\n        setDataProgram(newData);\n      }\n\n      res.status == 204 && setDataProgram([]);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const getDataSource = async () => {\n    setIsLoading(true);\n\n    try {\n      let res = await studyRoleApi.getAll(todoApi);\n      res.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow));\n      res.status == 204 && setDataSource([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const columns = [{\n    title: 'Chương trình',\n    dataIndex: 'ProgramName',\n    key: 'programname'\n  }, {\n    title: 'Ghi chú',\n    dataIndex: 'Note',\n    key: 'note'\n  }, {\n    title: 'Ngày tạo',\n    dataIndex: 'CreatedOn',\n    key: 'createdon'\n  }, {\n    title: 'Tạo bởi',\n    dataIndex: 'CreatedBy',\n    key: 'createdby'\n  }];\n\n  const updatePosition = async (indexFirst, indexAfter) => {\n    let dataSubmit = {\n      IDOne: indexFirst,\n      IDTwo: indexAfter\n    };\n    setIsLoading(true);\n\n    try {\n      let res = await studyRoleApi.changePosition(dataSubmit);\n\n      if (res.status === 200) {\n        showNoti('success', 'Đổi vị trí thành công');\n        setTodoApi(_objectSpread({}, todoApi));\n      } else {\n        setIsLoading(false);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n      setIsLoading(false);\n    }\n  }; // const [data, setData] = useState(dataSource);\n\n\n  const components = {\n    body: {\n      row: DraggableBodyRow\n    }\n  };\n  const moveRow = useCallback((dragIndex, hoverIndex) => {\n    const dragRow = dataSource[dragIndex];\n    const dragID = dataSource[dragIndex].ID;\n    const hoverID = dataSource[hoverIndex].ID;\n    updatePosition(dragID, hoverID);\n    setDataSource(update(dataSource, {\n      $splice: [[dragIndex, 1], [hoverIndex, 0, dragRow]]\n    }));\n  }, [dataSource]);\n\n  const onFetchData = () => {\n    setTodoApi(_objectSpread({}, todoApi));\n    setCurrentPage(1);\n  };\n\n  useEffect(() => {\n    getDataSource();\n\n    if (dataProgram.length == 0) {\n      getDataProgram();\n    }\n  }, [todoApi]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-table\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        extra: /*#__PURE__*/_jsxDEV(AddStudyRole, {\n          studentID: studentID,\n          dataProgram: dataProgram,\n          onFetchData: () => onFetchData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 18\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(DndProvider, {\n          backend: HTML5Backend,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table-drop\",\n            columns: columns,\n            dataSource: dataSource,\n            components: components //@ts-ignore\n            ,\n            onRow: (record, index) => ({\n              index,\n              moveRow,\n              record\n            }),\n            loading: isLoading,\n            size: \"middle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nexport default InfoStudyCard;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Profile/ProfileCustomer/InfoStudyCard/InfoStudyCard.tsx"],"names":["React","useState","useRef","useCallback","useEffect","programApi","studyRoleApi","useWrap","DndProvider","useDrag","useDrop","HTML5Backend","update","Card","Table","AddStudyRole","type","DraggableBodyRow","index","moveRow","className","style","restProps","ref","isOver","dropClassName","drop","accept","collect","monitor","dragIndex","getItem","item","drag","isDragging","cursor","InfoStudyCard","props","studentID","dataProgram","setDataProgram","dataSource","setDataSource","isLoading","setIsLoading","showNoti","pageSize","totalPage","setTotalPage","currentPage","setCurrentPage","listTodoApi","pageIndex","StudentID","todoApi","setTodoApi","getDataProgram","res","getAll","selectAll","status","newData","data","map","title","ProgramName","value","ID","error","console","log","message","getDataSource","totalRow","columns","dataIndex","key","updatePosition","indexFirst","indexAfter","dataSubmit","IDOne","IDTwo","changePosition","components","body","row","hoverIndex","dragRow","dragID","hoverID","$splice","onFetchData","length","record"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\r\nimport { programApi, studyRoleApi } from '~/apiBase';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport update from 'immutability-helper';\r\nimport { Card, Table } from 'antd';\r\nimport AddStudyRole from './AddStudyRole';\r\n\r\nconst type = 'DraggableBodyRow';\r\n\r\nconst DraggableBodyRow = ({ index, moveRow, className, style, ...restProps }) => {\r\n\tconst ref = useRef();\r\n\tconst [{ isOver, dropClassName }, drop] = useDrop({\r\n\t\taccept: type,\r\n\t\tcollect: (monitor) => {\r\n\t\t\t//@ts-ignore\r\n\t\t\tconst { index: dragIndex } = monitor.getItem() || {};\r\n\t\t\tif (dragIndex === index) {\r\n\t\t\t\treturn {};\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tisOver: monitor.isOver(),\r\n\t\t\t\tdropClassName: dragIndex < index ? ' drop-over-downward' : ' drop-over-upward'\r\n\t\t\t};\r\n\t\t},\r\n\t\tdrop: (item) => {\r\n\t\t\t//@ts-ignore\r\n\t\t\tmoveRow(item.index, index);\r\n\t\t}\r\n\t});\r\n\tconst [, drag] = useDrag({\r\n\t\ttype,\r\n\t\titem: { index },\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisDragging: monitor.isDragging()\r\n\t\t})\r\n\t});\r\n\tdrop(drag(ref));\r\n\r\n\treturn <tr ref={ref} className={`${className}${isOver ? dropClassName : ''}`} style={{ cursor: 'move', ...style }} {...restProps} />;\r\n};\r\n\r\nconst InfoStudyCard = (props) => {\r\n\tconst { studentID } = props;\r\n\tconst [dataProgram, setDataProgram] = useState([]);\r\n\r\n\tconst [dataSource, setDataSource] = useState(null);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst { showNoti, pageSize } = useWrap();\r\n\tconst [totalPage, setTotalPage] = useState(null);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: 1,\r\n\t\tStudentID: studentID\r\n\t};\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi);\r\n\r\n\tconst getDataProgram = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await programApi.getAll({ selectAll: true });\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tlet newData = res.data.data.map((item) => ({\r\n\t\t\t\t\ttitle: item.ProgramName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}));\r\n\t\t\t\tsetDataProgram(newData);\r\n\t\t\t}\r\n\r\n\t\t\tres.status == 204 && setDataProgram([]);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tlet res = await studyRoleApi.getAll(todoApi);\r\n\r\n\t\t\tres.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow));\r\n\t\t\tres.status == 204 && setDataSource([]);\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Chương trình',\r\n\t\t\tdataIndex: 'ProgramName',\r\n\t\t\tkey: 'programname'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ghi chú',\r\n\t\t\tdataIndex: 'Note',\r\n\t\t\tkey: 'note'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày tạo',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\tkey: 'createdon'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tạo bởi',\r\n\t\t\tdataIndex: 'CreatedBy',\r\n\t\t\tkey: 'createdby'\r\n\t\t}\r\n\t];\r\n\r\n\tconst updatePosition = async (indexFirst, indexAfter) => {\r\n\t\tlet dataSubmit = {\r\n\t\t\tIDOne: indexFirst,\r\n\t\t\tIDTwo: indexAfter\r\n\t\t};\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tlet res = await studyRoleApi.changePosition(dataSubmit);\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tshowNoti('success', 'Đổi vị trí thành công');\r\n\t\t\t\tsetTodoApi({ ...todoApi });\r\n\t\t\t} else {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// const [data, setData] = useState(dataSource);\r\n\r\n\tconst components = {\r\n\t\tbody: {\r\n\t\t\trow: DraggableBodyRow\r\n\t\t}\r\n\t};\r\n\r\n\tconst moveRow = useCallback(\r\n\t\t(dragIndex: any, hoverIndex: any) => {\r\n\t\t\tconst dragRow = dataSource[dragIndex];\r\n\r\n\t\t\tconst dragID = dataSource[dragIndex].ID;\r\n\t\t\tconst hoverID = dataSource[hoverIndex].ID;\r\n\r\n\t\t\tupdatePosition(dragID, hoverID);\r\n\r\n\t\t\tsetDataSource(\r\n\t\t\t\tupdate(dataSource, {\r\n\t\t\t\t\t$splice: [\r\n\t\t\t\t\t\t[dragIndex, 1],\r\n\t\t\t\t\t\t[hoverIndex, 0, dragRow]\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\t[dataSource]\r\n\t);\r\n\r\n\tconst onFetchData = () => {\r\n\t\tsetTodoApi({ ...todoApi });\r\n\t\tsetCurrentPage(1);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataSource();\r\n\t\tif (dataProgram.length == 0) {\r\n\t\t\tgetDataProgram();\r\n\t\t}\r\n\t}, [todoApi]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"wrap-table\">\r\n\t\t\t\t<Card extra={<AddStudyRole studentID={studentID} dataProgram={dataProgram} onFetchData={() => onFetchData()} />}>\r\n\t\t\t\t\t<DndProvider backend={HTML5Backend}>\r\n\t\t\t\t\t\t<Table\r\n\t\t\t\t\t\t\tclassName=\"table-drop\"\r\n\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\tdataSource={dataSource}\r\n\t\t\t\t\t\t\tcomponents={components}\r\n\t\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t\tonRow={(record, index) => ({ index, moveRow, record })}\r\n\t\t\t\t\t\t\tloading={isLoading}\r\n\t\t\t\t\t\t\tsize=\"middle\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</DndProvider>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default InfoStudyCard;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\FormControl\\\\UploadFileField\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Form, Modal, Upload } from 'antd';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState } from 'react';\nimport { Controller } from 'react-hook-form';\n\nvar UploadFileField = function UploadFileField(props) {\n  _s();\n\n  var _errors$name;\n\n  var form = props.form,\n      name = props.name,\n      label = props.label,\n      disabled = props.disabled,\n      handleBeforeUpload = props.handleBeforeUpload,\n      handleUploadFile = props.handleUploadFile,\n      style = props.style,\n      className = props.className,\n      max = props.max,\n      selectMultiple = props.selectMultiple,\n      accept = props.accept;\n  var errors = form.formState.errors;\n  var hasError = errors[name];\n  var isUploadImages = useRef(true);\n\n  var _useState = useState(false),\n      previewVisible = _useState[0],\n      setPreviewVisible = _useState[1];\n\n  var _useState2 = useState(''),\n      previewUrl = _useState2[0],\n      setPreviewUrl = _useState2[1];\n\n  var _useState3 = useState(''),\n      fileTypePreview = _useState3[0],\n      setFileTypePreview = _useState3[1];\n\n  var refList = useRef([]);\n\n  var closeModal = function closeModal() {\n    setPreviewVisible(false);\n\n    if (refList.current.length) {\n      refList.current.map(function (r) {\n        return r === null || r === void 0 ? void 0 : r.pause();\n      });\n    }\n  };\n\n  var checkHandleBeforeUpload = function checkHandleBeforeUpload(file, fileList) {\n    if (!handleBeforeUpload) return;\n    return handleBeforeUpload(file, fileList);\n  };\n\n  var getBase64 = function getBase64(file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        return resolve(reader.result);\n      };\n\n      reader.onerror = function (error) {\n        return reject(error);\n      };\n    });\n  };\n\n  var handlePreview = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!file.url && !file.preview)) {\n                _context.next = 4;\n                break;\n              }\n\n              _context.next = 3;\n              return getBase64(file.originFileObj);\n\n            case 3:\n              file.preview = _context.sent;\n\n            case 4:\n              // audio/*,video/*,image/*\n              setFileTypePreview(file.type.slice(0, file.type.indexOf('/')));\n              setPreviewUrl(file.url || file.preview);\n              setPreviewVisible(true);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handlePreview(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var uiPreview = function uiPreview() {\n    if (fileTypePreview === 'image') {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"preview-img\",\n        style: {\n          width: '100%'\n        },\n        src: previewUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, _this);\n    }\n\n    if (fileTypePreview === 'video') {\n      return /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: function ref(video) {\n          refList.current.push(video);\n        },\n        controls: true,\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: previewUrl,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"source\", {\n          src: previewUrl,\n          type: \"video/ogg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }, _this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, _this);\n    }\n\n    if (fileTypePreview === 'audio') {\n      return /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: function ref(audio) {\n          refList.current.push(audio);\n        },\n        controls: true,\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: previewUrl,\n          type: \"audio/ogg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"source\", {\n          src: previewUrl,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 6\n        }, _this), \"Your browser does not support the audio element.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, _this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form.Item, {\n    style: style,\n    label: label,\n    className: \"\".concat(className, \" \").concat(hasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''),\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      name: name,\n      control: form.control,\n      render: function render(_ref2) {\n        var _checkFileList;\n\n        var field = _ref2.field,\n            fieldState = _ref2.fieldState,\n            formState = _ref2.formState;\n\n        /** VALUE OF FIELD MUST BE OBJECT IN ARRAY IFILE[]*/\n        var checkFileList = function checkFileList() {\n          if (Array.isArray(field.value) && field.value.length) {\n            var rs = field.value;\n            return rs;\n          }\n\n          return null;\n        };\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Upload, _objectSpread(_objectSpread({}, field), {}, {\n            accept: accept || 'audio/*,video/*,image/png,image/jpg,image/jpeg,image/bmp,.xlsx,.xls,.doc,.docx,.ppt,.pptx,.txt,.pdf',\n            listType: \"picture-card\",\n            className: \"file-uploader\",\n            disabled: disabled,\n            multiple: selectMultiple || max > 1 ? true : false,\n            maxCount: max,\n            fileList: checkFileList(),\n            onPreview: handlePreview,\n            beforeUpload: checkHandleBeforeUpload,\n            onRemove: function onRemove(file) {\n              if (handleUploadFile) {\n                var _field$value;\n\n                isUploadImages.current = true;\n\n                if ((_field$value = field.value) !== null && _field$value !== void 0 && _field$value.length) {\n                  var newValue = field.value.filter(function (f) {\n                    return f.uid !== file.uid;\n                  });\n                  field.onChange(newValue);\n                }\n              }\n            },\n            onChange: function onChange(obj) {\n              console.log(obj.fileList);\n\n              if (handleUploadFile) {\n                var _field$value$length, _field$value2;\n\n                var itemAlready = (_field$value$length = (_field$value2 = field.value) === null || _field$value2 === void 0 ? void 0 : _field$value2.length) !== null && _field$value$length !== void 0 ? _field$value$length : 0;\n\n                if (itemAlready < max && isUploadImages.current) {\n                  // AVOID CALL DOUBLE API BECAUSE UPLOAD ANTD COMPONENT RE-RENDER\n                  isUploadImages.current = false; // HANDLE UPLOAD FILE RETURN ARRAY\n\n                  handleUploadFile(obj.fileList).then(function (res) {\n                    isUploadImages.current = true;\n\n                    if (Array.isArray(res) && res.length) {\n                      field.value ? field.onChange([].concat(_toConsumableArray(field.value), _toConsumableArray(res))) : field.onChange(res);\n                    }\n                  });\n                }\n\n                return;\n              }\n\n              if (obj.fileList.length < 1) {\n                field.onChange(null);\n                return;\n              }\n\n              field.onChange(obj.fileList);\n            },\n            children: ((_checkFileList = checkFileList()) === null || _checkFileList === void 0 ? void 0 : _checkFileList.length) >= max ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-upload\",\n              children: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 11\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 10\n            }, _this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 8\n          }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n            title: \"Xem tr\\u01B0\\u1EDBc\",\n            visible: previewVisible,\n            footer: null,\n            onCancel: closeModal,\n            children: uiPreview()\n          }, Math.floor(Math.random() * 130698), false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 8\n          }, _this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, _this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ant-form-item-explain ant-form-item-explain-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(UploadFileField, \"kaWXQiq73rIp5rSjHTfUQp5787A=\");\n\n_c = UploadFileField;\nUploadFileField.propTypes = {\n  form: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  disabled: PropTypes.bool,\n  style: PropTypes.shape({}),\n  className: PropTypes.string,\n  max: PropTypes.number,\n  accept: PropTypes.string,\n  selectMultiple: PropTypes.bool,\n  handleUploadFile: PropTypes.func,\n  handleBeforeUpload: PropTypes.func\n};\nUploadFileField.defaultProps = {\n  label: '',\n  disabled: false,\n  style: {},\n  className: '',\n  max: 9999,\n  accept: '',\n  selectMultiple: false,\n  handleUploadFile: null,\n  handleBeforeUpload: null\n};\nexport default UploadFileField;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFileField\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/FormControl/UploadFileField/index.tsx"],"names":["PlusOutlined","Form","Modal","Upload","PropTypes","React","useRef","useState","Controller","UploadFileField","props","form","name","label","disabled","handleBeforeUpload","handleUploadFile","style","className","max","selectMultiple","accept","errors","formState","hasError","isUploadImages","previewVisible","setPreviewVisible","previewUrl","setPreviewUrl","fileTypePreview","setFileTypePreview","refList","closeModal","current","length","map","r","pause","checkHandleBeforeUpload","file","fileList","getBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","handlePreview","url","preview","originFileObj","type","slice","indexOf","uiPreview","width","video","push","audio","control","field","fieldState","checkFileList","Array","isArray","value","rs","newValue","filter","f","uid","onChange","obj","console","log","itemAlready","then","res","Math","floor","random","message","propTypes","object","isRequired","string","bool","shape","number","func","defaultProps"],"mappings":"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","sourcesContent":["import { PlusOutlined } from '@ant-design/icons'\r\nimport { Form, Modal, Upload } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useRef, useState } from 'react'\r\nimport { Controller } from 'react-hook-form'\r\n\r\ninterface RcFile extends File {\r\n\tuid: string\r\n\tlastModifiedDate: Date\r\n}\r\ntype IFile = {\r\n\tuid: string\r\n\tsize?: number\r\n\tname: string\r\n\tfileName?: string\r\n\tlastModified?: number\r\n\tlastModifiedDate?: Date\r\n\turl?: string\r\n\tstatus?: 'error' | 'success' | 'done' | 'uploading' | 'removed'\r\n\tpercent?: number\r\n\tthumbUrl?: string\r\n\toriginFileObj?: RcFile\r\n\tresponse?: string\r\n\terror?: any\r\n\tlinkProps?: any\r\n\ttype?: string\r\n\txhr?: any\r\n\tpreview?: string\r\n}\r\ntype IFileList = {\r\n\tfile: IFile\r\n\tfileList: IFile[]\r\n}\r\n\r\nconst UploadFileField = (props) => {\r\n\tconst { form, name, label, disabled, handleBeforeUpload, handleUploadFile, style, className, max, selectMultiple, accept } = props\r\n\r\n\tconst { errors } = form.formState\r\n\tconst hasError = errors[name]\r\n\tconst isUploadImages = useRef(true)\r\n\tconst [previewVisible, setPreviewVisible] = useState(false)\r\n\tconst [previewUrl, setPreviewUrl] = useState('')\r\n\tconst [fileTypePreview, setFileTypePreview] = useState('')\r\n\tconst refList = useRef([])\r\n\r\n\tconst closeModal = () => {\r\n\t\tsetPreviewVisible(false)\r\n\t\tif (refList.current.length) {\r\n\t\t\trefList.current.map((r) => r?.pause())\r\n\t\t}\r\n\t}\r\n\r\n\tconst checkHandleBeforeUpload = (file, fileList) => {\r\n\t\tif (!handleBeforeUpload) return\r\n\t\treturn handleBeforeUpload(file, fileList)\r\n\t}\r\n\r\n\tconst getBase64 = (file) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst reader = new FileReader()\r\n\t\t\treader.readAsDataURL(file)\r\n\t\t\treader.onload = () => resolve(reader.result)\r\n\t\t\treader.onerror = (error) => reject(error)\r\n\t\t})\r\n\t}\r\n\r\n\tconst handlePreview = async (file) => {\r\n\t\tif (!file.url && !file.preview) {\r\n\t\t\tfile.preview = await getBase64(file.originFileObj)\r\n\t\t}\r\n\t\t// audio/*,video/*,image/*\r\n\t\tsetFileTypePreview(file.type.slice(0, file.type.indexOf('/')))\r\n\t\tsetPreviewUrl(file.url || file.preview)\r\n\t\tsetPreviewVisible(true)\r\n\t}\r\n\r\n\tconst uiPreview = () => {\r\n\t\tif (fileTypePreview === 'image') {\r\n\t\t\treturn <img alt=\"preview-img\" style={{ width: '100%' }} src={previewUrl} />\r\n\t\t}\r\n\t\tif (fileTypePreview === 'video') {\r\n\t\t\treturn (\r\n\t\t\t\t<video\r\n\t\t\t\t\tref={(video) => {\r\n\t\t\t\t\t\trefList.current.push(video)\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tcontrols\r\n\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<source src={previewUrl} type=\"video/mp4\" />\r\n\t\t\t\t\t<source src={previewUrl} type=\"video/ogg\" />\r\n\t\t\t\t\tYour browser does not support the video tag.\r\n\t\t\t\t</video>\r\n\t\t\t)\r\n\t\t}\r\n\t\tif (fileTypePreview === 'audio') {\r\n\t\t\treturn (\r\n\t\t\t\t<audio\r\n\t\t\t\t\tref={(audio) => {\r\n\t\t\t\t\t\trefList.current.push(audio)\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tcontrols\r\n\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<source src={previewUrl} type=\"audio/ogg\" />\r\n\t\t\t\t\t<source src={previewUrl} type=\"audio/mpeg\" />\r\n\t\t\t\t\tYour browser does not support the audio element.\r\n\t\t\t\t</audio>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<Form.Item style={style} label={label} className={`${className} ${hasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''}`}>\r\n\t\t\t<Controller\r\n\t\t\t\tname={name}\r\n\t\t\t\tcontrol={form.control}\r\n\t\t\t\trender={({ field, fieldState, formState }) => {\r\n\t\t\t\t\t/** VALUE OF FIELD MUST BE OBJECT IN ARRAY IFILE[]*/\r\n\t\t\t\t\tconst checkFileList = () => {\r\n\t\t\t\t\t\tif (Array.isArray(field.value) && field.value.length) {\r\n\t\t\t\t\t\t\tconst rs: IFile[] = field.value\r\n\t\t\t\t\t\t\treturn rs\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\taccept={accept || 'audio/*,video/*,image/png,image/jpg,image/jpeg,image/bmp,.xlsx,.xls,.doc,.docx,.ppt,.pptx,.txt,.pdf'}\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"file-uploader\"\r\n\t\t\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t\t\t\tmultiple={selectMultiple || max > 1 ? true : false}\r\n\t\t\t\t\t\t\t\tmaxCount={max}\r\n\t\t\t\t\t\t\t\tfileList={checkFileList()}\r\n\t\t\t\t\t\t\t\tonPreview={handlePreview}\r\n\t\t\t\t\t\t\t\tbeforeUpload={checkHandleBeforeUpload}\r\n\t\t\t\t\t\t\t\tonRemove={(file) => {\r\n\t\t\t\t\t\t\t\t\tif (handleUploadFile) {\r\n\t\t\t\t\t\t\t\t\t\tisUploadImages.current = true\r\n\t\t\t\t\t\t\t\t\t\tif (field.value?.length) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst newValue = field.value.filter((f) => f.uid !== file.uid)\r\n\t\t\t\t\t\t\t\t\t\t\tfield.onChange(newValue)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonChange={(obj) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(obj.fileList)\r\n\t\t\t\t\t\t\t\t\tif (handleUploadFile) {\r\n\t\t\t\t\t\t\t\t\t\tconst itemAlready = field.value?.length ?? 0\r\n\t\t\t\t\t\t\t\t\t\tif (itemAlready < max && isUploadImages.current) {\r\n\t\t\t\t\t\t\t\t\t\t\t// AVOID CALL DOUBLE API BECAUSE UPLOAD ANTD COMPONENT RE-RENDER\r\n\t\t\t\t\t\t\t\t\t\t\tisUploadImages.current = false\r\n\t\t\t\t\t\t\t\t\t\t\t// HANDLE UPLOAD FILE RETURN ARRAY\r\n\t\t\t\t\t\t\t\t\t\t\thandleUploadFile(obj.fileList).then((res) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tisUploadImages.current = true\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (Array.isArray(res) && res.length) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfield.value ? field.onChange([...field.value, ...res]) : field.onChange(res)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (obj.fileList.length < 1) {\r\n\t\t\t\t\t\t\t\t\t\tfield.onChange(null)\r\n\t\t\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tfield.onChange(obj.fileList)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{checkFileList()?.length >= max ? null : (\r\n\t\t\t\t\t\t\t\t\t<div className={`bg-upload`}>\r\n\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\t\tkey={Math.floor(Math.random() * 130698)}\r\n\t\t\t\t\t\t\t\ttitle=\"Xem trước\"\r\n\t\t\t\t\t\t\t\tvisible={previewVisible}\r\n\t\t\t\t\t\t\t\tfooter={null}\r\n\t\t\t\t\t\t\t\tonCancel={closeModal}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{uiPreview()}\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{hasError && (\r\n\t\t\t\t<div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n\t\t\t\t\t<div role=\"alert\">{errors[name]?.message}</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Form.Item>\r\n\t)\r\n}\r\nUploadFileField.propTypes = {\r\n\tform: PropTypes.object.isRequired,\r\n\tname: PropTypes.string.isRequired,\r\n\tlabel: PropTypes.string,\r\n\tdisabled: PropTypes.bool,\r\n\tstyle: PropTypes.shape({}),\r\n\tclassName: PropTypes.string,\r\n\tmax: PropTypes.number,\r\n\taccept: PropTypes.string,\r\n\tselectMultiple: PropTypes.bool,\r\n\thandleUploadFile: PropTypes.func,\r\n\thandleBeforeUpload: PropTypes.func\r\n}\r\nUploadFileField.defaultProps = {\r\n\tlabel: '',\r\n\tdisabled: false,\r\n\tstyle: {},\r\n\tclassName: '',\r\n\tmax: 9999,\r\n\taccept: '',\r\n\tselectMultiple: false,\r\n\thandleUploadFile: null,\r\n\thandleBeforeUpload: null\r\n}\r\nexport default UploadFileField\r\n"]},"metadata":{},"sourceType":"module"}
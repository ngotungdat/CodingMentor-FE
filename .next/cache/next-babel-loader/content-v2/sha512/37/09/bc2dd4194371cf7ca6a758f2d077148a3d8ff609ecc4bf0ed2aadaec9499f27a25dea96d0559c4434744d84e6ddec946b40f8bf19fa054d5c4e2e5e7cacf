{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\ExamList\\\\ExamShow\\\\ChoiceList.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Radio, Tooltip, Popconfirm, Space } from 'antd';\nimport { Trash2 } from 'react-feather';\nimport { examDetailApi } from '~/apiBase';\nimport { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]';\nimport { useWrap } from '~/context/wrap';\nimport EditPoint from '../ExamForm/EditPoint';\nimport ChangePosition from '../ExamForm/ChangePosition';\nimport { useDoingTest } from '~/context/useDoingTest';\nimport { useDoneTest } from '~/context/useDoneTest';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\n\nconst ChoiceList = props => {\n  const {\n    onDeleteQuestion\n  } = useExamDetail();\n  const {\n    activeID,\n    getActiveID,\n    packageResult,\n    getPackageResult,\n    getListPicked\n  } = useDoingTest();\n  const {\n    doneTestData\n  } = useDoneTest();\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    dataQuestion,\n    listAlphabet,\n    listQuestionID,\n    isDoingTest,\n    showScore,\n    arPosition,\n    handleChange,\n    addOldItem\n  } = props;\n  const {\n    0: confirmLoading,\n    1: setConfirmLoading\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState({\n    id: null,\n    status: false\n  });\n  const {\n    0: activeValue,\n    1: setAcitveValue\n  } = useState(null);\n\n  const returnPosition = quesID => {\n    let index = listQuestionID.indexOf(quesID);\n    let text = 'Câu ' + (index + 1).toString();\n    return text;\n  };\n\n  const {\n    isChangePosition\n  } = useExamDetail(); // Chấp nhận xóa câu hỏi\n\n  const handleOk = async quesItem => {\n    let itemDelete = {\n      ID: dataQuestion.ID,\n      Enable: false,\n      ExerciseOrExerciseGroup: [{\n        Point: quesItem.Point,\n        ExerciseOrExerciseGroupID: quesItem.ExerciseID\n      }]\n    };\n    setConfirmLoading(true);\n\n    try {\n      let res = await examDetailApi.update(itemDelete);\n\n      if (res.status == 200) {\n        onDeleteQuestion(itemDelete);\n        showNoti('success', 'Xóa thành công');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setConfirmLoading(false);\n    }\n  }; // Handle cancel popup delte\n\n\n  const handleCancel = quesID => {\n    setVisible({\n      id: quesID,\n      status: false\n    });\n  }; // Delete Question in exam\n\n\n  const deleteQuestionItem = quesID => {\n    !visible.status ? setVisible({\n      id: quesID,\n      status: true\n    }) : setVisible({\n      id: quesID,\n      status: false\n    });\n  }; // ----------- ALL ACTION IN DOINGTEST -------------\n\n\n  const onChange_selectAnswer = (dataAns, quesID) => {\n    setAcitveValue(dataAns.ID);\n    getActiveID(quesID);\n    getListPicked(quesID); // Find index\n\n    let indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex(item => item.ExamTopicDetailID === dataQuestion.ID);\n    let indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(item => item.ExerciseID === quesID); // Remove all data in list answer (because this single question)\n\n    packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList = []; // Add new answer to list\n\n    packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList.push({\n      AnswerID: dataAns.ID,\n      AnswerContent: dataAns.AnswerContent,\n      FileAudio: ''\n    });\n    getPackageResult(_objectSpread({}, packageResult));\n  };\n\n  useEffect(() => {\n    if (!doneTestData) {\n      if (isDoingTest) {\n        if (packageResult) {\n          let indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex(item => item.ExamTopicDetailID === dataQuestion.ID);\n\n          if (packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[0].SetPackageExerciseAnswerStudentList.length > 0) {\n            let AnswerID = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[0].SetPackageExerciseAnswerStudentList[0].AnswerID;\n            setAcitveValue(AnswerID);\n          }\n        }\n      }\n    } else {//\n    }\n  }, [activeID]);\n\n  const isNull = params => {\n    if (params == undefined || params == null || params == '') {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dataQuestion.ExerciseTopic.map((ques, ind) => {\n      var _ques$ExerciseAnswer;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `question-item ${ques.ExerciseID === activeID ? 'active-doing' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `title-ques `,\n              children: returnPosition(ques.ExerciseID)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 8\n            }, this), ques.LinkAudio !== '' && ques.LinkAudio !== null && /*#__PURE__*/_jsxDEV(\"audio\", {\n              controls: true,\n              children: /*#__PURE__*/_jsxDEV(\"source\", {\n                src: ques.LinkAudio,\n                type: \"audio/mpeg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title-text\",\n              children: ReactHtmlParser(ques.Content)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-answer\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-single question-wrap w-100\",\n              children: (_ques$ExerciseAnswer = ques.ExerciseAnswer) === null || _ques$ExerciseAnswer === void 0 ? void 0 : _ques$ExerciseAnswer.map((ans, i) => /*#__PURE__*/_jsxDEV(Radio.Group, {\n                className: \"d-block\",\n                value: !doneTestData ? activeValue : ans.AnswerID !== 0 ? ans.ExerciseAnswerID : activeValue,\n                onChange: e => onChange_selectAnswer(ans, ques.ExerciseID),\n                children: (!isNull(ans.AnswerContent) || !isNull(ans.ExerciseAnswerContent)) && /*#__PURE__*/_jsxDEV(Space, {\n                  direction: \"vertical\",\n                  children: /*#__PURE__*/_jsxDEV(Radio, {\n                    className: \"d-block\",\n                    value: !doneTestData ? ans.ID : ans.ExerciseAnswerID,\n                    disabled: !isDoingTest ? true : doneTestData ? true : false,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"tick\",\n                      children: listAlphabet[i]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 14\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text\",\n                      style: {\n                        color: doneTestData ? ans.isTrue ? 'green' : ans.AnswerID !== 0 && 'red' : 'inherit'\n                      },\n                      children: !doneTestData ? ans.AnswerContent : ans.ExerciseAnswerContent\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 14\n                    }, this), doneTestData && ans.AnswerID !== 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `icon-check ${ans.isTrue ? 'right' : 'wrong'}`,\n                      children: ans.isTrue ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 30\n                      }, this) : /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 50\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 15\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 12\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 6\n        }, this), dataQuestion.ExerciseGroupID == 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-action\",\n          children: [!doneTestData && !isDoingTest && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [!isChangePosition && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(EditPoint, {\n                quesItem: ques,\n                dataQuestion: dataQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n                title: \"B\\u1EA1n c\\xF3 ch\\u1EAFc mu\\u1ED1n x\\xF3a?\",\n                onConfirm: () => handleOk(ques),\n                okButtonProps: {\n                  loading: confirmLoading\n                },\n                onCancel: () => handleCancel(ques.ID),\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"X\\xF3a c\\xE2u h\\u1ECFi\",\n                  placement: \"rightTop\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-icon delete\",\n                    onClick: () => deleteQuestionItem(ques.ID),\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 15\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 14\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(ChangePosition, {\n              dataQuestion: dataQuestion,\n              arPosition: arPosition,\n              questionID: dataQuestion.ID,\n              handleChange: handleChange,\n              addOldItem: addOldItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true), !isChangePosition && showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"point-question mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text\",\n              children: ques.Point\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 7\n        }, this)]\n      }, ind, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this);\n    })\n  }, void 0, false);\n};\n\nexport default ChoiceList;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/ExamList/ExamShow/ChoiceList.tsx"],"names":["React","useEffect","useState","ReactHtmlParser","Radio","Tooltip","Popconfirm","Space","Trash2","examDetailApi","useExamDetail","useWrap","EditPoint","ChangePosition","useDoingTest","useDoneTest","CheckOutlined","CloseOutlined","ChoiceList","props","onDeleteQuestion","activeID","getActiveID","packageResult","getPackageResult","getListPicked","doneTestData","showNoti","dataQuestion","listAlphabet","listQuestionID","isDoingTest","showScore","arPosition","handleChange","addOldItem","confirmLoading","setConfirmLoading","visible","setVisible","id","status","activeValue","setAcitveValue","returnPosition","quesID","index","indexOf","text","toString","isChangePosition","handleOk","quesItem","itemDelete","ID","Enable","ExerciseOrExerciseGroup","Point","ExerciseOrExerciseGroupID","ExerciseID","res","update","error","message","handleCancel","deleteQuestionItem","onChange_selectAnswer","dataAns","indexQuestion","SetPackageResultDetailInfoList","findIndex","item","ExamTopicDetailID","indexQuestionDetail","SetPackageExerciseStudentInfoList","SetPackageExerciseAnswerStudentList","push","AnswerID","AnswerContent","FileAudio","length","isNull","params","undefined","ExerciseTopic","map","ques","ind","LinkAudio","Content","ExerciseAnswer","ans","i","ExerciseAnswerID","e","ExerciseAnswerContent","color","isTrue","ExerciseGroupID","loading"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { Radio, Tooltip, Popconfirm, Space } from 'antd'\r\nimport { Trash2 } from 'react-feather'\r\nimport { examDetailApi } from '~/apiBase'\r\nimport { useExamDetail } from '~/pages/question-bank/exam-list/exam-detail/[slug]'\r\nimport { useWrap } from '~/context/wrap'\r\nimport EditPoint from '../ExamForm/EditPoint'\r\nimport ChangePosition from '../ExamForm/ChangePosition'\r\nimport { useDoingTest } from '~/context/useDoingTest'\r\nimport { useDoneTest } from '~/context/useDoneTest'\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons'\r\n\r\nconst ChoiceList = (props) => {\r\n\tconst { onDeleteQuestion } = useExamDetail()\r\n\tconst { activeID, getActiveID, packageResult, getPackageResult, getListPicked } = useDoingTest()\r\n\tconst { doneTestData } = useDoneTest()\r\n\tconst { showNoti } = useWrap()\r\n\tconst { dataQuestion, listAlphabet, listQuestionID, isDoingTest, showScore, arPosition, handleChange, addOldItem } = props\r\n\tconst [confirmLoading, setConfirmLoading] = useState(false)\r\n\tconst [visible, setVisible] = useState({ id: null, status: false })\r\n\tconst [activeValue, setAcitveValue] = useState(null)\r\n\r\n\tconst returnPosition = (quesID) => {\r\n\t\tlet index = listQuestionID.indexOf(quesID)\r\n\t\tlet text = 'Câu ' + (index + 1).toString()\r\n\t\treturn text\r\n\t}\r\n\r\n\tconst { isChangePosition } = useExamDetail()\r\n\r\n\t// Chấp nhận xóa câu hỏi\r\n\tconst handleOk = async (quesItem) => {\r\n\t\tlet itemDelete = {\r\n\t\t\tID: dataQuestion.ID,\r\n\t\t\tEnable: false,\r\n\t\t\tExerciseOrExerciseGroup: [\r\n\t\t\t\t{\r\n\t\t\t\t\tPoint: quesItem.Point,\r\n\t\t\t\t\tExerciseOrExerciseGroupID: quesItem.ExerciseID\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\tsetConfirmLoading(true)\r\n\t\ttry {\r\n\t\t\tlet res = await examDetailApi.update(itemDelete)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tonDeleteQuestion(itemDelete)\r\n\t\t\t\tshowNoti('success', 'Xóa thành công')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetConfirmLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\t// Handle cancel popup delte\r\n\tconst handleCancel = (quesID) => {\r\n\t\tsetVisible({ id: quesID, status: false })\r\n\t}\r\n\r\n\t// Delete Question in exam\r\n\tconst deleteQuestionItem = (quesID) => {\r\n\t\t!visible.status ? setVisible({ id: quesID, status: true }) : setVisible({ id: quesID, status: false })\r\n\t}\r\n\r\n\t// ----------- ALL ACTION IN DOINGTEST -------------\r\n\r\n\tconst onChange_selectAnswer = (dataAns, quesID) => {\r\n\t\tsetAcitveValue(dataAns.ID)\r\n\t\tgetActiveID(quesID)\r\n\t\tgetListPicked(quesID)\r\n\r\n\t\t// Find index\r\n\t\tlet indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex((item) => item.ExamTopicDetailID === dataQuestion.ID)\r\n\r\n\t\tlet indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(\r\n\t\t\t(item) => item.ExerciseID === quesID\r\n\t\t)\r\n\r\n\t\t// Remove all data in list answer (because this single question)\r\n\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\tindexQuestionDetail\r\n\t\t].SetPackageExerciseAnswerStudentList = []\r\n\r\n\t\t// Add new answer to list\r\n\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\tindexQuestionDetail\r\n\t\t].SetPackageExerciseAnswerStudentList.push({\r\n\t\t\tAnswerID: dataAns.ID,\r\n\t\t\tAnswerContent: dataAns.AnswerContent,\r\n\t\t\tFileAudio: ''\r\n\t\t})\r\n\r\n\t\tgetPackageResult({ ...packageResult })\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!doneTestData) {\r\n\t\t\tif (isDoingTest) {\r\n\t\t\t\tif (packageResult) {\r\n\t\t\t\t\tlet indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex((item) => item.ExamTopicDetailID === dataQuestion.ID)\r\n\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[0]\r\n\t\t\t\t\t\t\t.SetPackageExerciseAnswerStudentList.length > 0\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tlet AnswerID =\r\n\t\t\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[0]\r\n\t\t\t\t\t\t\t\t.SetPackageExerciseAnswerStudentList[0].AnswerID\r\n\t\t\t\t\t\tsetAcitveValue(AnswerID)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//\r\n\t\t}\r\n\t}, [activeID])\r\n\r\n\tconst isNull = (params: any) => {\r\n\t\tif (params == undefined || params == null || params == '') {\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{dataQuestion.ExerciseTopic.map((ques, ind) => (\r\n\t\t\t\t<div className={`question-item ${ques.ExerciseID === activeID ? 'active-doing' : ''}`} key={ind}>\r\n\t\t\t\t\t<div className=\"box-detail\">\r\n\t\t\t\t\t\t<div className=\"box-title\">\r\n\t\t\t\t\t\t\t<span className={`title-ques `}>{returnPosition(ques.ExerciseID)}</span>\r\n\t\t\t\t\t\t\t{ques.LinkAudio !== '' && ques.LinkAudio !== null && (\r\n\t\t\t\t\t\t\t\t<audio controls>\r\n\t\t\t\t\t\t\t\t\t<source src={ques.LinkAudio} type=\"audio/mpeg\" />\r\n\t\t\t\t\t\t\t\t</audio>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div className=\"title-text\">{ReactHtmlParser(ques.Content)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"box-answer\">\r\n\t\t\t\t\t\t\t<div className=\"question-single question-wrap w-100\">\r\n\t\t\t\t\t\t\t\t{ques.ExerciseAnswer?.map((ans, i) => (\r\n\t\t\t\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"d-block\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={!doneTestData ? activeValue : ans.AnswerID !== 0 ? ans.ExerciseAnswerID : activeValue}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onChange_selectAnswer(ans, ques.ExerciseID)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{(!isNull(ans.AnswerContent) || !isNull(ans.ExerciseAnswerContent)) && (\r\n\t\t\t\t\t\t\t\t\t\t\t<Space direction=\"vertical\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Radio\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"d-block\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={!doneTestData ? ans.ID : ans.ExerciseAnswerID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!isDoingTest ? true : doneTestData ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"tick\">{listAlphabet[i]}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: doneTestData ? (ans.isTrue ? 'green' : ans.AnswerID !== 0 && 'red') : 'inherit'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!doneTestData ? ans.AnswerContent : ans.ExerciseAnswerContent}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{doneTestData && ans.AnswerID !== 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={`icon-check ${ans.isTrue ? 'right' : 'wrong'}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ans.isTrue ? <CheckOutlined /> : <CloseOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Radio>\r\n\t\t\t\t\t\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{dataQuestion.ExerciseGroupID == 0 && (\r\n\t\t\t\t\t\t<div className=\"box-action\">\r\n\t\t\t\t\t\t\t{!doneTestData && !isDoingTest && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{!isChangePosition && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<EditPoint quesItem={ques} dataQuestion={dataQuestion} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Bạn có chắc muốn xóa?\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleOk(ques)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tokButtonProps={{ loading: confirmLoading }}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonCancel={() => handleCancel(ques.ID)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Xóa câu hỏi\" placement=\"rightTop\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-icon delete\" onClick={() => deleteQuestionItem(ques.ID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Trash2 />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<ChangePosition\r\n\t\t\t\t\t\t\t\t\t\tdataQuestion={dataQuestion}\r\n\t\t\t\t\t\t\t\t\t\tarPosition={arPosition}\r\n\t\t\t\t\t\t\t\t\t\tquestionID={dataQuestion.ID}\r\n\t\t\t\t\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\taddOldItem={addOldItem}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{!isChangePosition && showScore && (\r\n\t\t\t\t\t\t\t\t<div className=\"point-question mt-2\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"text\">{ques.Point}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ChoiceList\r\n"]},"metadata":{},"sourceType":"module"}
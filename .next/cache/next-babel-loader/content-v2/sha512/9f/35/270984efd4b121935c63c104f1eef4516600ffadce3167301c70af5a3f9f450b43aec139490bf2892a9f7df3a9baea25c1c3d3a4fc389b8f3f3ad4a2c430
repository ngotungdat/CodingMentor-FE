{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\notification\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport PowerTable from '~/components/PowerTable';\nimport LayoutBase from '~/components/LayoutBase';\nimport { AlertCircle } from 'react-feather';\nimport { notificationApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport moment from 'moment';\nimport { Checkbox, Tooltip } from 'antd';\nimport ReactHtmlParser from 'react-html-parser';\nimport Modal from 'antd/lib/modal/Modal';\nvar listTodoApi = {\n  pageSize: 10,\n  pageIndex: 1,\n  IsPagination: true\n};\n\nvar Notification = function Notification() {\n  _s();\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var _useState = useState(),\n      dataTable = _useState[0],\n      setDataTable = _useState[1];\n\n  var _useState2 = useState({\n    ID: null,\n    content: null,\n    title: null,\n    status: null\n  }),\n      contentRow = _useState2[0],\n      setContentRow = _useState2[1];\n\n  var _useState3 = useState(false),\n      isModalVisible = _useState3[0],\n      setIsModalVisible = _useState3[1];\n\n  var _useState4 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(1),\n      currentPage = _useState5[0],\n      setCurrentPage = _useState5[1];\n\n  var _useState6 = useState(listTodoApi),\n      todoApi = _useState6[0],\n      setTodoApi = _useState6[1]; // GET DATA\n\n\n  var getDataTable = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return notificationApi.getAllWithUser(todoApi);\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status == 200) {\n                setDataTable(res.data);\n              }\n\n              if (res.status == 204) {\n                showNoti('danger', 'Không có dữ liệu');\n                console.log(\"%c - Noti 204:\" + \"%c Kh\\xF4ng t\\xECm th\\u1EA5y th\\xF4ng b\\xE1o n\\xE0o\", 'color: red; font-weight: bold', 'color: yellow;');\n              }\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              showNoti('danger', _context.t0.message);\n\n            case 12:\n              _context.prev = 12;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function getDataTable() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // PAGINATION\n\n\n  var _getPagination = function getPagination(pageNumber) {\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      pageIndex: pageNumber\n    }));\n  };\n\n  var _onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n      var res, _res;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsLoading({\n                type: 'UPDATE_DATA',\n                status: true\n              });\n              res = null;\n              _context2.prev = 2;\n              _context2.next = 5;\n              return notificationApi.updateSeen(data);\n\n            case 5:\n              res = _context2.sent;\n\n              if (((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200) {\n                showNoti('success', 'Cập nhật thành công');\n                getDataTable();\n              }\n\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              showNoti('danger', _context2.t0.message);\n\n            case 12:\n              _context2.prev = 12;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context2.finish(12);\n\n            case 15:\n              return _context2.abrupt(\"return\", res);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 9, 12, 15]]);\n    }));\n\n    return function _onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onChange = function onChange(e) {\n    var data = {\n      ID: e.target.value\n    };\n\n    _onSubmit(data);\n  };\n\n  var columns = [{\n    title: function title() {\n      return /*#__PURE__*/_jsxDEV(Checkbox, {\n        value: 0,\n        onChange: onChange,\n        defaultChecked: false,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"color-white\",\n          children: \"\\u0110\\xE3 xem t\\u1EA5t c\\u1EA3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, _this);\n    },\n    dataIndex: 'Status',\n    render: function render(text, record) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: text == 0 ? /*#__PURE__*/_jsxDEV(Checkbox, {\n          className: \"uncheck\",\n          value: record.ID,\n          onChange: onChange,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0110\\xE3 xem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, _this) : /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: true,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0110\\xE3 xem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, _this);\n    }\n  }, {\n    title: 'Tên thông báo',\n    dataIndex: 'NotificationTitle',\n    render: function render(text) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 22\n      }, _this);\n    }\n  }, {\n    title: 'Nội dung thông báo',\n    dataIndex: 'NotificationContent',\n    render: function render(text) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-notification\",\n        children: ReactHtmlParser(text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 22\n      }, _this);\n    }\n  }, {\n    title: 'Thời gian',\n    dataIndex: 'CreatedOn',\n    render: function render(date) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-weight-primary\",\n        children: moment(date).format('DD/MM/YYYY')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 22\n      }, _this);\n    }\n  }, {\n    render: function render(record) {\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Chi ti\\u1EBFt\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-icon delete\",\n          onClick: function onClick() {\n            setIsModalVisible(true);\n            setContentRow({\n              ID: record.ID,\n              content: record.NotificationContent,\n              title: record.NotificationTitle,\n              status: record.Status\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(AlertCircle, {\n            color: \"#32c6a4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, _this);\n    }\n  }];\n  useEffect(function () {\n    getDataTable();\n  }, [todoApi]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      title: /*#__PURE__*/_jsxDEV(AlertCircle, {\n        color: \"#32c6a4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 12\n      }, _this),\n      visible: isModalVisible,\n      onOk: function onOk() {\n        setIsModalVisible(false);\n        contentRow.status == 0 && _onSubmit({\n          ID: contentRow.ID\n        });\n      },\n      onCancel: function onCancel() {\n        setIsModalVisible(false);\n        contentRow.status == 0 && _onSubmit({\n          ID: contentRow.ID\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: contentRow.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ReactHtmlParser(contentRow.content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(PowerTable, {\n      loading: isLoading,\n      currentPage: currentPage,\n      totalPage: (dataTable === null || dataTable === void 0 ? void 0 : dataTable.totalRow) && (dataTable === null || dataTable === void 0 ? void 0 : dataTable.totalRow),\n      getPagination: function getPagination(pageNumber) {\n        return _getPagination(pageNumber);\n      },\n      addClass: \"basic-header\",\n      TitlePage: \"Danh s\\xE1ch th\\xF4ng b\\xE1o\",\n      dataSource: dataTable === null || dataTable === void 0 ? void 0 : dataTable.data,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Notification, \"FKo+9UWmDkYpRh6SpmRSsDaVkfY=\", false, function () {\n  return [useWrap];\n});\n\n_c = Notification;\nNotification.layout = LayoutBase;\nexport default Notification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/notification/index.tsx"],"names":["React","useEffect","useState","PowerTable","LayoutBase","AlertCircle","notificationApi","useWrap","moment","Checkbox","Tooltip","ReactHtmlParser","Modal","listTodoApi","pageSize","pageIndex","IsPagination","Notification","showNoti","dataTable","setDataTable","ID","content","title","status","contentRow","setContentRow","isModalVisible","setIsModalVisible","type","isLoading","setIsLoading","currentPage","setCurrentPage","todoApi","setTodoApi","getDataTable","getAllWithUser","res","data","console","log","message","getPagination","pageNumber","_onSubmit","updateSeen","onChange","e","target","value","columns","dataIndex","render","text","record","date","format","NotificationContent","NotificationTitle","Status","totalRow","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport { AlertCircle } from 'react-feather'\r\nimport { notificationApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\nimport moment from 'moment'\r\nimport { Checkbox, Tooltip } from 'antd'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport Modal from 'antd/lib/modal/Modal'\r\n\r\nconst listTodoApi = {\r\n\tpageSize: 10,\r\n\tpageIndex: 1,\r\n\tIsPagination: true\r\n}\r\n\r\nconst Notification = () => {\r\n\tconst { showNoti } = useWrap()\r\n\r\n\tconst [dataTable, setDataTable] = useState<any>()\r\n\tconst [contentRow, setContentRow] = useState({ ID: null, content: null, title: null, status: null })\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst [isLoading, setIsLoading] = useState({ type: '', status: false })\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// GET DATA\r\n\tconst getDataTable = async () => {\r\n\t\tsetIsLoading({ type: 'GET_ALL', status: true })\r\n\t\ttry {\r\n\t\t\tlet res = await notificationApi.getAllWithUser(todoApi)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetDataTable(res.data)\r\n\t\t\t}\r\n\t\t\tif (res.status == 204) {\r\n\t\t\t\tshowNoti('danger', 'Không có dữ liệu')\r\n\t\t\t\tconsole.log(`%c - Noti 204:` + `%c Không tìm thấy thông báo nào`, 'color: red; font-weight: bold', 'color: yellow;')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'GET_ALL', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({ ...todoApi, pageIndex: pageNumber })\r\n\t}\r\n\r\n\tconst _onSubmit = async (data: any) => {\r\n\t\tsetIsLoading({ type: 'UPDATE_DATA', status: true })\r\n\t\tlet res = null\r\n\t\ttry {\r\n\t\t\tres = await notificationApi.updateSeen(data)\r\n\t\t\tif (res?.status == 200) {\r\n\t\t\t\tshowNoti('success', 'Cập nhật thành công')\r\n\t\t\t\tgetDataTable()\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'ADD_DATA', status: false })\r\n\t\t}\r\n\t\treturn res\r\n\t}\r\n\r\n\tconst onChange = (e) => {\r\n\t\tconst data = { ID: e.target.value }\r\n\t\t_onSubmit(data)\r\n\t}\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: () => (\r\n\t\t\t\t<Checkbox value={0} onChange={onChange} defaultChecked={false}>\r\n\t\t\t\t\t<span className=\"color-white\">Đã xem tất cả</span>\r\n\t\t\t\t</Checkbox>\r\n\t\t\t),\r\n\t\t\tdataIndex: 'Status',\r\n\t\t\trender: (text, record) => (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{text == 0 ? (\r\n\t\t\t\t\t\t<Checkbox className=\"uncheck\" value={record.ID} onChange={onChange}>\r\n\t\t\t\t\t\t\t<span>Đã xem</span>\r\n\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Checkbox checked>\r\n\t\t\t\t\t\t\t<span>Đã xem</span>\r\n\t\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tên thông báo',\r\n\t\t\tdataIndex: 'NotificationTitle',\r\n\t\t\trender: (text) => <span className=\"font-weight-black\">{text}</span>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Nội dung thông báo',\r\n\t\t\tdataIndex: 'NotificationContent',\r\n\t\t\trender: (text) => <div className=\"content-notification\">{ReactHtmlParser(text)}</div>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Thời gian',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\trender: (date) => <span className=\"font-weight-primary\">{moment(date).format('DD/MM/YYYY')}</span>\r\n\t\t},\r\n\t\t{\r\n\t\t\trender: (record) => (\r\n\t\t\t\t<Tooltip title=\"Chi tiết\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn btn-icon delete\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetIsModalVisible(true)\r\n\t\t\t\t\t\t\tsetContentRow({\r\n\t\t\t\t\t\t\t\tID: record.ID,\r\n\t\t\t\t\t\t\t\tcontent: record.NotificationContent,\r\n\t\t\t\t\t\t\t\ttitle: record.NotificationTitle,\r\n\t\t\t\t\t\t\t\tstatus: record.Status\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<AlertCircle color=\"#32c6a4\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataTable()\r\n\t}, [todoApi])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={<AlertCircle color=\"#32c6a4\" />}\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonOk={() => {\r\n\t\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\t\tcontentRow.status == 0 && _onSubmit({ ID: contentRow.ID })\r\n\t\t\t\t}}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\t\tcontentRow.status == 0 && _onSubmit({ ID: contentRow.ID })\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<h4>{contentRow.title}</h4>\r\n\t\t\t\t<div>{ReactHtmlParser(contentRow.content)}</div>\r\n\t\t\t</Modal>\r\n\t\t\t<PowerTable\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={dataTable?.totalRow && dataTable?.totalRow}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Danh sách thông báo\"\r\n\t\t\t\tdataSource={dataTable?.data}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nNotification.layout = LayoutBase\r\nexport default Notification\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Dashboard\\\\StatisticalTable.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { DatePicker, Radio, Skeleton } from 'antd';\nimport moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total';\nimport PowerTable from '~/components/PowerTable';\nimport { useWrap } from '~/context/wrap';\n\nconst StatisticalTotalLessonOfTeacher = props => {\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState();\n  const {\n    pageSize\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: filters,\n    1: setFilters\n  } = useState({\n    pageSize: pageSize,\n    pageIndex: 1,\n    year: new Date().getFullYear(),\n    month: new Date().getMonth() + 1\n  });\n  const {\n    0: typeView,\n    1: setTypeView\n  } = useState(1); // PAGINATION\n\n  const getPagination = pageIndex => {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      pageIndex\n    }));\n  };\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await statisticalApi.getStatisticalTotalLessonsOfTeacher(filters);\n\n      if (res.status === 200) {\n        setDataSource(res.data.data);\n        setTotalPage(res.data.totalRow);\n      }\n\n      if (res.status === 204) {\n        setDataSource([]);\n      }\n    } catch (error) {} finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    getDataSource();\n  }, [filters]);\n  const columns = [{\n    title: 'Ảnh đại diện',\n    width: 120,\n    dataIndex: 'Avatar',\n    render: (text, data) => /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: 40,\n        height: 40,\n        borderRadius: '100%'\n      },\n      src: data.Avatar.length > 0 ? data.Avatar : '/images/user.png',\n      alt: \"avatar img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  }, {\n    title: 'Họ tên',\n    width: 150,\n    dataIndex: 'FullNameUnicode'\n  }, {\n    title: 'Tổng số bài giảng',\n    width: 180,\n    dataIndex: 'TotalLesson'\n  }, {\n    title: 'Email',\n    width: 150,\n    dataIndex: 'Email'\n  }, {\n    title: 'Số điện thoại',\n    width: 150,\n    dataIndex: 'Mobile'\n  }];\n\n  const handleChangeDate = value => {\n    if (typeView == 1) {\n      setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n        month: Number(moment(value).format('MM')),\n        year: Number(moment(value).format('YYYY'))\n      }));\n    } else if (typeView == 2) {\n      setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n        month: 0,\n        year: Number(moment(value).format('YYYY'))\n      }));\n    }\n  };\n\n  const renderExtra = () => {\n    if (typeView == 1) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          onChange: handleChangeDate,\n          picker: \"month\",\n          className: \"mr-2\",\n          style: {\n            width: 130\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this)\n      }, void 0, false);\n    } else if (typeView == 2) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          onChange: handleChangeDate,\n          picker: \"year\",\n          className: \"mr-2\",\n          style: {\n            width: 130\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  const onChange = event => {\n    setTypeView(event.target.value);\n  };\n\n  const extra = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderExtra(), /*#__PURE__*/_jsxDEV(Radio.Group, {\n        onChange: onChange,\n        optionType: \"button\",\n        buttonStyle: \"solid\",\n        value: typeView,\n        children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: 1,\n          children: \"Th\\xE1ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: 2,\n          children: \"N\\u0103m\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  };\n\n  const renderTable = () => {\n    return /*#__PURE__*/_jsxDEV(PowerTable, {\n      loading: isLoading,\n      totalPage: totalPage,\n      dataSource: dataSource,\n      getPagination: getPagination,\n      columns: columns,\n      Extra: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            textTransform: 'uppercase'\n          },\n          children: \"Th\\xF4ng k\\xEA s\\u1ED1 l\\u1EDBp d\\u1EA1y c\\u1EE7a gi\\xE1o vi\\xEAn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, this)\n      }, void 0, false),\n      TitleCard: extra()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading.type === 'GET_ALL' && isLoading.status == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pt-5 pb-5\",\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        active: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pt-5 pb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: renderTable()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\nexport default StatisticalTotalLessonOfTeacher;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Dashboard/StatisticalTable.tsx"],"names":["DatePicker","Radio","Skeleton","moment","React","useState","useEffect","statisticalApi","PowerTable","useWrap","StatisticalTotalLessonOfTeacher","props","dataSource","setDataSource","pageSize","isLoading","setIsLoading","type","status","totalPage","setTotalPage","filters","setFilters","pageIndex","year","Date","getFullYear","month","getMonth","typeView","setTypeView","getPagination","getDataSource","res","getStatisticalTotalLessonsOfTeacher","data","totalRow","error","columns","title","width","dataIndex","render","text","height","borderRadius","Avatar","length","handleChangeDate","value","Number","format","renderExtra","onChange","event","target","extra","renderTable","textTransform"],"mappings":"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","sourcesContent":["import { DatePicker, Radio, Skeleton } from 'antd'\r\nimport moment from 'moment'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst StatisticalTotalLessonOfTeacher = (props) => {\r\n\tconst [dataSource, setDataSource] = useState<IStatTotalLessonOfTeacher[]>()\r\n\tconst { pageSize } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [filters, setFilters] = useState({\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: 1,\r\n\t\tyear: new Date().getFullYear(),\r\n\t\tmonth: new Date().getMonth() + 1\r\n\t})\r\n\tconst [typeView, setTypeView] = useState(1)\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number) => {\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\tpageIndex\r\n\t\t})\r\n\t}\r\n\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({ type: 'GET_ALL', status: true })\r\n\t\ttry {\r\n\t\t\tlet res = await statisticalApi.getStatisticalTotalLessonsOfTeacher(filters)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetDataSource(res.data.data)\r\n\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetDataSource([])\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ type: 'GET_ALL', status: false })\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t}, [filters])\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Ảnh đại diện',\r\n\t\t\twidth: 120,\r\n\t\t\tdataIndex: 'Avatar',\r\n\t\t\trender: (text, data) => (\r\n\t\t\t\t<img\r\n\t\t\t\t\tstyle={{ width: 40, height: 40, borderRadius: '100%' }}\r\n\t\t\t\t\tsrc={data.Avatar.length > 0 ? data.Avatar : '/images/user.png'}\r\n\t\t\t\t\talt=\"avatar img\"\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{ title: 'Họ tên', width: 150, dataIndex: 'FullNameUnicode' },\r\n\t\t{ title: 'Tổng số bài giảng', width: 180, dataIndex: 'TotalLesson' },\r\n\t\t{ title: 'Email', width: 150, dataIndex: 'Email' },\r\n\t\t{ title: 'Số điện thoại', width: 150, dataIndex: 'Mobile' }\r\n\t]\r\n\r\n\tconst handleChangeDate = (value) => {\r\n\t\tif (typeView == 1) {\r\n\t\t\tsetFilters({ ...filters, month: Number(moment(value).format('MM')), year: Number(moment(value).format('YYYY')) })\r\n\t\t} else if (typeView == 2) {\r\n\t\t\tsetFilters({ ...filters, month: 0, year: Number(moment(value).format('YYYY')) })\r\n\t\t}\r\n\t}\r\n\r\n\tconst renderExtra = () => {\r\n\t\tif (typeView == 1) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<DatePicker onChange={handleChangeDate} picker=\"month\" className=\"mr-2\" style={{ width: 130 }} />\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t} else if (typeView == 2) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<DatePicker onChange={handleChangeDate} picker=\"year\" className=\"mr-2\" style={{ width: 130 }} />\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onChange = (event) => {\r\n\t\tsetTypeView(event.target.value)\r\n\t}\r\n\r\n\tconst extra = () => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{renderExtra()}\r\n\t\t\t\t<Radio.Group onChange={onChange} optionType=\"button\" buttonStyle=\"solid\" value={typeView}>\r\n\t\t\t\t\t<Radio.Button value={1}>Tháng</Radio.Button>\r\n\t\t\t\t\t<Radio.Button value={2}>Năm</Radio.Button>\r\n\t\t\t\t</Radio.Group>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tconst renderTable = () => {\r\n\t\treturn (\r\n\t\t\t<PowerTable\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\ttotalPage={totalPage}\r\n\t\t\t\tdataSource={dataSource}\r\n\t\t\t\tgetPagination={getPagination}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h4 style={{ textTransform: 'uppercase' }}>Thông kê số lớp dạy của giáo viên</h4>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\tTitleCard={extra()}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading.type === 'GET_ALL' && isLoading.status == true ? (\r\n\t\t\t\t<div className=\"row pt-5 pb-5\">\r\n\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"row pt-5 pb-5\">\r\n\t\t\t\t\t<div className=\"col-12\">{renderTable()}</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default StatisticalTotalLessonOfTeacher\r\n"]},"metadata":{},"sourceType":"module"}
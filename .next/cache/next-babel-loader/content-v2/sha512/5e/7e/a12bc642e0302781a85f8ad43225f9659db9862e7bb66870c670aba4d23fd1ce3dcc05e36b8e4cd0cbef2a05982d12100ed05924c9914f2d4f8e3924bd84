{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\option\\\\notification\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport NotificationForm from '~/components/Global/Option/NotificationForm';\nimport ExpandTable from '~/components/ExpandTable';\nimport { CheckCircle } from 'react-feather';\nimport LayoutBase from '~/components/LayoutBase';\nimport { useWrap } from '~/context/wrap';\nimport { notificationApi, branchApi } from '~/apiBase';\nimport moment from 'moment';\nimport ReactHtmlParser from 'react-html-parser';\n\nvar Notification = function Notification() {\n  _s();\n\n  var _useState = useState([]),\n      dataTable = _useState[0],\n      setDataTable = _useState[1];\n\n  var _useState2 = useState([]),\n      dataBranch = _useState2[0],\n      setDataBranch = _useState2[1];\n\n  var _useState3 = useState({\n    SalaryID: null,\n    Enable: null\n  }),\n      dataDelete = _useState3[0],\n      setDataDelete = _useState3[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      pageSize = _useWrap.pageSize,\n      handleReloadNoti = _useWrap.handleReloadNoti;\n\n  var _useState4 = useState(false),\n      isModalVisible = _useState4[0],\n      setIsModalVisible = _useState4[1];\n\n  var _useState5 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState5[0],\n      setIsLoading = _useState5[1];\n\n  var _useState6 = useState(null),\n      totalPage = _useState6[0],\n      setTotalPage = _useState6[1];\n\n  var _useState7 = useState(1),\n      currentPage = _useState7[0],\n      setCurrentPage = _useState7[1];\n\n  var pageIndex = 1; // SORT\n\n  var dataOption = [{\n    dataSort: {\n      sort: 2,\n      sortType: false\n    },\n    value: 3,\n    text: 'Tên giảm dần'\n  }, {\n    dataSort: {\n      sort: 2,\n      sortType: true\n    },\n    value: 4,\n    text: 'Tên tăng dần '\n  }]; // PARAMS SEARCH\n\n  var listField = {\n    FullName: ''\n  }; // PARAMS API GETALL\n\n  var listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    sort: null,\n    sortType: null,\n    RoleID: null,\n    FullName: null,\n    fromDate: null,\n    toDate: null\n  };\n\n  var _useState8 = useState(listTodoApi),\n      todoApi = _useState8[0],\n      setTodoApi = _useState8[1]; // GET DATA\n\n\n  var getDataTable = function getDataTable() {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, results;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return notificationApi.getAll(todoApi);\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status == 204) {\n                showNoti('danger', 'Không có dữ liệu');\n                handleReset();\n                setDataTable([]);\n              }\n\n              if (res.status == 200) {\n                // if (res.data.data.length < 1) {\n                // \thandleReset();\n                // }\n                setTotalPage(res.data.totalRow);\n                results = res.data.data.map(function (row, i) {\n                  return {\n                    key: row.NotificationID,\n                    BranchID: row.BranchID,\n                    BranchName: row.BranchName,\n                    CourseID: row.CourseID,\n                    CreatedBy: row.CreatedBy,\n                    CreatedOn: row.CreatedOn,\n                    Enable: row.Enable,\n                    IsSendMail: row.IsSendMail,\n                    ModifiedBy: row.ModifiedBy,\n                    ModifiedOn: row.ModifiedOn,\n                    NotificationContent: row.NotificationContent,\n                    NotificationID: row.NotificationID,\n                    NotificationTitle: row.NotificationTitle,\n                    RoleID: row.RoleID,\n                    RoleName: row.RoleName,\n                    AllRole: row.AllRole,\n                    AllBranch: row.AllBranch\n                  };\n                });\n                setDataTable(results);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              showNoti('danger', _context.t0.message);\n\n            case 11:\n              _context.prev = 11;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8, 11, 14]]);\n    }))();\n  }; // GET DATA USERINFORMATION\n\n\n  var getDataBranch = function getDataBranch() {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return branchApi.getAll({\n                pageSize: 9999,\n                pageIndex: 1\n              });\n\n            case 3:\n              res = _context2.sent;\n              res.status == 200 && setDataBranch(res.data.data);\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              showNoti('danger', _context2.t0.message);\n\n            case 10:\n              _context2.prev = 10;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context2.finish(10);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7, 10, 13]]);\n    }))();\n  }; // ADD DATA\n\n\n  var _onSubmit2 = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n      var res, _res;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              res = null;\n              _context3.prev = 2;\n              _context3.next = 5;\n              return notificationApi.add(data);\n\n            case 5:\n              res = _context3.sent;\n              ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && (afterPost('Thêm'), handleReloadNoti());\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](2);\n              showNoti('danger', _context3.t0.message);\n\n            case 12:\n              _context3.prev = 12;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context3.finish(12);\n\n            case 15:\n              return _context3.abrupt(\"return\", res);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 9, 12, 15]]);\n    }));\n\n    return function _onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var afterPost = function afterPost(value) {\n    showNoti('success', \"\".concat(value, \" th\\xE0nh c\\xF4ng\"));\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // PAGINATION\n\n\n  var getPagination = function getPagination(pageNumber, pageSize) {\n    if (!pageSize) pageSize = 10;\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      //   ...listFieldSearch,\n      pageIndex: pageIndex,\n      pageSize: pageSize\n    }));\n  }; // HANDLE RESET\n\n\n  var handleReset = function handleReset() {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // const expandedRowRender = () => {\n  //   return (\n  //     <div>\n  //       Tuần tới đội chuyên môn HN sẽ họp tại tầng 8 CS Thái Hà. Thời gian: 10h\n  //       sáng thứ 2 (26/10) Nội dung: Phát triển trong môi trường ZIM và những kĩ\n  //       năng cần thiết.\n  //     </div>\n  //   );\n  // };\n  // console.log('todoApi: ', todoApi);\n\n\n  useEffect(function () {\n    getDataTable();\n    getDataBranch();\n    console.log('todoApi: ', todoApi);\n  }, [todoApi]);\n  var columns = [{\n    title: 'Date',\n    dataIndex: 'ModifiedOn',\n    render: function render(date) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: moment(date).format('DD/MM/YYYY')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 22\n      }, _this);\n    } // ...FilterDateColumn(\"expires\")\n\n  }, {\n    title: 'Role',\n    dataIndex: 'RoleName',\n    // ...FilterColumn(\"teacher\"),\n    render: function render(role, record, index) {\n      if (record.AllRole) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"T\\u1EA5t c\\u1EA3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, _this);\n      } else if (role) {\n        var arr = role.split(',');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-tag\",\n          children: arr.map(function (item, i) {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 9\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 7\n        }, _this);\n      }\n    }\n  }, {\n    title: 'Center',\n    dataIndex: 'BranchName',\n    render: function render(BranchName, record, index) {\n      if (record.AllBranch) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"T\\u1EA5t c\\u1EA3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, _this);\n      } else if (BranchName) {\n        var arr = BranchName.split(',');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-tag\",\n          children: arr.map(function (item, i) {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 9\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 7\n        }, _this);\n      }\n    } // ...FilterColumn(\"center\")\n\n  }, {\n    title: 'Email',\n    dataIndex: 'IsSendMail',\n    render: function render(IsSendMail) {\n      if (IsSendMail) {\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          color: \"#06d6a0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, _this);\n      }\n    }\n  }, {\n    title: 'Title',\n    dataIndex: 'NotificationTitle'\n  }];\n  return /*#__PURE__*/_jsxDEV(ExpandTable, {\n    loading: isLoading,\n    currentPage: currentPage,\n    totalPage: totalPage && totalPage,\n    getPagination: getPagination,\n    addClass: \"basic-header\",\n    TitlePage: \"Danh s\\xE1ch th\\xF4ng b\\xE1o\",\n    expandable: {\n      expandedRowRender: function expandedRowRender(record) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: 0\n          },\n          children: ReactHtmlParser(record.NotificationContent)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 36\n        }, _this);\n      },\n      rowExpandable: function rowExpandable(record) {\n        return record.NotificationTitle !== 'Not Expandable';\n      }\n    },\n    TitleCard: /*#__PURE__*/_jsxDEV(NotificationForm, {\n      showAdd: true,\n      isLoading: isLoading,\n      _onSubmit: function _onSubmit(data) {\n        return _onSubmit2(data);\n      },\n      dataBranch: dataBranch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }, _this),\n    dataSource: dataTable,\n    columns: columns,\n    Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extra-table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(Notification, \"bLa4KcbvcKTaB1qDFI7hMdxE6Tc=\", false, function () {\n  return [useWrap];\n});\n\n_c = Notification;\nNotification.layout = LayoutBase;\nexport default Notification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/option/notification/index.tsx"],"names":["React","useEffect","useState","NotificationForm","ExpandTable","CheckCircle","LayoutBase","useWrap","notificationApi","branchApi","moment","ReactHtmlParser","Notification","dataTable","setDataTable","dataBranch","setDataBranch","SalaryID","Enable","dataDelete","setDataDelete","showNoti","pageSize","handleReloadNoti","isModalVisible","setIsModalVisible","type","status","isLoading","setIsLoading","totalPage","setTotalPage","currentPage","setCurrentPage","pageIndex","dataOption","dataSort","sort","sortType","value","text","listField","FullName","listTodoApi","RoleID","fromDate","toDate","todoApi","setTodoApi","getDataTable","getAll","res","handleReset","data","totalRow","results","map","row","i","key","NotificationID","BranchID","BranchName","CourseID","CreatedBy","CreatedOn","IsSendMail","ModifiedBy","ModifiedOn","NotificationContent","NotificationTitle","RoleName","AllRole","AllBranch","message","getDataBranch","_onSubmit","add","afterPost","getPagination","pageNumber","console","log","columns","title","dataIndex","render","date","format","role","record","index","arr","split","item","expandedRowRender","margin","rowExpandable","layout"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport NotificationForm from '~/components/Global/Option/NotificationForm';\r\nimport ExpandTable from '~/components/ExpandTable';\r\nimport { CheckCircle } from 'react-feather';\r\nimport LayoutBase from '~/components/LayoutBase';\r\nimport { useWrap } from '~/context/wrap';\r\nimport { notificationApi, branchApi } from '~/apiBase';\r\nimport moment from 'moment';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst Notification = () => {\r\n\tconst [dataTable, setDataTable] = useState([]);\r\n\tconst [dataBranch, setDataBranch] = useState([]);\r\n\tconst [dataDelete, setDataDelete] = useState({\r\n\t\tSalaryID: null,\r\n\t\tEnable: null\r\n\t});\r\n\tconst { showNoti, pageSize, handleReloadNoti } = useWrap();\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t});\r\n\tconst [totalPage, setTotalPage] = useState(null);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\r\n\tlet pageIndex = 1;\r\n\r\n\t// SORT\r\n\tconst dataOption = [\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: false\r\n\t\t\t},\r\n\t\t\tvalue: 3,\r\n\t\t\ttext: 'Tên giảm dần'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdataSort: {\r\n\t\t\t\tsort: 2,\r\n\t\t\t\tsortType: true\r\n\t\t\t},\r\n\t\t\tvalue: 4,\r\n\t\t\ttext: 'Tên tăng dần '\r\n\t\t}\r\n\t];\r\n\r\n\t// PARAMS SEARCH\r\n\tlet listField = {\r\n\t\tFullName: ''\r\n\t};\r\n\r\n\t// PARAMS API GETALL\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tRoleID: null,\r\n\t\tFullName: null,\r\n\t\tfromDate: null,\r\n\t\ttoDate: null\r\n\t};\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi);\r\n\r\n\t// GET DATA\r\n\tconst getDataTable = () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await notificationApi.getAll(todoApi);\r\n\t\t\t\tif (res.status == 204) {\r\n\t\t\t\t\tshowNoti('danger', 'Không có dữ liệu');\r\n\t\t\t\t\thandleReset();\r\n\t\t\t\t\tsetDataTable([]);\r\n\t\t\t\t}\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\t// if (res.data.data.length < 1) {\r\n\t\t\t\t\t// \thandleReset();\r\n\t\t\t\t\t// }\r\n\t\t\t\t\tsetTotalPage(res.data.totalRow);\r\n\r\n\t\t\t\t\tconst results = res.data.data.map((row, i) => ({\r\n\t\t\t\t\t\tkey: row.NotificationID,\r\n\t\t\t\t\t\tBranchID: row.BranchID,\r\n\t\t\t\t\t\tBranchName: row.BranchName,\r\n\t\t\t\t\t\tCourseID: row.CourseID,\r\n\t\t\t\t\t\tCreatedBy: row.CreatedBy,\r\n\t\t\t\t\t\tCreatedOn: row.CreatedOn,\r\n\t\t\t\t\t\tEnable: row.Enable,\r\n\t\t\t\t\t\tIsSendMail: row.IsSendMail,\r\n\t\t\t\t\t\tModifiedBy: row.ModifiedBy,\r\n\t\t\t\t\t\tModifiedOn: row.ModifiedOn,\r\n\t\t\t\t\t\tNotificationContent: row.NotificationContent,\r\n\t\t\t\t\t\tNotificationID: row.NotificationID,\r\n\t\t\t\t\t\tNotificationTitle: row.NotificationTitle,\r\n\t\t\t\t\t\tRoleID: row.RoleID,\r\n\t\t\t\t\t\tRoleName: row.RoleName,\r\n\t\t\t\t\t\tAllRole: row.AllRole,\r\n\t\t\t\t\t\tAllBranch: row.AllBranch\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tsetDataTable(results);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})();\r\n\t};\r\n\t// GET DATA USERINFORMATION\r\n\tconst getDataBranch = () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet res = await branchApi.getAll({ pageSize: 9999, pageIndex: 1 });\r\n\t\t\t\tres.status == 200 && setDataBranch(res.data.data);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})();\r\n\t};\r\n\t// ADD DATA\r\n\tconst _onSubmit = async (data: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t});\r\n\r\n\t\tlet res = null;\r\n\t\ttry {\r\n\t\t\tres = await notificationApi.add(data);\r\n\t\t\tres?.status == 200 && (afterPost('Thêm'), handleReloadNoti());\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t};\r\n\r\n\tconst afterPost = (value) => {\r\n\t\tshowNoti('success', `${value} thành công`);\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t});\r\n\t\tsetCurrentPage(1);\r\n\t};\r\n\r\n\t// PAGINATION\r\n\tconst getPagination = (pageNumber: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10;\r\n\t\tpageIndex = pageNumber;\r\n\t\tsetCurrentPage(pageNumber);\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t//   ...listFieldSearch,\r\n\t\t\tpageIndex: pageIndex,\r\n\t\t\tpageSize: pageSize\r\n\t\t});\r\n\t};\r\n\r\n\t// HANDLE RESET\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t});\r\n\t\tsetCurrentPage(1);\r\n\t};\r\n\r\n\t// const expandedRowRender = () => {\r\n\t//   return (\r\n\t//     <div>\r\n\t//       Tuần tới đội chuyên môn HN sẽ họp tại tầng 8 CS Thái Hà. Thời gian: 10h\r\n\t//       sáng thứ 2 (26/10) Nội dung: Phát triển trong môi trường ZIM và những kĩ\r\n\t//       năng cần thiết.\r\n\t//     </div>\r\n\t//   );\r\n\t// };\r\n\r\n\t// console.log('todoApi: ', todoApi);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataTable();\r\n\t\tgetDataBranch();\r\n\r\n\t\tconsole.log('todoApi: ', todoApi);\r\n\t}, [todoApi]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Date',\r\n\t\t\tdataIndex: 'ModifiedOn',\r\n\t\t\trender: (date) => <p className=\"font-weight-black\">{moment(date).format('DD/MM/YYYY')}</p>\r\n\t\t\t// ...FilterDateColumn(\"expires\")\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Role',\r\n\t\t\tdataIndex: 'RoleName',\r\n\t\t\t// ...FilterColumn(\"teacher\"),\r\n\t\t\trender: (role, record, index) => {\r\n\t\t\t\tif (record.AllRole) {\r\n\t\t\t\t\treturn <span>Tất cả</span>;\r\n\t\t\t\t} else if (role) {\r\n\t\t\t\t\tlet arr = role.split(',');\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"list-tag\">\r\n\t\t\t\t\t\t\t{arr.map((item, i) => (\r\n\t\t\t\t\t\t\t\t<span key={i}>{item}</span>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Center',\r\n\t\t\tdataIndex: 'BranchName',\r\n\t\t\trender: (BranchName, record, index) => {\r\n\t\t\t\tif (record.AllBranch) {\r\n\t\t\t\t\treturn <span>Tất cả</span>;\r\n\t\t\t\t} else if (BranchName) {\r\n\t\t\t\t\tlet arr = BranchName.split(',');\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"list-tag\">\r\n\t\t\t\t\t\t\t{arr.map((item, i) => (\r\n\t\t\t\t\t\t\t\t<span key={i}>{item}</span>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// ...FilterColumn(\"center\")\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Email',\r\n\t\t\tdataIndex: 'IsSendMail',\r\n\t\t\trender: (IsSendMail) => {\r\n\t\t\t\tif (IsSendMail) {\r\n\t\t\t\t\treturn <CheckCircle color=\"#06d6a0\" />;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ title: 'Title', dataIndex: 'NotificationTitle' }\r\n\t];\r\n\r\n\treturn (\r\n\t\t<ExpandTable\r\n\t\t\tloading={isLoading}\r\n\t\t\tcurrentPage={currentPage}\r\n\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\tgetPagination={getPagination}\r\n\t\t\taddClass=\"basic-header\"\r\n\t\t\tTitlePage=\"Danh sách thông báo\"\r\n\t\t\texpandable={{\r\n\t\t\t\texpandedRowRender: (record) => <p style={{ margin: 0 }}>{ReactHtmlParser(record.NotificationContent)}</p>,\r\n\t\t\t\trowExpandable: (record) => record.NotificationTitle !== 'Not Expandable'\r\n\t\t\t}}\r\n\t\t\tTitleCard={\r\n\t\t\t\t<NotificationForm showAdd={true} isLoading={isLoading} _onSubmit={(data: any) => _onSubmit(data)} dataBranch={dataBranch} />\r\n\t\t\t}\r\n\t\t\tdataSource={dataTable}\r\n\t\t\tcolumns={columns}\r\n\t\t\tExtra={\r\n\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t{/* <FilterTable />\r\n          <SortBox /> */}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n};\r\nNotification.layout = LayoutBase;\r\nexport default Notification;\r\n"]},"metadata":{},"sourceType":"module"}
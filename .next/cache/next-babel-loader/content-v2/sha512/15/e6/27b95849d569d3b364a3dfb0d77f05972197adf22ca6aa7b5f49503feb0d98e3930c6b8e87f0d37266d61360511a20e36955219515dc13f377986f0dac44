{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Dashboard\\\\StatisticalPercentOfStudentBySource.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Skeleton } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total';\nimport BarChartStatistical from './BarChart';\n\nvar StatisticalRate = function StatisticalRate() {\n  _s();\n\n  var _useState = useState([]),\n      statisticalPercentStudentBySource = _useState[0],\n      setStatisticalPercentStudentBySource = _useState[1];\n\n  var _useState2 = useState({\n    status: '',\n    loading: false\n  }),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var getPercentOfStudentBySource = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, temp;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading({\n                status: 'GET_STAT_PERCENT_STUDENT_BY_SOURCE',\n                loading: true\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return statisticalApi.getPercentOfStudentBySource();\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                temp = [];\n                res.data.data.forEach(function (item) {\n                  return temp.push({\n                    ID: item.SourceInformationID,\n                    dataKey: item.SourceInformationName,\n                    value: item.Amount,\n                    title: 'TỈ LỆ HỌC VIÊN THEO NGUỒN'\n                  });\n                });\n                setStatisticalPercentStudentBySource(temp);\n              }\n\n              if (res.status === 204) {\n                setStatisticalPercentStudentBySource([]);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 11:\n              _context.prev = 11;\n              setIsLoading({\n                status: 'GET_STAT_PERCENT_STUDENT_BY_SOURCE',\n                loading: false\n              });\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9, 11, 14]]);\n    }));\n\n    return function getPercentOfStudentBySource() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getPercentOfStudentBySource();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading.status === 'GET_STAT_PERCENT_STUDENT_BY_SOURCE' && isLoading.loading == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-5\",\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        active: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(BarChartStatistical, {\n          title: 'Thống kê phần trăm học viên theo nguồn',\n          dataStatistical: statisticalPercentStudentBySource,\n          colorTick: \"#dd4667\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false);\n};\n\n_s(StatisticalRate, \"crHFrWhUr7lUKbZSwmQGXtfnIwo=\");\n\n_c = StatisticalRate;\nexport default StatisticalRate;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatisticalRate\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Dashboard/StatisticalPercentOfStudentBySource.tsx"],"names":["Skeleton","React","useState","useEffect","statisticalApi","BarChartStatistical","StatisticalRate","statisticalPercentStudentBySource","setStatisticalPercentStudentBySource","status","loading","isLoading","setIsLoading","getPercentOfStudentBySource","res","temp","data","forEach","item","push","ID","SourceInformationID","dataKey","SourceInformationName","value","Amount","title"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,MAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,OAAOC,mBAAP,MAAgC,YAAhC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAAA,kBACqDJ,QAAQ,CAAsB,EAAtB,CAD7D;AAAA,MACtBK,iCADsB;AAAA,MACaC,oCADb;;AAAA,mBAEKN,QAAQ,CAAC;AAAEO,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAAD,CAFb;AAAA,MAEtBC,SAFsB;AAAA,MAEXC,YAFW;;AAI7B,MAAMC,2BAA2B;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACnCD,cAAAA,YAAY,CAAC;AAAEH,gBAAAA,MAAM,EAAE,oCAAV;AAAgDC,gBAAAA,OAAO,EAAE;AAAzD,eAAD,CAAZ;AADmC;AAAA;AAAA,qBAGlBN,cAAc,CAACS,2BAAf,EAHkB;;AAAA;AAG9BC,cAAAA,GAH8B;;AAIlC,kBAAIA,GAAG,CAACL,MAAJ,KAAe,GAAnB,EAAwB;AACnBM,gBAAAA,IADmB,GACZ,EADY;AAEvBD,gBAAAA,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,OAAd,CAAsB,UAACC,IAAD;AAAA,yBACrBH,IAAI,CAACI,IAAL,CAAU;AACTC,oBAAAA,EAAE,EAAEF,IAAI,CAACG,mBADA;AAETC,oBAAAA,OAAO,EAAEJ,IAAI,CAACK,qBAFL;AAGTC,oBAAAA,KAAK,EAAEN,IAAI,CAACO,MAHH;AAITC,oBAAAA,KAAK,EAAE;AAJE,mBAAV,CADqB;AAAA,iBAAtB;AAQAlB,gBAAAA,oCAAoC,CAACO,IAAD,CAApC;AACA;;AACD,kBAAID,GAAG,CAACL,MAAJ,KAAe,GAAnB,EAAwB;AACvBD,gBAAAA,oCAAoC,CAAC,EAAD,CAApC;AACA;;AAlBiC;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqBlCI,cAAAA,YAAY,CAAC;AAAEH,gBAAAA,MAAM,EAAE,oCAAV;AAAgDC,gBAAAA,OAAO,EAAE;AAAzD,eAAD,CAAZ;AArBkC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAA3BG,2BAA2B;AAAA;AAAA;AAAA,KAAjC;;AAyBAV,EAAAA,SAAS,CAAC,YAAM;AACfU,IAAAA,2BAA2B;AAC3B,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAA,cACEF,SAAS,CAACF,MAAV,KAAqB,oCAArB,IAA6DE,SAAS,CAACD,OAAV,IAAqB,IAAlF,gBACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACC,QAAC,QAAD;AAAU,QAAA,MAAM;AAAhB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,aADA,gBAKA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACC,QAAC,mBAAD;AACC,UAAA,KAAK,EAAE,wCADR;AAEC,UAAA,eAAe,EAAEH,iCAFlB;AAGC,UAAA,SAAS,EAAC;AAHX;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AANF,mBADD;AAmBA,CApDD;;GAAMD,e;;KAAAA,e;AAsDN,eAAeA,eAAf","sourcesContent":["import { Skeleton } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { statisticalApi } from '~/apiBase/statistical/statistical-total'\r\nimport BarChartStatistical from './BarChart'\r\n\r\nconst StatisticalRate = () => {\r\n\tconst [statisticalPercentStudentBySource, setStatisticalPercentStudentBySource] = useState<IStatDataBarChart[]>([])\r\n\tconst [isLoading, setIsLoading] = useState({ status: '', loading: false })\r\n\r\n\tconst getPercentOfStudentBySource = async () => {\r\n\t\tsetIsLoading({ status: 'GET_STAT_PERCENT_STUDENT_BY_SOURCE', loading: true })\r\n\t\ttry {\r\n\t\t\tlet res = await statisticalApi.getPercentOfStudentBySource()\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tlet temp = []\r\n\t\t\t\tres.data.data.forEach((item) =>\r\n\t\t\t\t\ttemp.push({\r\n\t\t\t\t\t\tID: item.SourceInformationID,\r\n\t\t\t\t\t\tdataKey: item.SourceInformationName,\r\n\t\t\t\t\t\tvalue: item.Amount,\r\n\t\t\t\t\t\ttitle: 'TỈ LỆ HỌC VIÊN THEO NGUỒN'\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\tsetStatisticalPercentStudentBySource(temp)\r\n\t\t\t}\r\n\t\t\tif (res.status === 204) {\r\n\t\t\t\tsetStatisticalPercentStudentBySource([])\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({ status: 'GET_STAT_PERCENT_STUDENT_BY_SOURCE', loading: false })\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetPercentOfStudentBySource()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading.status === 'GET_STAT_PERCENT_STUDENT_BY_SOURCE' && isLoading.loading == true ? (\r\n\t\t\t\t<div className=\"row pb-5\">\r\n\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"row pb-5\">\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<BarChartStatistical\r\n\t\t\t\t\t\t\ttitle={'Thống kê phần trăm học viên theo nguồn'}\r\n\t\t\t\t\t\t\tdataStatistical={statisticalPercentStudentBySource}\r\n\t\t\t\t\t\t\tcolorTick=\"#dd4667\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default StatisticalRate\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\customer\\\\parents\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { areaApi, branchApi, jobApi, parentsApi, puroseApi, sourceInfomationApi, staffApi, staffSalaryApi } from '~/apiBase';\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport ParentsForm from '~/components/Global/Customer/ParentsList/ParentsForm';\nimport ResetPassParent from '~/components/Global/Customer/ParentsList/ResetPassParent';\nimport LayoutBase from '~/components/LayoutBase';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nlet pageIndex = 1;\nlet dataRoles = [];\nconst Roles = [{\n  id: 1,\n  RoleName: 'Admin'\n}, {\n  id: 5,\n  RoleName: 'Nhân viên quản lí'\n}, {\n  id: 6,\n  RoleName: 'Nhân viên bán hàng'\n}, {\n  id: 7,\n  RoleName: 'Học vụ'\n}, {\n  id: 8,\n  RoleName: 'Quản lí chuyên môn'\n}, {\n  id: 9,\n  RoleName: 'Kế toán'\n}];\n\n(function getListRoles() {\n  dataRoles = Roles.map(item => ({\n    title: item.RoleName,\n    value: item.id\n  }));\n})();\n\nlet listFieldSearch = {\n  pageIndex: 1,\n  FullNameUnicode: null\n};\nlet listFieldFilter = {\n  pageIndex: 1,\n  fromDate: null,\n  toDate: null,\n  RoleID: null,\n  BranchID: null,\n  AreaID: null,\n  StatusID: null\n};\nconst dataOption = [{\n  dataSort: {\n    sort: 0,\n    sortType: false\n  },\n  text: 'Tên Z-A'\n}, {\n  dataSort: {\n    sort: 0,\n    sortType: true\n  },\n  text: 'Tên A-Z '\n}]; // -- FOR DIFFERENT VIEW --\n\nconst optionGender = [{\n  value: 0,\n  title: 'Nữ'\n}, {\n  value: 1,\n  title: 'Nam'\n}, {\n  value: 0,\n  title: 'Khác'\n}];\nconst listApi = [{\n  api: areaApi,\n  text: 'Tỉnh/Tp',\n  name: 'Area'\n}, {\n  api: jobApi,\n  text: 'Công việc',\n  name: 'Job'\n}, {\n  api: puroseApi,\n  text: 'Mục đích học',\n  name: 'Purposes'\n}, {\n  api: branchApi,\n  text: 'Trung tâm',\n  name: 'Branch'\n}, {\n  api: parentsApi,\n  text: 'Phụ huynh',\n  name: 'Parent'\n}, {\n  api: sourceInfomationApi,\n  text: 'Nguồn khách hàng',\n  name: 'SourceInformation'\n}, {\n  api: staffApi,\n  text: 'Nguồn khách hàng',\n  name: 'Counselors'\n}];\n\nconst ParentsList = () => {\n  const {\n    0: listDataForm,\n    1: setListDataForm\n  } = useState({\n    Area: [],\n    DistrictID: [],\n    WardID: [],\n    Role: dataRoles,\n    Branch: [],\n    Purposes: [],\n    SourceInformation: [],\n    Parent: [],\n    Counselors: []\n  }); // ------ BASE USESTATE TABLE -------\n\n  const {\n    0: dataCenter,\n    1: setDataCenter\n  } = useState([]);\n  const {\n    0: dataArea,\n    1: setDataArea\n  } = useState([]);\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    showNoti,\n    pageSize\n  } = useWrap();\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    sort: null,\n    sortType: null,\n    fromDate: null,\n    toDate: null,\n    FullNameUnicode: null,\n    RoleID: null,\n    BranchID: null,\n    AreaID: null\n  };\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: indexRow,\n    1: setIndexRow\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi); // GET LIST ROLES\n\n  const {\n    0: dataFilter,\n    1: setDataFilter\n  } = useState([{\n    name: 'AreaID',\n    title: 'Tỉnh/TP',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: null,\n    // Gọi api xong trả data vào đây\n    value: null\n  }, {\n    name: 'BranchID',\n    title: 'Trung tâm',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: null,\n    value: null\n  }, {\n    name: 'RoleID',\n    title: 'Chức vụ',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: dataRoles,\n    value: null\n  }, {\n    name: 'StatusID',\n    title: 'Trạng thái',\n    col: 'col-md-6 col-12',\n    type: 'select',\n    optionList: [{\n      value: 0,\n      title: 'Hoạt động'\n    }, {\n      value: 1,\n      title: 'Không Hoạt động'\n    }],\n    value: null\n  }, {\n    name: 'date-range',\n    title: 'Từ - đến',\n    col: 'col-12',\n    type: 'date-range',\n    value: null\n  }]); // FOR STUDENT FORM\n  // ------------- ADD data to list --------------\n\n  const makeNewData = (data, name) => {\n    let newData = null;\n\n    switch (name) {\n      case 'Area':\n        newData = data.map(item => ({\n          title: item.AreaName,\n          value: item.AreaID\n        }));\n        setDataFunc('AreaID', newData);\n        break;\n\n      case 'DistrictID':\n        newData = data.map(item => ({\n          title: item.DistrictName,\n          value: item.ID\n        }));\n        break;\n\n      case 'WardID':\n        newData = data.map(item => ({\n          title: item.WardName,\n          value: item.ID\n        }));\n        break;\n\n      case 'Branch':\n        newData = data.map(item => ({\n          title: item.BranchName,\n          value: item.ID\n        }));\n        setDataFunc('BranchID', newData);\n        break;\n\n      case 'Job':\n        newData = data.map(item => ({\n          title: item.JobName,\n          value: item.JobID\n        }));\n        break;\n\n      case 'Purposes':\n        newData = data.map(item => ({\n          title: item.PurposesName,\n          value: item.PurposesID\n        }));\n        break;\n\n      case 'Parent':\n        newData = data.map(item => ({\n          title: item.FullNameUnicode,\n          value: item.UserInformationID\n        }));\n        break;\n\n      case 'SourceInformation':\n        newData = data.map(item => ({\n          title: item.SourceInformationName,\n          value: item.SourceInformationID\n        }));\n        setDataFunc('SourceInformationID', newData);\n        break;\n\n      case 'Counselors':\n        newData = data.map(item => ({\n          title: item.FullNameUnicode,\n          value: item.UserInformationID\n        }));\n        break;\n\n      default:\n        break;\n    }\n\n    return newData;\n  };\n\n  const getDataTolist = (data, name) => {\n    let newData = makeNewData(data, name);\n    Object.keys(listDataForm).forEach(function (key) {\n      if (key == name) {\n        listDataForm[key] = newData;\n      }\n    });\n    setListDataForm(_objectSpread({}, listDataForm));\n  }; // ----------- GET DATA SOURCE ---------------\n\n\n  const getDataStudentForm = arrApi => {\n    arrApi.forEach((item, index) => {\n      ;\n\n      (async () => {\n        let res = null;\n\n        try {\n          if (item.name == 'Counselors') {\n            res = await item.api.getAll({\n              pageIndex: 1,\n              pageSize: 99999,\n              RoleID: 6,\n              StatusID: 0,\n              Enable: true\n            });\n          } else {\n            res = await item.api.getAll({\n              pageIndex: 1,\n              pageSize: 99999,\n              Enable: true\n            });\n          }\n\n          res.status == 200 && getDataTolist(res.data.data, item.name);\n          res.status == 204 && console.log(item.text + ' Không có dữ liệu');\n        } catch (error) {\n          console.log(error);\n        } finally {}\n      })();\n    });\n  }; // GET DATA SOURCE\n\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await parentsApi.getAll(todoApi);\n      res.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow), showNoti('success', 'Thành công'));\n      res.status == 204 && showNoti('danger', 'Không có dữ liệu') && setDataSource([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // ------ SET DATA FUN ------\n\n\n  const setDataFunc = (name, data) => {\n    dataFilter.every((item, index) => {\n      if (item.name == name) {\n        item.optionList = data;\n        return false;\n      }\n\n      return true;\n    });\n    setDataFilter([...dataFilter]);\n  }; // ---------------- AFTER SUBMIT -----------------\n\n\n  const afterPost = mes => {\n    // showNoti(\"success\", \"Thêm nhân viên thành công\");\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // ----------- SUBMI FORM ------------\n\n\n  const returnBranchName = branchID => {\n    let newArr = [];\n    let listID = branchID.split(',');\n    listID.forEach(item => {\n      let newObj = {\n        ID: parseInt(item),\n        BranchName: listDataForm === null || listDataForm === void 0 ? void 0 : listDataForm.Branch.find(a => a.value === parseInt(item)).title\n      };\n      newObj && newArr.push(newObj);\n    });\n    return newArr;\n  };\n\n  const onSubmitSalary = async data => {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res = null;\n\n    try {\n      res = await staffSalaryApi.update(data);\n\n      if (res.status == 200) {\n        showNoti('success', 'Thêm lương thành công');\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n    }\n\n    return res;\n  };\n\n  const onSubmit = async data => {\n    if (typeof data.Branch != 'undefined') {\n      data.Branch = data.Branch.toString();\n    } else {\n      data.Branch = '';\n    }\n\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res = null;\n\n    try {\n      if (data.UserInformationID) {\n        res = await parentsApi.update(data);\n\n        if (res.status == 200) {\n          let newDataSource = [...dataSource];\n          newDataSource.splice(indexRow, 1, _objectSpread(_objectSpread({}, data), {}, {\n            Branch: returnBranchName(data.Branch)\n          }));\n          setDataSource(newDataSource);\n          showNoti('success', res.data.message);\n        }\n      } else {\n        var _res;\n\n        res = await parentsApi.add(data);\n        ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && afterPost(res.data.message);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'ADD_DATA',\n        status: false\n      });\n    }\n\n    return res;\n  }; // -------------- CHECK FIELD ---------------------\n\n\n  const checkField = (valueSearch, dataIndex) => {\n    let newList = _objectSpread({}, listFieldSearch);\n\n    Object.keys(newList).forEach(function (key) {\n      if (key != dataIndex) {\n        if (key != 'pageIndex') {\n          newList[key] = null;\n        }\n      } else {\n        newList[key] = valueSearch;\n      }\n    });\n    return newList;\n  }; // -------------- HANDLE FILTER ------------------\n\n\n  const handleFilter = listFilter => {\n    let newListFilter = _objectSpread({}, listFieldFilter);\n\n    listFilter.forEach((item, index) => {\n      let key = item.name;\n      Object.keys(newListFilter).forEach(keyFilter => {\n        if (keyFilter == key) {\n          newListFilter[key] = item.value;\n        }\n      });\n    });\n    setTodoApi(_objectSpread(_objectSpread(_objectSpread({}, listTodoApi), newListFilter), {}, {\n      pageIndex: 1\n    }));\n  }; // --------------- HANDLE SORT ----------------------\n\n\n  const handleSort = async option => {\n    let newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1,\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n\n    setCurrentPage(1), setTodoApi(newTodoApi);\n  }; // ------------ ON SEARCH -----------------------\n\n\n  const onSearch = (valueSearch, dataIndex) => {\n    let clearKey = checkField(valueSearch, dataIndex);\n    setTodoApi(_objectSpread(_objectSpread(_objectSpread({}, todoApi), clearKey), listFieldFilter));\n  }; // HANDLE RESET\n\n\n  const resetListFieldSearch = () => {\n    Object.keys(listFieldSearch).forEach(function (key) {\n      if (key != 'pageIndex') {\n        listFieldSearch[key] = null;\n      }\n    });\n  };\n\n  const handleReset = () => {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1), resetListFieldSearch();\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  const getPagination = pageNumber => {\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, todoApi), listFieldSearch), listFieldFilter), {}, {\n      pageIndex: pageIndex\n    }));\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(() => {\n    getDataSource();\n  }, [todoApi]);\n  useEffect(() => {\n    getDataStudentForm(listApi);\n  }, []);\n  const columns = [{\n    title: 'Mã phụ huynh',\n    dataIndex: 'UserCode',\n    width: 120,\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 22\n    }, this),\n    fixed: 'left'\n  }, _objectSpread(_objectSpread({\n    title: 'Họ tên',\n    width: 200,\n    dataIndex: 'FullNameUnicode'\n  }, FilterColumn('FullNameUnicode', onSearch, handleReset, 'text')), {}, {\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-primary\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 22\n    }, this),\n    fixed: 'left'\n  }), {\n    title: 'Giới tính',\n    dataIndex: 'Gender',\n    width: 100,\n    render: gender => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: gender == 0 ? 'Nữ' : gender == 1 ? 'Nam' : 'Khác'\n    }, void 0, false)\n  }, {\n    title: 'Tài khoản',\n    width: 120,\n    dataIndex: 'UserName'\n  }, {\n    title: 'Email',\n    width: 120,\n    dataIndex: 'Email'\n  }, {\n    title: 'SĐT',\n    width: 120,\n    dataIndex: 'Mobile'\n  }, // {\n  // \ttitle: 'Facebook',\n  // \tdataIndex: 'LinkFaceBook',\n  // \trender: (link) =>\n  // \t\tlink && (\n  // \t\t\t<a className=\"font-weight-black\" href={link} target=\"_blank\">\n  // \t\t\t\tLink\n  // \t\t\t</a>\n  // \t\t)\n  // },\n  {\n    title: 'Trạng thái',\n    dataIndex: 'StatusID',\n    width: 150,\n    className: 'text-center',\n    render: status => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `tag ${status == 0 ? 'green' : 'gray'}`,\n        children: status == 0 ? 'Hoạt động' : 'Khóa'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 27\n      }, this)\n    }, void 0, false)\n  }, {\n    title: '',\n    dataIndex: '',\n    width: 150,\n    align: 'center',\n    render: (text, data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(ParentsForm, {\n          getIndex: () => setIndexRow(index),\n          index: index,\n          rowData: data,\n          rowID: data.UserInformationID,\n          isLoading: isLoading,\n          onSubmit: data => onSubmit(data),\n          onSubmitSalary: data => onSubmitSalary(data),\n          listDataForm: listDataForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ResetPassParent, {\n        dataRow: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 5\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PowerTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: pageNumber => getPagination(pageNumber),\n      loading: isLoading,\n      addClass: \"basic-header\",\n      columns: columns,\n      dataSource: dataSource,\n      TitlePage: \"Danh s\\xE1ch ph\\u1EE5 huynh\",\n      TitleCard: /*#__PURE__*/_jsxDEV(ParentsForm, {\n        isLoading: isLoading,\n        onSubmit: data => onSubmit(data),\n        listDataForm: listDataForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 16\n      }, this),\n      Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: [/*#__PURE__*/_jsxDEV(FilterBase, {\n          dataFilter: dataFilter,\n          handleFilter: listFilter => handleFilter(listFilter),\n          handleReset: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(SortBox, {\n          handleSort: value => handleSort(value),\n          dataOption: dataOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nParentsList.layout = LayoutBase;\nexport default ParentsList;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/customer/parents/index.tsx"],"names":["React","useEffect","useState","areaApi","branchApi","jobApi","parentsApi","puroseApi","sourceInfomationApi","staffApi","staffSalaryApi","FilterBase","SortBox","ParentsForm","ResetPassParent","LayoutBase","PowerTable","FilterColumn","useWrap","pageIndex","dataRoles","Roles","id","RoleName","getListRoles","map","item","title","value","listFieldSearch","FullNameUnicode","listFieldFilter","fromDate","toDate","RoleID","BranchID","AreaID","StatusID","dataOption","dataSort","sort","sortType","text","optionGender","listApi","api","name","ParentsList","listDataForm","setListDataForm","Area","DistrictID","WardID","Role","Branch","Purposes","SourceInformation","Parent","Counselors","dataCenter","setDataCenter","dataArea","setDataArea","dataSource","setDataSource","showNoti","pageSize","listTodoApi","isLoading","setIsLoading","type","status","totalPage","setTotalPage","indexRow","setIndexRow","currentPage","setCurrentPage","todoApi","setTodoApi","dataFilter","setDataFilter","col","optionList","makeNewData","data","newData","AreaName","setDataFunc","DistrictName","ID","WardName","BranchName","JobName","JobID","PurposesName","PurposesID","UserInformationID","SourceInformationName","SourceInformationID","getDataTolist","Object","keys","forEach","key","getDataStudentForm","arrApi","index","res","getAll","Enable","console","log","error","getDataSource","totalRow","message","every","afterPost","mes","returnBranchName","branchID","newArr","listID","split","newObj","parseInt","find","a","push","onSubmitSalary","update","onSubmit","toString","newDataSource","splice","add","checkField","valueSearch","dataIndex","newList","handleFilter","listFilter","newListFilter","keyFilter","handleSort","option","newTodoApi","onSearch","clearKey","resetListFieldSearch","handleReset","getPagination","pageNumber","columns","width","render","fixed","gender","className","align","e","stopPropagation","layout"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,MAA7B,EAAqCC,UAArC,EAAiDC,SAAjD,EAA4DC,mBAA5D,EAAiFC,QAAjF,EAA2FC,cAA3F,QAAiH,WAAjH;AACA,OAAOC,UAAP,MAAuB,6CAAvB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,eAAP,MAA4B,0DAA5B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,IAAIC,SAAS,GAAG,CAAhB;AAOA,IAAIC,SAAS,GAAG,EAAhB;AAEA,MAAMC,KAAK,GAAG,CACb;AACCC,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,QAAQ,EAAE;AAFX,CADa,EAMb;AACCD,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,QAAQ,EAAE;AAFX,CANa,EAUb;AACCD,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,QAAQ,EAAE;AAFX,CAVa,EAcb;AACCD,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,QAAQ,EAAE;AAFX,CAda,EAkBb;AACCD,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,QAAQ,EAAE;AAFX,CAlBa,EAsBb;AACCD,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,QAAQ,EAAE;AAFX,CAtBa,CAAd;;AA4BC,CAAC,SAASC,YAAT,GAAwB;AACzBJ,EAAAA,SAAS,GAAGC,KAAK,CAACI,GAAN,CAAWC,IAAD,KAAW;AAChCC,IAAAA,KAAK,EAAED,IAAI,CAACH,QADoB;AAEhCK,IAAAA,KAAK,EAAEF,IAAI,CAACJ;AAFoB,GAAX,CAAV,CAAZ;AAIA,CALA;;AAOD,IAAIO,eAAe,GAAG;AACrBV,EAAAA,SAAS,EAAE,CADU;AAErBW,EAAAA,eAAe,EAAE;AAFI,CAAtB;AAKA,IAAIC,eAAe,GAAG;AACrBZ,EAAAA,SAAS,EAAE,CADU;AAErBa,EAAAA,QAAQ,EAAE,IAFW;AAGrBC,EAAAA,MAAM,EAAE,IAHa;AAIrBC,EAAAA,MAAM,EAAE,IAJa;AAKrBC,EAAAA,QAAQ,EAAE,IALW;AAMrBC,EAAAA,MAAM,EAAE,IANa;AAOrBC,EAAAA,QAAQ,EAAE;AAPW,CAAtB;AAUA,MAAMC,UAAU,GAAG,CAClB;AACCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADX;AAKCC,EAAAA,IAAI,EAAE;AALP,CADkB,EAQlB;AACCH,EAAAA,QAAQ,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADX;AAKCC,EAAAA,IAAI,EAAE;AALP,CARkB,CAAnB,C,CAiBA;;AAmBA,MAAMC,YAAY,GAAG,CACpB;AACCf,EAAAA,KAAK,EAAE,CADR;AAECD,EAAAA,KAAK,EAAE;AAFR,CADoB,EAKpB;AACCC,EAAAA,KAAK,EAAE,CADR;AAECD,EAAAA,KAAK,EAAE;AAFR,CALoB,EASpB;AACCC,EAAAA,KAAK,EAAE,CADR;AAECD,EAAAA,KAAK,EAAE;AAFR,CAToB,CAArB;AAeA,MAAMiB,OAAO,GAAG,CACf;AACCC,EAAAA,GAAG,EAAE1C,OADN;AAECuC,EAAAA,IAAI,EAAE,SAFP;AAGCI,EAAAA,IAAI,EAAE;AAHP,CADe,EAOf;AACCD,EAAAA,GAAG,EAAExC,MADN;AAECqC,EAAAA,IAAI,EAAE,WAFP;AAGCI,EAAAA,IAAI,EAAE;AAHP,CAPe,EAYf;AACCD,EAAAA,GAAG,EAAEtC,SADN;AAECmC,EAAAA,IAAI,EAAE,cAFP;AAGCI,EAAAA,IAAI,EAAE;AAHP,CAZe,EAiBf;AACCD,EAAAA,GAAG,EAAEzC,SADN;AAECsC,EAAAA,IAAI,EAAE,WAFP;AAGCI,EAAAA,IAAI,EAAE;AAHP,CAjBe,EAsBf;AACCD,EAAAA,GAAG,EAAEvC,UADN;AAECoC,EAAAA,IAAI,EAAE,WAFP;AAGCI,EAAAA,IAAI,EAAE;AAHP,CAtBe,EA2Bf;AACCD,EAAAA,GAAG,EAAErC,mBADN;AAECkC,EAAAA,IAAI,EAAE,kBAFP;AAGCI,EAAAA,IAAI,EAAE;AAHP,CA3Be,EAgCf;AACCD,EAAAA,GAAG,EAAEpC,QADN;AAECiC,EAAAA,IAAI,EAAE,kBAFP;AAGCI,EAAAA,IAAI,EAAE;AAHP,CAhCe,CAAhB;;AAuCA,MAAMC,WAAW,GAAG,MAAM;AACzB,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkC/C,QAAQ,CAAe;AAC9DgD,IAAAA,IAAI,EAAE,EADwD;AAE9DC,IAAAA,UAAU,EAAE,EAFkD;AAG9DC,IAAAA,MAAM,EAAE,EAHsD;AAI9DC,IAAAA,IAAI,EAAEjC,SAJwD;AAK9DkC,IAAAA,MAAM,EAAE,EALsD;AAM9DC,IAAAA,QAAQ,EAAE,EANoD;AAO9DC,IAAAA,iBAAiB,EAAE,EAP2C;AAQ9DC,IAAAA,MAAM,EAAE,EARsD;AAS9DC,IAAAA,UAAU,EAAE;AATkD,GAAf,CAAhD,CADyB,CAazB;;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8B1D,QAAQ,CAAY,EAAZ,CAA5C;AACA,QAAM;AAAA,OAAC2D,QAAD;AAAA,OAAWC;AAAX,MAA0B5D,QAAQ,CAAU,EAAV,CAAxC;AACA,QAAM;AAAA,OAAC6D,UAAD;AAAA,OAAaC;AAAb,MAA8B9D,QAAQ,CAAa,EAAb,CAA5C;AACA,QAAM;AAAE+D,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBhD,OAAO,EAAtC;AACA,QAAMiD,WAAW,GAAG;AACnBD,IAAAA,QAAQ,EAAEA,QADS;AAEnB/C,IAAAA,SAAS,EAAEA,SAFQ;AAGnBqB,IAAAA,IAAI,EAAE,IAHa;AAInBC,IAAAA,QAAQ,EAAE,IAJS;AAKnBT,IAAAA,QAAQ,EAAE,IALS;AAMnBC,IAAAA,MAAM,EAAE,IANW;AAOnBH,IAAAA,eAAe,EAAE,IAPE;AAQnBI,IAAAA,MAAM,EAAE,IARW;AASnBC,IAAAA,QAAQ,EAAE,IATS;AAUnBC,IAAAA,MAAM,EAAE;AAVW,GAApB;AAYA,QAAM;AAAA,OAACgC,SAAD;AAAA,OAAYC;AAAZ,MAA4BnE,QAAQ,CAAC;AAC1CoE,IAAAA,IAAI,EAAE,EADoC;AAE1CC,IAAAA,MAAM,EAAE;AAFkC,GAAD,CAA1C;AAIA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BvE,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAA,OAACwE,QAAD;AAAA,OAAWC;AAAX,MAA0BzE,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAAA,OAAC0E,WAAD;AAAA,OAAcC;AAAd,MAAgC3E,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM;AAAA,OAAC4E,OAAD;AAAA,OAAUC;AAAV,MAAwB7E,QAAQ,CAACiE,WAAD,CAAtC,CArCyB,CAsCzB;;AAEA,QAAM;AAAA,OAACa,UAAD;AAAA,OAAaC;AAAb,MAA8B/E,QAAQ,CAAC,CAC5C;AACC4C,IAAAA,IAAI,EAAE,QADP;AAECnB,IAAAA,KAAK,EAAE,SAFR;AAGCuD,IAAAA,GAAG,EAAE,iBAHN;AAICZ,IAAAA,IAAI,EAAE,QAJP;AAKCa,IAAAA,UAAU,EAAE,IALb;AAKmB;AAClBvD,IAAAA,KAAK,EAAE;AANR,GAD4C,EAS5C;AACCkB,IAAAA,IAAI,EAAE,UADP;AAECnB,IAAAA,KAAK,EAAE,WAFR;AAGCuD,IAAAA,GAAG,EAAE,iBAHN;AAICZ,IAAAA,IAAI,EAAE,QAJP;AAKCa,IAAAA,UAAU,EAAE,IALb;AAMCvD,IAAAA,KAAK,EAAE;AANR,GAT4C,EAiB5C;AACCkB,IAAAA,IAAI,EAAE,QADP;AAECnB,IAAAA,KAAK,EAAE,SAFR;AAGCuD,IAAAA,GAAG,EAAE,iBAHN;AAICZ,IAAAA,IAAI,EAAE,QAJP;AAKCa,IAAAA,UAAU,EAAE/D,SALb;AAMCQ,IAAAA,KAAK,EAAE;AANR,GAjB4C,EAyB5C;AACCkB,IAAAA,IAAI,EAAE,UADP;AAECnB,IAAAA,KAAK,EAAE,YAFR;AAGCuD,IAAAA,GAAG,EAAE,iBAHN;AAICZ,IAAAA,IAAI,EAAE,QAJP;AAKCa,IAAAA,UAAU,EAAE,CACX;AACCvD,MAAAA,KAAK,EAAE,CADR;AAECD,MAAAA,KAAK,EAAE;AAFR,KADW,EAKX;AACCC,MAAAA,KAAK,EAAE,CADR;AAECD,MAAAA,KAAK,EAAE;AAFR,KALW,CALb;AAeCC,IAAAA,KAAK,EAAE;AAfR,GAzB4C,EA0C5C;AACCkB,IAAAA,IAAI,EAAE,YADP;AAECnB,IAAAA,KAAK,EAAE,UAFR;AAGCuD,IAAAA,GAAG,EAAE,QAHN;AAICZ,IAAAA,IAAI,EAAE,YAJP;AAKC1C,IAAAA,KAAK,EAAE;AALR,GA1C4C,CAAD,CAA5C,CAxCyB,CA2FzB;AACA;;AAEA,QAAMwD,WAAW,GAAG,CAACC,IAAD,EAAOvC,IAAP,KAAgB;AACnC,QAAIwC,OAAO,GAAG,IAAd;;AACA,YAAQxC,IAAR;AACC,WAAK,MAAL;AACCwC,QAAAA,OAAO,GAAGD,IAAI,CAAC5D,GAAL,CAAUC,IAAD,KAAW;AAC7BC,UAAAA,KAAK,EAAED,IAAI,CAAC6D,QADiB;AAE7B3D,UAAAA,KAAK,EAAEF,IAAI,CAACU;AAFiB,SAAX,CAAT,CAAV;AAIAoD,QAAAA,WAAW,CAAC,QAAD,EAAWF,OAAX,CAAX;AACA;;AACD,WAAK,YAAL;AACCA,QAAAA,OAAO,GAAGD,IAAI,CAAC5D,GAAL,CAAUC,IAAD,KAAW;AAC7BC,UAAAA,KAAK,EAAED,IAAI,CAAC+D,YADiB;AAE7B7D,UAAAA,KAAK,EAAEF,IAAI,CAACgE;AAFiB,SAAX,CAAT,CAAV;AAIA;;AACD,WAAK,QAAL;AACCJ,QAAAA,OAAO,GAAGD,IAAI,CAAC5D,GAAL,CAAUC,IAAD,KAAW;AAC7BC,UAAAA,KAAK,EAAED,IAAI,CAACiE,QADiB;AAE7B/D,UAAAA,KAAK,EAAEF,IAAI,CAACgE;AAFiB,SAAX,CAAT,CAAV;AAIA;;AACD,WAAK,QAAL;AACCJ,QAAAA,OAAO,GAAGD,IAAI,CAAC5D,GAAL,CAAUC,IAAD,KAAW;AAC7BC,UAAAA,KAAK,EAAED,IAAI,CAACkE,UADiB;AAE7BhE,UAAAA,KAAK,EAAEF,IAAI,CAACgE;AAFiB,SAAX,CAAT,CAAV;AAIAF,QAAAA,WAAW,CAAC,UAAD,EAAaF,OAAb,CAAX;AACA;;AACD,WAAK,KAAL;AACCA,QAAAA,OAAO,GAAGD,IAAI,CAAC5D,GAAL,CAAUC,IAAD,KAAW;AAC7BC,UAAAA,KAAK,EAAED,IAAI,CAACmE,OADiB;AAE7BjE,UAAAA,KAAK,EAAEF,IAAI,CAACoE;AAFiB,SAAX,CAAT,CAAV;AAIA;;AACD,WAAK,UAAL;AACCR,QAAAA,OAAO,GAAGD,IAAI,CAAC5D,GAAL,CAAUC,IAAD,KAAW;AAC7BC,UAAAA,KAAK,EAAED,IAAI,CAACqE,YADiB;AAE7BnE,UAAAA,KAAK,EAAEF,IAAI,CAACsE;AAFiB,SAAX,CAAT,CAAV;AAIA;;AACD,WAAK,QAAL;AACCV,QAAAA,OAAO,GAAGD,IAAI,CAAC5D,GAAL,CAAUC,IAAD,KAAW;AAC7BC,UAAAA,KAAK,EAAED,IAAI,CAACI,eADiB;AAE7BF,UAAAA,KAAK,EAAEF,IAAI,CAACuE;AAFiB,SAAX,CAAT,CAAV;AAIA;;AACD,WAAK,mBAAL;AACCX,QAAAA,OAAO,GAAGD,IAAI,CAAC5D,GAAL,CAAUC,IAAD,KAAW;AAC7BC,UAAAA,KAAK,EAAED,IAAI,CAACwE,qBADiB;AAE7BtE,UAAAA,KAAK,EAAEF,IAAI,CAACyE;AAFiB,SAAX,CAAT,CAAV;AAIAX,QAAAA,WAAW,CAAC,qBAAD,EAAwBF,OAAxB,CAAX;AACA;;AACD,WAAK,YAAL;AACCA,QAAAA,OAAO,GAAGD,IAAI,CAAC5D,GAAL,CAAUC,IAAD,KAAW;AAC7BC,UAAAA,KAAK,EAAED,IAAI,CAACI,eADiB;AAE7BF,UAAAA,KAAK,EAAEF,IAAI,CAACuE;AAFiB,SAAX,CAAT,CAAV;AAIA;;AACD;AACC;AA3DF;;AA8DA,WAAOX,OAAP;AACA,GAjED;;AAmEA,QAAMc,aAAa,GAAG,CAACf,IAAD,EAAYvC,IAAZ,KAA0B;AAC/C,QAAIwC,OAAO,GAAGF,WAAW,CAACC,IAAD,EAAOvC,IAAP,CAAzB;AAEAuD,IAAAA,MAAM,CAACC,IAAP,CAAYtD,YAAZ,EAA0BuD,OAA1B,CAAkC,UAAUC,GAAV,EAAe;AAChD,UAAIA,GAAG,IAAI1D,IAAX,EAAiB;AAChBE,QAAAA,YAAY,CAACwD,GAAD,CAAZ,GAAoBlB,OAApB;AACA;AACD,KAJD;AAKArC,IAAAA,eAAe,mBAAMD,YAAN,EAAf;AACA,GATD,CAjKyB,CA4KzB;;;AACA,QAAMyD,kBAAkB,GAAIC,MAAD,IAAY;AACtCA,IAAAA,MAAM,CAACH,OAAP,CAAe,CAAC7E,IAAD,EAAOiF,KAAP,KAAiB;AAC/B;;AAAC,OAAC,YAAY;AACb,YAAIC,GAAG,GAAG,IAAV;;AACA,YAAI;AACH,cAAIlF,IAAI,CAACoB,IAAL,IAAa,YAAjB,EAA+B;AAC9B8D,YAAAA,GAAG,GAAG,MAAMlF,IAAI,CAACmB,GAAL,CAASgE,MAAT,CAAgB;AAC3B1F,cAAAA,SAAS,EAAE,CADgB;AAE3B+C,cAAAA,QAAQ,EAAE,KAFiB;AAG3BhC,cAAAA,MAAM,EAAE,CAHmB;AAI3BG,cAAAA,QAAQ,EAAE,CAJiB;AAK3ByE,cAAAA,MAAM,EAAE;AALmB,aAAhB,CAAZ;AAOA,WARD,MAQO;AACNF,YAAAA,GAAG,GAAG,MAAMlF,IAAI,CAACmB,GAAL,CAASgE,MAAT,CAAgB;AAC3B1F,cAAAA,SAAS,EAAE,CADgB;AAE3B+C,cAAAA,QAAQ,EAAE,KAFiB;AAG3B4C,cAAAA,MAAM,EAAE;AAHmB,aAAhB,CAAZ;AAKA;;AAEDF,UAAAA,GAAG,CAACrC,MAAJ,IAAc,GAAd,IAAqB6B,aAAa,CAACQ,GAAG,CAACvB,IAAJ,CAASA,IAAV,EAAgB3D,IAAI,CAACoB,IAArB,CAAlC;AAEA8D,UAAAA,GAAG,CAACrC,MAAJ,IAAc,GAAd,IAAqBwC,OAAO,CAACC,GAAR,CAAYtF,IAAI,CAACgB,IAAL,GAAY,mBAAxB,CAArB;AACA,SApBD,CAoBE,OAAOuE,KAAP,EAAc;AACfF,UAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,SAtBD,SAsBU,CACT;AACD,OA1BA;AA2BD,KA5BD;AA6BA,GA9BD,CA7KyB,CA6MzB;;;AACA,QAAMC,aAAa,GAAG,YAAY;AACjC7C,IAAAA,YAAY,CAAC;AACZC,MAAAA,IAAI,EAAE,SADM;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAD,CAAZ;;AAKA,QAAI;AACH,UAAIqC,GAAG,GAAG,MAAMtG,UAAU,CAACuG,MAAX,CAAkB/B,OAAlB,CAAhB;AACA8B,MAAAA,GAAG,CAACrC,MAAJ,IAAc,GAAd,KAAsBP,aAAa,CAAC4C,GAAG,CAACvB,IAAJ,CAASA,IAAV,CAAb,EAA8BZ,YAAY,CAACmC,GAAG,CAACvB,IAAJ,CAAS8B,QAAV,CAA1C,EAA+DlD,QAAQ,CAAC,SAAD,EAAY,YAAZ,CAA7F;AACA2C,MAAAA,GAAG,CAACrC,MAAJ,IAAc,GAAd,IAAqBN,QAAQ,CAAC,QAAD,EAAW,kBAAX,CAA7B,IAA+DD,aAAa,CAAC,EAAD,CAA5E;AACA,KAJD,CAIE,OAAOiD,KAAP,EAAc;AACfhD,MAAAA,QAAQ,CAAC,QAAD,EAAWgD,KAAK,CAACG,OAAjB,CAAR;AACA,KAND,SAMU;AACT/C,MAAAA,YAAY,CAAC;AACZC,QAAAA,IAAI,EAAE,SADM;AAEZC,QAAAA,MAAM,EAAE;AAFI,OAAD,CAAZ;AAIA;AACD,GAlBD,CA9MyB,CAkOzB;;;AACA,QAAMiB,WAAW,GAAG,CAAC1C,IAAD,EAAOuC,IAAP,KAAgB;AACnCL,IAAAA,UAAU,CAACqC,KAAX,CAAiB,CAAC3F,IAAD,EAAOiF,KAAP,KAAiB;AACjC,UAAIjF,IAAI,CAACoB,IAAL,IAAaA,IAAjB,EAAuB;AACtBpB,QAAAA,IAAI,CAACyD,UAAL,GAAkBE,IAAlB;AACA,eAAO,KAAP;AACA;;AACD,aAAO,IAAP;AACA,KAND;AAOAJ,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,CAAD,CAAb;AACA,GATD,CAnOyB,CA8OzB;;;AACA,QAAMsC,SAAS,GAAIC,GAAD,IAAS;AAC1B;AACAxC,IAAAA,UAAU,iCACNZ,WADM;AAEThD,MAAAA,SAAS,EAAE;AAFF,OAAV;AAIA0D,IAAAA,cAAc,CAAC,CAAD,CAAd;AACA,GAPD,CA/OyB,CAwPzB;;;AACA,QAAM2C,gBAAgB,GAAIC,QAAD,IAAc;AACtC,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,MAAM,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAb;AAEAD,IAAAA,MAAM,CAACpB,OAAP,CAAgB7E,IAAD,IAAU;AACxB,UAAImG,MAAM,GAAG;AACZnC,QAAAA,EAAE,EAAEoC,QAAQ,CAACpG,IAAD,CADA;AAEZkE,QAAAA,UAAU,EAAE5C,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEM,MAAd,CAAqByE,IAArB,CAA2BC,CAAD,IAAOA,CAAC,CAACpG,KAAF,KAAYkG,QAAQ,CAACpG,IAAD,CAArD,EAA6DC;AAF7D,OAAb;AAKAkG,MAAAA,MAAM,IAAIH,MAAM,CAACO,IAAP,CAAYJ,MAAZ,CAAV;AACA,KAPD;AASA,WAAOH,MAAP;AACA,GAdD;;AAgBA,QAAMQ,cAAc,GAAG,MAAO7C,IAAP,IAAqB;AAC3ChB,IAAAA,YAAY,CAAC;AACZC,MAAAA,IAAI,EAAE,UADM;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAD,CAAZ;AAIA,QAAIqC,GAAG,GAAG,IAAV;;AACA,QAAI;AACHA,MAAAA,GAAG,GAAG,MAAMlG,cAAc,CAACyH,MAAf,CAAsB9C,IAAtB,CAAZ;;AACA,UAAIuB,GAAG,CAACrC,MAAJ,IAAc,GAAlB,EAAuB;AACtBN,QAAAA,QAAQ,CAAC,SAAD,EAAY,uBAAZ,CAAR;AACA;AACD,KALD,CAKE,OAAOgD,KAAP,EAAc;AACfhD,MAAAA,QAAQ,CAAC,QAAD,EAAWgD,KAAK,CAACG,OAAjB,CAAR;AACA,KAPD,SAOU;AACT/C,MAAAA,YAAY,CAAC;AACZC,QAAAA,IAAI,EAAE,UADM;AAEZC,QAAAA,MAAM,EAAE;AAFI,OAAD,CAAZ;AAIA;;AAED,WAAOqC,GAAP;AACA,GArBD;;AAuBA,QAAMwB,QAAQ,GAAG,MAAO/C,IAAP,IAAqB;AACrC,QAAI,OAAOA,IAAI,CAAC/B,MAAZ,IAAsB,WAA1B,EAAuC;AACtC+B,MAAAA,IAAI,CAAC/B,MAAL,GAAc+B,IAAI,CAAC/B,MAAL,CAAY+E,QAAZ,EAAd;AACA,KAFD,MAEO;AACNhD,MAAAA,IAAI,CAAC/B,MAAL,GAAc,EAAd;AACA;;AAEDe,IAAAA,YAAY,CAAC;AACZC,MAAAA,IAAI,EAAE,UADM;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAD,CAAZ;AAIA,QAAIqC,GAAG,GAAG,IAAV;;AACA,QAAI;AACH,UAAIvB,IAAI,CAACY,iBAAT,EAA4B;AAC3BW,QAAAA,GAAG,GAAG,MAAMtG,UAAU,CAAC6H,MAAX,CAAkB9C,IAAlB,CAAZ;;AACA,YAAIuB,GAAG,CAACrC,MAAJ,IAAc,GAAlB,EAAuB;AACtB,cAAI+D,aAAa,GAAG,CAAC,GAAGvE,UAAJ,CAApB;AACAuE,UAAAA,aAAa,CAACC,MAAd,CAAqB7D,QAArB,EAA+B,CAA/B,kCACIW,IADJ;AAEC/B,YAAAA,MAAM,EAAEkE,gBAAgB,CAACnC,IAAI,CAAC/B,MAAN;AAFzB;AAIAU,UAAAA,aAAa,CAACsE,aAAD,CAAb;AACArE,UAAAA,QAAQ,CAAC,SAAD,EAAY2C,GAAG,CAACvB,IAAJ,CAAS+B,OAArB,CAAR;AACA;AACD,OAXD,MAWO;AAAA;;AACNR,QAAAA,GAAG,GAAG,MAAMtG,UAAU,CAACkI,GAAX,CAAenD,IAAf,CAAZ;AACA,iBAAAuB,GAAG,UAAH,oCAAKrC,MAAL,KAAe,GAAf,IAAsB+C,SAAS,CAACV,GAAG,CAACvB,IAAJ,CAAS+B,OAAV,CAA/B;AACA;AACD,KAhBD,CAgBE,OAAOH,KAAP,EAAc;AACfhD,MAAAA,QAAQ,CAAC,QAAD,EAAWgD,KAAK,CAACG,OAAjB,CAAR;AACA,KAlBD,SAkBU;AACT/C,MAAAA,YAAY,CAAC;AACZC,QAAAA,IAAI,EAAE,UADM;AAEZC,QAAAA,MAAM,EAAE;AAFI,OAAD,CAAZ;AAIA;;AAED,WAAOqC,GAAP;AACA,GAtCD,CAhSyB,CAwUzB;;;AACA,QAAM6B,UAAU,GAAG,CAACC,WAAD,EAAcC,SAAd,KAA4B;AAC9C,QAAIC,OAAO,qBAAQ/G,eAAR,CAAX;;AACAwE,IAAAA,MAAM,CAACC,IAAP,CAAYsC,OAAZ,EAAqBrC,OAArB,CAA6B,UAAUC,GAAV,EAAe;AAC3C,UAAIA,GAAG,IAAImC,SAAX,EAAsB;AACrB,YAAInC,GAAG,IAAI,WAAX,EAAwB;AACvBoC,UAAAA,OAAO,CAACpC,GAAD,CAAP,GAAe,IAAf;AACA;AACD,OAJD,MAIO;AACNoC,QAAAA,OAAO,CAACpC,GAAD,CAAP,GAAekC,WAAf;AACA;AACD,KARD;AAUA,WAAOE,OAAP;AACA,GAbD,CAzUyB,CAwVzB;;;AACA,QAAMC,YAAY,GAAIC,UAAD,IAAgB;AACpC,QAAIC,aAAa,qBAAQhH,eAAR,CAAjB;;AACA+G,IAAAA,UAAU,CAACvC,OAAX,CAAmB,CAAC7E,IAAD,EAAOiF,KAAP,KAAiB;AACnC,UAAIH,GAAG,GAAG9E,IAAI,CAACoB,IAAf;AACAuD,MAAAA,MAAM,CAACC,IAAP,CAAYyC,aAAZ,EAA2BxC,OAA3B,CAAoCyC,SAAD,IAAe;AACjD,YAAIA,SAAS,IAAIxC,GAAjB,EAAsB;AACrBuC,UAAAA,aAAa,CAACvC,GAAD,CAAb,GAAqB9E,IAAI,CAACE,KAA1B;AACA;AACD,OAJD;AAKA,KAPD;AAQAmD,IAAAA,UAAU,+CAAMZ,WAAN,GAAsB4E,aAAtB;AAAqC5H,MAAAA,SAAS,EAAE;AAAhD,OAAV;AACA,GAXD,CAzVyB,CAsWzB;;;AACA,QAAM8H,UAAU,GAAG,MAAOC,MAAP,IAAkB;AACpC,QAAIC,UAAU,mCACVhF,WADU;AAEbhD,MAAAA,SAAS,EAAE,CAFE;AAGbqB,MAAAA,IAAI,EAAE0G,MAAM,CAACvH,KAAP,CAAaa,IAHN;AAIbC,MAAAA,QAAQ,EAAEyG,MAAM,CAACvH,KAAP,CAAac;AAJV,MAAd;;AAMAoC,IAAAA,cAAc,CAAC,CAAD,CAAd,EAAmBE,UAAU,CAACoE,UAAD,CAA7B;AACA,GARD,CAvWyB,CAiXzB;;;AACA,QAAMC,QAAQ,GAAG,CAACV,WAAD,EAAcC,SAAd,KAA4B;AAC5C,QAAIU,QAAQ,GAAGZ,UAAU,CAACC,WAAD,EAAcC,SAAd,CAAzB;AAEA5D,IAAAA,UAAU,+CACND,OADM,GAENuE,QAFM,GAGNtH,eAHM,EAAV;AAKA,GARD,CAlXyB,CA4XzB;;;AACA,QAAMuH,oBAAoB,GAAG,MAAM;AAClCjD,IAAAA,MAAM,CAACC,IAAP,CAAYzE,eAAZ,EAA6B0E,OAA7B,CAAqC,UAAUC,GAAV,EAAe;AACnD,UAAIA,GAAG,IAAI,WAAX,EAAwB;AACvB3E,QAAAA,eAAe,CAAC2E,GAAD,CAAf,GAAuB,IAAvB;AACA;AACD,KAJD;AAKA,GAND;;AAQA,QAAM+C,WAAW,GAAG,MAAM;AACzBxE,IAAAA,UAAU,iCACNZ,WADM;AAEThD,MAAAA,SAAS,EAAE;AAFF,OAAV;AAIA0D,IAAAA,cAAc,CAAC,CAAD,CAAd,EAAmByE,oBAAoB,EAAvC;AACA,GAND,CArYyB,CA6YzB;;;AACA,QAAME,aAAa,GAAIC,UAAD,IAAwB;AAC7CtI,IAAAA,SAAS,GAAGsI,UAAZ;AACA5E,IAAAA,cAAc,CAAC4E,UAAD,CAAd;AACA1E,IAAAA,UAAU,6DACND,OADM,GAENjD,eAFM,GAGNE,eAHM;AAITZ,MAAAA,SAAS,EAAEA;AAJF,OAAV;AAMA,GATD,CA9YyB,CAyZzB;;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACfiH,IAAAA,aAAa;AACb,GAFQ,EAEN,CAACpC,OAAD,CAFM,CAAT;AAIA7E,EAAAA,SAAS,CAAC,MAAM;AACfwG,IAAAA,kBAAkB,CAAC7D,OAAD,CAAlB;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM8G,OAAO,GAAG,CACf;AACC/H,IAAAA,KAAK,EAAE,cADR;AAECgH,IAAAA,SAAS,EAAE,UAFZ;AAGCgB,IAAAA,KAAK,EAAE,GAHR;AAICC,IAAAA,MAAM,EAAGlH,IAAD,iBAAU;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA,gBAAkCA;AAAlC;AAAA;AAAA;AAAA;AAAA,YAJnB;AAKCmH,IAAAA,KAAK,EAAE;AALR,GADe;AASdlI,IAAAA,KAAK,EAAE,QATO;AAUdgI,IAAAA,KAAK,EAAE,GAVO;AAWdhB,IAAAA,SAAS,EAAE;AAXG,KAYX1H,YAAY,CAAC,iBAAD,EAAoBmI,QAApB,EAA8BG,WAA9B,EAA2C,MAA3C,CAZD;AAadK,IAAAA,MAAM,EAAGlH,IAAD,iBAAU;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA,gBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,YAbJ;AAcdmH,IAAAA,KAAK,EAAE;AAdO,MAgBf;AACClI,IAAAA,KAAK,EAAE,WADR;AAECgH,IAAAA,SAAS,EAAE,QAFZ;AAGCgB,IAAAA,KAAK,EAAE,GAHR;AAICC,IAAAA,MAAM,EAAGE,MAAD,iBAAY;AAAA,gBAAGA,MAAM,IAAI,CAAV,GAAc,IAAd,GAAqBA,MAAM,IAAI,CAAV,GAAc,KAAd,GAAsB;AAA9C;AAJrB,GAhBe,EAsBf;AACCnI,IAAAA,KAAK,EAAE,WADR;AAECgI,IAAAA,KAAK,EAAE,GAFR;AAGChB,IAAAA,SAAS,EAAE;AAHZ,GAtBe,EA2Bf;AACChH,IAAAA,KAAK,EAAE,OADR;AAECgI,IAAAA,KAAK,EAAE,GAFR;AAGChB,IAAAA,SAAS,EAAE;AAHZ,GA3Be,EAgCf;AACChH,IAAAA,KAAK,EAAE,KADR;AAECgI,IAAAA,KAAK,EAAE,GAFR;AAGChB,IAAAA,SAAS,EAAE;AAHZ,GAhCe,EAqCf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACChH,IAAAA,KAAK,EAAE,YADR;AAECgH,IAAAA,SAAS,EAAE,UAFZ;AAGCgB,IAAAA,KAAK,EAAE,GAHR;AAICI,IAAAA,SAAS,EAAE,aAJZ;AAKCH,IAAAA,MAAM,EAAGrF,MAAD,iBAAY;AAAA,6BAAG;AAAM,QAAA,SAAS,EAAG,OAAMA,MAAM,IAAI,CAAV,GAAc,OAAd,GAAwB,MAAO,EAAvD;AAAA,kBAA2DA,MAAM,IAAI,CAAV,GAAc,WAAd,GAA4B;AAAvF;AAAA;AAAA;AAAA;AAAA;AAAH;AALrB,GAhDe,EAuDf;AACC5C,IAAAA,KAAK,EAAE,EADR;AAECgH,IAAAA,SAAS,EAAE,EAFZ;AAGCgB,IAAAA,KAAK,EAAE,GAHR;AAICK,IAAAA,KAAK,EAAE,QAJR;AAKCJ,IAAAA,MAAM,EAAE,CAAClH,IAAD,EAAO2C,IAAP,EAAasB,KAAb,kBACP;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACC;AAAK,QAAA,OAAO,EAAGsD,CAAD,IAAOA,CAAC,CAACC,eAAF,EAArB;AAAA,+BACC,QAAC,WAAD;AACC,UAAA,QAAQ,EAAE,MAAMvF,WAAW,CAACgC,KAAD,CAD5B;AAEC,UAAA,KAAK,EAAEA,KAFR;AAGC,UAAA,OAAO,EAAEtB,IAHV;AAIC,UAAA,KAAK,EAAEA,IAAI,CAACY,iBAJb;AAKC,UAAA,SAAS,EAAE7B,SALZ;AAMC,UAAA,QAAQ,EAAGiB,IAAD,IAAe+C,QAAQ,CAAC/C,IAAD,CANlC;AAOC,UAAA,cAAc,EAAGA,IAAD,IAAe6C,cAAc,CAAC7C,IAAD,CAP9C;AAQC,UAAA,YAAY,EAAErC;AARf;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAaC,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAEqC;AAA1B;AAAA;AAAA;AAAA;AAAA,cAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AANF,GAvDe,CAAhB;AAgFA,sBACC;AAAA,2BACC,QAAC,UAAD;AACC,MAAA,WAAW,EAAET,WADd;AAEC,MAAA,SAAS,EAAEJ,SAAS,IAAIA,SAFzB;AAGC,MAAA,aAAa,EAAGiF,UAAD,IAAwBD,aAAa,CAACC,UAAD,CAHrD;AAIC,MAAA,OAAO,EAAErF,SAJV;AAKC,MAAA,QAAQ,EAAC,cALV;AAMC,MAAA,OAAO,EAAEsF,OANV;AAOC,MAAA,UAAU,EAAE3F,UAPb;AAQC,MAAA,SAAS,EAAC,6BARX;AASC,MAAA,SAAS,eAAE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEK,SAAxB;AAAmC,QAAA,QAAQ,EAAGiB,IAAD,IAAe+C,QAAQ,CAAC/C,IAAD,CAApE;AAA4E,QAAA,YAAY,EAAErC;AAA1F;AAAA;AAAA;AAAA;AAAA,cATZ;AAUC,MAAA,KAAK,eACJ;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACC,QAAC,UAAD;AAAY,UAAA,UAAU,EAAEgC,UAAxB;AAAoC,UAAA,YAAY,EAAG8D,UAAD,IAAqBD,YAAY,CAACC,UAAD,CAAnF;AAAiG,UAAA,WAAW,EAAES;AAA9G;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,OAAD;AAAS,UAAA,UAAU,EAAG3H,KAAD,IAAWqH,UAAU,CAACrH,KAAD,CAA1C;AAAmD,UAAA,UAAU,EAAEU;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAqBA,CAvgBD;;AAwgBAS,WAAW,CAACoH,MAAZ,GAAqBpJ,UAArB;AAEA,eAAegC,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { areaApi, branchApi, jobApi, parentsApi, puroseApi, sourceInfomationApi, staffApi, staffSalaryApi } from '~/apiBase'\r\nimport FilterBase from '~/components/Elements/FilterBase/FilterBase'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport ParentsForm from '~/components/Global/Customer/ParentsList/ParentsForm'\r\nimport ResetPassParent from '~/components/Global/Customer/ParentsList/ResetPassParent'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nlet pageIndex = 1\r\n\r\ninterface dataRoles {\r\n\ttitle: string\r\n\tvalue: number\r\n}\r\n\r\nlet dataRoles = []\r\n\r\nconst Roles = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tRoleName: 'Admin'\r\n\t},\r\n\r\n\t{\r\n\t\tid: 5,\r\n\t\tRoleName: 'Nhân viên quản lí'\r\n\t},\r\n\t{\r\n\t\tid: 6,\r\n\t\tRoleName: 'Nhân viên bán hàng'\r\n\t},\r\n\t{\r\n\t\tid: 7,\r\n\t\tRoleName: 'Học vụ'\r\n\t},\r\n\t{\r\n\t\tid: 8,\r\n\t\tRoleName: 'Quản lí chuyên môn'\r\n\t},\r\n\t{\r\n\t\tid: 9,\r\n\t\tRoleName: 'Kế toán'\r\n\t}\r\n]\r\n\r\n;(function getListRoles() {\r\n\tdataRoles = Roles.map((item) => ({\r\n\t\ttitle: item.RoleName,\r\n\t\tvalue: item.id\r\n\t}))\r\n})()\r\n\r\nlet listFieldSearch = {\r\n\tpageIndex: 1,\r\n\tFullNameUnicode: null\r\n}\r\n\r\nlet listFieldFilter = {\r\n\tpageIndex: 1,\r\n\tfromDate: null,\r\n\ttoDate: null,\r\n\tRoleID: null,\r\n\tBranchID: null,\r\n\tAreaID: null,\r\n\tStatusID: null\r\n}\r\n\r\nconst dataOption = [\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Tên Z-A'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Tên A-Z '\r\n\t}\r\n]\r\n\r\n// -- FOR DIFFERENT VIEW --\r\n\r\ninterface objData {\r\n\ttitle: string\r\n\tvalue: number\r\n}\r\n\r\ninterface listDataForm {\r\n\tArea: Array<objData>\r\n\tDistrictID: Array<objData>\r\n\tWardID: Array<objData>\r\n\tRole: Array<objData>\r\n\tBranch: Array<objData>\r\n\tPurposes: Array<objData>\r\n\tSourceInformation: Array<objData>\r\n\tParent: Array<objData>\r\n\tCounselors: Array<objData>\r\n}\r\n\r\nconst optionGender = [\r\n\t{\r\n\t\tvalue: 0,\r\n\t\ttitle: 'Nữ'\r\n\t},\r\n\t{\r\n\t\tvalue: 1,\r\n\t\ttitle: 'Nam'\r\n\t},\r\n\t{\r\n\t\tvalue: 0,\r\n\t\ttitle: 'Khác'\r\n\t}\r\n]\r\n\r\nconst listApi = [\r\n\t{\r\n\t\tapi: areaApi,\r\n\t\ttext: 'Tỉnh/Tp',\r\n\t\tname: 'Area'\r\n\t},\r\n\r\n\t{\r\n\t\tapi: jobApi,\r\n\t\ttext: 'Công việc',\r\n\t\tname: 'Job'\r\n\t},\r\n\t{\r\n\t\tapi: puroseApi,\r\n\t\ttext: 'Mục đích học',\r\n\t\tname: 'Purposes'\r\n\t},\r\n\t{\r\n\t\tapi: branchApi,\r\n\t\ttext: 'Trung tâm',\r\n\t\tname: 'Branch'\r\n\t},\r\n\t{\r\n\t\tapi: parentsApi,\r\n\t\ttext: 'Phụ huynh',\r\n\t\tname: 'Parent'\r\n\t},\r\n\t{\r\n\t\tapi: sourceInfomationApi,\r\n\t\ttext: 'Nguồn khách hàng',\r\n\t\tname: 'SourceInformation'\r\n\t},\r\n\t{\r\n\t\tapi: staffApi,\r\n\t\ttext: 'Nguồn khách hàng',\r\n\t\tname: 'Counselors'\r\n\t}\r\n]\r\n\r\nconst ParentsList = () => {\r\n\tconst [listDataForm, setListDataForm] = useState<listDataForm>({\r\n\t\tArea: [],\r\n\t\tDistrictID: [],\r\n\t\tWardID: [],\r\n\t\tRole: dataRoles,\r\n\t\tBranch: [],\r\n\t\tPurposes: [],\r\n\t\tSourceInformation: [],\r\n\t\tParent: [],\r\n\t\tCounselors: []\r\n\t})\r\n\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataCenter, setDataCenter] = useState<IBranch[]>([])\r\n\tconst [dataArea, setDataArea] = useState<IArea[]>([])\r\n\tconst [dataSource, setDataSource] = useState<IParents[]>([])\r\n\tconst { showNoti, pageSize } = useWrap()\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tfromDate: null,\r\n\t\ttoDate: null,\r\n\t\tFullNameUnicode: null,\r\n\t\tRoleID: null,\r\n\t\tBranchID: null,\r\n\t\tAreaID: null\r\n\t}\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [indexRow, setIndexRow] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\t// GET LIST ROLES\r\n\r\n\tconst [dataFilter, setDataFilter] = useState([\r\n\t\t{\r\n\t\t\tname: 'AreaID',\r\n\t\t\ttitle: 'Tỉnh/TP',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null, // Gọi api xong trả data vào đây\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'BranchID',\r\n\t\t\ttitle: 'Trung tâm',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: null,\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'RoleID',\r\n\t\t\ttitle: 'Chức vụ',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: dataRoles,\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'StatusID',\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tcol: 'col-md-6 col-12',\r\n\t\t\ttype: 'select',\r\n\t\t\toptionList: [\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\ttitle: 'Hoạt động'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 1,\r\n\t\t\t\t\ttitle: 'Không Hoạt động'\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tvalue: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'date-range',\r\n\t\t\ttitle: 'Từ - đến',\r\n\t\t\tcol: 'col-12',\r\n\t\t\ttype: 'date-range',\r\n\t\t\tvalue: null\r\n\t\t}\r\n\t])\r\n\r\n\t// FOR STUDENT FORM\r\n\t// ------------- ADD data to list --------------\r\n\r\n\tconst makeNewData = (data, name) => {\r\n\t\tlet newData = null\r\n\t\tswitch (name) {\r\n\t\t\tcase 'Area':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.AreaName,\r\n\t\t\t\t\tvalue: item.AreaID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('AreaID', newData)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'DistrictID':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.DistrictName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'WardID':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.WardName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Branch':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.BranchName,\r\n\t\t\t\t\tvalue: item.ID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('BranchID', newData)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Job':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.JobName,\r\n\t\t\t\t\tvalue: item.JobID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Purposes':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.PurposesName,\r\n\t\t\t\t\tvalue: item.PurposesID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Parent':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.FullNameUnicode,\r\n\t\t\t\t\tvalue: item.UserInformationID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tcase 'SourceInformation':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.SourceInformationName,\r\n\t\t\t\t\tvalue: item.SourceInformationID\r\n\t\t\t\t}))\r\n\t\t\t\tsetDataFunc('SourceInformationID', newData)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'Counselors':\r\n\t\t\t\tnewData = data.map((item) => ({\r\n\t\t\t\t\ttitle: item.FullNameUnicode,\r\n\t\t\t\t\tvalue: item.UserInformationID\r\n\t\t\t\t}))\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\r\n\t\treturn newData\r\n\t}\r\n\r\n\tconst getDataTolist = (data: any, name: any) => {\r\n\t\tlet newData = makeNewData(data, name)\r\n\r\n\t\tObject.keys(listDataForm).forEach(function (key) {\r\n\t\t\tif (key == name) {\r\n\t\t\t\tlistDataForm[key] = newData\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetListDataForm({ ...listDataForm })\r\n\t}\r\n\r\n\t// ----------- GET DATA SOURCE ---------------\r\n\tconst getDataStudentForm = (arrApi) => {\r\n\t\tarrApi.forEach((item, index) => {\r\n\t\t\t;(async () => {\r\n\t\t\t\tlet res = null\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (item.name == 'Counselors') {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tRoleID: 6,\r\n\t\t\t\t\t\t\tStatusID: 0,\r\n\t\t\t\t\t\t\tEnable: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tres = await item.api.getAll({\r\n\t\t\t\t\t\t\tpageIndex: 1,\r\n\t\t\t\t\t\t\tpageSize: 99999,\r\n\t\t\t\t\t\t\tEnable: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tres.status == 200 && getDataTolist(res.data.data, item.name)\r\n\r\n\t\t\t\t\tres.status == 204 && console.log(item.text + ' Không có dữ liệu')\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t} finally {\r\n\t\t\t\t}\r\n\t\t\t})()\r\n\t\t})\r\n\t}\r\n\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await parentsApi.getAll(todoApi)\r\n\t\t\tres.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow), showNoti('success', 'Thành công'))\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu') && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// ------ SET DATA FUN ------\r\n\tconst setDataFunc = (name, data) => {\r\n\t\tdataFilter.every((item, index) => {\r\n\t\t\tif (item.name == name) {\r\n\t\t\t\titem.optionList = data\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t\tsetDataFilter([...dataFilter])\r\n\t}\r\n\r\n\t// ---------------- AFTER SUBMIT -----------------\r\n\tconst afterPost = (mes) => {\r\n\t\t// showNoti(\"success\", \"Thêm nhân viên thành công\");\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// ----------- SUBMI FORM ------------\r\n\tconst returnBranchName = (branchID) => {\r\n\t\tlet newArr = []\r\n\t\tlet listID = branchID.split(',')\r\n\r\n\t\tlistID.forEach((item) => {\r\n\t\t\tlet newObj = {\r\n\t\t\t\tID: parseInt(item),\r\n\t\t\t\tBranchName: listDataForm?.Branch.find((a) => a.value === parseInt(item)).title\r\n\t\t\t}\r\n\r\n\t\t\tnewObj && newArr.push(newObj)\r\n\t\t})\r\n\r\n\t\treturn newArr\r\n\t}\r\n\r\n\tconst onSubmitSalary = async (data: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\tlet res = null\r\n\t\ttry {\r\n\t\t\tres = await staffSalaryApi.update(data)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tshowNoti('success', 'Thêm lương thành công')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tif (typeof data.Branch != 'undefined') {\r\n\t\t\tdata.Branch = data.Branch.toString()\r\n\t\t} else {\r\n\t\t\tdata.Branch = ''\r\n\t\t}\r\n\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\tlet res = null\r\n\t\ttry {\r\n\t\t\tif (data.UserInformationID) {\r\n\t\t\t\tres = await parentsApi.update(data)\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tlet newDataSource = [...dataSource]\r\n\t\t\t\t\tnewDataSource.splice(indexRow, 1, {\r\n\t\t\t\t\t\t...data,\r\n\t\t\t\t\t\tBranch: returnBranchName(data.Branch)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetDataSource(newDataSource)\r\n\t\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tres = await parentsApi.add(data)\r\n\t\t\t\tres?.status == 200 && afterPost(res.data.message)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\t// -------------- CHECK FIELD ---------------------\r\n\tconst checkField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = { ...listFieldSearch }\r\n\t\tObject.keys(newList).forEach(function (key) {\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\t\tnewList[key] = null\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewList[key] = valueSearch\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn newList\r\n\t}\r\n\r\n\t// -------------- HANDLE FILTER ------------------\r\n\tconst handleFilter = (listFilter) => {\r\n\t\tlet newListFilter = { ...listFieldFilter }\r\n\t\tlistFilter.forEach((item, index) => {\r\n\t\t\tlet key = item.name\r\n\t\t\tObject.keys(newListFilter).forEach((keyFilter) => {\r\n\t\t\t\tif (keyFilter == key) {\r\n\t\t\t\t\tnewListFilter[key] = item.value\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tsetTodoApi({ ...listTodoApi, ...newListFilter, pageIndex: 1 })\r\n\t}\r\n\r\n\t// --------------- HANDLE SORT ----------------------\r\n\tconst handleSort = async (option) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetCurrentPage(1), setTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// ------------ ON SEARCH -----------------------\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tlet clearKey = checkField(valueSearch, dataIndex)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t...clearKey,\r\n\t\t\t...listFieldFilter\r\n\t\t})\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tconst resetListFieldSearch = () => {\r\n\t\tObject.keys(listFieldSearch).forEach(function (key) {\r\n\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\tlistFieldSearch[key] = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1), resetListFieldSearch()\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tpageIndex = pageNumber\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t...listFieldSearch,\r\n\t\t\t...listFieldFilter,\r\n\t\t\tpageIndex: pageIndex\r\n\t\t})\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t}, [todoApi])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataStudentForm(listApi)\r\n\t}, [])\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Mã phụ huynh',\r\n\t\t\tdataIndex: 'UserCode',\r\n\t\t\twidth: 120,\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>,\r\n\t\t\tfixed: 'left'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Họ tên',\r\n\t\t\twidth: 200,\r\n\t\t\tdataIndex: 'FullNameUnicode',\r\n\t\t\t...FilterColumn('FullNameUnicode', onSearch, handleReset, 'text'),\r\n\t\t\trender: (text) => <p className=\"font-weight-primary\">{text}</p>,\r\n\t\t\tfixed: 'left'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Giới tính',\r\n\t\t\tdataIndex: 'Gender',\r\n\t\t\twidth: 100,\r\n\t\t\trender: (gender) => <>{gender == 0 ? 'Nữ' : gender == 1 ? 'Nam' : 'Khác'}</>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tài khoản',\r\n\t\t\twidth: 120,\r\n\t\t\tdataIndex: 'UserName'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Email',\r\n\t\t\twidth: 120,\r\n\t\t\tdataIndex: 'Email'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'SĐT',\r\n\t\t\twidth: 120,\r\n\t\t\tdataIndex: 'Mobile'\r\n\t\t},\r\n\t\t// {\r\n\t\t// \ttitle: 'Facebook',\r\n\t\t// \tdataIndex: 'LinkFaceBook',\r\n\t\t// \trender: (link) =>\r\n\t\t// \t\tlink && (\r\n\t\t// \t\t\t<a className=\"font-weight-black\" href={link} target=\"_blank\">\r\n\t\t// \t\t\t\tLink\r\n\t\t// \t\t\t</a>\r\n\t\t// \t\t)\r\n\t\t// },\r\n\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tdataIndex: 'StatusID',\r\n\t\t\twidth: 150,\r\n\t\t\tclassName: 'text-center',\r\n\t\t\trender: (status) => <>{<span className={`tag ${status == 0 ? 'green' : 'gray'}`}>{status == 0 ? 'Hoạt động' : 'Khóa'}</span>}</>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t\tdataIndex: '',\r\n\t\t\twidth: 150,\r\n\t\t\talign: 'center',\r\n\t\t\trender: (text, data, index) => (\r\n\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t<div onClick={(e) => e.stopPropagation()}>\r\n\t\t\t\t\t\t<ParentsForm\r\n\t\t\t\t\t\t\tgetIndex={() => setIndexRow(index)}\r\n\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\trowData={data}\r\n\t\t\t\t\t\t\trowID={data.UserInformationID}\r\n\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\tonSubmit={(data: any) => onSubmit(data)}\r\n\t\t\t\t\t\t\tonSubmitSalary={(data: any) => onSubmitSalary(data)}\r\n\t\t\t\t\t\t\tlistDataForm={listDataForm}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ResetPassParent dataRow={data} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PowerTable\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdataSource={dataSource}\r\n\t\t\t\tTitlePage=\"Danh sách phụ huynh\"\r\n\t\t\t\tTitleCard={<ParentsForm isLoading={isLoading} onSubmit={(data: any) => onSubmit(data)} listDataForm={listDataForm} />}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t<FilterBase dataFilter={dataFilter} handleFilter={(listFilter: any) => handleFilter(listFilter)} handleReset={handleReset} />\r\n\t\t\t\t\t\t<SortBox handleSort={(value) => handleSort(value)} dataOption={dataOption} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\nParentsList.layout = LayoutBase\r\n\r\nexport default ParentsList\r\n"]},"metadata":{},"sourceType":"module"}
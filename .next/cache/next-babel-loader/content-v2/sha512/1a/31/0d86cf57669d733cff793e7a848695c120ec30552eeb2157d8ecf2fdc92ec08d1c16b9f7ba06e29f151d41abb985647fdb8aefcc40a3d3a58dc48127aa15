{"ast":null,"code":"import _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\QuestionBank\\\\QuestionShow\\\\QuestionTyping.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Skeleton, Modal, Popconfirm, Form, Input, Tooltip, Spin } from 'antd';\nimport { Edit, Trash2 } from 'react-feather';\nimport ReactHtmlParser from 'react-html-parser';\nimport { exerciseGroupApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Plus } from 'react-feather';\nvar AnsID = 0;\n\nvar EditQuestion = function EditQuestion(props) {\n  _s();\n\n  var _dataForm$ExerciseAns;\n\n  var dataGroup = props.dataGroup,\n      exerciseID = props.exerciseID,\n      onEdit = props.onEdit;\n\n  var _useState = useState(false),\n      isModalVisible = _useState[0],\n      setIsModalVisible = _useState[1];\n\n  var _useState2 = useState(dataGroup),\n      dataForm = _useState2[0],\n      setDataForm = _useState2[1];\n\n  var _useState3 = useState(null),\n      indexExercise = _useState3[0],\n      setIndexExercise = _useState3[1];\n\n  var _useState4 = useState(false),\n      reloadContent = _useState4[0],\n      setReloadContent = _useState4[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      userInformation = _useWrap.userInformation;\n\n  var _useState5 = useState(false),\n      isLoading = _useState5[0],\n      setIsLoading = _useState5[1];\n\n  var showModal = function showModal() {\n    setIsModalVisible(true);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newData, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              newData = JSON.parse(JSON.stringify(dataForm));\n              newData.ExerciseAnswer.forEach(function (item) {\n                if (item.isAdd) {\n                  delete item.ID;\n                }\n              });\n              dataGroup.ExerciseList[indexExercise] = newData;\n              _context.prev = 4;\n              _context.next = 7;\n              return exerciseGroupApi.update(dataGroup);\n\n            case 7:\n              res = _context.sent;\n\n              if (res.status == 200) {\n                setReloadContent(true);\n              }\n\n              _context.next = 13;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](4);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 11]]);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleCancel = function handleCancel() {\n    setIsModalVisible(false);\n  }; // ====== HANDLE ADD ANSWER ======\n\n\n  var handleAddAnswer = function handleAddAnswer(questionID) {\n    AnsID++;\n    dataForm.ExerciseAnswer.push({\n      ID: AnsID,\n      AnswerContent: '',\n      isTrue: true,\n      Enable: true,\n      isAdd: true\n    });\n    setDataForm(_objectSpread({}, dataForm));\n  }; // ====== HANDLE ON CHANGE ======\n\n\n  var onChange_text = function onChange_text(e, AnswerID, QuestionID) {\n    var text = e.target.value;\n    var indexAnswer = dataForm.ExerciseAnswer.findIndex(function (item) {\n      return item.ID == AnswerID;\n    });\n    dataForm.ExerciseAnswer[indexAnswer].AnswerContent = text;\n    setDataForm(_objectSpread({}, dataForm));\n  };\n\n  var deleteAnswerItem = function deleteAnswerItem(AnswerID, QuestionID) {\n    var indexAnswer = dataForm.ExerciseAnswer.findIndex(function (item) {\n      return item.ID == AnswerID;\n    });\n\n    if (dataForm.ExerciseAnswer[indexAnswer].isAdd) {\n      dataForm.ExerciseAnswer.splice(indexAnswer, 1);\n    } else {\n      dataForm.ExerciseAnswer[indexAnswer].Enable = false;\n    }\n\n    setDataForm(_objectSpread({}, dataForm));\n  };\n\n  useEffect(function () {\n    if (reloadContent) {\n      ;\n      (function () {\n        var _loadData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          var res;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return exerciseGroupApi.getWithID(dataGroup.ID);\n\n                case 3:\n                  res = _context2.sent;\n\n                  if (res.status == 200) {\n                    showNoti('success', \"Th\\xE0nh c\\xF4ng\");\n                    onEdit && onEdit(res.data.data);\n                  }\n\n                  res.status == 204 && showNoti('danger', 'Không thành công');\n                  _context2.next = 11;\n                  break;\n\n                case 8:\n                  _context2.prev = 8;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  showNoti('danger', _context2.t0.message);\n\n                case 11:\n                  _context2.prev = 11;\n                  setReloadContent(false);\n                  setIsModalVisible(false);\n                  setIsLoading(false);\n                  setDataForm(null);\n                  return _context2.finish(11);\n\n                case 17:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 8, 11, 17]]);\n        }));\n\n        function loadData() {\n          return _loadData.apply(this, arguments);\n        }\n\n        return loadData;\n      })()();\n    }\n  }, [reloadContent]);\n  useEffect(function () {\n    if (isModalVisible) {\n      // Make new data\n      var index = dataGroup.ExerciseList.findIndex(function (item) {\n        return item.ID == exerciseID;\n      });\n      var data = dataGroup.ExerciseList[index];\n      setDataForm(data);\n      setIndexExercise(index); // Find max id in arr\n\n      var newArr = [];\n      data.ExerciseAnswer.forEach(function (item) {\n        newArr.push(parseInt(item.ID));\n      });\n      AnsID = Math.max.apply(Math, newArr);\n    }\n  }, [isModalVisible]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Th\\xEAm/s\\u1EEDa \\u0111\\xE1p \\xE1n\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-icon edit\",\n        onClick: showModal,\n        children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n      footer: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-light mr-2\",\n          onClick: handleCancel,\n          children: \"H\\u1EE7y t\\xE1c v\\u1EE5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: function onClick() {\n            return handleSubmit();\n          },\n          children: [\"L\\u01B0u\", isLoading && /*#__PURE__*/_jsxDEV(Spin, {\n            className: \"loading-base\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 22\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 6\n      }, _this),\n      title: \"S\\u1EEDa/th\\xEAm \\u0111\\xE1p \\xE1n\",\n      visible: isModalVisible,\n      onCancel: handleCancel,\n      children: [dataForm === null || dataForm === void 0 ? void 0 : (_dataForm$ExerciseAns = dataForm.ExerciseAnswer) === null || _dataForm$ExerciseAns === void 0 ? void 0 : _dataForm$ExerciseAns.map(function (itemAns, index) {\n        return itemAns.Enable && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-100 d-flex align-items-center mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              className: \"mb-0\",\n              style: {\n                width: '80%'\n              },\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                value: itemAns.AnswerContent,\n                className: \"style-input\",\n                onChange: function onChange(e) {\n                  return onChange_text(e, itemAns.ID, dataForm.inputID);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 11\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 10\n            }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-ans\",\n              onClick: function onClick() {\n                return deleteAnswerItem(itemAns.ID, dataForm.inputID);\n              },\n              children: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 11\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 10\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 9\n          }, _this)\n        }, void 0, false);\n      }), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Th\\xEAm \\u0111\\xE1p \\xE1n\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-add-answer mt-2\",\n          onClick: function onClick() {\n            return handleAddAnswer(dataForm.inputID);\n          },\n          children: /*#__PURE__*/_jsxDEV(Plus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(EditQuestion, \"AT0Vm0N/lQCceG5o84emCKWiyuk=\", false, function () {\n  return [useWrap];\n});\n\n_c = EditQuestion;\n\nvar QuestionTyping = function QuestionTyping(props) {\n  _s2();\n\n  var _dataListQuestion$Exe, _dataListQuestion$Exe2, _dataListQuestion$Exe3;\n\n  var listQuestion = props.listQuestion,\n      loadingQuestion = props.loadingQuestion,\n      onFetchData = props.onFetchData,\n      onRemoveData = props.onRemoveData,\n      isGroup = props.isGroup,\n      onEditData = props.onEditData,\n      listAlphabet = props.listAlphabet,\n      groupID = props.groupID;\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _useState6 = useState(null),\n      dataListQuestion = _useState6[0],\n      setDataListQuestion = _useState6[1];\n\n  var _useWrap2 = useWrap(),\n      showNoti = _useWrap2.showNoti,\n      userInformation = _useWrap2.userInformation;\n\n  var _useState7 = useState({\n    id: null,\n    status: false\n  }),\n      visible = _useState7[0],\n      setVisible = _useState7[1];\n\n  var _useState8 = useState(false),\n      confirmLoading = _useState8[0],\n      setConfirmLoading = _useState8[1];\n\n  var _useState9 = useState(false),\n      loadingInGroup = _useState9[0],\n      setLoadingInGroup = _useState9[1];\n\n  var _useState10 = useState([]),\n      dataExercise = _useState10[0],\n      setDataExercise = _useState10[1];\n\n  var _useState11 = useState(false),\n      showContent = _useState11[0],\n      setShowContent = _useState11[1];\n\n  var onChange = function onChange(e) {\n    e.preventDefault(); // setValue(e.target.value);\n  }; // ON EDIT\n\n\n  var _onEdit = function onEdit(dataEdit) {\n    onEditData(dataEdit);\n  };\n\n  var deleteQuestionItem = function deleteQuestionItem(quesID) {\n    !visible.status ? setVisible({\n      id: quesID,\n      status: true\n    }) : setVisible({\n      id: quesID,\n      status: false\n    });\n  }; // Chấp nhận xóa câu hỏi\n\n\n  var handleOk = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n      var _quesItem$ExerciseLis;\n\n      var quesItem, res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setConfirmLoading(true);\n              quesItem = JSON.parse(JSON.stringify(dataListQuestion));\n              quesItem === null || quesItem === void 0 ? void 0 : (_quesItem$ExerciseLis = quesItem.ExerciseList) === null || _quesItem$ExerciseLis === void 0 ? void 0 : _quesItem$ExerciseLis.forEach(function (item) {\n                item.Enable = false;\n              });\n              quesItem.isDeleteExercise = true;\n              quesItem.Paragraph = '<p><br></p>';\n              quesItem.ExerciseGroupID = null;\n              _context3.prev = 6;\n              _context3.next = 9;\n              return exerciseGroupApi.update(quesItem);\n\n            case 9:\n              res = _context3.sent;\n\n              if (res.status == 200) {\n                setVisible(_objectSpread(_objectSpread({}, visible), {}, {\n                  status: false\n                }));\n                onRemoveData(quesItem);\n                showNoti('success', 'Xóa thành công');\n              }\n\n              _context3.next = 16;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](6);\n              showNoti('danger', _context3.t0.message);\n\n            case 16:\n              _context3.prev = 16;\n              setConfirmLoading(false);\n              return _context3.finish(16);\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[6, 13, 16, 19]]);\n    }));\n\n    return function handleOk(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleCancel = function handleCancel(quesID) {\n    setVisible({\n      id: quesID,\n      status: false\n    });\n  };\n\n  var getQuestionInGroup = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var res, filterExerciseList;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setLoadingInGroup(true);\n              _context4.prev = 1;\n              _context4.next = 4;\n              return exerciseGroupApi.getWithID(isGroup.id);\n\n            case 4:\n              res = _context4.sent;\n\n              if (res.status == 200) {\n                setDataListQuestion(res.data.data);\n                filterExerciseList = res.data.data.ExerciseList.filter(function (item) {\n                  return item.Enable !== false;\n                });\n                setDataExercise(_toConsumableArray(filterExerciseList));\n                checkShowContent(res.data.data);\n              }\n\n              res.status == 204 && setDataListQuestion([]);\n              _context4.next = 12;\n              break;\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](1);\n              showNoti('danger', _context4.t0.message);\n\n            case 12:\n              _context4.prev = 12;\n              setLoadingInGroup(false);\n              return _context4.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function getQuestionInGroup() {\n      return _ref3.apply(this, arguments);\n    };\n  }(); //RETURN INDEX QUESTION - Trả về thứ tự của từng câu hỏi\n\n\n  var returnIndexQuestion = function returnIndexQuestion(itemQues) {\n    var title = '';\n    var index = dataExercise.findIndex(function (ex) {\n      return ex.inputID == itemQues.inputID;\n    });\n    title = \"C\\xE2u (\".concat(index + 1, \")\");\n    return title;\n  };\n\n  var checkShowContent = function checkShowContent(data) {\n    var preventLoop = false;\n    data.ExerciseList.length == 0 && setShowContent(false);\n    data.ExerciseList.forEach(function (item, index) {\n      if (item.Enable) {\n        if (!preventLoop) {\n          setShowContent(true);\n          preventLoop = true;\n        }\n      }\n    });\n\n    if (!preventLoop) {\n      setShowContent(false);\n    }\n  };\n\n  useEffect(function () {\n    if (listQuestion) {\n      checkShowContent(listQuestion);\n      var filterExerciseList = listQuestion === null || listQuestion === void 0 ? void 0 : listQuestion.ExerciseList.filter(function (item) {\n        return item.Enable !== false;\n      });\n      setDataListQuestion(listQuestion);\n      setDataExercise(_toConsumableArray(filterExerciseList));\n    }\n  }, [listQuestion]);\n  useEffect(function () {\n    isGroup.status && setDataListQuestion([]);\n    isGroup.status && isGroup.id && isGroup.id === groupID && getQuestionInGroup();\n\n    if (!isGroup) {\n      return;\n    }\n  }, [isGroup]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail-question-typing\",\n      children: showContent && (dataListQuestion === null || dataListQuestion === void 0 ? void 0 : (_dataListQuestion$Exe = dataListQuestion.ExerciseList) === null || _dataListQuestion$Exe === void 0 ? void 0 : _dataListQuestion$Exe.length) > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paragraph mb-3\",\n          children: ReactHtmlParser(dataListQuestion === null || dataListQuestion === void 0 ? void 0 : dataListQuestion.Paragraph)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-action\",\n          children: userInformation && userInformation.RoleID !== 2 && /*#__PURE__*/_jsxDEV(Popconfirm, {\n            title: \"B\\u1EA1n c\\xF3 ch\\u1EAFc mu\\u1ED1n x\\xF3a?\",\n            onConfirm: function onConfirm() {\n              return handleOk(dataListQuestion);\n            },\n            okButtonProps: {\n              loading: confirmLoading\n            },\n            onCancel: function onCancel() {\n              return handleCancel(dataListQuestion.ID);\n            },\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"X\\xF3a h\\u1EBFt c\\xE2u h\\u1ECFi\",\n              placement: \"rightTop\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-icon delete\",\n                onClick: function onClick() {\n                  return deleteQuestionItem(dataListQuestion.ID);\n                },\n                children: /*#__PURE__*/_jsxDEV(Trash2, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 12\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 11\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 10\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 9\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 7\n        }, _this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 4\n    }, _this), showContent && (dataListQuestion === null || dataListQuestion === void 0 ? void 0 : (_dataListQuestion$Exe2 = dataListQuestion.ExerciseList) === null || _dataListQuestion$Exe2 === void 0 ? void 0 : _dataListQuestion$Exe2.length) > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-question mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"C\\xE2u h\\u1ECFi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 8\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0110\\xE1p \\xE1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 8\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 8\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 6\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: dataListQuestion === null || dataListQuestion === void 0 ? void 0 : (_dataListQuestion$Exe3 = dataListQuestion.ExerciseList) === null || _dataListQuestion$Exe3 === void 0 ? void 0 : _dataListQuestion$Exe3.map(function (item, index) {\n          var _item$ExerciseAnswer;\n\n          return item.Enable && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: '20%'\n              },\n              children: returnIndexQuestion(item)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 11\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_item$ExerciseAnswer = item.ExerciseAnswer) === null || _item$ExerciseAnswer === void 0 ? void 0 : _item$ExerciseAnswer.map(function (ans, i) {\n                return ans.Enable && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text\",\n                    children: ans.AnswerContent\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 16\n                  }, _this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 15\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 11\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: '10%'\n              },\n              children: /*#__PURE__*/_jsxDEV(EditQuestion, {\n                dataGroup: dataListQuestion,\n                exerciseID: item.ID,\n                onEdit: function onEdit(dataEdit) {\n                  return _onEdit(dataEdit);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 13\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 11\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 10\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 6\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 5\n    }, _this), isGroup !== null && isGroup !== void 0 && isGroup.status && loadingInGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 5\n    }, _this) : !showContent && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: '#dd4667'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"Nh\\xF3m n\\xE0y ch\\u01B0a c\\xF3 c\\xE2u h\\u1ECFi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 6\n    }, _this), loadingQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 6\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true);\n};\n\n_s2(QuestionTyping, \"a/souHSwGXO47M5uih+eKYvsuXw=\", false, function () {\n  return [useWrap];\n});\n\n_c2 = QuestionTyping;\nexport default QuestionTyping;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditQuestion\");\n$RefreshReg$(_c2, \"QuestionTyping\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/QuestionBank/QuestionShow/QuestionTyping.tsx"],"names":["React","useEffect","useState","Skeleton","Modal","Popconfirm","Form","Input","Tooltip","Spin","Edit","Trash2","ReactHtmlParser","exerciseGroupApi","useWrap","CloseOutlined","Plus","AnsID","EditQuestion","props","dataGroup","exerciseID","onEdit","isModalVisible","setIsModalVisible","dataForm","setDataForm","indexExercise","setIndexExercise","reloadContent","setReloadContent","showNoti","userInformation","isLoading","setIsLoading","showModal","handleSubmit","newData","JSON","parse","stringify","ExerciseAnswer","forEach","item","isAdd","ID","ExerciseList","update","res","status","handleCancel","handleAddAnswer","questionID","push","AnswerContent","isTrue","Enable","onChange_text","e","AnswerID","QuestionID","text","target","value","indexAnswer","findIndex","deleteAnswerItem","splice","getWithID","data","message","loadData","index","newArr","parseInt","Math","max","map","itemAns","width","inputID","QuestionTyping","listQuestion","loadingQuestion","onFetchData","onRemoveData","isGroup","onEditData","listAlphabet","groupID","setValue","dataListQuestion","setDataListQuestion","id","visible","setVisible","confirmLoading","setConfirmLoading","loadingInGroup","setLoadingInGroup","dataExercise","setDataExercise","showContent","setShowContent","onChange","preventDefault","dataEdit","deleteQuestionItem","quesID","handleOk","quesItem","isDeleteExercise","Paragraph","ExerciseGroupID","getQuestionInGroup","filterExerciseList","filter","checkShowContent","returnIndexQuestion","itemQues","title","ex","preventLoop","length","RoleID","loading","ans","i","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Skeleton, Modal, Popconfirm, Form, Input, Tooltip, Spin } from 'antd'\r\nimport { Edit, Trash2 } from 'react-feather'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser'\r\nimport { exerciseGroupApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { CloseOutlined } from '@ant-design/icons'\r\nimport { Plus } from 'react-feather'\r\nimport { data } from '~/lib/customer-student/data'\r\n\r\nlet AnsID = 0\r\n\r\nconst EditQuestion = (props) => {\r\n\tconst { dataGroup, exerciseID, onEdit } = props\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false)\r\n\tconst [dataForm, setDataForm] = useState(dataGroup)\r\n\tconst [indexExercise, setIndexExercise] = useState(null)\r\n\tconst [reloadContent, setReloadContent] = useState(false)\r\n\tconst { showNoti, userInformation } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\r\n\tconst showModal = () => {\r\n\t\tsetIsModalVisible(true)\r\n\t}\r\n\r\n\tconst handleSubmit = async () => {\r\n\t\tsetIsLoading(true)\r\n\r\n\t\tlet newData = JSON.parse(JSON.stringify(dataForm))\r\n\t\tnewData.ExerciseAnswer.forEach((item) => {\r\n\t\t\tif (item.isAdd) {\r\n\t\t\t\tdelete item.ID\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tdataGroup.ExerciseList[indexExercise] = newData\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseGroupApi.update(dataGroup)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetReloadContent(true)\r\n\t\t\t}\r\n\t\t} catch (error) {}\r\n\t}\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false)\r\n\t}\r\n\r\n\t// ====== HANDLE ADD ANSWER ======\r\n\tconst handleAddAnswer = (questionID: number) => {\r\n\t\tAnsID++\r\n\t\tdataForm.ExerciseAnswer.push({\r\n\t\t\tID: AnsID,\r\n\t\t\tAnswerContent: '',\r\n\t\t\tisTrue: true,\r\n\t\t\tEnable: true,\r\n\t\t\tisAdd: true\r\n\t\t})\r\n\r\n\t\tsetDataForm({ ...dataForm })\r\n\t}\r\n\r\n\t// ====== HANDLE ON CHANGE ======\r\n\tconst onChange_text = (e: any, AnswerID: number, QuestionID) => {\r\n\t\tlet text = e.target.value\r\n\t\tlet indexAnswer = dataForm.ExerciseAnswer.findIndex((item) => item.ID == AnswerID)\r\n\t\tdataForm.ExerciseAnswer[indexAnswer].AnswerContent = text\r\n\t\tsetDataForm({ ...dataForm })\r\n\t}\r\n\r\n\tconst deleteAnswerItem = (AnswerID: number, QuestionID) => {\r\n\t\tlet indexAnswer = dataForm.ExerciseAnswer.findIndex((item) => item.ID == AnswerID)\r\n\t\tif (dataForm.ExerciseAnswer[indexAnswer].isAdd) {\r\n\t\t\tdataForm.ExerciseAnswer.splice(indexAnswer, 1)\r\n\t\t} else {\r\n\t\t\tdataForm.ExerciseAnswer[indexAnswer].Enable = false\r\n\t\t}\r\n\r\n\t\tsetDataForm({ ...dataForm })\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (reloadContent) {\r\n\t\t\t;(async function loadData() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet res = await exerciseGroupApi.getWithID(dataGroup.ID)\r\n\r\n\t\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\t\tshowNoti('success', `Thành công`)\r\n\r\n\t\t\t\t\t\tonEdit && onEdit(res.data.data)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tres.status == 204 && showNoti('danger', 'Không thành công')\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tsetReloadContent(false)\r\n\t\t\t\t\tsetIsModalVisible(false)\r\n\t\t\t\t\tsetIsLoading(false)\r\n\t\t\t\t\tsetDataForm(null)\r\n\t\t\t\t}\r\n\t\t\t})()\r\n\t\t}\r\n\t}, [reloadContent])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isModalVisible) {\r\n\t\t\t// Make new data\r\n\t\t\tlet index = dataGroup.ExerciseList.findIndex((item) => item.ID == exerciseID)\r\n\r\n\t\t\tlet data = dataGroup.ExerciseList[index]\r\n\t\t\tsetDataForm(data)\r\n\t\t\tsetIndexExercise(index)\r\n\r\n\t\t\t// Find max id in arr\r\n\t\t\tlet newArr = []\r\n\t\t\tdata.ExerciseAnswer.forEach((item) => {\r\n\t\t\t\tnewArr.push(parseInt(item.ID))\r\n\t\t\t})\r\n\t\t\tAnsID = Math.max(...newArr)\r\n\t\t}\r\n\t}, [isModalVisible])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tooltip title=\"Thêm/sửa đáp án\">\r\n\t\t\t\t<button className=\"btn btn-icon edit\" onClick={showModal}>\r\n\t\t\t\t\t<Edit />\r\n\t\t\t\t</button>\r\n\t\t\t</Tooltip>\r\n\t\t\t<Modal\r\n\t\t\t\tfooter={\r\n\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t<button className=\"btn btn-light mr-2\" onClick={handleCancel}>\r\n\t\t\t\t\t\t\tHủy tác vụ\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={() => handleSubmit()}>\r\n\t\t\t\t\t\t\tLưu\r\n\t\t\t\t\t\t\t{isLoading && <Spin className=\"loading-base\" />}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\ttitle=\"Sửa/thêm đáp án\"\r\n\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t>\r\n\t\t\t\t{dataForm?.ExerciseAnswer?.map(\r\n\t\t\t\t\t(itemAns, index) =>\r\n\t\t\t\t\t\titemAns.Enable && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<div className=\"w-100 d-flex align-items-center mt-2\" key={index}>\r\n\t\t\t\t\t\t\t\t\t<Form.Item className=\"mb-0\" style={{ width: '80%' }}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={itemAns.AnswerContent}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => onChange_text(e, itemAns.ID, dataForm.inputID)}\r\n\t\t\t\t\t\t\t\t\t\t></Input>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t<button className=\"delete-ans\" onClick={() => deleteAnswerItem(itemAns.ID, dataForm.inputID)}>\r\n\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t\t<Tooltip title=\"Thêm đáp án\">\r\n\t\t\t\t\t<button className=\"btn-add-answer mt-2\" onClick={() => handleAddAnswer(dataForm.inputID)}>\r\n\t\t\t\t\t\t<Plus />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst QuestionTyping = (props: any) => {\r\n\tconst { listQuestion, loadingQuestion, onFetchData, onRemoveData, isGroup, onEditData, listAlphabet, groupID } = props\r\n\tconst [value, setValue] = React.useState(1)\r\n\tconst [dataListQuestion, setDataListQuestion] = useState(null)\r\n\tconst { showNoti, userInformation } = useWrap()\r\n\tconst [visible, setVisible] = useState({\r\n\t\tid: null,\r\n\t\tstatus: false\r\n\t})\r\n\tconst [confirmLoading, setConfirmLoading] = useState(false)\r\n\tconst [loadingInGroup, setLoadingInGroup] = useState(false)\r\n\tconst [dataExercise, setDataExercise] = useState([])\r\n\tconst [showContent, setShowContent] = useState(false)\r\n\r\n\tconst onChange = (e) => {\r\n\t\te.preventDefault()\r\n\t\t// setValue(e.target.value);\r\n\t}\r\n\r\n\t// ON EDIT\r\n\tconst onEdit = (dataEdit) => {\r\n\t\tonEditData(dataEdit)\r\n\t}\r\n\r\n\tconst deleteQuestionItem = (quesID) => {\r\n\t\t!visible.status\r\n\t\t\t? setVisible({\r\n\t\t\t\t\tid: quesID,\r\n\t\t\t\t\tstatus: true\r\n\t\t\t  })\r\n\t\t\t: setVisible({\r\n\t\t\t\t\tid: quesID,\r\n\t\t\t\t\tstatus: false\r\n\t\t\t  })\r\n\t}\r\n\r\n\t// Chấp nhận xóa câu hỏi\r\n\tconst handleOk = async (data) => {\r\n\t\tsetConfirmLoading(true)\r\n\r\n\t\tlet quesItem = JSON.parse(JSON.stringify(dataListQuestion))\r\n\r\n\t\tquesItem?.ExerciseList?.forEach((item) => {\r\n\t\t\titem.Enable = false\r\n\t\t})\r\n\t\tquesItem.isDeleteExercise = true\r\n\t\tquesItem.Paragraph = '<p><br></p>'\r\n\t\tquesItem.ExerciseGroupID = null\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseGroupApi.update(quesItem)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetVisible({\r\n\t\t\t\t\t...visible,\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t\tonRemoveData(quesItem)\r\n\t\t\t\tshowNoti('success', 'Xóa thành công')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetConfirmLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleCancel = (quesID) => {\r\n\t\tsetVisible({\r\n\t\t\tid: quesID,\r\n\t\t\tstatus: false\r\n\t\t})\r\n\t}\r\n\r\n\tconst getQuestionInGroup = async () => {\r\n\t\tsetLoadingInGroup(true)\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await exerciseGroupApi.getWithID(isGroup.id)\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tsetDataListQuestion(res.data.data)\r\n\t\t\t\tlet filterExerciseList = res.data.data.ExerciseList.filter((item) => item.Enable !== false)\r\n\t\t\t\tsetDataExercise([...filterExerciseList])\r\n\t\t\t\tcheckShowContent(res.data.data)\r\n\t\t\t}\r\n\r\n\t\t\tres.status == 204 && setDataListQuestion([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingInGroup(false)\r\n\t\t}\r\n\t}\r\n\r\n\t//RETURN INDEX QUESTION - Trả về thứ tự của từng câu hỏi\r\n\tconst returnIndexQuestion = (itemQues) => {\r\n\t\tlet title = ''\r\n\t\tlet index = dataExercise.findIndex((ex) => ex.inputID == itemQues.inputID)\r\n\t\ttitle = `Câu (${index + 1})`\r\n\t\treturn title\r\n\t}\r\n\r\n\tconst checkShowContent = (data) => {\r\n\t\tlet preventLoop = false\r\n\t\tdata.ExerciseList.length == 0 && setShowContent(false)\r\n\t\tdata.ExerciseList.forEach((item, index) => {\r\n\t\t\tif (item.Enable) {\r\n\t\t\t\tif (!preventLoop) {\r\n\t\t\t\t\tsetShowContent(true)\r\n\t\t\t\t\tpreventLoop = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (!preventLoop) {\r\n\t\t\tsetShowContent(false)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (listQuestion) {\r\n\t\t\tcheckShowContent(listQuestion)\r\n\t\t\tlet filterExerciseList = listQuestion?.ExerciseList.filter((item) => item.Enable !== false)\r\n\t\t\tsetDataListQuestion(listQuestion)\r\n\t\t\tsetDataExercise([...filterExerciseList])\r\n\t\t}\r\n\t}, [listQuestion])\r\n\r\n\tuseEffect(() => {\r\n\t\tisGroup.status && setDataListQuestion([])\r\n\t\tisGroup.status && isGroup.id && isGroup.id === groupID && getQuestionInGroup()\r\n\t\tif (!isGroup) {\r\n\t\t\treturn\r\n\t\t}\r\n\t}, [isGroup])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"detail-question-typing\">\r\n\t\t\t\t{showContent && dataListQuestion?.ExerciseList?.length > 0 && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"paragraph mb-3\">{ReactHtmlParser(dataListQuestion?.Paragraph)}</div>\r\n\t\t\t\t\t\t<div className=\"box-action\">\r\n\t\t\t\t\t\t\t{/* <CreateQuestionForm\r\n                isGroup={{ status: false, id: dataListQuestion?.ID }}\r\n                questionData={dataListQuestion}\r\n                onFetchData={onFetchData}\r\n                onEditData={(data) => onEditData(data)}\r\n              /> */}\r\n\t\t\t\t\t\t\t{userInformation && userInformation.RoleID !== 2 && (\r\n\t\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\t\ttitle=\"Bạn có chắc muốn xóa?\"\r\n\t\t\t\t\t\t\t\t\tonConfirm={() => handleOk(dataListQuestion)}\r\n\t\t\t\t\t\t\t\t\tokButtonProps={{ loading: confirmLoading }}\r\n\t\t\t\t\t\t\t\t\tonCancel={() => handleCancel(dataListQuestion.ID)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip title=\"Xóa hết câu hỏi\" placement=\"rightTop\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-icon delete\" onClick={() => deleteQuestionItem(dataListQuestion.ID)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Trash2 />\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t{showContent && dataListQuestion?.ExerciseList?.length > 0 && (\r\n\t\t\t\t<table className=\"table-question mt-3\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Câu hỏi</th>\r\n\t\t\t\t\t\t\t<th>Đáp án</th>\r\n\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{dataListQuestion?.ExerciseList?.map(\r\n\t\t\t\t\t\t\t(item, index) =>\r\n\t\t\t\t\t\t\t\titem.Enable && (\r\n\t\t\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<td style={{ width: '20%' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{returnIndexQuestion(item)}\r\n\t\t\t\t\t\t\t\t\t\t\t{/* {`Câu (${index + 1})`} */}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.ExerciseAnswer?.map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(ans, i) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tans.Enable && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span className=\"tick\">- </span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text\">{ans.AnswerContent}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td style={{ width: '10%' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{<EditQuestion dataGroup={dataListQuestion} exerciseID={item.ID} onEdit={(dataEdit) => onEdit(dataEdit)} />}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t)}\r\n\r\n\t\t\t{isGroup?.status && loadingInGroup ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Skeleton />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t!showContent && (\r\n\t\t\t\t\t<p style={{ color: '#dd4667' }}>\r\n\t\t\t\t\t\t<i>Nhóm này chưa có câu hỏi</i>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t\t{loadingQuestion && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Skeleton />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default QuestionTyping\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\QuestionBank\\\\QuestionFormType\\\\GroupForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { exerciseGroupApi } from '~/apiBase/';\nimport EditorSimple from '~/components/Elements/EditorSimple';\nimport UploadAudio from '~/components/Elements/UploadAudio';\nimport { useWrap } from '~/context/wrap';\n\nconst GroupForm = props => {\n  const {\n    isSubmit,\n    questionData,\n    changeIsSubmit,\n    visible,\n    changeData\n  } = props;\n  const {\n    showNoti\n  } = useWrap();\n  const [form] = Form.useForm();\n  const {\n    0: questionDataForm,\n    1: setQuestionDataForm\n  } = useState(questionData);\n  const {\n    0: isResetEditor,\n    1: setIsResetEditor\n  } = useState(false);\n  const {\n    0: loadAtFirst,\n    1: setLoadAtFirst\n  } = useState(true); // GET INTRODUCE EDITOR\n\n  const getIntroduceEditor = dataEditor => {\n    if (questionDataForm) {\n      questionDataForm.Introduce = dataEditor;\n    }\n\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // GET VALUE IN EDITOR\n\n\n  const getDataEditor = dataEditor => {\n    if (questionDataForm) {\n      questionDataForm.Content = dataEditor;\n    }\n\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // Reset value in form\n\n\n  const resetForm = () => {\n    questionDataForm.Content = '';\n    questionDataForm.Introduce = '';\n    questionDataForm.ExerciseAnswer.forEach(item => {\n      item.AnswerContent = '';\n      item.isTrue = false;\n    });\n    setQuestionDataForm(_objectSpread({}, questionDataForm));\n  }; // SUBMIT FORM\n\n\n  const handleSubmitQuestion = async () => {\n    let res = null;\n    let newData = {\n      Content: questionDataForm.Content,\n      CurriculumID: questionData.CurriculumID,\n      Level: questionData.Level,\n      Type: questionData.Type,\n      LinkAudio: questionDataForm.LinkAudio,\n      Introduce: questionDataForm.Introduce,\n      SkillID: questionData.SkillID\n    };\n\n    try {\n      if (questionDataForm.ID) {\n        res = await exerciseGroupApi.update(_objectSpread(_objectSpread({}, newData), {}, {\n          ID: questionDataForm.ID\n        }));\n      } else {\n        res = await exerciseGroupApi.add(newData);\n      }\n\n      if (res.status == 200) {\n        changeIsSubmit(questionDataForm.ID ? questionDataForm : res.data.data);\n        showNoti('success', `${questionDataForm.ID ? 'Cập nhật' : 'Thêm'} Thành công`);\n\n        if (!questionDataForm.ID) {\n          resetForm();\n        }\n\n        setIsResetEditor(true);\n        setTimeout(() => {\n          setIsResetEditor(false);\n        }, 500);\n      }\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    !!isSubmit && handleSubmitQuestion();\n  }, [isSubmit]);\n  useEffect(() => {\n    if (visible) {\n      if (!questionData.ID) {\n        questionData.Content = '';\n        questionData.Introduce = '';\n        questionData.LinkAudio = '';\n      }\n\n      setQuestionDataForm(questionData);\n    } else {\n      setQuestionDataForm(null);\n      setLoadAtFirst(true);\n    }\n  }, [visible]);\n  useEffect(() => {\n    if (questionDataForm) {\n      if (!loadAtFirst) {\n        if (questionDataForm.Content !== '' || questionDataForm.Introduce !== '' || questionDataForm.LinkAudio !== '') {\n          changeData && changeData();\n        }\n      }\n\n      setLoadAtFirst(false);\n    }\n  }, [questionDataForm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-create-question\",\n    children: visible && questionDataForm && /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      layout: \"vertical\",\n      onFinish: handleSubmitQuestion,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"Introduce\",\n              label: \"Gi\\u1EDBi thi\\u1EC7u\",\n              children: /*#__PURE__*/_jsxDEV(EditorSimple, {\n                handleChange: value => getIntroduceEditor(value),\n                isReset: isResetEditor,\n                questionContent: questionDataForm === null || questionDataForm === void 0 ? void 0 : questionDataForm.Introduce,\n                questionData: questionDataForm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"Content\",\n              label: \"N\\u1ED9i dung\",\n              children: /*#__PURE__*/_jsxDEV(EditorSimple, {\n                isTranslate: true,\n                handleChange: value => getDataEditor(value),\n                isReset: isResetEditor,\n                questionContent: questionDataForm === null || questionDataForm === void 0 ? void 0 : questionDataForm.Content,\n                questionData: questionDataForm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"T\\u1EA3i l\\xEAn link Audio\",\n              children: /*#__PURE__*/_jsxDEV(UploadAudio, {\n                getFile: file => {\n                  questionDataForm.LinkAudio = file;\n                  setQuestionDataForm(_objectSpread({}, questionDataForm));\n                },\n                valueFile: questionDataForm === null || questionDataForm === void 0 ? void 0 : questionDataForm.LinkAudio\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 3\n  }, this);\n};\n\nexport default GroupForm;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/QuestionBank/QuestionFormType/GroupForm.tsx"],"names":["Form","React","useEffect","useState","exerciseGroupApi","EditorSimple","UploadAudio","useWrap","GroupForm","props","isSubmit","questionData","changeIsSubmit","visible","changeData","showNoti","form","useForm","questionDataForm","setQuestionDataForm","isResetEditor","setIsResetEditor","loadAtFirst","setLoadAtFirst","getIntroduceEditor","dataEditor","Introduce","getDataEditor","Content","resetForm","ExerciseAnswer","forEach","item","AnswerContent","isTrue","handleSubmitQuestion","res","newData","CurriculumID","Level","Type","LinkAudio","SkillID","ID","update","add","status","data","setTimeout","error","value","file"],"mappings":"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","sourcesContent":["import { Form } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { exerciseGroupApi } from '~/apiBase/'\r\nimport EditorSimple from '~/components/Elements/EditorSimple'\r\nimport UploadAudio from '~/components/Elements/UploadAudio'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nconst GroupForm = (props) => {\r\n\tconst { isSubmit, questionData, changeIsSubmit, visible, changeData } = props\r\n\tconst { showNoti } = useWrap()\r\n\tconst [form] = Form.useForm()\r\n\tconst [questionDataForm, setQuestionDataForm] = useState<any>(questionData)\r\n\tconst [isResetEditor, setIsResetEditor] = useState<boolean>(false)\r\n\tconst [loadAtFirst, setLoadAtFirst] = useState<boolean>(true)\r\n\r\n\t// GET INTRODUCE EDITOR\r\n\tconst getIntroduceEditor = (dataEditor: any) => {\r\n\t\tif (questionDataForm) {\r\n\t\t\tquestionDataForm.Introduce = dataEditor\r\n\t\t}\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// GET VALUE IN EDITOR\r\n\tconst getDataEditor = (dataEditor: any) => {\r\n\t\tif (questionDataForm) {\r\n\t\t\tquestionDataForm.Content = dataEditor\r\n\t\t}\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// Reset value in form\r\n\tconst resetForm = () => {\r\n\t\tquestionDataForm.Content = ''\r\n\t\tquestionDataForm.Introduce = ''\r\n\t\tquestionDataForm.ExerciseAnswer.forEach((item: any) => {\r\n\t\t\titem.AnswerContent = ''\r\n\t\t\titem.isTrue = false\r\n\t\t})\r\n\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t}\r\n\r\n\t// SUBMIT FORM\r\n\tconst handleSubmitQuestion = async () => {\r\n\t\tlet res: any = null\r\n\t\tlet newData: any = {\r\n\t\t\tContent: questionDataForm.Content,\r\n\t\t\tCurriculumID: questionData.CurriculumID,\r\n\t\t\tLevel: questionData.Level,\r\n\t\t\tType: questionData.Type,\r\n\t\t\tLinkAudio: questionDataForm.LinkAudio,\r\n\t\t\tIntroduce: questionDataForm.Introduce,\r\n\t\t\tSkillID: questionData.SkillID\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tif (questionDataForm.ID) {\r\n\t\t\t\tres = await exerciseGroupApi.update({\r\n\t\t\t\t\t...newData,\r\n\t\t\t\t\tID: questionDataForm.ID\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tres = await exerciseGroupApi.add(newData)\r\n\t\t\t}\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tchangeIsSubmit(questionDataForm.ID ? questionDataForm : res.data.data)\r\n\t\t\t\tshowNoti('success', `${questionDataForm.ID ? 'Cập nhật' : 'Thêm'} Thành công`)\r\n\t\t\t\tif (!questionDataForm.ID) {\r\n\t\t\t\t\tresetForm()\r\n\t\t\t\t}\r\n\t\t\t\tsetIsResetEditor(true)\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetIsResetEditor(false)\r\n\t\t\t\t}, 500)\r\n\t\t\t}\r\n\t\t} catch (error) {}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t!!isSubmit && handleSubmitQuestion()\r\n\t}, [isSubmit])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (visible) {\r\n\t\t\tif (!questionData.ID) {\r\n\t\t\t\tquestionData.Content = ''\r\n\t\t\t\tquestionData.Introduce = ''\r\n\t\t\t\tquestionData.LinkAudio = ''\r\n\t\t\t}\r\n\t\t\tsetQuestionDataForm(questionData)\r\n\t\t} else {\r\n\t\t\tsetQuestionDataForm(null)\r\n\t\t\tsetLoadAtFirst(true)\r\n\t\t}\r\n\t}, [visible])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (questionDataForm) {\r\n\t\t\tif (!loadAtFirst) {\r\n\t\t\t\tif (questionDataForm.Content !== '' || questionDataForm.Introduce !== '' || questionDataForm.LinkAudio !== '') {\r\n\t\t\t\t\tchangeData && changeData()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetLoadAtFirst(false)\r\n\t\t}\r\n\t}, [questionDataForm])\r\n\r\n\treturn (\r\n\t\t<div className=\"form-create-question\">\r\n\t\t\t{visible && questionDataForm && (\r\n\t\t\t\t<Form form={form} layout=\"vertical\" onFinish={handleSubmitQuestion}>\r\n\t\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t<Form.Item name=\"Introduce\" label=\"Giới thiệu\">\r\n\t\t\t\t\t\t\t\t\t<EditorSimple\r\n\t\t\t\t\t\t\t\t\t\thandleChange={(value: any) => getIntroduceEditor(value)}\r\n\t\t\t\t\t\t\t\t\t\tisReset={isResetEditor}\r\n\t\t\t\t\t\t\t\t\t\tquestionContent={questionDataForm?.Introduce}\r\n\t\t\t\t\t\t\t\t\t\tquestionData={questionDataForm}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t<Form.Item name=\"Content\" label=\"Nội dung\">\r\n\t\t\t\t\t\t\t\t\t<EditorSimple\r\n\t\t\t\t\t\t\t\t\t\tisTranslate={true}\r\n\t\t\t\t\t\t\t\t\t\thandleChange={(value: any) => getDataEditor(value)}\r\n\t\t\t\t\t\t\t\t\t\tisReset={isResetEditor}\r\n\t\t\t\t\t\t\t\t\t\tquestionContent={questionDataForm?.Content}\r\n\t\t\t\t\t\t\t\t\t\tquestionData={questionDataForm}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t<Form.Item label=\"Tải lên link Audio\">\r\n\t\t\t\t\t\t\t\t\t<UploadAudio\r\n\t\t\t\t\t\t\t\t\t\tgetFile={(file: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\tquestionDataForm.LinkAudio = file\r\n\t\t\t\t\t\t\t\t\t\t\tsetQuestionDataForm({ ...questionDataForm })\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tvalueFile={questionDataForm?.LinkAudio}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default GroupForm\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\ExamList\\\\ExamShow\\\\MapList.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Checkbox } from 'antd';\nimport { useDoingTest } from '~/context/useDoingTest';\nimport { useDoneTest } from '~/context/useDoneTest';\nimport _ from '~/appConfig';\n\nconst MapList = props => {\n  const {\n    doneTestData\n  } = useDoneTest();\n  const {\n    dataQuestion,\n    listQuestionID,\n    isDoingTest\n  } = props;\n  const {\n    activeID,\n    getActiveID,\n    packageResult,\n    getPackageResult,\n    getListPicked\n  } = useDoingTest();\n  let indexQuestion = null;\n\n  if (isDoingTest) {\n    indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex(item => item.ExamTopicDetailID === dataQuestion.ID);\n  }\n\n  const returnPosition = quesID => {\n    let index = listQuestionID.indexOf(quesID);\n    let text = (index + 1).toString() + '/';\n    return text;\n  }; // ---- ALL ACTION IN DOING TEST ----\n\n\n  const onChange_selectAnswer = (dataAns, quesID) => {\n    if (!doneTestData) {\n      if (isDoingTest) {\n        getActiveID(quesID);\n        getListPicked(quesID);\n        let indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(item => item.ExerciseID === quesID);\n        packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList = [];\n        packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList.push({\n          AnswerID: dataAns.ID,\n          AnswerContent: dataAns.AnswerContent,\n          FileAudio: ''\n        });\n        getPackageResult(_objectSpread({}, packageResult));\n      }\n    }\n  };\n\n  const returnChecked = (ansID, quesID) => {\n    if (!doneTestData) {\n      if (isDoingTest) {\n        let checked = false;\n        let indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex(item => item.ExamTopicDetailID === dataQuestion.ID);\n        let indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(item => item.ExerciseID === quesID);\n\n        if (packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[indexQuestionDetail].SetPackageExerciseAnswerStudentList.some(object => object['AnswerID'] === ansID)) {\n          checked = true;\n        }\n\n        return checked;\n      }\n    }\n  };\n\n  const returnCheckedDoneTest = (dataAns, dataQuestion) => {\n    let checked = false;\n    dataQuestion === null || dataQuestion === void 0 ? void 0 : dataQuestion.ExerciseAnswer.every(item => {\n      if (item.AnswerID === dataAns.ExerciseAnswerID) {\n        checked = true;\n        return false;\n      }\n\n      if (item.ExerciseAnswerID == dataAns.ExerciseAnswerID) {\n        if (item.isTrue) {\n          checked = true;\n        }\n\n        return false;\n      }\n\n      return true;\n    });\n    return checked;\n  };\n\n  const returnClassDoneTest = (dataAns, dataQuestion) => {\n    let className = 'isCorrect';\n    dataQuestion === null || dataQuestion === void 0 ? void 0 : dataQuestion.ExerciseAnswer.every(item => {\n      if (item.AnswerID === dataAns.ExerciseAnswerID) {\n        if (item.AnswerID !== item.ExerciseAnswerID) {\n          className = 'isWrong';\n        }\n\n        return false;\n      }\n\n      return true;\n    });\n    return className;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-map-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"font-italic mb-3 mt-4\",\n        children: \"T\\xEDch ch\\u1ECDn \\u0111\\xE1p \\xE1n \\u0111\\xFAng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-question w-100\",\n        style: {\n          maxWidth: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"C\\xE2u h\\u1ECFi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 8\n            }, this), dataQuestion === null || dataQuestion === void 0 ? void 0 : dataQuestion.ExerciseTopic.map((item, index) => item.ExerciseAnswer.map((ans, ansIndex) => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-center\",\n              children: !doneTestData ? ans.AnswerContent : ans.ExerciseAnswerContent\n            }, ansIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 10\n            }, this)))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: dataQuestion === null || dataQuestion === void 0 ? void 0 : dataQuestion.ExerciseTopic.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: '5%',\n                fontWeight: 500,\n                color: `${item.ExerciseID === activeID ? _.primaryColor : 'inherit'}`\n              },\n              className: `${item.ExerciseID === activeID ? 'active-doing' : ''}`,\n              children: returnPosition(item.ExerciseID)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `w-50 ${item.ExerciseID === activeID ? 'active-doing' : ''}`,\n              children: [\" \", ReactHtmlParser(item.Content)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 9\n            }, this), dataQuestion === null || dataQuestion === void 0 ? void 0 : dataQuestion.ExerciseTopic.map((itemQues, indexQues) => itemQues.ExerciseAnswer.map((ans, ansIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center check-box-table\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                className: returnClassDoneTest(ans, item),\n                onChange: () => onChange_selectAnswer(ans, item.ExerciseID),\n                checked: !doneTestData ? !isDoingTest ? false : returnChecked(ans.ID, item.ExerciseID) : returnCheckedDoneTest(ans, item),\n                disabled: !isDoingTest ? true : false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 12\n              }, this)\n            }, ansIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 11\n            }, this)))]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nexport default MapList;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/ExamList/ExamShow/MapList.tsx"],"names":["React","ReactHtmlParser","Checkbox","useDoingTest","useDoneTest","_","MapList","props","doneTestData","dataQuestion","listQuestionID","isDoingTest","activeID","getActiveID","packageResult","getPackageResult","getListPicked","indexQuestion","SetPackageResultDetailInfoList","findIndex","item","ExamTopicDetailID","ID","returnPosition","quesID","index","indexOf","text","toString","onChange_selectAnswer","dataAns","indexQuestionDetail","SetPackageExerciseStudentInfoList","ExerciseID","SetPackageExerciseAnswerStudentList","push","AnswerID","AnswerContent","FileAudio","returnChecked","ansID","checked","some","object","returnCheckedDoneTest","ExerciseAnswer","every","ExerciseAnswerID","isTrue","returnClassDoneTest","className","maxWidth","ExerciseTopic","map","ans","ansIndex","ExerciseAnswerContent","width","fontWeight","color","primaryColor","Content","itemQues","indexQues"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { Checkbox } from 'antd'\r\nimport { useDoingTest } from '~/context/useDoingTest'\r\nimport { useDoneTest } from '~/context/useDoneTest'\r\nimport _ from '~/appConfig'\r\n\r\nconst MapList = (props) => {\r\n\tconst { doneTestData } = useDoneTest()\r\n\tconst { dataQuestion, listQuestionID, isDoingTest } = props\r\n\tconst { activeID, getActiveID, packageResult, getPackageResult, getListPicked } = useDoingTest()\r\n\r\n\tlet indexQuestion = null\r\n\tif (isDoingTest) {\r\n\t\tindexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex((item) => item.ExamTopicDetailID === dataQuestion.ID)\r\n\t}\r\n\r\n\tconst returnPosition = (quesID) => {\r\n\t\tlet index = listQuestionID.indexOf(quesID)\r\n\t\tlet text = (index + 1).toString() + '/'\r\n\t\treturn text\r\n\t}\r\n\r\n\t// ---- ALL ACTION IN DOING TEST ----\r\n\tconst onChange_selectAnswer = (dataAns, quesID) => {\r\n\t\tif (!doneTestData) {\r\n\t\t\tif (isDoingTest) {\r\n\t\t\t\tgetActiveID(quesID)\r\n\t\t\t\tgetListPicked(quesID)\r\n\t\t\t\tlet indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(\r\n\t\t\t\t\t(item) => item.ExerciseID === quesID\r\n\t\t\t\t)\r\n\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\t\t\tindexQuestionDetail\r\n\t\t\t\t].SetPackageExerciseAnswerStudentList = []\r\n\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\t\t\tindexQuestionDetail\r\n\t\t\t\t].SetPackageExerciseAnswerStudentList.push({\r\n\t\t\t\t\tAnswerID: dataAns.ID,\r\n\t\t\t\t\tAnswerContent: dataAns.AnswerContent,\r\n\t\t\t\t\tFileAudio: ''\r\n\t\t\t\t})\r\n\t\t\t\tgetPackageResult({ ...packageResult })\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst returnChecked = (ansID, quesID) => {\r\n\t\tif (!doneTestData) {\r\n\t\t\tif (isDoingTest) {\r\n\t\t\t\tlet checked = false\r\n\t\t\t\tlet indexQuestion = packageResult.SetPackageResultDetailInfoList.findIndex((item) => item.ExamTopicDetailID === dataQuestion.ID)\r\n\t\t\t\tlet indexQuestionDetail = packageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList.findIndex(\r\n\t\t\t\t\t(item) => item.ExerciseID === quesID\r\n\t\t\t\t)\r\n\t\t\t\tif (\r\n\t\t\t\t\tpackageResult.SetPackageResultDetailInfoList[indexQuestion].SetPackageExerciseStudentInfoList[\r\n\t\t\t\t\t\tindexQuestionDetail\r\n\t\t\t\t\t].SetPackageExerciseAnswerStudentList.some((object) => object['AnswerID'] === ansID)\r\n\t\t\t\t) {\r\n\t\t\t\t\tchecked = true\r\n\t\t\t\t}\r\n\t\t\t\treturn checked\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst returnCheckedDoneTest = (dataAns, dataQuestion) => {\r\n\t\tlet checked = false\r\n\t\tdataQuestion?.ExerciseAnswer.every((item) => {\r\n\t\t\tif (item.AnswerID === dataAns.ExerciseAnswerID) {\r\n\t\t\t\tchecked = true\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\tif (item.ExerciseAnswerID == dataAns.ExerciseAnswerID) {\r\n\t\t\t\tif (item.isTrue) {\r\n\t\t\t\t\tchecked = true\r\n\t\t\t\t}\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t\treturn checked\r\n\t}\r\n\r\n\tconst returnClassDoneTest = (dataAns, dataQuestion) => {\r\n\t\tlet className = 'isCorrect'\r\n\t\tdataQuestion?.ExerciseAnswer.every((item) => {\r\n\t\t\tif (item.AnswerID === dataAns.ExerciseAnswerID) {\r\n\t\t\t\tif (item.AnswerID !== item.ExerciseAnswerID) {\r\n\t\t\t\t\tclassName = 'isWrong'\r\n\t\t\t\t}\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\r\n\t\t\treturn true\r\n\t\t})\r\n\t\treturn className\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"box-map-question\">\r\n\t\t\t\t<h6 className=\"font-italic mb-3 mt-4\">Tích chọn đáp án đúng</h6>\r\n\t\t\t\t<table className=\"table-question w-100\" style={{ maxWidth: '100%' }}>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Stt</th>\r\n\t\t\t\t\t\t\t<th>Câu hỏi</th>\r\n\t\t\t\t\t\t\t{dataQuestion?.ExerciseTopic.map((item, index) =>\r\n\t\t\t\t\t\t\t\titem.ExerciseAnswer.map((ans, ansIndex) => (\r\n\t\t\t\t\t\t\t\t\t<th className=\"text-center\" key={ansIndex}>\r\n\t\t\t\t\t\t\t\t\t\t{!doneTestData ? ans.AnswerContent : ans.ExerciseAnswerContent}\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{dataQuestion?.ExerciseTopic.map((item, index) => (\r\n\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t<td\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: '5%',\r\n\t\t\t\t\t\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t\t\t\t\t\t\tcolor: `${item.ExerciseID === activeID ? _.primaryColor : 'inherit'}`\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName={`${item.ExerciseID === activeID ? 'active-doing' : ''}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{returnPosition(item.ExerciseID)}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td className={`w-50 ${item.ExerciseID === activeID ? 'active-doing' : ''}`}> {ReactHtmlParser(item.Content)}</td>\r\n\t\t\t\t\t\t\t\t{dataQuestion?.ExerciseTopic.map((itemQues, indexQues) =>\r\n\t\t\t\t\t\t\t\t\titemQues.ExerciseAnswer.map((ans, ansIndex) => (\r\n\t\t\t\t\t\t\t\t\t\t<td className=\"text-center check-box-table\" key={ansIndex}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={returnClassDoneTest(ans, item)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => onChange_selectAnswer(ans, item.ExerciseID)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t!doneTestData ? (!isDoingTest ? false : returnChecked(ans.ID, item.ExerciseID)) : returnCheckedDoneTest(ans, item)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!isDoingTest ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t></Checkbox>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default MapList\r\n"]},"metadata":{},"sourceType":"module"}
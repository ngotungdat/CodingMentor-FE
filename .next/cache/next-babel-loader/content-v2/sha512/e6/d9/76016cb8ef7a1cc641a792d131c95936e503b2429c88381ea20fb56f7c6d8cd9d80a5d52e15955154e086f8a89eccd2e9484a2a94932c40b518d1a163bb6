{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _extends from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\CourseList\\\\CourseList.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Card } from 'antd';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { branchApi, courseApi, programApi, teacherApi } from '~/apiBase';\nimport TitlePage from '~/components/Elements/TitlePage';\nimport CourseListFilterForm from '~/components/Global/CourseList/CourseListFilterForm';\nimport PowerList from '~/components/Global/CourseList/PowerList';\nimport { useWrap } from '~/context/wrap';\nimport { fmSelectArr } from '~/utils/functions';\nimport CourseListUpdate from './CourseListUpdate';\nvar statusList = [{\n  title: 'Sắp diễn ra',\n  value: 0\n}, {\n  title: 'Đang diễn ra',\n  value: 1\n}, {\n  title: 'Đã đóng',\n  value: 2\n}];\n\nvar CourseList = function CourseList() {\n  _s();\n\n  var _useState = useState([]),\n      courseList = _useState[0],\n      setCourseList = _useState[1];\n\n  var _useState2 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      isShowUpdate = _useState3[0],\n      setIsShowUpdate = _useState3[1];\n\n  var _useState4 = useState(null),\n      totalPage = _useState4[0],\n      setTotalPage = _useState4[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      userInformation = _useWrap.userInformation;\n\n  var _useState5 = useState({\n    statusList: statusList,\n    branchList: [],\n    programList: []\n  }),\n      optionListForFilter = _useState5[0],\n      setOptionListForFilter = _useState5[1];\n\n  var _useState6 = useState({\n    academicList: [],\n    teacherLeadList: []\n  }),\n      optionListForUpdate = _useState6[0],\n      setOptionListForUpdate = _useState6[1]; // FILTER\n\n\n  var listFieldInit = {\n    pageIndex: 1,\n    pageSize: 10,\n    CourseName: '',\n    Status: null,\n    BranchID: null,\n    ProgramID: null\n  };\n  var refValue = useRef({\n    pageIndex: 1,\n    pageSize: 10\n  });\n\n  var _useState7 = useState(listFieldInit),\n      filters = _useState7[0],\n      setFilters = _useState7[1]; // PAGINATION\n\n\n  var getPagination = function getPagination(pageIndex, pageSize) {\n    if (!pageSize) pageSize = 10;\n    refValue.current = _objectSpread(_objectSpread({}, refValue.current), {}, {\n      pageSize: pageSize,\n      pageIndex: pageIndex\n    });\n    setFilters(_objectSpread(_objectSpread({}, filters), refValue.current));\n  }; // RESET SEARCH\n\n\n  var onResetSearch = function onResetSearch() {\n    setFilters(_objectSpread(_objectSpread({}, listFieldInit), {}, {\n      pageSize: refValue.current.pageSize\n    }));\n  }; // ACTION SEARCH\n\n\n  var onFilter = function onFilter(obj) {\n    setFilters(_objectSpread(_objectSpread(_objectSpread({}, listFieldInit), refValue.current), {}, {\n      pageIndex: 1\n    }, obj));\n  }; // FETCH DATA FOR FILTER FORM\n\n\n  var fetchDataForFilterForm = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Promise.all([branchApi.getAll({\n                pageSize: 99999,\n                pageIndex: 1\n              }), programApi.getAll({\n                selectAll: true\n              })]).then(function (_ref2) {\n                var _ref3 = _slicedToArray(_ref2, 2),\n                    branchRes = _ref3[0],\n                    programRes = _ref3[1];\n\n                var newOptionList = {\n                  branchList: [],\n                  programList: []\n                };\n                branchRes.status === 200 && (newOptionList.branchList = fmSelectArr(branchRes.data.data, 'BranchName', 'ID'));\n                programRes.status === 200 && (newOptionList.programList = fmSelectArr(programRes.data.data, 'ProgramName', 'ID'));\n                setOptionListForFilter(_objectSpread(_objectSpread({}, optionListForFilter), newOptionList));\n              })[\"catch\"](function (err) {\n                return console.log('fetchDataForFilterForm - PromiseAll:', err);\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              showNoti('danger', _context.t0.message);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6]]);\n    }));\n\n    return function fetchDataForFilterForm() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // GET DATA IN FIRST TIME\n\n\n  var fetchScheduleList = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return courseApi.getAll(filters);\n\n            case 4:\n              res = _context2.sent;\n\n              if (res.status === 200) {\n                if (res.data.totalRow && res.data.data.length) {\n                  setCourseList(res.data.data);\n                  setTotalPage(res.data.totalRow);\n                }\n              } else if (res.status === 204) {\n                showNoti('danger', 'Không tìm thấy');\n              }\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              showNoti('danger', _context2.t0.message);\n\n            case 11:\n              _context2.prev = 11;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context2.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8, 11, 14]]);\n    }));\n\n    return function fetchScheduleList() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchScheduleList();\n  }, [filters]); // FETCH DATA FOR UPDATE FORM\n\n  var fetchDataForUpdateForm = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(BranchID) {\n      var res, newTeacherList;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsLoading({\n                type: 'FETCH_DATA',\n                status: true\n              });\n              _context3.prev = 1;\n              _context3.next = 4;\n              return teacherApi.getAll({\n                pageSize: 99999\n              });\n\n            case 4:\n              res = _context3.sent;\n\n              if (res.status === 200) {\n                newTeacherList = [{\n                  title: '---Trống---',\n                  value: 0\n                }].concat(_toConsumableArray(fmSelectArr(res.data.data, 'FullNameUnicode', 'UserInformationID')));\n                setOptionListForUpdate(_objectSpread(_objectSpread({}, optionListForUpdate), {}, {\n                  teacherLeadList: newTeacherList\n                }));\n              }\n\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              showNoti('danger', _context3.t0.message);\n\n            case 11:\n              _context3.prev = 11;\n              setIsLoading({\n                type: 'FETCH_DATA',\n                status: false\n              });\n              return _context3.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8, 11, 14]]);\n    }));\n\n    return function fetchDataForUpdateForm(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); // UPATE COURSE\n\n\n  var onUpdateCourse = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(obj) {\n      var res, BranchID, SalaryOfLesson, newObj, newObj2;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setIsLoading({\n                type: 'UPDATE_DATA',\n                status: true\n              });\n              _context4.prev = 1;\n              BranchID = obj.BranchID, SalaryOfLesson = obj.SalaryOfLesson, newObj = _objectWithoutProperties(obj, [\"BranchID\", \"SalaryOfLesson\"]);\n              newObj2 = _extends({}, obj);\n              console.log(newObj2);\n              _context4.next = 7;\n              return courseApi.update(_objectSpread(_objectSpread({}, newObj), {}, {\n                SalaryOfLesson: +SalaryOfLesson.replace(/\\D/g, '')\n              }));\n\n            case 7:\n              res = _context4.sent;\n\n              if (res.status === 200) {\n                fetchScheduleList();\n                showNoti('Success', 'Cập nhật dữ liệu thành công');\n              } else if (res.status === 204) {\n                showNoti('danger', 'Không tìm thấy');\n              }\n\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](1);\n              showNoti('danger', _context4.t0.message);\n\n            case 14:\n              _context4.prev = 14;\n              setIsLoading({\n                type: 'UPDATE_DATA',\n                status: false\n              });\n              return _context4.finish(14);\n\n            case 17:\n              return _context4.abrupt(\"return\", res);\n\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 11, 14, 17]]);\n    }));\n\n    return function onUpdateCourse(_x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (userInformation) {\n      var role = userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID;\n\n      if (role === 1) {\n        setIsShowUpdate(true);\n      }\n\n      if (role === 1 || role === 5) {\n        fetchDataForFilterForm();\n      }\n    }\n  }, [userInformation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"course-list-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsxDEV(TitlePage, {\n          title: \"Danh s\\xE1ch kh\\xF3a h\\u1ECDc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap-table\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-action-table\",\n              children: /*#__PURE__*/_jsxDEV(CourseListFilterForm, {\n                optionList: optionListForFilter,\n                handleFilter: onFilter,\n                handleResetFilter: onResetSearch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 10\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 9\n            }, _this),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"course-list-content\",\n              children: /*#__PURE__*/_jsxDEV(PowerList, {\n                isLoading: isLoading,\n                dataSource: courseList,\n                totalPage: totalPage,\n                currentPage: filters.pageIndex,\n                getPagination: getPagination,\n                children: isShowUpdate ? /*#__PURE__*/_jsxDEV(CourseListUpdate, {\n                  isLoading: isLoading,\n                  optionList: optionListForUpdate,\n                  handleOnUpdateCourse: onUpdateCourse,\n                  handleFetchDataForUpdateForm: fetchDataForUpdateForm\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 11\n                }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 9\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 8\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(CourseList, \"XOoTD9v2pRj/QgvE4DPq2fsFti0=\", false, function () {\n  return [useWrap];\n});\n\n_c = CourseList;\nexport default CourseList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseList\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/CourseList/CourseList.tsx"],"names":["Card","React","useEffect","useRef","useState","branchApi","courseApi","programApi","teacherApi","TitlePage","CourseListFilterForm","PowerList","useWrap","fmSelectArr","CourseListUpdate","statusList","title","value","CourseList","courseList","setCourseList","type","status","isLoading","setIsLoading","isShowUpdate","setIsShowUpdate","totalPage","setTotalPage","showNoti","userInformation","branchList","programList","optionListForFilter","setOptionListForFilter","academicList","teacherLeadList","optionListForUpdate","setOptionListForUpdate","listFieldInit","pageIndex","pageSize","CourseName","Status","BranchID","ProgramID","refValue","filters","setFilters","getPagination","current","onResetSearch","onFilter","obj","fetchDataForFilterForm","Promise","all","getAll","selectAll","then","branchRes","programRes","newOptionList","data","err","console","log","res","message","fetchScheduleList","totalRow","length","fetchDataForUpdateForm","newTeacherList","onUpdateCourse","SalaryOfLesson","newObj","newObj2","update","replace","role","RoleID"],"mappings":"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","sourcesContent":["import { Card } from 'antd'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { branchApi, courseApi, programApi, teacherApi } from '~/apiBase'\r\nimport TitlePage from '~/components/Elements/TitlePage'\r\nimport CourseListFilterForm from '~/components/Global/CourseList/CourseListFilterForm'\r\nimport PowerList from '~/components/Global/CourseList/PowerList'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { fmSelectArr } from '~/utils/functions'\r\nimport CourseListUpdate from './CourseListUpdate'\r\n\r\nconst statusList = [\r\n\t{\r\n\t\ttitle: 'Sắp diễn ra',\r\n\t\tvalue: 0\r\n\t},\r\n\t{\r\n\t\ttitle: 'Đang diễn ra',\r\n\t\tvalue: 1\r\n\t},\r\n\t{\r\n\t\ttitle: 'Đã đóng',\r\n\t\tvalue: 2\r\n\t}\r\n]\r\nconst CourseList = () => {\r\n\tconst [courseList, setCourseList] = useState<ICourse[]>([])\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [isShowUpdate, setIsShowUpdate] = useState(false)\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst { showNoti, userInformation } = useWrap()\r\n\tconst [optionListForFilter, setOptionListForFilter] = useState({\r\n\t\tstatusList,\r\n\t\tbranchList: [],\r\n\t\tprogramList: []\r\n\t})\r\n\tconst [optionListForUpdate, setOptionListForUpdate] = useState({\r\n\t\tacademicList: [],\r\n\t\tteacherLeadList: []\r\n\t})\r\n\t// FILTER\r\n\tconst listFieldInit = {\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10,\r\n\r\n\t\tCourseName: '',\r\n\t\tStatus: null,\r\n\t\tBranchID: null,\r\n\t\tProgramID: null\r\n\t}\r\n\tlet refValue = useRef({\r\n\t\tpageIndex: 1,\r\n\t\tpageSize: 10\r\n\t})\r\n\tconst [filters, setFilters] = useState(listFieldInit)\r\n\t// PAGINATION\r\n\tconst getPagination = (pageIndex: number, pageSize: number) => {\r\n\t\tif (!pageSize) pageSize = 10\r\n\t\trefValue.current = {\r\n\t\t\t...refValue.current,\r\n\t\t\tpageSize,\r\n\t\t\tpageIndex\r\n\t\t}\r\n\t\tsetFilters({\r\n\t\t\t...filters,\r\n\t\t\t...refValue.current\r\n\t\t})\r\n\t}\r\n\t// RESET SEARCH\r\n\tconst onResetSearch = () => {\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\tpageSize: refValue.current.pageSize\r\n\t\t})\r\n\t}\r\n\t// ACTION SEARCH\r\n\tconst onFilter = (obj) => {\r\n\t\tsetFilters({\r\n\t\t\t...listFieldInit,\r\n\t\t\t...refValue.current,\r\n\t\t\tpageIndex: 1,\r\n\t\t\t...obj\r\n\t\t})\r\n\t}\r\n\t// FETCH DATA FOR FILTER FORM\r\n\tconst fetchDataForFilterForm = async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await Promise.all([branchApi.getAll({ pageSize: 99999, pageIndex: 1 }), programApi.getAll({ selectAll: true })])\r\n\t\t\t\t.then(([branchRes, programRes]) => {\r\n\t\t\t\t\tconst newOptionList = {\r\n\t\t\t\t\t\tbranchList: [],\r\n\t\t\t\t\t\tprogramList: []\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbranchRes.status === 200 && (newOptionList.branchList = fmSelectArr(branchRes.data.data, 'BranchName', 'ID'))\r\n\t\t\t\t\tprogramRes.status === 200 && (newOptionList.programList = fmSelectArr(programRes.data.data, 'ProgramName', 'ID'))\r\n\t\t\t\t\tsetOptionListForFilter({\r\n\t\t\t\t\t\t...optionListForFilter,\r\n\t\t\t\t\t\t...newOptionList\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => console.log('fetchDataForFilterForm - PromiseAll:', err))\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t}\r\n\t}\r\n\r\n\t// GET DATA IN FIRST TIME\r\n\tconst fetchScheduleList = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tlet res = await courseApi.getAll(filters)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tif (res.data.totalRow && res.data.data.length) {\r\n\t\t\t\t\tsetCourseList(res.data.data)\r\n\t\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t\t}\r\n\t\t\t} else if (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', 'Không tìm thấy')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchScheduleList()\r\n\t}, [filters])\r\n\r\n\t// FETCH DATA FOR UPDATE FORM\r\n\tconst fetchDataForUpdateForm = async (BranchID) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'FETCH_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tconst res = await teacherApi.getAll({ pageSize: 99999 })\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconst newTeacherList = [{ title: '---Trống---', value: 0 }, ...fmSelectArr(res.data.data, 'FullNameUnicode', 'UserInformationID')]\r\n\t\t\t\tsetOptionListForUpdate({\r\n\t\t\t\t\t...optionListForUpdate,\r\n\t\t\t\t\tteacherLeadList: newTeacherList\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'FETCH_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t// UPATE COURSE\r\n\tconst onUpdateCourse = async (obj) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'UPDATE_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\t\tlet res\r\n\t\ttry {\r\n\t\t\tconst { BranchID, SalaryOfLesson, ...newObj } = obj\r\n\t\t\tconst { ...newObj2 } = obj\r\n\t\t\tconsole.log(newObj2)\r\n\t\t\tres = await courseApi.update({\r\n\t\t\t\t...newObj,\r\n\t\t\t\tSalaryOfLesson: +SalaryOfLesson.replace(/\\D/g, '')\r\n\t\t\t})\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tfetchScheduleList()\r\n\t\t\t\tshowNoti('Success', 'Cập nhật dữ liệu thành công')\r\n\t\t\t} else if (res.status === 204) {\r\n\t\t\t\tshowNoti('danger', 'Không tìm thấy')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'UPDATE_DATA',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn res\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userInformation) {\r\n\t\t\tconst role = userInformation?.RoleID\r\n\t\t\tif (role === 1) {\r\n\t\t\t\tsetIsShowUpdate(true)\r\n\t\t\t}\r\n\t\t\tif (role === 1 || role === 5) {\r\n\t\t\t\tfetchDataForFilterForm()\r\n\t\t\t}\r\n\t\t}\r\n\t}, [userInformation])\r\n\r\n\treturn (\r\n\t\t<div className=\"course-list-page\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t<TitlePage title=\"Danh sách khóa học\" />\r\n\r\n\t\t\t\t\t<div className=\"wrap-table\">\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t<div className=\"list-action-table\">\r\n\t\t\t\t\t\t\t\t\t<CourseListFilterForm optionList={optionListForFilter} handleFilter={onFilter} handleResetFilter={onResetSearch} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className=\"course-list-content\">\r\n\t\t\t\t\t\t\t\t<PowerList\r\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\tdataSource={courseList}\r\n\t\t\t\t\t\t\t\t\ttotalPage={totalPage}\r\n\t\t\t\t\t\t\t\t\tcurrentPage={filters.pageIndex}\r\n\t\t\t\t\t\t\t\t\tgetPagination={getPagination}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{isShowUpdate ? (\r\n\t\t\t\t\t\t\t\t\t\t<CourseListUpdate\r\n\t\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\t\t\toptionList={optionListForUpdate}\r\n\t\t\t\t\t\t\t\t\t\t\thandleOnUpdateCourse={onUpdateCourse}\r\n\t\t\t\t\t\t\t\t\t\t\thandleFetchDataForUpdateForm={fetchDataForUpdateForm}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</PowerList>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CourseList\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\CodingMentor\\\\CodingMentor-FE\\\\src\\\\components\\\\Global\\\\Room\\\\Room.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport PowerTable from '~/components/PowerTable';\nimport LayoutBase from '~/components/LayoutBase';\nimport RoomForm from '~/components/Global/Option/RoomForm';\nimport SortBox from '~/components/Elements/SortBox';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport router from 'next/router';\nimport { roomApi, branchApi } from '~/apiBase';\nimport { useWrap } from '~/context/wrap';\nimport DeleteItem from '~/components/Tables/DeleteItem';\nimport moment from 'moment';\nvar pageIndex = 1;\nvar listFieldSearch = {\n  roomCode: '',\n  roomName: '',\n  pageIndex: 1\n};\nvar dataOption = [{\n  dataSort: {\n    sort: 1,\n    sortType: false\n  },\n  text: 'Mã giảm dần'\n}, {\n  dataSort: {\n    sort: 1,\n    sortType: true\n  },\n  text: 'Mã tăng dần'\n}, {\n  dataSort: {\n    sort: 2,\n    sortType: false\n  },\n  text: 'Tên giảm dần'\n}, {\n  dataSort: {\n    sort: 2,\n    sortType: true\n  },\n  text: 'Tên tăng dần '\n}];\n\nvar Room = function Room() {\n  _s();\n\n  var listTodoApi = {\n    pageSize: 10,\n    pageIndex: pageIndex,\n    sort: null,\n    sortType: null,\n    roomCode: null,\n    roomName: null,\n    BranchID: parseInt(router.query.slug)\n  };\n\n  var _useState = useState(),\n      dataCenter = _useState[0],\n      setDataCenter = _useState[1];\n\n  var _useState2 = useState(listTodoApi),\n      todoApi = _useState2[0],\n      setTodoApi = _useState2[1];\n\n  var _useState3 = useState([]),\n      roomData = _useState3[0],\n      setRoomData = _useState3[1];\n\n  var _useState4 = useState({\n    type: '',\n    status: false\n  }),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti;\n\n  var _useState5 = useState(null),\n      totalPage = _useState5[0],\n      setTotalPage = _useState5[1];\n\n  var _useState6 = useState(null),\n      indexRow = _useState6[0],\n      setIndexRow = _useState6[1];\n\n  var _useState7 = useState(1),\n      currentPage = _useState7[0],\n      setCurrentPage = _useState7[1];\n\n  var _onSubmit2 = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dataSubmit) {\n      var res, newDataSource, _res;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: true\n              });\n              res = null;\n\n              if (!dataSubmit.RoomID) {\n                _context.next = 18;\n                break;\n              }\n\n              _context.prev = 3;\n              _context.next = 6;\n              return roomApi.update(dataSubmit);\n\n            case 6:\n              res = _context.sent;\n\n              if (res.status == 200) {\n                newDataSource = _toConsumableArray(roomData);\n                newDataSource.splice(indexRow, 1, dataSubmit);\n                setRoomData(newDataSource); // showNoti(\"success\", res.data.message);\n              }\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](3);\n              showNoti('danger', _context.t0.message);\n\n            case 13:\n              _context.prev = 13;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context.finish(13);\n\n            case 16:\n              _context.next = 31;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.next = 21;\n              return roomApi.add(dataSubmit);\n\n            case 21:\n              res = _context.sent;\n              ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && afterPost(res.data.message);\n              _context.next = 28;\n              break;\n\n            case 25:\n              _context.prev = 25;\n              _context.t1 = _context[\"catch\"](18);\n              showNoti('danger', _context.t1.message);\n\n            case 28:\n              _context.prev = 28;\n              setIsLoading({\n                type: 'ADD_DATA',\n                status: false\n              });\n              return _context.finish(28);\n\n            case 31:\n              return _context.abrupt(\"return\", res);\n\n            case 32:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 10, 13, 16], [18, 25, 28, 31]]);\n    }));\n\n    return function _onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // AFTER SUBMIT\n\n\n  var afterPost = function afterPost(mes) {\n    showNoti('success', mes);\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // DELETE ITEM\n\n\n  var _onDelete = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return roomApi.update({\n                RoomID: id,\n                Enable: false\n              });\n\n            case 4:\n              res = _context2.sent;\n              (res === null || res === void 0 ? void 0 : res.status) == 200 && showNoti('success', res.data.message), setTodoApi(_objectSpread({}, todoApi));\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              showNoti('danger', _context2.t0.message);\n\n            case 11:\n              _context2.prev = 11;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context2.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8, 11, 14]]);\n    }));\n\n    return function onDelete(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // GET DATA CENTER\n\n\n  var getDataCenter = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return branchApi.getAll({\n                pageIndex: 1,\n                pageSize: 9999\n              });\n\n            case 3:\n              res = _context3.sent;\n              res.status == 200 && setDataCenter(res.data.data);\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              showNoti('danger', _context3.t0.message);\n\n            case 10:\n              _context3.prev = 10;\n              return _context3.finish(10);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7, 10, 12]]);\n    }));\n\n    return function getDataCenter() {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // GET DATA ROOM\n\n\n  var getDataRoom = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setIsLoading({\n                type: 'GET_ALL',\n                status: true\n              });\n              _context4.prev = 1;\n              _context4.next = 4;\n              return roomApi.getAll(todoApi);\n\n            case 4:\n              res = _context4.sent;\n              res.status == 200 && (setRoomData(res.data.data), setTotalPage(res.data.totalRow), showNoti('success', 'Thành công'));\n              res.status == 204 && showNoti('danger', 'Không có dữ liệu');\n              _context4.next = 12;\n              break;\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](1);\n              showNoti('danger', _context4.t0.message);\n\n            case 12:\n              _context4.prev = 12;\n              setIsLoading({\n                type: 'GET_ALL',\n                status: false\n              });\n              return _context4.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 9, 12, 15]]);\n    }));\n\n    return function getDataRoom() {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // -------------- GET PAGE_NUMBER -----------------\n\n\n  var _getPagination = function getPagination(pageNumber) {\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      // ...listFieldSearch,\n      pageIndex: pageIndex\n    }));\n  }; // -------------- CHECK FIELD ---------------------\n\n\n  var checkField = function checkField(valueSearch, dataIndex) {\n    var newList = _objectSpread({}, listFieldSearch);\n\n    Object.keys(newList).forEach(function (key) {\n      console.log('key: ', key);\n\n      if (key != dataIndex) {\n        if (key != 'pageIndex') {\n          newList[key] = null;\n        }\n      } else {\n        newList[key] = valueSearch;\n      }\n    });\n    return newList;\n  }; // ------------ ON SEARCH -----------------------\n\n\n  var onSearch = function onSearch(valueSearch, dataIndex) {\n    var clearKey = checkField(valueSearch, dataIndex);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), clearKey));\n  }; // --------------- HANDLE SORT ----------------------\n\n\n  var _handleSort = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(option) {\n      var newTodoApi;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n                pageIndex: 1,\n                sort: option.title.sort,\n                sortType: option.title.sortType\n              });\n              setCurrentPage(1), setTodoApi(newTodoApi);\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function handleSort(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); // HANDLE RESET\n\n\n  var resetListFieldSearch = function resetListFieldSearch() {\n    Object.keys(listFieldSearch).forEach(function (key) {\n      if (key != 'pageIndex') {\n        listFieldSearch[key] = null;\n      }\n    });\n  };\n\n  var handleReset = function handleReset() {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1), resetListFieldSearch();\n  }; // Fetch Data\n\n\n  useEffect(function () {\n    getDataRoom();\n  }, [todoApi]);\n  useEffect(function () {\n    getDataCenter();\n  }, []);\n  var columns = [_objectSpread({\n    title: 'Mã phòng',\n    dataIndex: 'RoomCode',\n    width: 150\n  }, FilterColumn('roomCode', onSearch, handleReset, 'text')), _objectSpread({\n    title: 'Tên phòng',\n    dataIndex: 'RoomName'\n  }, FilterColumn('roomName', onSearch, handleReset, 'text')), {\n    title: 'Người cập nhật',\n    dataIndex: 'CreatedBy'\n  }, {\n    title: 'Ngày cập nhật',\n    dataIndex: 'ModifiedOn',\n    render: function render(date) {\n      return moment(date).format('DD/MM/YYYY');\n    }\n  }, {\n    render: function render(text, data, index) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(RoomForm, {\n          dataCenter: dataCenter,\n          getIndex: function getIndex() {\n            return setIndexRow(index);\n          },\n          roomID: data.RoomID,\n          rowData: data,\n          isLoading: isLoading,\n          _onSubmit: function _onSubmit(data) {\n            return _onSubmit2(data);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(DeleteItem, {\n          onDelete: function onDelete() {\n            return _onDelete(data.RoomID);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PowerTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: function getPagination(pageNumber) {\n        return _getPagination(pageNumber);\n      },\n      loading: isLoading,\n      addClass: \"basic-header table-medium\",\n      TitlePage: \"Danh s\\xE1ch ph\\xF2ng\",\n      TitleCard: /*#__PURE__*/_jsxDEV(RoomForm, {\n        dataCenter: dataCenter,\n        showAdd: true,\n        addDataSuccess: function addDataSuccess() {\n          return getDataRoom();\n        },\n        isLoading: isLoading,\n        _onSubmit: function _onSubmit(data) {\n          return _onSubmit2(data);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 6\n      }, _this),\n      dataSource: roomData,\n      columns: columns,\n      Extra: /*#__PURE__*/_jsxDEV(SortBox, {\n        handleSort: function handleSort(value) {\n          return _handleSort(value);\n        },\n        dataOption: dataOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 12\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Room, \"fN7gY+ryBAP9Xz/bMEVphKnwHbM=\", false, function () {\n  return [useWrap];\n});\n\n_c = Room;\nRoom.layout = LayoutBase;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["D:/MonaMedia/Project/CodingMentor/CodingMentor-FE/src/components/Global/Room/Room.tsx"],"names":["React","useEffect","useState","PowerTable","LayoutBase","RoomForm","SortBox","FilterColumn","router","roomApi","branchApi","useWrap","DeleteItem","moment","pageIndex","listFieldSearch","roomCode","roomName","dataOption","dataSort","sort","sortType","text","Room","listTodoApi","pageSize","BranchID","parseInt","query","slug","dataCenter","setDataCenter","todoApi","setTodoApi","roomData","setRoomData","type","status","isLoading","setIsLoading","showNoti","totalPage","setTotalPage","indexRow","setIndexRow","currentPage","setCurrentPage","_onSubmit","dataSubmit","res","RoomID","update","newDataSource","splice","message","add","afterPost","data","mes","onDelete","id","Enable","getDataCenter","getAll","getDataRoom","totalRow","getPagination","pageNumber","checkField","valueSearch","dataIndex","newList","Object","keys","forEach","key","console","log","onSearch","clearKey","handleSort","option","newTodoApi","title","resetListFieldSearch","handleReset","columns","width","render","date","format","index","value","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport PowerTable from '~/components/PowerTable'\r\n\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport { Tooltip } from 'antd'\r\nimport RoomForm from '~/components/Global/Option/RoomForm'\r\nimport { RotateCcw } from 'react-feather'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport router from 'next/router'\r\nimport { roomApi, branchApi } from '~/apiBase'\r\nimport { useWrap } from '~/context/wrap'\r\nimport DeleteItem from '~/components/Tables/DeleteItem'\r\nimport moment from 'moment'\r\n\r\nlet pageIndex = 1\r\n\r\nlet listFieldSearch = {\r\n\troomCode: '',\r\n\troomName: '',\r\n\tpageIndex: 1\r\n}\r\n\r\nconst dataOption = [\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 1,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Mã giảm dần'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 1,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Mã tăng dần'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Tên giảm dần'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Tên tăng dần '\r\n\t}\r\n]\r\n\r\nconst Room = () => {\r\n\tconst listTodoApi = {\r\n\t\tpageSize: 10,\r\n\t\tpageIndex: pageIndex,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\troomCode: null,\r\n\t\troomName: null,\r\n\t\tBranchID: parseInt(router.query.slug as string)\r\n\t}\r\n\tconst [dataCenter, setDataCenter] = useState<IBranch[]>()\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\tconst [roomData, setRoomData] = useState<IRoom[]>([])\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst { showNoti } = useWrap()\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [indexRow, setIndexRow] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\r\n\tconst _onSubmit = async (dataSubmit: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet res = null\r\n\r\n\t\tif (dataSubmit.RoomID) {\r\n\t\t\ttry {\r\n\t\t\t\tres = await roomApi.update(dataSubmit)\r\n\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tlet newDataSource = [...roomData]\r\n\t\t\t\t\tnewDataSource.splice(indexRow, 1, dataSubmit)\r\n\t\t\t\t\tsetRoomData(newDataSource)\r\n\t\t\t\t\t// showNoti(\"success\", res.data.message);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tres = await roomApi.add(dataSubmit)\r\n\t\t\t\tres?.status == 200 && afterPost(res.data.message)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\t// AFTER SUBMIT\r\n\tconst afterPost = (mes) => {\r\n\t\tshowNoti('success', mes)\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// DELETE ITEM\r\n\tconst onDelete = async (id: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await roomApi.update({ RoomID: id, Enable: false })\r\n\t\t\tres?.status == 200 && showNoti('success', res.data.message), setTodoApi({ ...todoApi })\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// GET DATA CENTER\r\n\tconst getDataCenter = async () => {\r\n\t\t// setLoadingSelect(true);\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await branchApi.getAll({\r\n\t\t\t\tpageIndex: 1,\r\n\t\t\t\tpageSize: 9999\r\n\t\t\t})\r\n\t\t\tres.status == 200 && setDataCenter(res.data.data)\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\t// setLoadingSelect(false);\r\n\t\t}\r\n\t}\r\n\r\n\t// GET DATA ROOM\r\n\tconst getDataRoom = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await roomApi.getAll(todoApi)\r\n\t\t\tres.status == 200 && (setRoomData(res.data.data), setTotalPage(res.data.totalRow), showNoti('success', 'Thành công'))\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu')\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tpageIndex = pageNumber\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t// ...listFieldSearch,\r\n\t\t\tpageIndex: pageIndex\r\n\t\t})\r\n\t}\r\n\r\n\t// -------------- CHECK FIELD ---------------------\r\n\tconst checkField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = { ...listFieldSearch }\r\n\t\tObject.keys(newList).forEach(function (key) {\r\n\t\t\tconsole.log('key: ', key)\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\t\tnewList[key] = null\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewList[key] = valueSearch\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn newList\r\n\t}\r\n\r\n\t// ------------ ON SEARCH -----------------------\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tlet clearKey = checkField(valueSearch, dataIndex)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t...clearKey\r\n\t\t})\r\n\t}\r\n\r\n\t// --------------- HANDLE SORT ----------------------\r\n\tconst handleSort = async (option) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetCurrentPage(1), setTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tconst resetListFieldSearch = () => {\r\n\t\tObject.keys(listFieldSearch).forEach(function (key) {\r\n\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\tlistFieldSearch[key] = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1), resetListFieldSearch()\r\n\t}\r\n\r\n\t// Fetch Data\r\n\tuseEffect(() => {\r\n\t\tgetDataRoom()\r\n\t}, [todoApi])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataCenter()\r\n\t}, [])\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Mã phòng',\r\n\t\t\tdataIndex: 'RoomCode',\r\n\t\t\twidth: 150,\r\n\t\t\t...FilterColumn('roomCode', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tên phòng',\r\n\t\t\tdataIndex: 'RoomName',\r\n\t\t\t...FilterColumn('roomName', onSearch, handleReset, 'text')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Người cập nhật',\r\n\t\t\tdataIndex: 'CreatedBy'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày cập nhật',\r\n\t\t\tdataIndex: 'ModifiedOn',\r\n\t\t\trender: (date) => moment(date).format('DD/MM/YYYY')\r\n\t\t},\r\n\t\t{\r\n\t\t\trender: (text, data, index) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<RoomForm\r\n\t\t\t\t\t\tdataCenter={dataCenter}\r\n\t\t\t\t\t\tgetIndex={() => setIndexRow(index)}\r\n\t\t\t\t\t\troomID={data.RoomID}\r\n\t\t\t\t\t\trowData={data}\r\n\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t_onSubmit={(data: any) => _onSubmit(data)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<DeleteItem onDelete={() => onDelete(data.RoomID)} />\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PowerTable\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header table-medium\"\r\n\t\t\t\tTitlePage=\"Danh sách phòng\"\r\n\t\t\t\tTitleCard={\r\n\t\t\t\t\t<RoomForm\r\n\t\t\t\t\t\tdataCenter={dataCenter}\r\n\t\t\t\t\t\tshowAdd={true}\r\n\t\t\t\t\t\taddDataSuccess={() => getDataRoom()}\r\n\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t_onSubmit={(data: any) => _onSubmit(data)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tdataSource={roomData}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tExtra={<SortBox handleSort={(value) => handleSort(value)} dataOption={dataOption} />}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\nRoom.layout = LayoutBase\r\n\r\nexport default Room\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\Option\\\\ProgramDetail\\\\Subject.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useWrap } from '~/context/wrap';\nimport { subjectApi, programApi } from '~/apiBase';\nimport SubjectForm from '../SubjectForm';\nimport PowerTable from '~/components/PowerTable';\nlet pageIndex = 1;\nlet listFieldSearch = {\n  pageIndex: 1\n};\n\nconst Subject = props => {\n  const {\n    key\n  } = props;\n  const router = useRouter();\n  const programID = parseInt(router.query.slug);\n  const {\n    0: dataProgram,\n    1: setDataProgram\n  } = useState([]); // ------ BASE USESTATE TABLE -------\n\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    showNoti,\n    pageSize,\n    userInformation\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: indexRow,\n    1: setIndexRow\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    ProgramID: programID ? programID : null\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi);\n  const {\n    0: subjectID,\n    1: setSubjectID\n  } = useState(null);\n  const {\n    0: activeRow,\n    1: setActiveRow\n  } = useState([]); // GET DATA SOURCE\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await subjectApi.getAll(todoApi);\n\n      if (res.status == 200) {\n        if (res.data.data.length > 0) {\n          setDataSource(res.data.data);\n          setTotalPage(res.data.totalRow); // showNoti(\"success\", \"Tải môn học thành công\");\n        }\n      }\n\n      res.status == 204 && showNoti('danger', 'Không có dữ liệu') && setDataSource([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // GET DATA PROGRAM\n\n\n  const getDataProgram = async () => {\n    try {\n      let res = await programApi.getAll(todoApi);\n      res.status == 200 && setDataProgram(res.data.data);\n      res.status == 204 && showNoti('danger', 'Không có dữ liệu');\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {}\n  }; // ---------------- AFTER SUBMIT -----------------\n\n\n  const afterPost = mes => {\n    showNoti('success', mes);\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // ----------------- ON SUBMIT --------------------\n\n\n  const _onSubmit = async dataSubmit => {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res = null;\n\n    if (dataSubmit.ID) {\n      try {\n        res = await subjectApi.update(dataSubmit);\n\n        if (res.status == 200) {\n          let newDataSource = [...dataSource];\n          newDataSource.splice(indexRow, 1, dataSubmit);\n          setDataSource(newDataSource);\n          showNoti('success', res.data.message);\n        }\n      } catch (error) {\n        console.log('error: ', error);\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: false\n        });\n      }\n    } else {\n      try {\n        var _res;\n\n        res = await subjectApi.add(dataSubmit);\n        ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && afterPost(res.data.message);\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: false\n        });\n      }\n    }\n\n    return res;\n  }; // ----------------- TURN OF ------------------------\n\n\n  const changeStatus = async (checked, idRow) => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n    let dataChange = {\n      ID: idRow,\n      Enable: checked\n    };\n\n    try {\n      let res = await subjectApi.update(dataChange);\n      res.status == 200 && setTodoApi(_objectSpread({}, todoApi));\n    } catch (error) {\n      showNoti('danger', error.Message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // -------------- CHECK FIELD ---------------------\n\n\n  const checkField = (valueSearch, dataIndex) => {\n    let newList = _objectSpread({}, listFieldSearch);\n\n    Object.keys(newList).forEach(function (key) {\n      if (key != dataIndex) {\n        if (key != 'pageIndex') {\n          newList[key] = null;\n        }\n      } else {\n        newList[key] = valueSearch;\n      }\n    });\n    return newList;\n  }; // --------------- HANDLE SORT ----------------------\n\n\n  const handleSort = async option => {\n    let newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1,\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n\n    setCurrentPage(1), setTodoApi(newTodoApi);\n  }; // ------------ ON SEARCH -----------------------\n\n\n  const onSearch = (valueSearch, dataIndex) => {\n    let clearKey = checkField(valueSearch, dataIndex);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), clearKey));\n  }; // HANDLE RESET\n\n\n  const resetListFieldSearch = () => {\n    Object.keys(listFieldSearch).forEach(function (key) {\n      if (key != 'pageIndex') {\n        listFieldSearch[key] = null;\n      }\n    });\n  };\n\n  const handleReset = () => {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1), resetListFieldSearch();\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  const getPagination = pageNumber => {\n    pageIndex = pageNumber;\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      // ...listFieldSearch,\n      pageIndex: pageIndex\n    }));\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(() => {\n    getDataSource();\n  }, [todoApi, key]);\n  useEffect(() => {\n    getDataProgram();\n  }, []);\n  const columns = [{\n    title: 'Bài học',\n    dataIndex: 'SubjectName',\n    key: 'subjectname',\n    width: '90%',\n    className: 'col-long',\n    render: text => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 22\n    }, this)\n  }, {\n    width: userInformation && (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) !== 2 ? '10%' : 0,\n    align: 'center',\n    render: (text, data, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: userInformation && (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) !== 2 && /*#__PURE__*/_jsxDEV(SubjectForm, {\n        dataProgram: dataProgram,\n        getIndex: () => setIndexRow(index),\n        index: index,\n        rowData: data,\n        rowID: data.ID,\n        isLoading: isLoading,\n        _onSubmit: data => _onSubmit(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PowerTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: pageNumber => getPagination(pageNumber),\n      addClass: \"table-fix-column table-small\",\n      loading: isLoading,\n      TitleCard: userInformation && (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) !== 2 && /*#__PURE__*/_jsxDEV(SubjectForm, {\n        dataProgram: dataProgram,\n        isLoading: isLoading,\n        _onSubmit: data => _onSubmit(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }, this),\n      dataSource: dataSource,\n      columns: columns,\n      Extra: \"B\\xE0i h\\u1ECDc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 3\n  }, this);\n};\n\nexport default Subject;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/Option/ProgramDetail/Subject.tsx"],"names":["React","useEffect","useState","useRouter","useWrap","subjectApi","programApi","SubjectForm","PowerTable","pageIndex","listFieldSearch","Subject","props","key","router","programID","parseInt","query","slug","dataProgram","setDataProgram","dataSource","setDataSource","showNoti","pageSize","userInformation","isLoading","setIsLoading","type","status","totalPage","setTotalPage","indexRow","setIndexRow","currentPage","setCurrentPage","listTodoApi","ProgramID","todoApi","setTodoApi","subjectID","setSubjectID","activeRow","setActiveRow","getDataSource","res","getAll","data","length","totalRow","error","message","getDataProgram","afterPost","mes","_onSubmit","dataSubmit","ID","update","newDataSource","splice","console","log","add","changeStatus","checked","idRow","dataChange","Enable","Message","checkField","valueSearch","dataIndex","newList","Object","keys","forEach","handleSort","option","newTodoApi","sort","title","sortType","onSearch","clearKey","resetListFieldSearch","handleReset","getPagination","pageNumber","columns","width","className","render","text","RoleID","align","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport { useWrap } from '~/context/wrap'\r\nimport { subjectApi, programApi } from '~/apiBase'\r\nimport SubjectForm from '../SubjectForm'\r\nimport { CheckCircle } from 'react-feather'\r\nimport ExpandTable from '~/components/ExpandTable'\r\nimport PowerTable from '~/components/PowerTable'\r\n\r\nlet pageIndex = 1\r\n\r\nlet listFieldSearch = {\r\n\tpageIndex: 1\r\n}\r\n\r\nconst Subject = (props) => {\r\n\tconst { key } = props\r\n\tconst router = useRouter()\r\n\tconst programID = parseInt(router.query.slug as string)\r\n\r\n\tconst [dataProgram, setDataProgram] = useState<IProgram[]>([])\r\n\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState<ISubject[]>([])\r\n\tconst { showNoti, pageSize, userInformation } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [indexRow, setIndexRow] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tProgramID: programID ? programID : null\r\n\t}\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\tconst [subjectID, setSubjectID] = useState(null)\r\n\tconst [activeRow, setActiveRow] = useState([])\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await subjectApi.getAll(todoApi)\r\n\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tif (res.data.data.length > 0) {\r\n\t\t\t\t\tsetDataSource(res.data.data)\r\n\t\t\t\t\tsetTotalPage(res.data.totalRow)\r\n\t\t\t\t\t// showNoti(\"success\", \"Tải môn học thành công\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu') && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// GET DATA PROGRAM\r\n\tconst getDataProgram = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await programApi.getAll(todoApi)\r\n\t\t\tres.status == 200 && setDataProgram(res.data.data)\r\n\r\n\t\t\tres.status == 204 && showNoti('danger', 'Không có dữ liệu')\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t}\r\n\t}\r\n\r\n\t// ---------------- AFTER SUBMIT -----------------\r\n\tconst afterPost = (mes) => {\r\n\t\tshowNoti('success', mes)\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// ----------------- ON SUBMIT --------------------\r\n\tconst _onSubmit = async (dataSubmit: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet res = null\r\n\r\n\t\tif (dataSubmit.ID) {\r\n\t\t\ttry {\r\n\t\t\t\tres = await subjectApi.update(dataSubmit)\r\n\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tlet newDataSource = [...dataSource]\r\n\t\t\t\t\tnewDataSource.splice(indexRow, 1, dataSubmit)\r\n\t\t\t\t\tsetDataSource(newDataSource)\r\n\t\t\t\t\tshowNoti('success', res.data.message)\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log('error: ', error)\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tres = await subjectApi.add(dataSubmit)\r\n\t\t\t\tres?.status == 200 && afterPost(res.data.message)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\t// ----------------- TURN OF ------------------------\r\n\tconst changeStatus = async (checked: boolean, idRow: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet dataChange = {\r\n\t\t\tID: idRow,\r\n\t\t\tEnable: checked\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await subjectApi.update(dataChange)\r\n\t\t\tres.status == 200 && setTodoApi({ ...todoApi })\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.Message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// -------------- CHECK FIELD ---------------------\r\n\tconst checkField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = { ...listFieldSearch }\r\n\t\tObject.keys(newList).forEach(function (key) {\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\t\tnewList[key] = null\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewList[key] = valueSearch\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn newList\r\n\t}\r\n\r\n\t// --------------- HANDLE SORT ----------------------\r\n\tconst handleSort = async (option) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetCurrentPage(1), setTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// ------------ ON SEARCH -----------------------\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tlet clearKey = checkField(valueSearch, dataIndex)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t...clearKey\r\n\t\t})\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tconst resetListFieldSearch = () => {\r\n\t\tObject.keys(listFieldSearch).forEach(function (key) {\r\n\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\tlistFieldSearch[key] = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1), resetListFieldSearch()\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tpageIndex = pageNumber\r\n\t\tsetCurrentPage(pageNumber)\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\t// ...listFieldSearch,\r\n\t\t\tpageIndex: pageIndex\r\n\t\t})\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t}, [todoApi, key])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataProgram()\r\n\t}, [])\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Bài học',\r\n\t\t\tdataIndex: 'SubjectName',\r\n\t\t\tkey: 'subjectname',\r\n\t\t\twidth: '90%',\r\n\t\t\tclassName: 'col-long',\r\n\t\t\trender: (text) => <p className=\"font-weight-black\">{text}</p>\r\n\t\t},\r\n\t\t{\r\n\t\t\twidth: userInformation && userInformation?.RoleID !== 2 ? '10%' : 0,\r\n\t\t\talign: 'center',\r\n\t\t\trender: (text, data, index) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{userInformation && userInformation?.RoleID !== 2 && (\r\n\t\t\t\t\t\t<SubjectForm\r\n\t\t\t\t\t\t\tdataProgram={dataProgram}\r\n\t\t\t\t\t\t\tgetIndex={() => setIndexRow(index)}\r\n\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\trowData={data}\r\n\t\t\t\t\t\t\trowID={data.ID}\r\n\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t_onSubmit={(data: any) => _onSubmit(data)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<PowerTable\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\taddClass=\"table-fix-column table-small\"\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\tTitleCard={\r\n\t\t\t\t\tuserInformation &&\r\n\t\t\t\t\tuserInformation?.RoleID !== 2 && (\r\n\t\t\t\t\t\t<SubjectForm dataProgram={dataProgram} isLoading={isLoading} _onSubmit={(data: any) => _onSubmit(data)} />\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\tdataSource={dataSource}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tExtra=\"Bài học\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Subject\r\n"]},"metadata":{},"sourceType":"module"}
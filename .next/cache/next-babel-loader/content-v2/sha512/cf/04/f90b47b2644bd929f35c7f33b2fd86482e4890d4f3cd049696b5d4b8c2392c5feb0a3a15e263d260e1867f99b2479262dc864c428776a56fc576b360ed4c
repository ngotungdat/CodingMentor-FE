{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\pages\\\\option\\\\program\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Switch, Tooltip } from 'antd';\nimport moment from 'moment';\nimport Link from 'next/link';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Eye } from 'react-feather';\nimport { gradeApi, programApi } from '~/apiBase';\nimport SortBox from '~/components/Elements/SortBox';\nimport FilterProgram from '~/components/Global/Option/FilterTable/FilterProgram';\nimport ProgramForm from '~/components/Global/Option/ProgramForm';\nimport LayoutBase from '~/components/LayoutBase';\nimport PowerTable from '~/components/PowerTable';\nimport FilterColumn from '~/components/Tables/FilterColumn';\nimport { useWrap } from '~/context/wrap';\nlet pageIndex = 1;\nlet listFieldSearch = {\n  pageIndex: 1,\n  ProgramCode: null,\n  ProgramName: null\n};\nconst dataOption = [{\n  dataSort: {\n    sort: 0,\n    sortType: false\n  },\n  text: 'Tên Z - A'\n}, {\n  dataSort: {\n    sort: 0,\n    sortType: true\n  },\n  text: 'Tên A - Z '\n}, {\n  dataSort: {\n    sort: 2,\n    sortType: false\n  },\n  text: 'Học phí Z - A '\n}, {\n  dataSort: {\n    sort: 2,\n    sortType: true\n  },\n  text: 'Học phí A - Z '\n}];\n\nconst Programs = () => {\n  const {\n    0: dataGrade,\n    1: setDataGrade\n  } = useState([]);\n  const {\n    0: dataLevel,\n    1: setDataLevel\n  } = useState([]); // ------ BASE USESTATE TABLE -------\n\n  const {\n    0: dataSource,\n    1: setDataSource\n  } = useState([]);\n  const {\n    showNoti,\n    pageSize,\n    userInformation\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: '',\n    status: false\n  });\n  const {\n    0: totalPage,\n    1: setTotalPage\n  } = useState(null);\n  const {\n    0: indexRow,\n    1: setIndexRow\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const listTodoApi = {\n    pageSize: pageSize,\n    pageIndex: pageIndex,\n    sort: null,\n    sortType: null,\n    ProgramCode: null,\n    ProgramName: null,\n    Type: null,\n    Level: null,\n    fromDate: null,\n    toDate: null\n  };\n  const {\n    0: todoApi,\n    1: setTodoApi\n  } = useState(listTodoApi); // GET DATA SOURCE\n\n  const getDataSource = async () => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n\n    try {\n      let res = await programApi.getAll(todoApi);\n      res.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow), setDataLevel(res.data.listLevel));\n      res.status == 204 && setDataSource([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // GET DATA CENTER\n\n\n  const getDataGrade = async () => {\n    try {\n      let res = await gradeApi.getAll({\n        pageIndex: 1,\n        pageSize: Number.MAX_SAFE_INTEGER\n      });\n      res.status == 200 && setDataGrade(res.data.data);\n      res.status == 204 && setDataGrade([]);\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {}\n  }; // ---------------- AFTER SUBMIT -----------------\n\n\n  const afterPost = mes => {\n    showNoti('success', 'Thêm mới thành công');\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1);\n  }; // ----------------- ON SUBMIT --------------------\n\n\n  const _onSubmit = async dataSubmit => {\n    setIsLoading({\n      type: 'ADD_DATA',\n      status: true\n    });\n    let res = null;\n\n    if (dataSubmit.ID) {\n      try {\n        res = await programApi.update(dataSubmit);\n\n        if (res.status == 200) {\n          let newDataSource = [...dataSource];\n          newDataSource.splice(indexRow, 1, _objectSpread(_objectSpread({}, dataSubmit), {}, {\n            GradeName: dataGrade.find(item => item.ID === dataSubmit.GradeID).GradeName\n          }));\n          setDataSource(newDataSource);\n          showNoti('success', 'Cập nhật thành công');\n        }\n      } catch (error) {\n        console.log('error: ', error);\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: false\n        });\n      }\n    } else {\n      try {\n        var _res;\n\n        res = await programApi.add(dataSubmit);\n        ((_res = res) === null || _res === void 0 ? void 0 : _res.status) == 200 && afterPost(res.data.message);\n      } catch (error) {\n        showNoti('danger', error.message);\n      } finally {\n        setIsLoading({\n          type: 'ADD_DATA',\n          status: false\n        });\n      }\n    }\n\n    return res;\n  }; // ----------------- TURN OF ------------------------\n\n\n  const changeStatus = async (checked, idRow) => {\n    setIsLoading({\n      type: 'GET_ALL',\n      status: true\n    });\n    let dataChange = {\n      ID: idRow,\n      Enable: checked\n    };\n\n    try {\n      let res = await programApi.update(dataChange);\n      res.status == 200 && setTodoApi(_objectSpread({}, todoApi));\n    } catch (error) {\n      showNoti('danger', error.Message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  }; // -------------- HANDLE FILTER -------------------\n\n\n  const handleFilter = value => {\n    console.log('Value in here: ', value);\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), value));\n  }; // -------------- CHECK FIELD ---------------------\n\n\n  const checkField = (valueSearch, dataIndex) => {\n    let newList = _objectSpread({}, listFieldSearch);\n\n    Object.keys(newList).forEach(function (key) {\n      console.log('key: ', key);\n\n      if (key != dataIndex) {\n        if (key != 'pageIndex') {\n          newList[key] = null;\n        }\n      } else {\n        newList[key] = valueSearch;\n      }\n    });\n    return newList;\n  }; // --------------- HANDLE SORT ----------------------\n\n\n  const handleSort = async option => {\n    let newTodoApi = _objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1,\n      sort: option.title.sort,\n      sortType: option.title.sortType\n    });\n\n    setCurrentPage(1), setTodoApi(newTodoApi);\n  }; // ------------ ON SEARCH -----------------------\n\n\n  const onSearch = (valueSearch, dataIndex) => {\n    let clearKey = checkField(valueSearch, dataIndex);\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), clearKey));\n  }; // HANDLE RESET\n\n\n  const resetListFieldSearch = () => {\n    Object.keys(listFieldSearch).forEach(function (key) {\n      if (key != 'pageIndex') {\n        listFieldSearch[key] = null;\n      }\n    });\n  };\n\n  const handleReset = () => {\n    setTodoApi(_objectSpread(_objectSpread({}, listTodoApi), {}, {\n      pageIndex: 1\n    }));\n    setCurrentPage(1), resetListFieldSearch();\n  }; // -------------- GET PAGE_NUMBER -----------------\n\n\n  const getPagination = pageNumber => {\n    setCurrentPage(pageNumber);\n    setTodoApi(_objectSpread(_objectSpread({}, todoApi), {}, {\n      pageIndex: pageNumber\n    }));\n  }; // ============== USE EFFECT - FETCH DATA ===================\n\n\n  useEffect(() => {\n    getDataSource();\n  }, [todoApi]);\n  useEffect(() => {\n    getDataGrade();\n  }, []); // ---------------- COLUMN --------------------\n\n  const columns = [{\n    title: 'Khối học',\n    dataIndex: 'GradeName',\n    render: text => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 12\n      }, this);\n    }\n  }, _objectSpread(_objectSpread({\n    title: 'Mã lớp',\n    dataIndex: 'ProgramCode'\n  }, FilterColumn('ProgramCode', onSearch, handleReset, 'text')), {}, {\n    render: text => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-primary\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 12\n      }, this);\n    }\n  }), _objectSpread(_objectSpread({\n    title: 'Tên lớp',\n    dataIndex: 'ProgramName'\n  }, FilterColumn('ProgramName', onSearch, handleReset, 'text')), {}, {\n    render: text => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-primary\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 12\n      }, this);\n    }\n  }), {\n    title: 'Level',\n    dataIndex: 'Level',\n    align: 'center'\n  }, {\n    title: 'Học phí',\n    dataIndex: 'Price',\n    render: Price => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-weight-black\",\n        children: new Intl.NumberFormat().format(Price)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    title: 'Loại',\n    dataIndex: 'TypeName'\n  }, {\n    title: 'Trạng thái',\n    dataIndex: 'Enable',\n    render: (Enable, record) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        checkedChildren: \"Hi\\u1EC7n\",\n        unCheckedChildren: \"\\u1EA8n\",\n        checked: Enable,\n        size: \"default\",\n        onChange: checked => changeStatus(checked, record.ID)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 6\n      }, this)\n    }, void 0, false)\n  }, {\n    title: 'Người tạo',\n    dataIndex: 'ModifiedBy'\n  }, {\n    title: 'Ngày tạo',\n    dataIndex: 'ModifiedOn',\n    render: date => moment(date).format('DD/MM/YYYY')\n  }, {\n    render: (value, data, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: {\n          pathname: '/option/program/program-detail/[slug]',\n          query: {\n            slug: data.ID\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Chi ti\\u1EBFt ch\\u01B0\\u01A1ng tr\\xECnh\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-icon\",\n            children: /*#__PURE__*/_jsxDEV(Eye, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 6\n      }, this), userInformation && (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) !== 2 && /*#__PURE__*/_jsxDEV(ProgramForm, {\n        getIndex: () => setIndexRow(index),\n        _onSubmit: data => _onSubmit(data),\n        programID: data.ID,\n        rowData: data,\n        dataGrade: dataGrade,\n        showAdd: true,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }];\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PowerTable, {\n      currentPage: currentPage,\n      totalPage: totalPage && totalPage,\n      getPagination: pageNumber => getPagination(pageNumber),\n      loading: isLoading,\n      addClass: \"basic-header\",\n      TitlePage: \"Danh s\\xE1ch ch\\u01B0\\u01A1ng tr\\xECnh\",\n      TitleCard: userInformation && (userInformation === null || userInformation === void 0 ? void 0 : userInformation.RoleID) !== 2 && /*#__PURE__*/_jsxDEV(ProgramForm, {\n        _onSubmit: data => _onSubmit(data),\n        dataGrade: dataGrade,\n        showAdd: true,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 7\n      }, this),\n      dataSource: dataSource,\n      columns: columns,\n      Extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-table\",\n        children: [/*#__PURE__*/_jsxDEV(FilterProgram, {\n          handleReset: handleReset,\n          dataLevel: dataLevel,\n          handleFilter: value => handleFilter(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(SortBox, {\n          handleSort: value => handleSort(value),\n          dataOption: dataOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 3\n  }, this);\n};\n\nPrograms.layout = LayoutBase;\nexport default Programs;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/pages/option/program/index.tsx"],"names":["Switch","Tooltip","moment","Link","React","Fragment","useEffect","useState","Eye","gradeApi","programApi","SortBox","FilterProgram","ProgramForm","LayoutBase","PowerTable","FilterColumn","useWrap","pageIndex","listFieldSearch","ProgramCode","ProgramName","dataOption","dataSort","sort","sortType","text","Programs","dataGrade","setDataGrade","dataLevel","setDataLevel","dataSource","setDataSource","showNoti","pageSize","userInformation","isLoading","setIsLoading","type","status","totalPage","setTotalPage","indexRow","setIndexRow","currentPage","setCurrentPage","listTodoApi","Type","Level","fromDate","toDate","todoApi","setTodoApi","getDataSource","res","getAll","data","totalRow","listLevel","error","message","getDataGrade","Number","MAX_SAFE_INTEGER","afterPost","mes","_onSubmit","dataSubmit","ID","update","newDataSource","splice","GradeName","find","item","GradeID","console","log","add","changeStatus","checked","idRow","dataChange","Enable","Message","handleFilter","value","checkField","valueSearch","dataIndex","newList","Object","keys","forEach","key","handleSort","option","newTodoApi","title","onSearch","clearKey","resetListFieldSearch","handleReset","getPagination","pageNumber","columns","render","align","Price","Intl","NumberFormat","format","record","date","index","pathname","query","slug","RoleID","layout"],"mappings":"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","sourcesContent":["import { Switch, Tooltip } from 'antd'\r\nimport moment from 'moment'\r\nimport Link from 'next/link'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { Eye } from 'react-feather'\r\nimport { gradeApi, programApi } from '~/apiBase'\r\nimport SortBox from '~/components/Elements/SortBox'\r\nimport FilterProgram from '~/components/Global/Option/FilterTable/FilterProgram'\r\nimport ProgramForm from '~/components/Global/Option/ProgramForm'\r\nimport LayoutBase from '~/components/LayoutBase'\r\nimport PowerTable from '~/components/PowerTable'\r\nimport FilterColumn from '~/components/Tables/FilterColumn'\r\nimport { useWrap } from '~/context/wrap'\r\n\r\nlet pageIndex = 1\r\n\r\nlet listFieldSearch = {\r\n\tpageIndex: 1,\r\n\tProgramCode: null,\r\n\tProgramName: null\r\n}\r\n\r\nconst dataOption = [\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Tên Z - A'\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 0,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Tên A - Z '\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: false\r\n\t\t},\r\n\t\ttext: 'Học phí Z - A '\r\n\t},\r\n\t{\r\n\t\tdataSort: {\r\n\t\t\tsort: 2,\r\n\t\t\tsortType: true\r\n\t\t},\r\n\t\ttext: 'Học phí A - Z '\r\n\t}\r\n]\r\n\r\nconst Programs = () => {\r\n\tconst [dataGrade, setDataGrade] = useState<IGrade[]>([])\r\n\tconst [dataLevel, setDataLevel] = useState([])\r\n\r\n\t// ------ BASE USESTATE TABLE -------\r\n\tconst [dataSource, setDataSource] = useState<IProgram[]>([])\r\n\tconst { showNoti, pageSize, userInformation } = useWrap()\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: '',\r\n\t\tstatus: false\r\n\t})\r\n\r\n\tconst [totalPage, setTotalPage] = useState(null)\r\n\tconst [indexRow, setIndexRow] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\r\n\tconst listTodoApi = {\r\n\t\tpageSize: pageSize,\r\n\t\tpageIndex: pageIndex,\r\n\t\tsort: null,\r\n\t\tsortType: null,\r\n\t\tProgramCode: null,\r\n\t\tProgramName: null,\r\n\t\tType: null,\r\n\t\tLevel: null,\r\n\t\tfromDate: null,\r\n\t\ttoDate: null\r\n\t}\r\n\r\n\tconst [todoApi, setTodoApi] = useState(listTodoApi)\r\n\r\n\t// GET DATA SOURCE\r\n\tconst getDataSource = async () => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await programApi.getAll(todoApi)\r\n\t\t\tres.status == 200 && (setDataSource(res.data.data), setTotalPage(res.data.totalRow), setDataLevel(res.data.listLevel))\r\n\r\n\t\t\tres.status == 204 && setDataSource([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// GET DATA CENTER\r\n\tconst getDataGrade = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await gradeApi.getAll({\r\n\t\t\t\tpageIndex: 1,\r\n\t\t\t\tpageSize: Number.MAX_SAFE_INTEGER\r\n\t\t\t})\r\n\t\t\tres.status == 200 && setDataGrade(res.data.data)\r\n\t\t\tres.status == 204 && setDataGrade([])\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t}\r\n\t}\r\n\r\n\t// ---------------- AFTER SUBMIT -----------------\r\n\tconst afterPost = (mes) => {\r\n\t\tshowNoti('success', 'Thêm mới thành công')\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1)\r\n\t}\r\n\r\n\t// ----------------- ON SUBMIT --------------------\r\n\tconst _onSubmit = async (dataSubmit: any) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'ADD_DATA',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet res = null\r\n\r\n\t\tif (dataSubmit.ID) {\r\n\t\t\ttry {\r\n\t\t\t\tres = await programApi.update(dataSubmit)\r\n\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tlet newDataSource = [...dataSource]\r\n\t\t\t\t\tnewDataSource.splice(indexRow, 1, {\r\n\t\t\t\t\t\t...dataSubmit,\r\n\t\t\t\t\t\tGradeName: dataGrade.find((item) => item.ID === dataSubmit.GradeID).GradeName\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetDataSource(newDataSource)\r\n\t\t\t\t\tshowNoti('success', 'Cập nhật thành công')\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log('error: ', error)\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tres = await programApi.add(dataSubmit)\r\n\t\t\t\tres?.status == 200 && afterPost(res.data.message)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tshowNoti('danger', error.message)\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading({\r\n\t\t\t\t\ttype: 'ADD_DATA',\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res\r\n\t}\r\n\r\n\t// ----------------- TURN OF ------------------------\r\n\tconst changeStatus = async (checked: boolean, idRow: number) => {\r\n\t\tsetIsLoading({\r\n\t\t\ttype: 'GET_ALL',\r\n\t\t\tstatus: true\r\n\t\t})\r\n\r\n\t\tlet dataChange = {\r\n\t\t\tID: idRow,\r\n\t\t\tEnable: checked\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await programApi.update(dataChange)\r\n\t\t\tres.status == 200 && setTodoApi({ ...todoApi })\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.Message)\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// -------------- HANDLE FILTER -------------------\r\n\tconst handleFilter = (value) => {\r\n\t\tconsole.log('Value in here: ', value)\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\t...value\r\n\t\t})\r\n\t}\r\n\r\n\t// -------------- CHECK FIELD ---------------------\r\n\tconst checkField = (valueSearch, dataIndex) => {\r\n\t\tlet newList = { ...listFieldSearch }\r\n\t\tObject.keys(newList).forEach(function (key) {\r\n\t\t\tconsole.log('key: ', key)\r\n\t\t\tif (key != dataIndex) {\r\n\t\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\t\tnewList[key] = null\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewList[key] = valueSearch\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn newList\r\n\t}\r\n\r\n\t// --------------- HANDLE SORT ----------------------\r\n\tconst handleSort = async (option) => {\r\n\t\tlet newTodoApi = {\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1,\r\n\t\t\tsort: option.title.sort,\r\n\t\t\tsortType: option.title.sortType\r\n\t\t}\r\n\t\tsetCurrentPage(1), setTodoApi(newTodoApi)\r\n\t}\r\n\r\n\t// ------------ ON SEARCH -----------------------\r\n\tconst onSearch = (valueSearch, dataIndex) => {\r\n\t\tlet clearKey = checkField(valueSearch, dataIndex)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\t...clearKey\r\n\t\t})\r\n\t}\r\n\r\n\t// HANDLE RESET\r\n\tconst resetListFieldSearch = () => {\r\n\t\tObject.keys(listFieldSearch).forEach(function (key) {\r\n\t\t\tif (key != 'pageIndex') {\r\n\t\t\t\tlistFieldSearch[key] = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetTodoApi({\r\n\t\t\t...listTodoApi,\r\n\t\t\tpageIndex: 1\r\n\t\t})\r\n\t\tsetCurrentPage(1), resetListFieldSearch()\r\n\t}\r\n\r\n\t// -------------- GET PAGE_NUMBER -----------------\r\n\tconst getPagination = (pageNumber: number) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\r\n\t\tsetTodoApi({\r\n\t\t\t...todoApi,\r\n\t\t\tpageIndex: pageNumber\r\n\t\t})\r\n\t}\r\n\r\n\t// ============== USE EFFECT - FETCH DATA ===================\r\n\tuseEffect(() => {\r\n\t\tgetDataSource()\r\n\t}, [todoApi])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataGrade()\r\n\t}, [])\r\n\r\n\t// ---------------- COLUMN --------------------\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Khối học',\r\n\t\t\tdataIndex: 'GradeName',\r\n\t\t\trender: (text) => {\r\n\t\t\t\treturn <p className=\"font-weight-black\">{text}</p>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Mã lớp',\r\n\t\t\tdataIndex: 'ProgramCode',\r\n\t\t\t...FilterColumn('ProgramCode', onSearch, handleReset, 'text'),\r\n\t\t\trender: (text) => {\r\n\t\t\t\treturn <p className=\"font-weight-primary\">{text}</p>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Tên lớp',\r\n\t\t\tdataIndex: 'ProgramName',\r\n\t\t\t...FilterColumn('ProgramName', onSearch, handleReset, 'text'),\r\n\t\t\trender: (text) => {\r\n\t\t\t\treturn <p className=\"font-weight-primary\">{text}</p>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Level',\r\n\t\t\tdataIndex: 'Level',\r\n\t\t\talign: 'center'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Học phí',\r\n\t\t\tdataIndex: 'Price',\r\n\t\t\trender: (Price) => {\r\n\t\t\t\treturn <p className=\"font-weight-black\">{new Intl.NumberFormat().format(Price)}</p>\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Loại',\r\n\t\t\tdataIndex: 'TypeName'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tdataIndex: 'Enable',\r\n\t\t\trender: (Enable, record) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Switch\r\n\t\t\t\t\t\tcheckedChildren=\"Hiện\"\r\n\t\t\t\t\t\tunCheckedChildren=\"Ẩn\"\r\n\t\t\t\t\t\tchecked={Enable}\r\n\t\t\t\t\t\tsize=\"default\"\r\n\t\t\t\t\t\tonChange={(checked) => changeStatus(checked, record.ID)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Người tạo',\r\n\t\t\tdataIndex: 'ModifiedBy'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Ngày tạo',\r\n\t\t\tdataIndex: 'ModifiedOn',\r\n\t\t\trender: (date: any) => moment(date).format('DD/MM/YYYY')\r\n\t\t},\r\n\t\t{\r\n\t\t\trender: (value, data, index) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\tpathname: '/option/program/program-detail/[slug]',\r\n\t\t\t\t\t\t\tquery: { slug: data.ID }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tooltip title=\"Chi tiết chương trình\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-icon\">\r\n\t\t\t\t\t\t\t\t<Eye />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t{userInformation && userInformation?.RoleID !== 2 && (\r\n\t\t\t\t\t\t<ProgramForm\r\n\t\t\t\t\t\t\tgetIndex={() => setIndexRow(index)}\r\n\t\t\t\t\t\t\t_onSubmit={(data: any) => _onSubmit(data)}\r\n\t\t\t\t\t\t\tprogramID={data.ID}\r\n\t\t\t\t\t\t\trowData={data}\r\n\t\t\t\t\t\t\tdataGrade={dataGrade}\r\n\t\t\t\t\t\t\tshowAdd={true}\r\n\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t]\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<PowerTable\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\ttotalPage={totalPage && totalPage}\r\n\t\t\t\tgetPagination={(pageNumber: number) => getPagination(pageNumber)}\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\tTitlePage=\"Danh sách chương trình\"\r\n\t\t\t\tTitleCard={\r\n\t\t\t\t\tuserInformation &&\r\n\t\t\t\t\tuserInformation?.RoleID !== 2 && (\r\n\t\t\t\t\t\t<ProgramForm _onSubmit={(data: any) => _onSubmit(data)} dataGrade={dataGrade} showAdd={true} isLoading={isLoading} />\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\tdataSource={dataSource}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tExtra={\r\n\t\t\t\t\t<div className=\"extra-table\">\r\n\t\t\t\t\t\t<FilterProgram handleReset={handleReset} dataLevel={dataLevel} handleFilter={(value: any) => handleFilter(value)} />\r\n\t\t\t\t\t\t<SortBox handleSort={(value) => handleSort(value)} dataOption={dataOption} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\nPrograms.layout = LayoutBase\r\nexport default Programs\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\FormControl\\\\SelectField\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form, Select } from 'antd';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Controller } from 'react-hook-form';\nimport { optionCommonPropTypes } from '~/utils/proptypes';\n\nconst SelectField = props => {\n  const {\n    form,\n    name,\n    isDynamicField,\n    label,\n    optionList,\n    placeholder,\n    disabled,\n    mode,\n    onChangeSelect,\n    isLoading,\n    style,\n    className,\n    isRequired,\n    optionDisabledList\n  } = props;\n  const {\n    Option\n  } = Select;\n  const {\n    errors\n  } = form.formState;\n  let hasError;\n  let errorMessage;\n\n  if (isDynamicField) {\n    // NAME.INDEX.KEY;\n    const nameSlice = name.slice(0, name.indexOf('.'));\n    const index = name.slice(name.indexOf('.') + 1, name.lastIndexOf('.'));\n    const key = name.slice(name.lastIndexOf('.') + 1); // IF HAVE NAME SLICE\n\n    if (errors[nameSlice] && errors[nameSlice][index]) {\n      var _errors$nameSlice$ind;\n\n      hasError = errors[nameSlice][index][key];\n      errorMessage = (_errors$nameSlice$ind = errors[nameSlice][index][key]) === null || _errors$nameSlice$ind === void 0 ? void 0 : _errors$nameSlice$ind.message;\n    }\n  } else {\n    var _errors$name;\n\n    hasError = errors[name];\n    errorMessage = (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message;\n  }\n\n  const checkOnChangeSelect = value => {\n    if (!onChangeSelect) return;\n    onChangeSelect(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form.Item, {\n    style: style,\n    label: label,\n    className: `${className} ${hasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''}`,\n    required: isRequired,\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      name: name,\n      control: form.control,\n      render: ({\n        field\n      }) => {\n        let temp = 'fuck';\n\n        if ((field === null || field === void 0 ? void 0 : field.value) == 0 || (field === null || field === void 0 ? void 0 : field.value) == null || (field === null || field === void 0 ? void 0 : field.value) == undefined) {\n          temp == _objectSpread(_objectSpread({}, field), {}, {\n            value: null\n          });\n        } else {\n          temp = field;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread({}, temp), {}, {\n          mode: mode,\n          className: \"style-input\",\n          showSearch: true,\n          loading: isLoading,\n          style: {\n            width: '100%'\n          },\n          placeholder: placeholder,\n          optionFilterProp: \"children\",\n          disabled: disabled,\n          onChange: value => {\n            checkOnChangeSelect(value);\n            field.onChange(value);\n          },\n          children: optionList.map((o, idx) => /*#__PURE__*/_jsxDEV(Option, {\n            value: o.value,\n            disabled: o.disabled || (optionDisabledList === null || optionDisabledList === void 0 ? void 0 : optionDisabledList.includes(o.value)),\n            children: o.title\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this))\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ant-form-item-explain ant-form-item-explain-error font-color-error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n\nSelectField.propTypes = {\n  form: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  isDynamicField: PropTypes.bool,\n  optionList: optionCommonPropTypes,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  mode: PropTypes.string,\n  onChangeSelect: PropTypes.func,\n  isLoading: PropTypes.bool,\n  style: PropTypes.shape({}),\n  className: PropTypes.string,\n  isRequired: PropTypes.bool,\n  optionDisabledList: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n};\nSelectField.defaultProps = {\n  isDynamicField: false,\n  optionList: [],\n  label: '',\n  placeholder: '',\n  disabled: false,\n  onChangeSelect: null,\n  mode: '',\n  isLoading: false,\n  style: {},\n  className: '',\n  isRequired: false,\n  optionDisabledList: []\n};\nexport default SelectField;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/FormControl/SelectField/index.tsx"],"names":["Form","Select","PropTypes","React","Controller","optionCommonPropTypes","SelectField","props","form","name","isDynamicField","label","optionList","placeholder","disabled","mode","onChangeSelect","isLoading","style","className","isRequired","optionDisabledList","Option","errors","formState","hasError","errorMessage","nameSlice","slice","indexOf","index","lastIndexOf","key","message","checkOnChangeSelect","value","control","field","temp","undefined","width","onChange","map","o","idx","includes","title","propTypes","object","string","bool","func","shape","arrayOf","oneOfType","number","defaultProps"],"mappings":"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","sourcesContent":["import { Form, Select } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { Controller } from 'react-hook-form'\r\nimport { optionCommonPropTypes } from '~/utils/proptypes'\r\n\r\nconst SelectField = (props) => {\r\n\tconst {\r\n\t\tform,\r\n\t\tname,\r\n\t\tisDynamicField,\r\n\t\tlabel,\r\n\t\toptionList,\r\n\t\tplaceholder,\r\n\t\tdisabled,\r\n\t\tmode,\r\n\t\tonChangeSelect,\r\n\t\tisLoading,\r\n\t\tstyle,\r\n\t\tclassName,\r\n\t\tisRequired,\r\n\t\toptionDisabledList\r\n\t} = props\r\n\tconst { Option } = Select\r\n\tconst { errors } = form.formState\r\n\r\n\tlet hasError\r\n\tlet errorMessage\r\n\tif (isDynamicField) {\r\n\t\t// NAME.INDEX.KEY;\r\n\t\tconst nameSlice = name.slice(0, name.indexOf('.'))\r\n\t\tconst index = name.slice(name.indexOf('.') + 1, name.lastIndexOf('.'))\r\n\t\tconst key = name.slice(name.lastIndexOf('.') + 1)\r\n\t\t// IF HAVE NAME SLICE\r\n\t\tif (errors[nameSlice] && errors[nameSlice][index]) {\r\n\t\t\thasError = errors[nameSlice][index][key]\r\n\t\t\terrorMessage = errors[nameSlice][index][key]?.message\r\n\t\t}\r\n\t} else {\r\n\t\thasError = errors[name]\r\n\t\terrorMessage = errors[name]?.message\r\n\t}\r\n\r\n\tconst checkOnChangeSelect = (value) => {\r\n\t\tif (!onChangeSelect) return\r\n\t\tonChangeSelect(value)\r\n\t}\r\n\treturn (\r\n\t\t<Form.Item\r\n\t\t\tstyle={style}\r\n\t\t\tlabel={label}\r\n\t\t\tclassName={`${className} ${hasError ? 'ant-form-item-with-help ant-form-item-has-error' : ''}`}\r\n\t\t\trequired={isRequired}\r\n\t\t>\r\n\t\t\t<Controller\r\n\t\t\t\tname={name}\r\n\t\t\t\tcontrol={form.control}\r\n\t\t\t\trender={({ field }) => {\r\n\t\t\t\t\tlet temp: any = 'fuck'\r\n\r\n\t\t\t\t\tif (field?.value == 0 || field?.value == null || field?.value == undefined) {\r\n\t\t\t\t\t\ttemp == { ...field, value: null }\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttemp = field\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t{...temp}\r\n\t\t\t\t\t\t\tmode={mode}\r\n\t\t\t\t\t\t\tclassName=\"style-input\"\r\n\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\tloading={isLoading}\r\n\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\t\toptionFilterProp=\"children\"\r\n\t\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\tcheckOnChangeSelect(value)\r\n\t\t\t\t\t\t\t\tfield.onChange(value)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{optionList.map((o, idx) => (\r\n\t\t\t\t\t\t\t\t<Option key={idx} value={o.value} disabled={o.disabled || optionDisabledList?.includes(o.value)}>\r\n\t\t\t\t\t\t\t\t\t{o.title}\r\n\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{hasError && (\r\n\t\t\t\t<div className=\"ant-form-item-explain ant-form-item-explain-error font-color-error\">\r\n\t\t\t\t\t<div role=\"alert\">{errorMessage}</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Form.Item>\r\n\t)\r\n}\r\n\r\nSelectField.propTypes = {\r\n\tform: PropTypes.object.isRequired,\r\n\tname: PropTypes.string.isRequired,\r\n\tisDynamicField: PropTypes.bool,\r\n\toptionList: optionCommonPropTypes,\r\n\tlabel: PropTypes.string,\r\n\tplaceholder: PropTypes.string,\r\n\tdisabled: PropTypes.bool,\r\n\tmode: PropTypes.string,\r\n\tonChangeSelect: PropTypes.func,\r\n\tisLoading: PropTypes.bool,\r\n\tstyle: PropTypes.shape({}),\r\n\tclassName: PropTypes.string,\r\n\tisRequired: PropTypes.bool,\r\n\toptionDisabledList: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\r\n}\r\nSelectField.defaultProps = {\r\n\tisDynamicField: false,\r\n\toptionList: [],\r\n\tlabel: '',\r\n\tplaceholder: '',\r\n\tdisabled: false,\r\n\tonChangeSelect: null,\r\n\tmode: '',\r\n\tisLoading: false,\r\n\tstyle: {},\r\n\tclassName: '',\r\n\tisRequired: false,\r\n\toptionDisabledList: []\r\n}\r\nexport default SelectField\r\n"]},"metadata":{},"sourceType":"module"}
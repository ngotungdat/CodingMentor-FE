{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Profile\\\\ProfileCustomer\\\\InfoTestCard\\\\InfoTestCard.tsx\";\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { examAppointmentResultApi } from '~/apiBase';\nimport ExpandTable from '~/components/ExpandTable';\nimport { useWrap } from '~/context/wrap';\nInfoTestCard.propTypes = {\n  studentID: PropTypes.number\n};\nInfoTestCard.defaultProps = {\n  studentID: 0\n};\n\nfunction InfoTestCard(props) {\n  const {\n    studentID\n  } = props;\n  const {\n    showNoti\n  } = useWrap();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState({\n    type: null,\n    status: false\n  });\n  const {\n    0: exam,\n    1: setExam\n  } = useState(null);\n\n  const getExamAppointmentResult = async () => {\n    try {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: true\n      });\n      const res = await examAppointmentResultApi.getAll({\n        selectAll: true,\n        UserInformationID: studentID\n      });\n\n      if (res.status === 200) {\n        setExam(res.data.data);\n      } else if (res.status === 204) {\n        setExam([]);\n      }\n    } catch (error) {\n      showNoti('danger', error.message);\n    } finally {\n      setIsLoading({\n        type: 'GET_ALL',\n        status: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    getExamAppointmentResult();\n  }, []);\n  const columns = [{\n    title: 'Ngày kiểm tra',\n    dataIndex: 'CreatedOn',\n    render: date => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-weight-black\",\n      children: moment(date).format('DD/MM/YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Tên đề',\n    dataIndex: 'ExamTopicName'\n  }, {\n    title: 'Nghe',\n    dataIndex: 'ListeningPoint'\n  }, {\n    title: 'Nói',\n    dataIndex: 'SpeakingPoint'\n  }, {\n    title: 'Đọc',\n    dataIndex: 'ReadingPoint'\n  }, {\n    title: 'Viết',\n    dataIndex: 'WritingPoint'\n  }, {\n    title: 'Trạng thái',\n    dataIndex: 'StatusID',\n    render: status => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [status == 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag red\",\n          children: \"Ch\\u01B0a test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 23\n        }, this), status == 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag blue\",\n          children: \"\\u0110ang ch\\u1EA5m b\\xE0i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }, this), status == 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag yellow\",\n          children: \"Ch\\u01B0a \\u0111\\u0103ng k\\xED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 23\n        }, this), status == 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag green\",\n          children: \"\\u0110\\xE3 \\u0111\\u0103ng k\\xED \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n\n  const expandedRowRender = exam => {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"tb-expand\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-weight-black\",\n              children: \"Gi\\xE1o vi\\xEAn ki\\u1EC3m tra\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exam.TeacherName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-weight-black\",\n              children: \" T\\u01B0 v\\u1EA5n vi\\xEAn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exam.CounselorsName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-weight-black\",\n              children: \"Ghi ch\\xFA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exam.Note\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ExpandTable, {\n      loading: isLoading,\n      dataSource: exam,\n      columns: columns,\n      addClass: \"basic-header\",\n      expandable: {\n        expandedRowRender\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\nexport default InfoTestCard;","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Profile/ProfileCustomer/InfoTestCard/InfoTestCard.tsx"],"names":["moment","PropTypes","React","useEffect","useState","examAppointmentResultApi","ExpandTable","useWrap","InfoTestCard","propTypes","studentID","number","defaultProps","props","showNoti","isLoading","setIsLoading","type","status","exam","setExam","getExamAppointmentResult","res","getAll","selectAll","UserInformationID","data","error","message","columns","title","dataIndex","render","date","format","expandedRowRender","TeacherName","CounselorsName","Note"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { examAppointmentResultApi } from '~/apiBase';\r\nimport ExpandTable from '~/components/ExpandTable';\r\nimport { useWrap } from '~/context/wrap';\r\n\r\nInfoTestCard.propTypes = {\r\n\tstudentID: PropTypes.number\r\n};\r\nInfoTestCard.defaultProps = {\r\n\tstudentID: 0\r\n};\r\nfunction InfoTestCard(props) {\r\n\tconst { studentID } = props;\r\n\tconst { showNoti } = useWrap();\r\n\tconst [isLoading, setIsLoading] = useState({\r\n\t\ttype: null,\r\n\t\tstatus: false\r\n\t});\r\n\tconst [exam, setExam] = useState<any>(null);\r\n\r\n\tconst getExamAppointmentResult = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: true\r\n\t\t\t});\r\n\t\t\tconst res = await examAppointmentResultApi.getAll({ selectAll: true, UserInformationID: studentID });\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetExam(res.data.data);\r\n\t\t\t} else if (res.status === 204) {\r\n\t\t\t\tsetExam([]);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading({\r\n\t\t\t\ttype: 'GET_ALL',\r\n\t\t\t\tstatus: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetExamAppointmentResult();\r\n\t}, []);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Ngày kiểm tra',\r\n\t\t\tdataIndex: 'CreatedOn',\r\n\t\t\trender: (date) => <p className=\"font-weight-black\">{moment(date).format('DD/MM/YYYY')}</p>\r\n\t\t},\r\n\t\t{ title: 'Tên đề', dataIndex: 'ExamTopicName' },\r\n\t\t{ title: 'Nghe', dataIndex: 'ListeningPoint' },\r\n\t\t{ title: 'Nói', dataIndex: 'SpeakingPoint' },\r\n\t\t{ title: 'Đọc', dataIndex: 'ReadingPoint' },\r\n\t\t{ title: 'Viết', dataIndex: 'WritingPoint' },\r\n\t\t{\r\n\t\t\ttitle: 'Trạng thái',\r\n\t\t\tdataIndex: 'StatusID',\r\n\t\t\trender: (status) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{status == 0 && <span className=\"tag red\">Chưa test</span>}\r\n\t\t\t\t\t\t{status == 1 && <span className=\"tag blue\">Đang chấm bài</span>}\r\n\t\t\t\t\t\t{status == 2 && <span className=\"tag yellow\">Chưa đăng kí</span>}\r\n\t\t\t\t\t\t{status == 3 && <span className=\"tag green\">Đã đăng kí </span>}\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t];\r\n\r\n\tconst expandedRowRender = (exam: IExamAppointmentResult) => {\r\n\t\treturn (\r\n\t\t\t<table className=\"tb-expand\">\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<p className=\"font-weight-black\">Giáo viên kiểm tra</p>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>{exam.TeacherName}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<p className=\"font-weight-black\"> Tư vấn viên</p>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>{exam.CounselorsName}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<p className=\"font-weight-black\">Ghi chú</p>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>{exam.Note}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ExpandTable\r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\tdataSource={exam}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\taddClass=\"basic-header\"\r\n\t\t\t\texpandable={{ expandedRowRender }}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}\r\nexport default InfoTestCard;\r\n"]},"metadata":{},"sourceType":"module"}
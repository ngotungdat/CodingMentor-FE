{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"D:\\\\MonaMedia\\\\Project\\\\IELTS-NguyenHuyen-FE\\\\IELTS-Nguyen-Huyen\\\\src\\\\components\\\\Global\\\\ExamAppointment\\\\ExamAppointmentResult.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ProfileOutlined } from '@ant-design/icons';\nimport { Card, Skeleton, Spin } from 'antd';\nimport router from 'next/router';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Bookmark } from 'react-feather';\nimport ReactHtmlParser from 'react-html-parser';\nimport { examAppointmentResultApi } from '~/apiBase';\nimport TitlePage from '~/components/Elements/TitlePage';\nimport ListQuestion from '~/components/Global/DoingTest/ListQuestion';\nimport { useDoneTest } from '~/context/useDoneTest';\nimport { useWrap } from '~/context/wrap';\nimport MainTest from '../DoingTest/MainTest';\n\nvar ExamAppointmentResult = function ExamAppointmentResult() {\n  _s();\n\n  // ---- Get Router ----\n  var _router$query = router.query,\n      ExamAppointmentResultID = _router$query.ExamAppointmentResultID,\n      examID = _router$query.examID,\n      score = _router$query.score;\n  var ExamAppointmentID = router.query.slug;\n\n  var _useDoneTest = useDoneTest();\n\n  _objectDestructuringEmpty(_useDoneTest);\n\n  var teacherMarking = router.query.teacherMarking;\n\n  var _useDoneTest2 = useDoneTest(),\n      getDoneTestData = _useDoneTest2.getDoneTestData,\n      doneTestData = _useDoneTest2.doneTestData,\n      dataMarking = _useDoneTest2.dataMarking,\n      getDataMarking = _useDoneTest2.getDataMarking;\n\n  var _useState = useState([]),\n      detailResult = _useState[0],\n      setDetailResult = _useState[1];\n\n  var _useState2 = useState(false),\n      visibleNofi = _useState2[0],\n      setVisibleNofi = _useState2[1];\n\n  var boxEl = useRef(null); // console.log('score: ', score);\n\n  var paramsDefault = {\n    pageSize: 999,\n    pageIndex: 1,\n    ExamAppointmentResultID: parseInt(ExamAppointmentResultID) // ExerciseType: teacherMarking ? 2 : null\n\n  };\n\n  var _useState3 = useState(paramsDefault),\n      params = _useState3[0],\n      setParams = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      listQuestionID = _useState5[0],\n      setListQuestionID = _useState5[1]; // Lấy tất cả ID đã có\n\n\n  var _useState6 = useState([]),\n      listGroupID = _useState6[0],\n      setListGroupID = _useState6[1]; // Lấy tất cả group ID đã có\n\n\n  var _useState7 = useState(false),\n      showMainTest = _useState7[0],\n      setShowMainTest = _useState7[1];\n\n  var _useWrap = useWrap(),\n      showNoti = _useWrap.showNoti,\n      userInformation = _useWrap.userInformation;\n\n  var _useState8 = useState(false),\n      isShowAll = _useState8[0],\n      setIsShowAll = _useState8[1];\n\n  var _useState9 = useState(false),\n      isMarked = _useState9[0],\n      setIsMarked = _useState9[1];\n\n  var _useState10 = useState(false),\n      showNote = _useState10[0],\n      setShowNote = _useState10[1];\n\n  var _useState11 = useState(null),\n      infoTest = _useState11[0],\n      setInfoTest = _useState11[1];\n\n  var _useState12 = useState(false),\n      loadingInfoTest = _useState12[0],\n      setLoadingInfoTest = _useState12[1];\n\n  var getInfoTest = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, dataInfo, totalQuestion;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoadingInfoTest(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return examAppointmentResultApi.getAll({\n                ExamAppointmentID: ExamAppointmentID,\n                UserInformationID: userInformation.UserInformationID\n              });\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                dataInfo = res.data.data[0];\n                totalQuestion = dataInfo.ListeningNumber + dataInfo.ReadingNumber;\n                setInfoTest(_objectSpread(_objectSpread({}, res.data.data[0]), {}, {\n                  TotalQuestion: totalQuestion\n                }));\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              // showNoti('danger', error.message);\n              console.log('error', _context.t0.message);\n\n            case 11:\n              _context.prev = 11;\n              setLoadingInfoTest(false);\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8, 11, 14]]);\n    }));\n\n    return function getInfoTest() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getDataSetPackageResult = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var cloneListQuestionID, cloneListGroupID, res, newDataMarking;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              cloneListQuestionID = _toConsumableArray(listQuestionID);\n              cloneListGroupID = _toConsumableArray(listGroupID);\n              setLoading(true);\n              _context2.prev = 3;\n              _context2.next = 6;\n              return examAppointmentResultApi.getResultExam(params);\n\n            case 6:\n              res = _context2.sent;\n\n              //@ts-ignore\n              if (res.status == 200) {\n                convertDataDoneTest(res.data.data); // Add to data marking if have teacher marking\n\n                if (teacherMarking) {\n                  setIsMarked(res.data.isDone);\n\n                  if (!dataMarking) {\n                    newDataMarking = {\n                      SetPackageResultID: parseInt(router.query.ExamAppointmentID),\n                      Note: '',\n                      setPackageExerciseStudentsList: []\n                    };\n                    res.data.data.forEach(function (item) {\n                      item.SetPackageExerciseStudent.forEach(function (ques) {\n                        newDataMarking.setPackageExerciseStudentsList.push({\n                          ID: ques.ID,\n                          Point: 0\n                        });\n                      });\n                    });\n                    getDataMarking(_objectSpread({}, newDataMarking));\n                  }\n                } // Add questionid to list\n\n\n                res.data.data.forEach(function (item, index) {\n                  if (item.Enable) {\n                    item.ExerciseGroupID !== 0 && cloneListGroupID.push(item.ExerciseGroupID);\n                    item.ExamAppointmentExerciseStudent.forEach(function (ques) {\n                      cloneListQuestionID.push(ques.ExerciseID);\n                    });\n                  }\n                }); // ----- //\n\n                getDoneTestData(res.data.data);\n                setListGroupID(_toConsumableArray(cloneListGroupID));\n                setListQuestionID(_toConsumableArray(cloneListQuestionID));\n              }\n\n              if (res.status == 204) {\n                showNoti('danger', 'Không tìm thấy dữ liệu!');\n              }\n\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](3);\n              showNoti('danger', _context2.t0.message);\n\n            case 14:\n              _context2.prev = 14;\n              setLoading(false);\n              return _context2.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 11, 14, 17]]);\n    }));\n\n    return function getDataSetPackageResult() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); //\n\n\n  var convertDataDoneTest = function convertDataDoneTest(data) {\n    var cloneData = _toConsumableArray(data);\n\n    cloneData.forEach(function (item) {\n      item.ExerciseTopic = _toConsumableArray(item.ExamAppointmentExerciseStudent);\n      item.ExerciseTopic.forEach(function (ques) {\n        ques.ExerciseAnswer = _toConsumableArray(ques.ExamAppointmentExerciseAnswerStudent);\n      });\n    });\n    setDetailResult(_toConsumableArray(cloneData));\n  };\n\n  var returnSpaceQuestion = function returnSpaceQuestion(data) {\n    var indexStart = listQuestionID.indexOf(data[0].ExerciseID);\n    var indexEnd = listQuestionID.indexOf(data[data.length - 1].ExerciseID);\n    var text = '';\n\n    if (indexStart === indexEnd) {\n      text = 'Câu ' + (indexStart + 1).toString();\n    } else {\n      text = 'Câu ' + (indexStart + 1).toString() + ' - ' + (indexEnd + 1).toString();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"space-question\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 10\n    }, _this);\n  }; // const showWritingQuestion = () => {\n  // \tif (isShowAll) {\n  // \t\tsetParams({\n  // \t\t\t...paramsDefault,\n  // \t\t\tExerciseType: 2\n  // \t\t});\n  // \t} else {\n  // \t\tsetParams({\n  // \t\t\t...paramsDefault,\n  // \t\t\tExerciseType: null\n  // \t\t});\n  // \t}\n  // \tsetIsShowAll(!isShowAll);\n  // };\n\n\n  useEffect(function () {\n    getDataSetPackageResult();\n  }, [params]);\n  useEffect(function () {\n    if (dataMarking && !showNote) {\n      if (dataMarking.setPackageExerciseStudentsList.length > 0) {\n        dataMarking.setPackageExerciseStudentsList.every(function (item) {\n          if (item.Point) {\n            setVisibleNofi(true);\n            setShowNote(true);\n            setTimeout(function () {\n              setVisibleNofi(false);\n            }, 5000);\n            return false;\n          }\n\n          return true;\n        });\n      }\n    }\n  }, [dataMarking]);\n  useEffect(function () {\n    if (userInformation) {\n      getInfoTest();\n    }\n  }, [userInformation]);\n  console.log(infoTest === null || infoTest === void 0 ? void 0 : infoTest.isDone);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showMainTest ? /*#__PURE__*/_jsxDEV(MainTest, {\n      dataDoneTest: detailResult,\n      isDone: true,\n      listIDFromDoneTest: listQuestionID,\n      listGroupIDFromDoneTest: listGroupID,\n      closeMainTest: function closeMainTest() {\n        return setShowMainTest(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-wrapper done-test\",\n      children: [/*#__PURE__*/_jsxDEV(TitlePage, {\n        title: \"K\\u1EBFt qu\\u1EA3 b\\u1ED9 \\u0111\\u1EC1 chi ti\\u1EBFt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 6\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 col-12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"\",\n            title: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title-question-bank\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"title-big\",\n                children: [/*#__PURE__*/_jsxDEV(Bookmark, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 12\n                }, _this), \"Danh s\\xE1ch k\\u1EBFt qu\\u1EA3\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 11\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 10\n            }, _this),\n            extra: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary ml-2\",\n                onClick: function onClick() {\n                  return setShowMainTest(true);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"d-flex align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(ProfileOutlined, {\n                    className: \"mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 13\n                  }, _this), \"Xem chi ti\\u1EBFt\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 12\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 11\n              }, _this)\n            }, void 0, false),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"test-body done-test-card \",\n              ref: boxEl,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wrap-box-info mb-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"box-info\",\n                  children: [((infoTest === null || infoTest === void 0 ? void 0 : infoTest.isDone) || score) && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"box-info__item box-info__score\",\n                    children: [\"S\\u1ED1 \\u0111i\\u1EC3m\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"number\",\n                      children: loadingInfoTest ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                        paragraph: false,\n                        loading: true,\n                        title: true,\n                        active: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 264,\n                        columnNumber: 34\n                      }, _this) : infoTest === null || infoTest === void 0 ? void 0 : infoTest.PointTotal\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 14\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 13\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"box-info__item box-info__correct\",\n                    children: [\"S\\u1ED1 c\\xE2u \\u0111\\xFAng\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"number\",\n                      children: loadingInfoTest ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                        paragraph: false,\n                        loading: true,\n                        title: true,\n                        active: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 15\n                      }, _this) : infoTest ? (infoTest === null || infoTest === void 0 ? void 0 : infoTest.ReadingCorrect) + (infoTest === null || infoTest === void 0 ? void 0 : infoTest.ListeningCorrect) + '/' + (infoTest === null || infoTest === void 0 ? void 0 : infoTest.TotalQuestion) : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 13\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 12\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 11\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 10\n              }, _this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mt-5\",\n                children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 12\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 11\n              }, _this) : (detailResult === null || detailResult === void 0 ? void 0 : detailResult.length) == 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-center font-weight-bold mt-2\",\n                children: \"Kh\\xF4ng c\\xF3 d\\u1EEF li\\u1EC7u\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 11\n              }, _this) : doneTestData && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: detailResult.map(function (item, index) {\n                  if (item.ExerciseGroupID !== 0) {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"wrap-group-list\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"box-detail\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"row\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col-md-11\",\n                            children: [returnSpaceQuestion(item.ExerciseTopic), item.Content && item.Content !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"box-content\",\n                              children: item.Content && ReactHtmlParser(item.Content)\n                            }, index, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 301,\n                              columnNumber: 21\n                            }, _this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 298,\n                            columnNumber: 19\n                          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col-md-1\",\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"point-question text-right mt-4\",\n                              children: item.ExerciseTopic[0].Point\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 307,\n                              columnNumber: 20\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 306,\n                            columnNumber: 19\n                          }, _this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 297,\n                          columnNumber: 18\n                        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: /*#__PURE__*/_jsxDEV(ListQuestion, {\n                            showScore: score,\n                            isMarked: isMarked,\n                            dataQuestion: item,\n                            listQuestionID: listQuestionID\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 312,\n                            columnNumber: 19\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 311,\n                          columnNumber: 18\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 17\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 16\n                    }, _this);\n                  } else {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(ListQuestion, {\n                        isMarked: isMarked,\n                        dataQuestion: item,\n                        listQuestionID: listQuestionID\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 325,\n                        columnNumber: 17\n                      }, _this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 16\n                    }, _this);\n                  }\n                })\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 9\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 6\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false);\n};\n\n_s(ExamAppointmentResult, \"CkNT2X82YFQnEv9MeT3w0ZWV6DQ=\", false, function () {\n  return [useDoneTest, useDoneTest, useWrap];\n});\n\n_c = ExamAppointmentResult;\nexport default ExamAppointmentResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExamAppointmentResult\");","map":{"version":3,"sources":["D:/MonaMedia/Project/IELTS-NguyenHuyen-FE/IELTS-Nguyen-Huyen/src/components/Global/ExamAppointment/ExamAppointmentResult.tsx"],"names":["ProfileOutlined","Card","Skeleton","Spin","router","React","useEffect","useRef","useState","Bookmark","ReactHtmlParser","examAppointmentResultApi","TitlePage","ListQuestion","useDoneTest","useWrap","MainTest","ExamAppointmentResult","query","ExamAppointmentResultID","examID","score","ExamAppointmentID","slug","teacherMarking","getDoneTestData","doneTestData","dataMarking","getDataMarking","detailResult","setDetailResult","visibleNofi","setVisibleNofi","boxEl","paramsDefault","pageSize","pageIndex","parseInt","params","setParams","loading","setLoading","listQuestionID","setListQuestionID","listGroupID","setListGroupID","showMainTest","setShowMainTest","showNoti","userInformation","isShowAll","setIsShowAll","isMarked","setIsMarked","showNote","setShowNote","infoTest","setInfoTest","loadingInfoTest","setLoadingInfoTest","getInfoTest","getAll","UserInformationID","res","status","dataInfo","data","totalQuestion","ListeningNumber","ReadingNumber","TotalQuestion","console","log","message","getDataSetPackageResult","cloneListQuestionID","cloneListGroupID","getResultExam","convertDataDoneTest","isDone","newDataMarking","SetPackageResultID","Note","setPackageExerciseStudentsList","forEach","item","SetPackageExerciseStudent","ques","push","ID","Point","index","Enable","ExerciseGroupID","ExamAppointmentExerciseStudent","ExerciseID","cloneData","ExerciseTopic","ExerciseAnswer","ExamAppointmentExerciseAnswerStudent","returnSpaceQuestion","indexStart","indexOf","indexEnd","length","text","toString","every","setTimeout","PointTotal","ReadingCorrect","ListeningCorrect","map","Content"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,eAAT,QAAgC,mBAAhC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,IAAzB,QAAqC,MAArC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,wBAAT,QAAyC,WAAzC;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAAA;;AACnC;AADmC,sBAGwDb,MAAM,CAACc,KAH/D;AAAA,MAGFC,uBAHE,iBAG3BA,uBAH2B;AAAA,MAG+BC,MAH/B,iBAGuBA,MAHvB;AAAA,MAG8CC,KAH9C,iBAGuCA,KAHvC;AAInC,MAAMC,iBAAiB,GAAGlB,MAAM,CAACc,KAAP,CAAaK,IAAvC;;AAJmC,qBAKxBT,WAAW,EALa;;AAAA;;AAAA,MAMXU,cANW,GAMQpB,MAAM,CAACc,KANf,CAM3BM,cAN2B;;AAAA,sBAOoCV,WAAW,EAP/C;AAAA,MAO3BW,eAP2B,iBAO3BA,eAP2B;AAAA,MAOVC,YAPU,iBAOVA,YAPU;AAAA,MAOIC,WAPJ,iBAOIA,WAPJ;AAAA,MAOiBC,cAPjB,iBAOiBA,cAPjB;;AAAA,kBAQKpB,QAAQ,CAAC,EAAD,CARb;AAAA,MAQ5BqB,YAR4B;AAAA,MAQdC,eARc;;AAAA,mBASGtB,QAAQ,CAAC,KAAD,CATX;AAAA,MAS5BuB,WAT4B;AAAA,MASfC,cATe;;AAUnC,MAAMC,KAAK,GAAG1B,MAAM,CAAC,IAAD,CAApB,CAVmC,CAYnC;;AAEA,MAAM2B,aAAa,GAAG;AACrBC,IAAAA,QAAQ,EAAE,GADW;AAErBC,IAAAA,SAAS,EAAE,CAFU;AAGrBjB,IAAAA,uBAAuB,EAAEkB,QAAQ,CAAClB,uBAAD,CAHZ,CAIrB;;AAJqB,GAAtB;;AAdmC,mBAoBPX,QAAQ,CAAC0B,aAAD,CApBD;AAAA,MAoB5BI,MApB4B;AAAA,MAoBpBC,SApBoB;;AAAA,mBAqBL/B,QAAQ,CAAC,KAAD,CArBH;AAAA,MAqB5BgC,OArB4B;AAAA,MAqBnBC,UArBmB;;AAAA,mBAsBSjC,QAAQ,CAAC,EAAD,CAtBjB;AAAA,MAsB5BkC,cAtB4B;AAAA,MAsBZC,iBAtBY,kBAsBsB;;;AAtBtB,mBAuBGnC,QAAQ,CAAC,EAAD,CAvBX;AAAA,MAuB5BoC,WAvB4B;AAAA,MAuBfC,cAvBe,kBAuBgB;;;AAvBhB,mBAyBKrC,QAAQ,CAAC,KAAD,CAzBb;AAAA,MAyB5BsC,YAzB4B;AAAA,MAyBdC,eAzBc;;AAAA,iBA0BGhC,OAAO,EA1BV;AAAA,MA0B3BiC,QA1B2B,YA0B3BA,QA1B2B;AAAA,MA0BjBC,eA1BiB,YA0BjBA,eA1BiB;;AAAA,mBA2BDzC,QAAQ,CAAC,KAAD,CA3BP;AAAA,MA2B5B0C,SA3B4B;AAAA,MA2BjBC,YA3BiB;;AAAA,mBA4BH3C,QAAQ,CAAC,KAAD,CA5BL;AAAA,MA4B5B4C,QA5B4B;AAAA,MA4BlBC,WA5BkB;;AAAA,oBA6BH7C,QAAQ,CAAC,KAAD,CA7BL;AAAA,MA6B5B8C,QA7B4B;AAAA,MA6BlBC,WA7BkB;;AAAA,oBA8BH/C,QAAQ,CAAC,IAAD,CA9BL;AAAA,MA8B5BgD,QA9B4B;AAAA,MA8BlBC,WA9BkB;;AAAA,oBA+BWjD,QAAQ,CAAC,KAAD,CA/BnB;AAAA,MA+B5BkD,eA/B4B;AAAA,MA+BXC,kBA/BW;;AAiCnC,MAAMC,WAAW;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBD,cAAAA,kBAAkB,CAAC,IAAD,CAAlB;AADmB;AAAA;AAAA,qBAGFhD,wBAAwB,CAACkD,MAAzB,CAAgC;AAC/CvC,gBAAAA,iBAAiB,EAAEA,iBAD4B;AAE/CwC,gBAAAA,iBAAiB,EAAEb,eAAe,CAACa;AAFY,eAAhC,CAHE;;AAAA;AAGdC,cAAAA,GAHc;;AAOlB,kBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACnBC,gBAAAA,QADmB,GACHF,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAc,CAAd,CADG;AAEnBC,gBAAAA,aAFmB,GAEHF,QAAQ,CAACG,eAAT,GAA2BH,QAAQ,CAACI,aAFjC;AAGvBZ,gBAAAA,WAAW,iCACPM,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAc,CAAd,CADO;AAEVI,kBAAAA,aAAa,EAAEH;AAFL,mBAAX;AAIA;;AAdiB;AAAA;;AAAA;AAAA;AAAA;AAgBlB;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,YAAMC,OAA3B;;AAjBkB;AAAA;AAmBlBd,cAAAA,kBAAkB,CAAC,KAAD,CAAlB;AAnBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXC,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAuBA,MAAMc,uBAAuB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BC,cAAAA,mBAD2B,sBACDjC,cADC;AAE3BkC,cAAAA,gBAF2B,sBAEJhC,WAFI;AAG/BH,cAAAA,UAAU,CAAC,IAAD,CAAV;AAH+B;AAAA;AAAA,qBAMd9B,wBAAwB,CAACkE,aAAzB,CAAuCvC,MAAvC,CANc;;AAAA;AAM1ByB,cAAAA,GAN0B;;AAQ9B;AACA,kBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACtBc,gBAAAA,mBAAmB,CAACf,GAAG,CAACG,IAAJ,CAASA,IAAV,CAAnB,CADsB,CAGtB;;AACA,oBAAI1C,cAAJ,EAAoB;AACnB6B,kBAAAA,WAAW,CAACU,GAAG,CAACG,IAAJ,CAASa,MAAV,CAAX;;AACA,sBAAI,CAACpD,WAAL,EAAkB;AACbqD,oBAAAA,cADa,GACI;AACpBC,sBAAAA,kBAAkB,EAAE5C,QAAQ,CAACjC,MAAM,CAACc,KAAP,CAAaI,iBAAd,CADR;AAEpB4D,sBAAAA,IAAI,EAAE,EAFc;AAGpBC,sBAAAA,8BAA8B,EAAE;AAHZ,qBADJ;AAMjBpB,oBAAAA,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAckB,OAAd,CAAsB,UAACC,IAAD,EAAU;AAC/BA,sBAAAA,IAAI,CAACC,yBAAL,CAA+BF,OAA/B,CAAuC,UAACG,IAAD,EAAU;AAChDP,wBAAAA,cAAc,CAACG,8BAAf,CAA8CK,IAA9C,CAAmD;AAClDC,0BAAAA,EAAE,EAAEF,IAAI,CAACE,EADyC;AAElDC,0BAAAA,KAAK,EAAE;AAF2C,yBAAnD;AAIA,uBALD;AAMA,qBAPD;AAQA9D,oBAAAA,cAAc,mBAAMoD,cAAN,EAAd;AACA;AACD,iBAtBqB,CAwBtB;;;AACAjB,gBAAAA,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAckB,OAAd,CAAsB,UAACC,IAAD,EAAOM,KAAP,EAAiB;AACtC,sBAAIN,IAAI,CAACO,MAAT,EAAiB;AAChBP,oBAAAA,IAAI,CAACQ,eAAL,KAAyB,CAAzB,IAA8BjB,gBAAgB,CAACY,IAAjB,CAAsBH,IAAI,CAACQ,eAA3B,CAA9B;AACAR,oBAAAA,IAAI,CAACS,8BAAL,CAAoCV,OAApC,CAA4C,UAACG,IAAD,EAAU;AACrDZ,sBAAAA,mBAAmB,CAACa,IAApB,CAAyBD,IAAI,CAACQ,UAA9B;AACA,qBAFD;AAGA;AACD,iBAPD,EAzBsB,CAkCtB;;AAEAtE,gBAAAA,eAAe,CAACsC,GAAG,CAACG,IAAJ,CAASA,IAAV,CAAf;AACArB,gBAAAA,cAAc,oBAAK+B,gBAAL,EAAd;AACAjC,gBAAAA,iBAAiB,oBAAKgC,mBAAL,EAAjB;AACA;;AAED,kBAAIZ,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACtBhB,gBAAAA,QAAQ,CAAC,QAAD,EAAW,yBAAX,CAAR;AACA;;AApD6B;AAAA;;AAAA;AAAA;AAAA;AAsD9BA,cAAAA,QAAQ,CAAC,QAAD,EAAW,aAAMyB,OAAjB,CAAR;;AAtD8B;AAAA;AAwD9BhC,cAAAA,UAAU,CAAC,KAAD,CAAV;AAxD8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAvBiC,uBAAuB;AAAA;AAAA;AAAA,KAA7B,CAxDmC,CAoHnC;;;AAEA,MAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACZ,IAAD,EAAU;AACrC,QAAI8B,SAAS,sBAAO9B,IAAP,CAAb;;AAEA8B,IAAAA,SAAS,CAACZ,OAAV,CAAkB,UAACC,IAAD,EAAU;AAC3BA,MAAAA,IAAI,CAACY,aAAL,sBAAyBZ,IAAI,CAACS,8BAA9B;AACAT,MAAAA,IAAI,CAACY,aAAL,CAAmBb,OAAnB,CAA2B,UAACG,IAAD,EAAU;AACpCA,QAAAA,IAAI,CAACW,cAAL,sBAA0BX,IAAI,CAACY,oCAA/B;AACA,OAFD;AAGA,KALD;AAOArE,IAAAA,eAAe,oBAAKkE,SAAL,EAAf;AACA,GAXD;;AAaA,MAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAClC,IAAD,EAAU;AACrC,QAAImC,UAAU,GAAG3D,cAAc,CAAC4D,OAAf,CAAuBpC,IAAI,CAAC,CAAD,CAAJ,CAAQ6B,UAA/B,CAAjB;AACA,QAAIQ,QAAQ,GAAG7D,cAAc,CAAC4D,OAAf,CAAuBpC,IAAI,CAACA,IAAI,CAACsC,MAAL,GAAc,CAAf,CAAJ,CAAsBT,UAA7C,CAAf;AAEA,QAAIU,IAAI,GAAG,EAAX;;AACA,QAAIJ,UAAU,KAAKE,QAAnB,EAA6B;AAC5BE,MAAAA,IAAI,GAAG,SAAS,CAACJ,UAAU,GAAG,CAAd,EAAiBK,QAAjB,EAAhB;AACA,KAFD,MAEO;AACND,MAAAA,IAAI,GAAG,SAAS,CAACJ,UAAU,GAAG,CAAd,EAAiBK,QAAjB,EAAT,GAAuC,KAAvC,GAA+C,CAACH,QAAQ,GAAG,CAAZ,EAAeG,QAAf,EAAtD;AACA;;AAED,wBAAO;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA,gBAA+BD;AAA/B;AAAA;AAAA;AAAA;AAAA,aAAP;AACA,GAZD,CAnImC,CAiJnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAnG,EAAAA,SAAS,CAAC,YAAM;AACfoE,IAAAA,uBAAuB;AACvB,GAFQ,EAEN,CAACpC,MAAD,CAFM,CAAT;AAIAhC,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIqB,WAAW,IAAI,CAAC2B,QAApB,EAA8B;AAC7B,UAAI3B,WAAW,CAACwD,8BAAZ,CAA2CqB,MAA3C,GAAoD,CAAxD,EAA2D;AAC1D7E,QAAAA,WAAW,CAACwD,8BAAZ,CAA2CwB,KAA3C,CAAiD,UAACtB,IAAD,EAAU;AAC1D,cAAIA,IAAI,CAACK,KAAT,EAAgB;AACf1D,YAAAA,cAAc,CAAC,IAAD,CAAd;AACAuB,YAAAA,WAAW,CAAC,IAAD,CAAX;AACAqD,YAAAA,UAAU,CAAC,YAAM;AAChB5E,cAAAA,cAAc,CAAC,KAAD,CAAd;AACA,aAFS,EAEP,IAFO,CAAV;AAGA,mBAAO,KAAP;AACA;;AACD,iBAAO,IAAP;AACA,SAVD;AAWA;AACD;AACD,GAhBQ,EAgBN,CAACL,WAAD,CAhBM,CAAT;AAkBArB,EAAAA,SAAS,CAAC,YAAM;AACf,QAAI2C,eAAJ,EAAqB;AACpBW,MAAAA,WAAW;AACX;AACD,GAJQ,EAIN,CAACX,eAAD,CAJM,CAAT;AAMAsB,EAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ,aAAYA,QAAZ,uBAAYA,QAAQ,CAAEuB,MAAtB;AAEA,sBACC;AAAA,cACEjC,YAAY,gBACZ,QAAC,QAAD;AACC,MAAA,YAAY,EAAEjB,YADf;AAEC,MAAA,MAAM,EAAE,IAFT;AAGC,MAAA,kBAAkB,EAAEa,cAHrB;AAIC,MAAA,uBAAuB,EAAEE,WAJ1B;AAKC,MAAA,aAAa,EAAE;AAAA,eAAMG,eAAe,CAAC,KAAD,CAArB;AAAA;AALhB;AAAA;AAAA;AAAA;AAAA,aADY,gBASZ;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACC,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,eADD,eAEC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACC;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACC,QAAC,IAAD;AACC,YAAA,SAAS,EAAC,EADX;AAEC,YAAA,KAAK,eACJ;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,qCACC;AAAI,gBAAA,SAAS,EAAC,WAAd;AAAA,wCACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,yBADD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,qBAHF;AAUC,YAAA,KAAK,eACJ;AAAA,qCAkBC;AAAQ,gBAAA,SAAS,EAAC,wBAAlB;AAA2C,gBAAA,OAAO,EAAE;AAAA,yBAAMA,eAAe,CAAC,IAAD,CAArB;AAAA,iBAApD;AAAA,uCACC;AAAM,kBAAA,SAAS,EAAC,2BAAhB;AAAA,0CACC,QAAC,eAAD;AAAiB,oBAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,2BADD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAlBD,6BAXF;AAAA,mCAsCC;AAAK,cAAA,SAAS,EAAC,2BAAf;AAA2C,cAAA,GAAG,EAAEd,KAAhD;AAAA,sCACC;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,uCACC;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,6BACE,CAAC,CAAAuB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEuB,MAAV,KAAoB1D,KAArB,kBACA;AAAK,oBAAA,SAAS,EAAC,gCAAf;AAAA,sEAEC;AAAM,sBAAA,SAAS,EAAC,QAAhB;AAAA,gCACEqC,eAAe,gBAAG,QAAC,QAAD;AAAU,wBAAA,SAAS,EAAE,KAArB;AAA4B,wBAAA,OAAO,EAAE,IAArC;AAA2C,wBAAA,KAAK,EAAE,IAAlD;AAAwD,wBAAA,MAAM;AAA9D;AAAA;AAAA;AAAA;AAAA,+BAAH,GAAuEF,QAAvE,aAAuEA,QAAvE,uBAAuEA,QAAQ,CAAEqD;AADlG;AAAA;AAAA;AAAA;AAAA,6BAFD;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,eASC;AAAK,oBAAA,SAAS,EAAC,kCAAf;AAAA,2EAEC;AAAM,sBAAA,SAAS,EAAC,QAAhB;AAAA,gCACEnD,eAAe,gBACf,QAAC,QAAD;AAAU,wBAAA,SAAS,EAAE,KAArB;AAA4B,wBAAA,OAAO,EAAE,IAArC;AAA2C,wBAAA,KAAK,EAAE,IAAlD;AAAwD,wBAAA,MAAM;AAA9D;AAAA;AAAA;AAAA;AAAA,+BADe,GAEZF,QAAQ,GACX,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEsD,cAAV,KAA2BtD,QAA3B,aAA2BA,QAA3B,uBAA2BA,QAAQ,CAAEuD,gBAArC,IAAwD,GAAxD,IAA8DvD,QAA9D,aAA8DA,QAA9D,uBAA8DA,QAAQ,CAAEc,aAAxE,CADW,GAGX;AANF;AAAA;AAAA;AAAA;AAAA,6BAFD;AAAA;AAAA;AAAA;AAAA;AAAA,2BATD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,uBADD,EA0BE9B,OAAO,gBACP;AAAK,gBAAA,SAAS,EAAC,kBAAf;AAAA,uCACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,uBADO,GAIJ,CAAAX,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAE2E,MAAd,KAAwB,CAAxB,gBACH;AAAG,gBAAA,SAAS,EAAC,mCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADG,GAGH9E,YAAY,iBACX;AAAA,0BACEG,YAAY,CAACmF,GAAb,CAAiB,UAAC3B,IAAD,EAAOM,KAAP,EAAiB;AAClC,sBAAIN,IAAI,CAACQ,eAAL,KAAyB,CAA7B,EAAgC;AAC/B,wCACC;AAAK,sBAAA,SAAS,EAAC,iBAAf;AAAA,6CACC;AAAK,wBAAA,SAAS,EAAC,YAAf;AAAA,gDACC;AAAK,0BAAA,SAAS,EAAC,KAAf;AAAA,kDACC;AAAK,4BAAA,SAAS,EAAC,WAAf;AAAA,uCACEO,mBAAmB,CAACf,IAAI,CAACY,aAAN,CADrB,EAEEZ,IAAI,CAAC4B,OAAL,IAAgB5B,IAAI,CAAC4B,OAAL,KAAiB,EAAjC,iBACA;AAAK,8BAAA,SAAS,EAAC,aAAf;AAAA,wCACE5B,IAAI,CAAC4B,OAAL,IAAgBvG,eAAe,CAAC2E,IAAI,CAAC4B,OAAN;AADjC,+BAAkCtB,KAAlC;AAAA;AAAA;AAAA;AAAA,qCAHF;AAAA;AAAA;AAAA;AAAA;AAAA,mCADD,eASC;AAAK,4BAAA,SAAS,EAAC,UAAf;AAAA,mDACC;AAAK,8BAAA,SAAS,EAAC,gCAAf;AAAA,wCAAiDN,IAAI,CAACY,aAAL,CAAmB,CAAnB,EAAsBP;AAAvE;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,mCATD;AAAA;AAAA;AAAA;AAAA;AAAA,iCADD,eAeC;AAAA,iDACC,QAAC,YAAD;AACC,4BAAA,SAAS,EAAErE,KADZ;AAEC,4BAAA,QAAQ,EAAE+B,QAFX;AAGC,4BAAA,YAAY,EAAEiC,IAHf;AAIC,4BAAA,cAAc,EAAE3C;AAJjB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,iCAfD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,6BADD;AA4BA,mBA7BD,MA6BO;AACN,wCACC;AAAA,6CACC,QAAC,YAAD;AAAc,wBAAA,QAAQ,EAAEU,QAAxB;AAAkC,wBAAA,YAAY,EAAEiC,IAAhD;AAAsD,wBAAA,cAAc,EAAE3C;AAAtE;AAAA;AAAA;AAAA;AAAA;AADD,uBAAUiD,KAAV;AAAA;AAAA;AAAA;AAAA,6BADD;AAKA;AACD,iBArCA;AADF,+BAlCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAtCD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,eAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF,mBADD;AAyIA,CAvUD;;GAAM1E,qB;UAKMH,W,EAE4DA,W,EAmBjCC,O;;;KA1BjCE,qB;AAyUN,eAAeA,qBAAf","sourcesContent":["import { ProfileOutlined } from '@ant-design/icons'\r\nimport { Card, Skeleton, Spin } from 'antd'\r\nimport router from 'next/router'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Bookmark } from 'react-feather'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { examAppointmentResultApi } from '~/apiBase'\r\nimport TitlePage from '~/components/Elements/TitlePage'\r\nimport ListQuestion from '~/components/Global/DoingTest/ListQuestion'\r\nimport { useDoneTest } from '~/context/useDoneTest'\r\nimport { useWrap } from '~/context/wrap'\r\nimport MainTest from '../DoingTest/MainTest'\r\n\r\nconst ExamAppointmentResult = () => {\r\n\t// ---- Get Router ----\r\n\r\n\tconst { ExamAppointmentResultID: ExamAppointmentResultID, examID: examID, score: score } = router.query\r\n\tconst ExamAppointmentID = router.query.slug as string\r\n\tconst {} = useDoneTest()\r\n\tconst { teacherMarking: teacherMarking } = router.query\r\n\tconst { getDoneTestData, doneTestData, dataMarking, getDataMarking } = useDoneTest()\r\n\tconst [detailResult, setDetailResult] = useState([])\r\n\tconst [visibleNofi, setVisibleNofi] = useState(false)\r\n\tconst boxEl = useRef(null)\r\n\r\n\t// console.log('score: ', score);\r\n\r\n\tconst paramsDefault = {\r\n\t\tpageSize: 999,\r\n\t\tpageIndex: 1,\r\n\t\tExamAppointmentResultID: parseInt(ExamAppointmentResultID as string)\r\n\t\t// ExerciseType: teacherMarking ? 2 : null\r\n\t}\r\n\tconst [params, setParams] = useState(paramsDefault)\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [listQuestionID, setListQuestionID] = useState([]) // Lấy tất cả ID đã có\r\n\tconst [listGroupID, setListGroupID] = useState([]) // Lấy tất cả group ID đã có\r\n\r\n\tconst [showMainTest, setShowMainTest] = useState(false)\r\n\tconst { showNoti, userInformation } = useWrap()\r\n\tconst [isShowAll, setIsShowAll] = useState(false)\r\n\tconst [isMarked, setIsMarked] = useState(false)\r\n\tconst [showNote, setShowNote] = useState(false)\r\n\tconst [infoTest, setInfoTest] = useState(null)\r\n\tconst [loadingInfoTest, setLoadingInfoTest] = useState(false)\r\n\r\n\tconst getInfoTest = async () => {\r\n\t\tsetLoadingInfoTest(true)\r\n\t\ttry {\r\n\t\t\tlet res = await examAppointmentResultApi.getAll({\r\n\t\t\t\tExamAppointmentID: ExamAppointmentID,\r\n\t\t\t\tUserInformationID: userInformation.UserInformationID\r\n\t\t\t})\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tlet dataInfo: any = res.data.data[0]\r\n\t\t\t\tlet totalQuestion = dataInfo.ListeningNumber + dataInfo.ReadingNumber\r\n\t\t\t\tsetInfoTest({\r\n\t\t\t\t\t...res.data.data[0],\r\n\t\t\t\t\tTotalQuestion: totalQuestion\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\t// showNoti('danger', error.message);\r\n\t\t\tconsole.log('error', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoadingInfoTest(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst getDataSetPackageResult = async () => {\r\n\t\tlet cloneListQuestionID = [...listQuestionID]\r\n\t\tlet cloneListGroupID = [...listGroupID]\r\n\t\tsetLoading(true)\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await examAppointmentResultApi.getResultExam(params)\r\n\r\n\t\t\t//@ts-ignore\r\n\t\t\tif (res.status == 200) {\r\n\t\t\t\tconvertDataDoneTest(res.data.data)\r\n\r\n\t\t\t\t// Add to data marking if have teacher marking\r\n\t\t\t\tif (teacherMarking) {\r\n\t\t\t\t\tsetIsMarked(res.data.isDone)\r\n\t\t\t\t\tif (!dataMarking) {\r\n\t\t\t\t\t\tlet newDataMarking = {\r\n\t\t\t\t\t\t\tSetPackageResultID: parseInt(router.query.ExamAppointmentID as string),\r\n\t\t\t\t\t\t\tNote: '',\r\n\t\t\t\t\t\t\tsetPackageExerciseStudentsList: []\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tres.data.data.forEach((item) => {\r\n\t\t\t\t\t\t\titem.SetPackageExerciseStudent.forEach((ques) => {\r\n\t\t\t\t\t\t\t\tnewDataMarking.setPackageExerciseStudentsList.push({\r\n\t\t\t\t\t\t\t\t\tID: ques.ID,\r\n\t\t\t\t\t\t\t\t\tPoint: 0\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tgetDataMarking({ ...newDataMarking })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add questionid to list\r\n\t\t\t\tres.data.data.forEach((item, index) => {\r\n\t\t\t\t\tif (item.Enable) {\r\n\t\t\t\t\t\titem.ExerciseGroupID !== 0 && cloneListGroupID.push(item.ExerciseGroupID)\r\n\t\t\t\t\t\titem.ExamAppointmentExerciseStudent.forEach((ques) => {\r\n\t\t\t\t\t\t\tcloneListQuestionID.push(ques.ExerciseID)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// ----- //\r\n\r\n\t\t\t\tgetDoneTestData(res.data.data)\r\n\t\t\t\tsetListGroupID([...cloneListGroupID])\r\n\t\t\t\tsetListQuestionID([...cloneListQuestionID])\r\n\t\t\t}\r\n\r\n\t\t\tif (res.status == 204) {\r\n\t\t\t\tshowNoti('danger', 'Không tìm thấy dữ liệu!')\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tshowNoti('danger', error.message)\r\n\t\t} finally {\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\t//\r\n\r\n\tconst convertDataDoneTest = (data) => {\r\n\t\tlet cloneData = [...data]\r\n\r\n\t\tcloneData.forEach((item) => {\r\n\t\t\titem.ExerciseTopic = [...item.ExamAppointmentExerciseStudent]\r\n\t\t\titem.ExerciseTopic.forEach((ques) => {\r\n\t\t\t\tques.ExerciseAnswer = [...ques.ExamAppointmentExerciseAnswerStudent]\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\tsetDetailResult([...cloneData])\r\n\t}\r\n\r\n\tconst returnSpaceQuestion = (data) => {\r\n\t\tlet indexStart = listQuestionID.indexOf(data[0].ExerciseID)\r\n\t\tlet indexEnd = listQuestionID.indexOf(data[data.length - 1].ExerciseID)\r\n\r\n\t\tlet text = ''\r\n\t\tif (indexStart === indexEnd) {\r\n\t\t\ttext = 'Câu ' + (indexStart + 1).toString()\r\n\t\t} else {\r\n\t\t\ttext = 'Câu ' + (indexStart + 1).toString() + ' - ' + (indexEnd + 1).toString()\r\n\t\t}\r\n\r\n\t\treturn <p className=\"space-question\">{text}</p>\r\n\t}\r\n\r\n\t// const showWritingQuestion = () => {\r\n\t// \tif (isShowAll) {\r\n\t// \t\tsetParams({\r\n\t// \t\t\t...paramsDefault,\r\n\t// \t\t\tExerciseType: 2\r\n\t// \t\t});\r\n\t// \t} else {\r\n\t// \t\tsetParams({\r\n\t// \t\t\t...paramsDefault,\r\n\t// \t\t\tExerciseType: null\r\n\t// \t\t});\r\n\t// \t}\r\n\t// \tsetIsShowAll(!isShowAll);\r\n\t// };\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataSetPackageResult()\r\n\t}, [params])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dataMarking && !showNote) {\r\n\t\t\tif (dataMarking.setPackageExerciseStudentsList.length > 0) {\r\n\t\t\t\tdataMarking.setPackageExerciseStudentsList.every((item) => {\r\n\t\t\t\t\tif (item.Point) {\r\n\t\t\t\t\t\tsetVisibleNofi(true)\r\n\t\t\t\t\t\tsetShowNote(true)\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetVisibleNofi(false)\r\n\t\t\t\t\t\t}, 5000)\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}, [dataMarking])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userInformation) {\r\n\t\t\tgetInfoTest()\r\n\t\t}\r\n\t}, [userInformation])\r\n\r\n\tconsole.log(infoTest?.isDone)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{showMainTest ? (\r\n\t\t\t\t<MainTest\r\n\t\t\t\t\tdataDoneTest={detailResult}\r\n\t\t\t\t\tisDone={true}\r\n\t\t\t\t\tlistIDFromDoneTest={listQuestionID}\r\n\t\t\t\t\tlistGroupIDFromDoneTest={listGroupID}\r\n\t\t\t\t\tcloseMainTest={() => setShowMainTest(false)}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"test-wrapper done-test\">\r\n\t\t\t\t\t<TitlePage title=\"Kết quả bộ đề chi tiết\" />\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-md-12 col-12\">\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t<div className=\"title-question-bank\">\r\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"title-big\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Bookmark />\r\n\t\t\t\t\t\t\t\t\t\t\tDanh sách kết quả\r\n\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\textra={\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{/* <Link\r\n\t\t\t\t\t\t\t\t\t\t\thref={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/doing-test',\r\n\t\t\t\t\t\t\t\t\t\t\t\tquery: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texamID: examID,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpackageDetailID: packageDetailID\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"btn btn-warning\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RedoOutlined className=\"mr-2\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tLàm lại đề\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</Link> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-secondary ml-2\" onClick={() => setShowMainTest(true)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ProfileOutlined className=\"mr-2\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\tXem chi tiết\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className=\"test-body done-test-card \" ref={boxEl}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"wrap-box-info mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"box-info\">\r\n\t\t\t\t\t\t\t\t\t\t\t{(infoTest?.isDone || score) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"box-info__item box-info__score\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSố điểm\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"number\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{loadingInfoTest ? <Skeleton paragraph={false} loading={true} title={true} active /> : infoTest?.PointTotal}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"box-info__item box-info__correct\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tSố câu đúng\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"number\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{loadingInfoTest ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Skeleton paragraph={false} loading={true} title={true} active />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : infoTest ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinfoTest?.ReadingCorrect + infoTest?.ListeningCorrect + '/' + infoTest?.TotalQuestion\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center mt-5\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Spin />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t) : detailResult?.length == 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-center font-weight-bold mt-2\">Không có dữ liệu</p>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\tdoneTestData && (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{detailResult.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.ExerciseGroupID !== 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"wrap-group-list\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"box-detail\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-11\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{returnSpaceQuestion(item.ExerciseTopic)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.Content && item.Content !== '' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"box-content\" key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.Content && ReactHtmlParser(item.Content)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"point-question text-right mt-4\">{item.ExerciseTopic[0].Point}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListQuestion\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowScore={score}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisMarked={isMarked}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataQuestion={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlistQuestionID={listQuestionID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListQuestion isMarked={isMarked} dataQuestion={item} listQuestionID={listQuestionID} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ExamAppointmentResult\r\n"]},"metadata":{},"sourceType":"module"}